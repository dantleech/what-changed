{
    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/compare\/ed461a86341990d9e6a84dec377c9704dbe274f7...d8aef3af866b28786ce9b8647e52c42496436669",
    "html_url": "https:\/\/github.com\/composer\/composer\/compare\/ed461a86341990d9e6a84dec377c9704dbe274f7...d8aef3af866b28786ce9b8647e52c42496436669",
    "permalink_url": "https:\/\/github.com\/composer\/composer\/compare\/composer:ed461a8...composer:d8aef3a",
    "diff_url": "https:\/\/github.com\/composer\/composer\/compare\/ed461a86341990d9e6a84dec377c9704dbe274f7...d8aef3af866b28786ce9b8647e52c42496436669.diff",
    "patch_url": "https:\/\/github.com\/composer\/composer\/compare\/ed461a86341990d9e6a84dec377c9704dbe274f7...d8aef3af866b28786ce9b8647e52c42496436669.patch",
    "base_commit": {
        "sha": "ed461a86341990d9e6a84dec377c9704dbe274f7",
        "node_id": "MDY6Q29tbWl0MTg2NDM2MzplZDQ2MWE4NjM0MTk5MGQ5ZTZhODRkZWMzNzdjOTcwNGRiZTI3NGY3",
        "commit": {
            "author": {
                "name": "Rob Bast",
                "email": "rob.bast@gmail.com",
                "date": "2017-01-19T11:10:26Z"
            },
            "committer": {
                "name": "Rob Bast",
                "email": "rob.bast@gmail.com",
                "date": "2017-01-19T11:10:26Z"
            },
            "message": "lets avoid silly commits in the future",
            "tree": {
                "sha": "76297f5200d64218d3405c558f099a567057a10a",
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/76297f5200d64218d3405c558f099a567057a10a"
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/ed461a86341990d9e6a84dec377c9704dbe274f7",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEGecr0DIm\/bmCAArScwduNeYWXzkFAliAnzwACgkQcwduNeYW\nXzlZpw\/+J2tKyQbW6SYNL15tXgkLFRL3KvpC+s6RseuHfejFmDGg45WJw8X6j0oZ\nYIZ6zuvOZprqKJ5ecFQekCpN8vSonBFWItAwRmvWD7jr1YqBpo3H5PsV82iI+hYD\nhvfo+n9Kzr\/b2hHSpULAdNwBRSLxNLDuUt2iB6Iqh5jo5kgS5I61KTZCrtdE2H5G\nDBv9rVHskVs8eIKn7AG7ihu9P2T2JlM9izUpDiDkZ6Dhnh600C4h8P7nwbmeu4U0\njQgqsOHF6rQMpPcMi52SVSVjyB0EOv5jSRn5n74iNaWYpxly2wV2uesVU9aVOdSE\nYTjNov0RBuVlFYoKPdK24OaLJn9yOM\/zpfs0HQrBTtNFsdfBtCh6HjMh\/CmJCM9X\noYzXZrFjzrTy47YVpJBrs0aH5edKFZuu6CIk1F4\/5EyhEgv7kjZ+1bXjwurimTzf\ng1TVC0MrfO1wWHK\/6aeV9f3cFuP+829hRgEdGqRFB04ptbjWkUw6apqln0sc7Vuw\nWhiCjZ766emvRyuVpJP62XIv88yXZUwKXsdC9+0ddex\/MxnxNJ6QI7Fp5t+zZfn8\njCENDSkAEKgjP5rfwPSDNnYqRzxFdr+bzqbyHKpzmwrgfaR2yc5rRJKL0q1eWAH6\ncDpxGPdj4a8TJmBaf2y3qmYnKrV9woXeoR+yh5jJbB5PA05Q+E8=\n=JclN\n-----END PGP SIGNATURE-----",
                "payload": "tree 76297f5200d64218d3405c558f099a567057a10a\nparent 0dd9e3a1063d5f190531ca10111971b0438fdd45\nauthor Rob Bast <rob.bast@gmail.com> 1484824226 +0100\ncommitter Rob Bast <rob.bast@gmail.com> 1484824226 +0100\n\nlets avoid silly commits in the future\n"
            }
        },
        "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ed461a86341990d9e6a84dec377c9704dbe274f7",
        "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ed461a86341990d9e6a84dec377c9704dbe274f7",
        "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ed461a86341990d9e6a84dec377c9704dbe274f7\/comments",
        "author": {
            "login": "alcohol",
            "id": 21414,
            "node_id": "MDQ6VXNlcjIxNDE0",
            "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
            "gravatar_id": "",
            "url": "https:\/\/api.github.com\/users\/alcohol",
            "html_url": "https:\/\/github.com\/alcohol",
            "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
            "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
            "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
            "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
            "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
            "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
            "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
            "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
            "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "alcohol",
            "id": 21414,
            "node_id": "MDQ6VXNlcjIxNDE0",
            "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
            "gravatar_id": "",
            "url": "https:\/\/api.github.com\/users\/alcohol",
            "html_url": "https:\/\/github.com\/alcohol",
            "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
            "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
            "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
            "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
            "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
            "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
            "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
            "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
            "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "0dd9e3a1063d5f190531ca10111971b0438fdd45",
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0dd9e3a1063d5f190531ca10111971b0438fdd45",
                "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0dd9e3a1063d5f190531ca10111971b0438fdd45"
            }
        ]
    },
    "merge_base_commit": {
        "sha": "ed461a86341990d9e6a84dec377c9704dbe274f7",
        "node_id": "MDY6Q29tbWl0MTg2NDM2MzplZDQ2MWE4NjM0MTk5MGQ5ZTZhODRkZWMzNzdjOTcwNGRiZTI3NGY3",
        "commit": {
            "author": {
                "name": "Rob Bast",
                "email": "rob.bast@gmail.com",
                "date": "2017-01-19T11:10:26Z"
            },
            "committer": {
                "name": "Rob Bast",
                "email": "rob.bast@gmail.com",
                "date": "2017-01-19T11:10:26Z"
            },
            "message": "lets avoid silly commits in the future",
            "tree": {
                "sha": "76297f5200d64218d3405c558f099a567057a10a",
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/76297f5200d64218d3405c558f099a567057a10a"
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/ed461a86341990d9e6a84dec377c9704dbe274f7",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEGecr0DIm\/bmCAArScwduNeYWXzkFAliAnzwACgkQcwduNeYW\nXzlZpw\/+J2tKyQbW6SYNL15tXgkLFRL3KvpC+s6RseuHfejFmDGg45WJw8X6j0oZ\nYIZ6zuvOZprqKJ5ecFQekCpN8vSonBFWItAwRmvWD7jr1YqBpo3H5PsV82iI+hYD\nhvfo+n9Kzr\/b2hHSpULAdNwBRSLxNLDuUt2iB6Iqh5jo5kgS5I61KTZCrtdE2H5G\nDBv9rVHskVs8eIKn7AG7ihu9P2T2JlM9izUpDiDkZ6Dhnh600C4h8P7nwbmeu4U0\njQgqsOHF6rQMpPcMi52SVSVjyB0EOv5jSRn5n74iNaWYpxly2wV2uesVU9aVOdSE\nYTjNov0RBuVlFYoKPdK24OaLJn9yOM\/zpfs0HQrBTtNFsdfBtCh6HjMh\/CmJCM9X\noYzXZrFjzrTy47YVpJBrs0aH5edKFZuu6CIk1F4\/5EyhEgv7kjZ+1bXjwurimTzf\ng1TVC0MrfO1wWHK\/6aeV9f3cFuP+829hRgEdGqRFB04ptbjWkUw6apqln0sc7Vuw\nWhiCjZ766emvRyuVpJP62XIv88yXZUwKXsdC9+0ddex\/MxnxNJ6QI7Fp5t+zZfn8\njCENDSkAEKgjP5rfwPSDNnYqRzxFdr+bzqbyHKpzmwrgfaR2yc5rRJKL0q1eWAH6\ncDpxGPdj4a8TJmBaf2y3qmYnKrV9woXeoR+yh5jJbB5PA05Q+E8=\n=JclN\n-----END PGP SIGNATURE-----",
                "payload": "tree 76297f5200d64218d3405c558f099a567057a10a\nparent 0dd9e3a1063d5f190531ca10111971b0438fdd45\nauthor Rob Bast <rob.bast@gmail.com> 1484824226 +0100\ncommitter Rob Bast <rob.bast@gmail.com> 1484824226 +0100\n\nlets avoid silly commits in the future\n"
            }
        },
        "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ed461a86341990d9e6a84dec377c9704dbe274f7",
        "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ed461a86341990d9e6a84dec377c9704dbe274f7",
        "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ed461a86341990d9e6a84dec377c9704dbe274f7\/comments",
        "author": {
            "login": "alcohol",
            "id": 21414,
            "node_id": "MDQ6VXNlcjIxNDE0",
            "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
            "gravatar_id": "",
            "url": "https:\/\/api.github.com\/users\/alcohol",
            "html_url": "https:\/\/github.com\/alcohol",
            "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
            "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
            "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
            "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
            "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
            "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
            "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
            "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
            "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "alcohol",
            "id": 21414,
            "node_id": "MDQ6VXNlcjIxNDE0",
            "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
            "gravatar_id": "",
            "url": "https:\/\/api.github.com\/users\/alcohol",
            "html_url": "https:\/\/github.com\/alcohol",
            "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
            "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
            "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
            "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
            "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
            "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
            "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
            "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
            "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "0dd9e3a1063d5f190531ca10111971b0438fdd45",
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0dd9e3a1063d5f190531ca10111971b0438fdd45",
                "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0dd9e3a1063d5f190531ca10111971b0438fdd45"
            }
        ]
    },
    "status": "ahead",
    "ahead_by": 1058,
    "behind_by": 0,
    "total_commits": 1058,
    "commits": [
        {
            "sha": "b99798068d8705eb6f755d8aa538975bba371dc3",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiOTk3OTgwNjhkODcwNWViNmY3NTVkOGFhNTM4OTc1YmJhMzcxZGMz",
            "commit": {
                "author": {
                    "name": "Helmut Hummel",
                    "email": "info@helhum.io",
                    "date": "2018-05-14T14:54:16Z"
                },
                "committer": {
                    "name": "Helmut Hummel",
                    "email": "info@helhum.io",
                    "date": "2018-05-14T15:05:36Z"
                },
                "message": "Use symfony\/console for hidden questions\n\nFixes: #7337",
                "tree": {
                    "sha": "a072701a16f9a24ad485d24391d82bc0a4724c0a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/a072701a16f9a24ad485d24391d82bc0a4724c0a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b99798068d8705eb6f755d8aa538975bba371dc3",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b99798068d8705eb6f755d8aa538975bba371dc3",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b99798068d8705eb6f755d8aa538975bba371dc3",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b99798068d8705eb6f755d8aa538975bba371dc3\/comments",
            "author": {
                "login": "helhum",
                "id": 904370,
                "node_id": "MDQ6VXNlcjkwNDM3MA==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/904370?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/helhum",
                "html_url": "https:\/\/github.com\/helhum",
                "followers_url": "https:\/\/api.github.com\/users\/helhum\/followers",
                "following_url": "https:\/\/api.github.com\/users\/helhum\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/helhum\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/helhum\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/helhum\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/helhum\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/helhum\/repos",
                "events_url": "https:\/\/api.github.com\/users\/helhum\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/helhum\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "helhum",
                "id": 904370,
                "node_id": "MDQ6VXNlcjkwNDM3MA==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/904370?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/helhum",
                "html_url": "https:\/\/github.com\/helhum",
                "followers_url": "https:\/\/api.github.com\/users\/helhum\/followers",
                "following_url": "https:\/\/api.github.com\/users\/helhum\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/helhum\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/helhum\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/helhum\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/helhum\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/helhum\/repos",
                "events_url": "https:\/\/api.github.com\/users\/helhum\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/helhum\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "22025f2e29dbcae962efaec49e3c8677edde8a6f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/22025f2e29dbcae962efaec49e3c8677edde8a6f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/22025f2e29dbcae962efaec49e3c8677edde8a6f"
                }
            ]
        },
        {
            "sha": "af1dccb1fb67ae3fc337ae95376ef77658d9a711",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphZjFkY2NiMWZiNjdhZTNmYzMzN2FlOTUzNzZlZjc3NjU4ZDlhNzEx",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-15T13:20:18Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-15T13:20:21Z"
                },
                "message": "Avoid showing virtual packages in search results, fixes #7310",
                "tree": {
                    "sha": "7c7fa6e17e6e64d9d4865fc128d49eb678dd4357",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/7c7fa6e17e6e64d9d4865fc128d49eb678dd4357"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/af1dccb1fb67ae3fc337ae95376ef77658d9a711",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/af1dccb1fb67ae3fc337ae95376ef77658d9a711",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/af1dccb1fb67ae3fc337ae95376ef77658d9a711",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/af1dccb1fb67ae3fc337ae95376ef77658d9a711\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b540ce264c6396a4fb491c861f29dcb0fb5ed737",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b540ce264c6396a4fb491c861f29dcb0fb5ed737",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b540ce264c6396a4fb491c861f29dcb0fb5ed737"
                }
            ]
        },
        {
            "sha": "fd00ea7ce856b44514884c3b91ab4ad0303eccb1",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpmZDAwZWE3Y2U4NTZiNDQ1MTQ4ODRjM2I5MWFiNGFkMDMwM2VjY2Ix",
            "commit": {
                "author": {
                    "name": "zefrog",
                    "email": "dd.la.grenouille@gmail.com",
                    "date": "2018-05-15T13:31:31Z"
                },
                "committer": {
                    "name": "zefrog",
                    "email": "dd.la.grenouille@gmail.com",
                    "date": "2018-05-15T13:31:31Z"
                },
                "message": "Fix Git detection of authentication failure when no tty is attached to the process",
                "tree": {
                    "sha": "6788b7d7338dd111af504e995dc604b6b78b5f3d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/6788b7d7338dd111af504e995dc604b6b78b5f3d"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/fd00ea7ce856b44514884c3b91ab4ad0303eccb1",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/fd00ea7ce856b44514884c3b91ab4ad0303eccb1",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/fd00ea7ce856b44514884c3b91ab4ad0303eccb1",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/fd00ea7ce856b44514884c3b91ab4ad0303eccb1\/comments",
            "author": null,
            "committer": null,
            "parents": [
                {
                    "sha": "22025f2e29dbcae962efaec49e3c8677edde8a6f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/22025f2e29dbcae962efaec49e3c8677edde8a6f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/22025f2e29dbcae962efaec49e3c8677edde8a6f"
                }
            ]
        },
        {
            "sha": "70e431368f27892b5522b2eb5ef3dd78cea4357a",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3MGU0MzEzNjhmMjc4OTJiNTUyMmIyZWI1ZWYzZGQ3OGNlYTQzNTdh",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-15T14:01:34Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-15T14:01:34Z"
                },
                "message": "Merge remote-tracking branch 'ph-fritsche\/1.6' into 1.6",
                "tree": {
                    "sha": "44ff9fca0c6825213715bcb5cfed46d410f41a5d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/44ff9fca0c6825213715bcb5cfed46d410f41a5d"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/70e431368f27892b5522b2eb5ef3dd78cea4357a",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/70e431368f27892b5522b2eb5ef3dd78cea4357a",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/70e431368f27892b5522b2eb5ef3dd78cea4357a",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/70e431368f27892b5522b2eb5ef3dd78cea4357a\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "af1dccb1fb67ae3fc337ae95376ef77658d9a711",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/af1dccb1fb67ae3fc337ae95376ef77658d9a711",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/af1dccb1fb67ae3fc337ae95376ef77658d9a711"
                },
                {
                    "sha": "b0be87177d62611e0bf22825942be4820e7295c4",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b0be87177d62611e0bf22825942be4820e7295c4",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b0be87177d62611e0bf22825942be4820e7295c4"
                }
            ]
        },
        {
            "sha": "c6d53abf8991b022cb9c2156a00ccc5ed744d991",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpjNmQ1M2FiZjg5OTFiMDIyY2I5YzIxNTZhMDBjY2M1ZWQ3NDRkOTkx",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-15T14:06:56Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-15T14:06:56Z"
                },
                "message": "Fix tests",
                "tree": {
                    "sha": "a338c0027c48d5859f7789af41e2c5163c6de466",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/a338c0027c48d5859f7789af41e2c5163c6de466"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/c6d53abf8991b022cb9c2156a00ccc5ed744d991",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c6d53abf8991b022cb9c2156a00ccc5ed744d991",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c6d53abf8991b022cb9c2156a00ccc5ed744d991",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c6d53abf8991b022cb9c2156a00ccc5ed744d991\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "70e431368f27892b5522b2eb5ef3dd78cea4357a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/70e431368f27892b5522b2eb5ef3dd78cea4357a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/70e431368f27892b5522b2eb5ef3dd78cea4357a"
                }
            ]
        },
        {
            "sha": "46f973e213212e2a2049eacb78e9654745a35386",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0NmY5NzNlMjEzMjEyZTJhMjA0OWVhY2I3OGU5NjU0NzQ1YTM1Mzg2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-15T14:07:05Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-15T14:07:05Z"
                },
                "message": "Merge branch '1.6'",
                "tree": {
                    "sha": "b3de59a46d01f4a43f0607766abe538d59d9ef80",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/b3de59a46d01f4a43f0607766abe538d59d9ef80"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/46f973e213212e2a2049eacb78e9654745a35386",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/46f973e213212e2a2049eacb78e9654745a35386",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/46f973e213212e2a2049eacb78e9654745a35386",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/46f973e213212e2a2049eacb78e9654745a35386\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "22025f2e29dbcae962efaec49e3c8677edde8a6f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/22025f2e29dbcae962efaec49e3c8677edde8a6f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/22025f2e29dbcae962efaec49e3c8677edde8a6f"
                },
                {
                    "sha": "c6d53abf8991b022cb9c2156a00ccc5ed744d991",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c6d53abf8991b022cb9c2156a00ccc5ed744d991",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c6d53abf8991b022cb9c2156a00ccc5ed744d991"
                }
            ]
        },
        {
            "sha": "089f3803de4797a78e6e1feddfbbb74920c5ad2c",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowODlmMzgwM2RlNDc5N2E3OGU2ZTFmZWRkZmJiYjc0OTIwYzVhZDJj",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-15T14:07:13Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-15T14:07:13Z"
                },
                "message": "Merge remote-tracking branch 'helhum\/sf-hidden-input'",
                "tree": {
                    "sha": "d417427e63e21c7bd296868c8153bfe8518fd0dd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/d417427e63e21c7bd296868c8153bfe8518fd0dd"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/089f3803de4797a78e6e1feddfbbb74920c5ad2c",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/089f3803de4797a78e6e1feddfbbb74920c5ad2c",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/089f3803de4797a78e6e1feddfbbb74920c5ad2c",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/089f3803de4797a78e6e1feddfbbb74920c5ad2c\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "46f973e213212e2a2049eacb78e9654745a35386",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/46f973e213212e2a2049eacb78e9654745a35386",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/46f973e213212e2a2049eacb78e9654745a35386"
                },
                {
                    "sha": "b99798068d8705eb6f755d8aa538975bba371dc3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b99798068d8705eb6f755d8aa538975bba371dc3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b99798068d8705eb6f755d8aa538975bba371dc3"
                }
            ]
        },
        {
            "sha": "5435877bd9325322e52bae454878743b38f20f13",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo1NDM1ODc3YmQ5MzI1MzIyZTUyYmFlNDU0ODc4NzQzYjM4ZjIwZjEz",
            "commit": {
                "author": {
                    "name": "Yanick Witschi",
                    "email": "yanick.witschi@terminal42.ch",
                    "date": "2018-05-18T08:59:09Z"
                },
                "committer": {
                    "name": "Yanick Witschi",
                    "email": "yanick.witschi@terminal42.ch",
                    "date": "2018-05-18T08:59:09Z"
                },
                "message": "Improve SAT resolving developer debug information",
                "tree": {
                    "sha": "5ed592a4b54a520c7ccb9ea0b93587b02c4b475f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/5ed592a4b54a520c7ccb9ea0b93587b02c4b475f"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/5435877bd9325322e52bae454878743b38f20f13",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5435877bd9325322e52bae454878743b38f20f13",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5435877bd9325322e52bae454878743b38f20f13",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5435877bd9325322e52bae454878743b38f20f13\/comments",
            "author": {
                "login": "Toflar",
                "id": 481937,
                "node_id": "MDQ6VXNlcjQ4MTkzNw==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/481937?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Toflar",
                "html_url": "https:\/\/github.com\/Toflar",
                "followers_url": "https:\/\/api.github.com\/users\/Toflar\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Toflar\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Toflar\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Toflar\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Toflar\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Toflar\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Toflar\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Toflar\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Toflar\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Toflar",
                "id": 481937,
                "node_id": "MDQ6VXNlcjQ4MTkzNw==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/481937?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Toflar",
                "html_url": "https:\/\/github.com\/Toflar",
                "followers_url": "https:\/\/api.github.com\/users\/Toflar\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Toflar\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Toflar\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Toflar\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Toflar\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Toflar\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Toflar\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Toflar\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Toflar\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "089f3803de4797a78e6e1feddfbbb74920c5ad2c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/089f3803de4797a78e6e1feddfbbb74920c5ad2c",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/089f3803de4797a78e6e1feddfbbb74920c5ad2c"
                }
            ]
        },
        {
            "sha": "ee97f26931b7d28174adb4db79ef060a7d9db9af",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplZTk3ZjI2OTMxYjdkMjgxNzRhZGI0ZGI3OWVmMDYwYTdkOWRiOWFm",
            "commit": {
                "author": {
                    "name": "Robbie Averill",
                    "email": "robbie@silverstripe.com",
                    "date": "2018-05-21T22:39:25Z"
                },
                "committer": {
                    "name": "Robbie Averill",
                    "email": "robbie@silverstripe.com",
                    "date": "2018-05-21T22:39:25Z"
                },
                "message": "FIX Update PHPDocs to indicate more specific return types",
                "tree": {
                    "sha": "ba121fbfc679558676b97739a71a2d1bbce0b370",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ba121fbfc679558676b97739a71a2d1bbce0b370"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/ee97f26931b7d28174adb4db79ef060a7d9db9af",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ee97f26931b7d28174adb4db79ef060a7d9db9af",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ee97f26931b7d28174adb4db79ef060a7d9db9af",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ee97f26931b7d28174adb4db79ef060a7d9db9af\/comments",
            "author": {
                "login": "robbieaverill",
                "id": 5170590,
                "node_id": "MDQ6VXNlcjUxNzA1OTA=",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/5170590?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/robbieaverill",
                "html_url": "https:\/\/github.com\/robbieaverill",
                "followers_url": "https:\/\/api.github.com\/users\/robbieaverill\/followers",
                "following_url": "https:\/\/api.github.com\/users\/robbieaverill\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/robbieaverill\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/robbieaverill\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/robbieaverill\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/robbieaverill\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/robbieaverill\/repos",
                "events_url": "https:\/\/api.github.com\/users\/robbieaverill\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/robbieaverill\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "robbieaverill",
                "id": 5170590,
                "node_id": "MDQ6VXNlcjUxNzA1OTA=",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/5170590?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/robbieaverill",
                "html_url": "https:\/\/github.com\/robbieaverill",
                "followers_url": "https:\/\/api.github.com\/users\/robbieaverill\/followers",
                "following_url": "https:\/\/api.github.com\/users\/robbieaverill\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/robbieaverill\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/robbieaverill\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/robbieaverill\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/robbieaverill\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/robbieaverill\/repos",
                "events_url": "https:\/\/api.github.com\/users\/robbieaverill\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/robbieaverill\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "c6d53abf8991b022cb9c2156a00ccc5ed744d991",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c6d53abf8991b022cb9c2156a00ccc5ed744d991",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c6d53abf8991b022cb9c2156a00ccc5ed744d991"
                }
            ]
        },
        {
            "sha": "1016cf19b2c6212b76df5b4f58ba1be8382e5945",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxMDE2Y2YxOWIyYzYyMTJiNzZkZjViNGY1OGJhMWJlODM4MmU1OTQ1",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-05-24T09:16:40Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-05-24T09:16:40Z"
                },
                "message": "Merge pull request #7351 from zefrog\/fix-git-auth-failure-no-tty\n\nFix Git detection of authentication failure when no tty is attached to the process",
                "tree": {
                    "sha": "ec8291426ec3f3f65a96a91d8e5152da9a40cc69",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ec8291426ec3f3f65a96a91d8e5152da9a40cc69"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/1016cf19b2c6212b76df5b4f58ba1be8382e5945",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbBoL4CRBK7hj4Ov3rIwAAdHIIACkzQKHg8XVb4Gjt6+PxupYZ\nOZzwjESDmu+qHMXZRRPiAm9FDygd4yWJ84vRJklpCWk6QITJGg57ilJcPeYA3y75\nbH21aGOXigHOf6QDElJQS3TiqdwsMxJX3ZweGQKEe3bdEJQwNoQsQSDziQ1Yawwy\n0Z63wtmI+Pmkrz5kj7i2gGMFzhHINQgkyB67U1+O1tJvawFq+iJGUW7gD+ocf\/eH\nv2iRBPjrLIBjErNMYwUDA+ULWSk4Vt6pLaKyRTPz603E3ApWWiNW1jNYAQ87w6os\nLHKs0Bf7q53TlK\/3xT8reVqShapEypZixi8hWIJai\/cHOqN0AbInEHBfhUzt1ew=\n=b2Ue\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree ec8291426ec3f3f65a96a91d8e5152da9a40cc69\nparent 089f3803de4797a78e6e1feddfbbb74920c5ad2c\nparent fd00ea7ce856b44514884c3b91ab4ad0303eccb1\nauthor Rob <alcohol@users.noreply.github.com> 1527153400 +0200\ncommitter GitHub <noreply@github.com> 1527153400 +0200\n\nMerge pull request #7351 from zefrog\/fix-git-auth-failure-no-tty\n\nFix Git detection of authentication failure when no tty is attached to the process"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1016cf19b2c6212b76df5b4f58ba1be8382e5945",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1016cf19b2c6212b76df5b4f58ba1be8382e5945",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1016cf19b2c6212b76df5b4f58ba1be8382e5945\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "089f3803de4797a78e6e1feddfbbb74920c5ad2c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/089f3803de4797a78e6e1feddfbbb74920c5ad2c",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/089f3803de4797a78e6e1feddfbbb74920c5ad2c"
                },
                {
                    "sha": "fd00ea7ce856b44514884c3b91ab4ad0303eccb1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/fd00ea7ce856b44514884c3b91ab4ad0303eccb1",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/fd00ea7ce856b44514884c3b91ab4ad0303eccb1"
                }
            ]
        },
        {
            "sha": "d82bdc04ac0f4de4174e69ed883c8eac63db6df3",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkODJiZGMwNGFjMGY0ZGU0MTc0ZTY5ZWQ4ODNjOGVhYzYzZGI2ZGYz",
            "commit": {
                "author": {
                    "name": "Yanick Witschi",
                    "email": "yanick.witschi@terminal42.ch",
                    "date": "2018-05-24T09:46:50Z"
                },
                "committer": {
                    "name": "Yanick Witschi",
                    "email": "yanick.witschi@terminal42.ch",
                    "date": "2018-05-24T09:46:50Z"
                },
                "message": "Improved debugging output",
                "tree": {
                    "sha": "99bced40d87b20c340d1fc7805cb67a7a70a1643",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/99bced40d87b20c340d1fc7805cb67a7a70a1643"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/d82bdc04ac0f4de4174e69ed883c8eac63db6df3",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d82bdc04ac0f4de4174e69ed883c8eac63db6df3",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d82bdc04ac0f4de4174e69ed883c8eac63db6df3",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d82bdc04ac0f4de4174e69ed883c8eac63db6df3\/comments",
            "author": {
                "login": "Toflar",
                "id": 481937,
                "node_id": "MDQ6VXNlcjQ4MTkzNw==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/481937?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Toflar",
                "html_url": "https:\/\/github.com\/Toflar",
                "followers_url": "https:\/\/api.github.com\/users\/Toflar\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Toflar\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Toflar\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Toflar\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Toflar\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Toflar\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Toflar\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Toflar\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Toflar\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Toflar",
                "id": 481937,
                "node_id": "MDQ6VXNlcjQ4MTkzNw==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/481937?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Toflar",
                "html_url": "https:\/\/github.com\/Toflar",
                "followers_url": "https:\/\/api.github.com\/users\/Toflar\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Toflar\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Toflar\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Toflar\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Toflar\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Toflar\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Toflar\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Toflar\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Toflar\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "5435877bd9325322e52bae454878743b38f20f13",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5435877bd9325322e52bae454878743b38f20f13",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5435877bd9325322e52bae454878743b38f20f13"
                }
            ]
        },
        {
            "sha": "eedbd218f52c526ec41c6c623137c3781eb4d928",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplZWRiZDIxOGY1MmM1MjZlYzQxYzZjNjIzMTM3YzM3ODFlYjRkOTI4",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-31T15:02:04Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-31T15:02:04Z"
                },
                "message": "Make sure circular dependencies do not break the autoload dumper, refs #7316, refs #7348",
                "tree": {
                    "sha": "f3ddde81309ac4509c3799bccf192dda171d99f8",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/f3ddde81309ac4509c3799bccf192dda171d99f8"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/eedbd218f52c526ec41c6c623137c3781eb4d928",
                "comment_count": 4,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/eedbd218f52c526ec41c6c623137c3781eb4d928",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/eedbd218f52c526ec41c6c623137c3781eb4d928",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/eedbd218f52c526ec41c6c623137c3781eb4d928\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "1016cf19b2c6212b76df5b4f58ba1be8382e5945",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1016cf19b2c6212b76df5b4f58ba1be8382e5945",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1016cf19b2c6212b76df5b4f58ba1be8382e5945"
                }
            ]
        },
        {
            "sha": "ccb4acaf3f3fce1320d569d59ecbaadf0170623f",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpjY2I0YWNhZjNmM2ZjZTEzMjBkNTY5ZDU5ZWNiYWFkZjAxNzA2MjNm",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-31T17:54:58Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-05-31T17:54:58Z"
                },
                "message": "Merge pull request #7364 from robbieaverill\/pulls\/1.6\/phpdoc-fixes\n\nFIX Update PHPDocs to indicate more specific return types",
                "tree": {
                    "sha": "ba121fbfc679558676b97739a71a2d1bbce0b370",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ba121fbfc679558676b97739a71a2d1bbce0b370"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/ccb4acaf3f3fce1320d569d59ecbaadf0170623f",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbEDbyCRBK7hj4Ov3rIwAAdHIIAASrzqnF5OrN\/F7ZDhXXfBPs\n8ikqMVpxS\/CejkS+54WBmumzS9NCGqfkiJttrMIr4BVD8MzA4QcWtL\/P+5tSUE08\n3TSYlKyes99Za+UZLc9sJgcqS6\/jaXFhixLS\/xI65bhadbni19oUqynG+23CkuW0\nlAvUkvyVCd4Vcv8CsqP2nE4elf2IX335pWCYKDm+VH21YABdH9dZIsv\/szPFcZ5i\nsE1lKl6e\/z+vYP+8HqCbsGMiNvuOjr3dUHbiRJUCq5xW4eodQTZ+H1B5o9M6ZMZ0\n364aGrtJW0dc63sLwW01uEANf0G9KNJWG4Bu54DbqWm8UFrG9D7Lqgw68+Vh85U=\n=1ejb\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree ba121fbfc679558676b97739a71a2d1bbce0b370\nparent c6d53abf8991b022cb9c2156a00ccc5ed744d991\nparent ee97f26931b7d28174adb4db79ef060a7d9db9af\nauthor Jordi Boggiano <j.boggiano@seld.be> 1527789298 +0200\ncommitter GitHub <noreply@github.com> 1527789298 +0200\n\nMerge pull request #7364 from robbieaverill\/pulls\/1.6\/phpdoc-fixes\n\nFIX Update PHPDocs to indicate more specific return types"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ccb4acaf3f3fce1320d569d59ecbaadf0170623f",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ccb4acaf3f3fce1320d569d59ecbaadf0170623f",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ccb4acaf3f3fce1320d569d59ecbaadf0170623f\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "c6d53abf8991b022cb9c2156a00ccc5ed744d991",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c6d53abf8991b022cb9c2156a00ccc5ed744d991",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c6d53abf8991b022cb9c2156a00ccc5ed744d991"
                },
                {
                    "sha": "ee97f26931b7d28174adb4db79ef060a7d9db9af",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ee97f26931b7d28174adb4db79ef060a7d9db9af",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ee97f26931b7d28174adb4db79ef060a7d9db9af"
                }
            ]
        },
        {
            "sha": "b8989796bf5157f7ca9a5d371a0d0ce791fce2ea",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiODk4OTc5NmJmNTE1N2Y3Y2E5YTVkMzcxYTBkMGNlNzkxZmNlMmVh",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-31T17:58:32Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-31T17:58:32Z"
                },
                "message": "Merge branch '1.6'",
                "tree": {
                    "sha": "4816c776e5d4313a4c77bf4bfbe1e4f4a60d0491",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/4816c776e5d4313a4c77bf4bfbe1e4f4a60d0491"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b8989796bf5157f7ca9a5d371a0d0ce791fce2ea",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b8989796bf5157f7ca9a5d371a0d0ce791fce2ea",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b8989796bf5157f7ca9a5d371a0d0ce791fce2ea",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b8989796bf5157f7ca9a5d371a0d0ce791fce2ea\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "eedbd218f52c526ec41c6c623137c3781eb4d928",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/eedbd218f52c526ec41c6c623137c3781eb4d928",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/eedbd218f52c526ec41c6c623137c3781eb4d928"
                },
                {
                    "sha": "ccb4acaf3f3fce1320d569d59ecbaadf0170623f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ccb4acaf3f3fce1320d569d59ecbaadf0170623f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ccb4acaf3f3fce1320d569d59ecbaadf0170623f"
                }
            ]
        },
        {
            "sha": "d7645a83a2ae94aacd0fc6483dd4b5cd65f82438",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkNzY0NWE4M2EyYWU5NGFhY2QwZmM2NDgzZGQ0YjVjZDY1ZjgyNDM4",
            "commit": {
                "author": {
                    "name": "Sam Pablo Kuper",
                    "email": "sampablokuper@riseup.net",
                    "date": "2018-05-31T22:50:31Z"
                },
                "committer": {
                    "name": "Sam Pablo Kuper",
                    "email": "sampablokuper@riseup.net",
                    "date": "2018-05-31T22:55:20Z"
                },
                "message": "Document the versioning system used by Composer.\n\nFixes #7356.",
                "tree": {
                    "sha": "a227c127324699dd65ee8aec0a67853150f9ce71",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/a227c127324699dd65ee8aec0a67853150f9ce71"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/d7645a83a2ae94aacd0fc6483dd4b5cd65f82438",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d7645a83a2ae94aacd0fc6483dd4b5cd65f82438",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d7645a83a2ae94aacd0fc6483dd4b5cd65f82438",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d7645a83a2ae94aacd0fc6483dd4b5cd65f82438\/comments",
            "author": {
                "login": "sampablokuper",
                "id": 85394,
                "node_id": "MDQ6VXNlcjg1Mzk0",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/85394?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/sampablokuper",
                "html_url": "https:\/\/github.com\/sampablokuper",
                "followers_url": "https:\/\/api.github.com\/users\/sampablokuper\/followers",
                "following_url": "https:\/\/api.github.com\/users\/sampablokuper\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/sampablokuper\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/sampablokuper\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/sampablokuper\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/sampablokuper\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/sampablokuper\/repos",
                "events_url": "https:\/\/api.github.com\/users\/sampablokuper\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/sampablokuper\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "sampablokuper",
                "id": 85394,
                "node_id": "MDQ6VXNlcjg1Mzk0",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/85394?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/sampablokuper",
                "html_url": "https:\/\/github.com\/sampablokuper",
                "followers_url": "https:\/\/api.github.com\/users\/sampablokuper\/followers",
                "following_url": "https:\/\/api.github.com\/users\/sampablokuper\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/sampablokuper\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/sampablokuper\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/sampablokuper\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/sampablokuper\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/sampablokuper\/repos",
                "events_url": "https:\/\/api.github.com\/users\/sampablokuper\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/sampablokuper\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b8989796bf5157f7ca9a5d371a0d0ce791fce2ea",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b8989796bf5157f7ca9a5d371a0d0ce791fce2ea",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b8989796bf5157f7ca9a5d371a0d0ce791fce2ea"
                }
            ]
        },
        {
            "sha": "f3307237a56efa51e3ebf9cad0598a3840fe4cd3",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpmMzMwNzIzN2E1NmVmYTUxZTNlYmY5Y2FkMDU5OGEzODQwZmU0Y2Qz",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-06-01T08:02:04Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-06-01T08:02:04Z"
                },
                "message": "Merge pull request #7382 from sampablokuper\/spk-note-version-numbering-system\n\nDocument the versioning system used by Composer.",
                "tree": {
                    "sha": "a227c127324699dd65ee8aec0a67853150f9ce71",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/a227c127324699dd65ee8aec0a67853150f9ce71"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/f3307237a56efa51e3ebf9cad0598a3840fe4cd3",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbEP18CRBK7hj4Ov3rIwAAdHIIAGhWhVx3kY5Yjl1e\/dhlE4nU\nK3v6QUHuHOE882xaKQ+cpjEsFmHBEJFLM\/0swpMwslylrmb7Mbah3yPPibP83\/xz\nehbt5u3pSV8i+PJrNPb1+pRMc8b3nUi6NeIedJ1l2xLHD1qr1kMEK5F1AC4xm4Cm\n+RpVSY1\/rdbavZD2X28Qme8uyYTSY8lCDCeWVL9HvQq5jKzywyq3ItLAOKb\/Yui3\n+g6yoQSVgsJ3aoJY2PjmSVECWHpR+AH4e3LZMg3XARfGLcAnmjTa4kbRykVD9L6a\nFB8\/ek+BblfQKQPEZgwxOCb6f\/yiTN4wAPgimYnnmxc3jl0eUZhf7y9LbPxoev0=\n=08d0\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree a227c127324699dd65ee8aec0a67853150f9ce71\nparent b8989796bf5157f7ca9a5d371a0d0ce791fce2ea\nparent d7645a83a2ae94aacd0fc6483dd4b5cd65f82438\nauthor Jordi Boggiano <j.boggiano@seld.be> 1527840124 +0200\ncommitter GitHub <noreply@github.com> 1527840124 +0200\n\nMerge pull request #7382 from sampablokuper\/spk-note-version-numbering-system\n\nDocument the versioning system used by Composer."
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f3307237a56efa51e3ebf9cad0598a3840fe4cd3",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f3307237a56efa51e3ebf9cad0598a3840fe4cd3",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f3307237a56efa51e3ebf9cad0598a3840fe4cd3\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b8989796bf5157f7ca9a5d371a0d0ce791fce2ea",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b8989796bf5157f7ca9a5d371a0d0ce791fce2ea",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b8989796bf5157f7ca9a5d371a0d0ce791fce2ea"
                },
                {
                    "sha": "d7645a83a2ae94aacd0fc6483dd4b5cd65f82438",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d7645a83a2ae94aacd0fc6483dd4b5cd65f82438",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d7645a83a2ae94aacd0fc6483dd4b5cd65f82438"
                }
            ]
        },
        {
            "sha": "6ff74d3ed1b02b8614cdd50795fa2b743181ca81",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo2ZmY3NGQzZWQxYjAyYjg2MTRjZGQ1MDc5NWZhMmI3NDMxODFjYTgx",
            "commit": {
                "author": {
                    "name": "Jeroen Ketelaar",
                    "email": "jketelaar@users.noreply.github.com",
                    "date": "2018-06-05T13:55:14Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-06-05T13:55:14Z"
                },
                "message": "[BUGFIX] Fixed typo in comment",
                "tree": {
                    "sha": "8ce10b285de94b241158e6393e811fd81dd96e54",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/8ce10b285de94b241158e6393e811fd81dd96e54"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/6ff74d3ed1b02b8614cdd50795fa2b743181ca81",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbFpZCCRBK7hj4Ov3rIwAAdHIIABq1CG1Vtqy9etfZL7CDrX+0\n9up74zVizz1iDuagvBW25dyslNdJzT0RgwpzorHDIrjYEKNMEMVejStDqR1mA6Ft\nuKMYeRg82ShRJEMU5NgFTNpAlwlDUWHrH7Ng17YLI8HPqEfFxcUBLCv4DHH0ls6C\nYf\/9QismqBQ9dxszMrumMzYT+uBVGOAkqlIaUsM8jeo+pWgZqFjxJPBntFq+I6C1\nu+jryKspo8eM7rq9ufnUje2KTBUwGatOBbQFBgOr3qqWBAg\/oWh5J4NXatJr9dkI\niHU6MKZdHBogREuo8bc9rhv2qAO\/mduEQ4leU\/K2tN5tS6u+vQ03hhq66dgO3FI=\n=b0eb\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 8ce10b285de94b241158e6393e811fd81dd96e54\nparent f3307237a56efa51e3ebf9cad0598a3840fe4cd3\nauthor Jeroen Ketelaar <JKetelaar@users.noreply.github.com> 1528206914 +0200\ncommitter GitHub <noreply@github.com> 1528206914 +0200\n\n[BUGFIX] Fixed typo in comment"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6ff74d3ed1b02b8614cdd50795fa2b743181ca81",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/6ff74d3ed1b02b8614cdd50795fa2b743181ca81",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6ff74d3ed1b02b8614cdd50795fa2b743181ca81\/comments",
            "author": {
                "login": "JKetelaar",
                "id": 3681904,
                "node_id": "MDQ6VXNlcjM2ODE5MDQ=",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/3681904?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/JKetelaar",
                "html_url": "https:\/\/github.com\/JKetelaar",
                "followers_url": "https:\/\/api.github.com\/users\/JKetelaar\/followers",
                "following_url": "https:\/\/api.github.com\/users\/JKetelaar\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/JKetelaar\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/JKetelaar\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/JKetelaar\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/JKetelaar\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/JKetelaar\/repos",
                "events_url": "https:\/\/api.github.com\/users\/JKetelaar\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/JKetelaar\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f3307237a56efa51e3ebf9cad0598a3840fe4cd3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f3307237a56efa51e3ebf9cad0598a3840fe4cd3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f3307237a56efa51e3ebf9cad0598a3840fe4cd3"
                }
            ]
        },
        {
            "sha": "db71ce93bac88163ca59a335fc28a9ec8211b4eb",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkYjcxY2U5M2JhYzg4MTYzY2E1OWEzMzVmYzI4YTllYzgyMTFiNGVi",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-06-06T10:45:56Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-06-06T10:45:56Z"
                },
                "message": "Merge pull request #7391 from JKetelaar\/patch-1\n\nFixed typo in docs",
                "tree": {
                    "sha": "8ce10b285de94b241158e6393e811fd81dd96e54",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/8ce10b285de94b241158e6393e811fd81dd96e54"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/db71ce93bac88163ca59a335fc28a9ec8211b4eb",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbF7tkCRBK7hj4Ov3rIwAAdHIIAIducPywSrW6tk2z6P5qxQ5e\nhcZHkmkSoEdZKBkz6qPiuPSvh68vr\/1WkdkLIiAZKT1aVp+V2P1Y9n3JH2\/Sok9\/\n5NBHM26Ga3UV8wZrfE5S0iM2yzS3l58sJOcjqGpRwceXeRcIRhy+SBlIFMSxCsan\niqnlwiDGbflA2lYLXXbZH7tvlpYPdoHsE8hQb+7al5v9VHdSysvPxUVPHaUVipCO\nVYsTGCdokZyzISmGghXMw7r9domysLkeTmuRlndzuMPG\/OE+NpAxm6mxEqjtNWf3\nTNfffPxVRb5\/vWHpwAtrGwZuPGCjx6MfiFGpaZp9sC+lqRKs7SFy6O+uTj4YwlY=\n=qDft\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 8ce10b285de94b241158e6393e811fd81dd96e54\nparent f3307237a56efa51e3ebf9cad0598a3840fe4cd3\nparent 6ff74d3ed1b02b8614cdd50795fa2b743181ca81\nauthor Jordi Boggiano <j.boggiano@seld.be> 1528281956 +0200\ncommitter GitHub <noreply@github.com> 1528281956 +0200\n\nMerge pull request #7391 from JKetelaar\/patch-1\n\nFixed typo in docs"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/db71ce93bac88163ca59a335fc28a9ec8211b4eb",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/db71ce93bac88163ca59a335fc28a9ec8211b4eb",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/db71ce93bac88163ca59a335fc28a9ec8211b4eb\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f3307237a56efa51e3ebf9cad0598a3840fe4cd3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f3307237a56efa51e3ebf9cad0598a3840fe4cd3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f3307237a56efa51e3ebf9cad0598a3840fe4cd3"
                },
                {
                    "sha": "6ff74d3ed1b02b8614cdd50795fa2b743181ca81",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6ff74d3ed1b02b8614cdd50795fa2b743181ca81",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/6ff74d3ed1b02b8614cdd50795fa2b743181ca81"
                }
            ]
        },
        {
            "sha": "3fb2a054a736ba91d3ff19573e95eea72b8aef30",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozZmIyYTA1NGE3MzZiYTkxZDNmZjE5NTczZTk1ZWVhNzJiOGFlZjMw",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-06-06T12:01:57Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-06-06T12:01:57Z"
                },
                "message": "Merge pull request #7357 from Toflar\/better-solver-debug-output\n\nImprove SAT resolving developer debug information",
                "tree": {
                    "sha": "29791c172d8497a578155d257dc9003a470fe523",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/29791c172d8497a578155d257dc9003a470fe523"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/3fb2a054a736ba91d3ff19573e95eea72b8aef30",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbF801CRBK7hj4Ov3rIwAAdHIIABV2ckHFZr3wXsJ0724q5A+v\naWJz7z+q1rp2PL9swGXxWQDXqowYf\/TagN6Y1b3isgUnjQ5dKEVMwn17JEDdzlm5\n2CpKntr0ZnYBh4FguJBqA5ZmjB4meyuuzXlYUdvoqhLZpTJdCJm7XSlyBuZ+QkLI\nInsbclHiUay\/2SK+jKp7vheFv95O6xMIcQjESxbBGNDfORF2rGYNsNgr+ZGa7e3y\ndDXRfDHry2PD1PUgEoG1NsG0Qge8ReOT0aKN3gBlvXfdOX6VhSdlvLcFvhvKe6w5\nBq2lqPw3ORhejz2cI8YDmrutY7Sk3hGw9RlajWc3qzMN4H81VL6jjNAT2p1UsQQ=\n=tQ0D\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 29791c172d8497a578155d257dc9003a470fe523\nparent db71ce93bac88163ca59a335fc28a9ec8211b4eb\nparent d82bdc04ac0f4de4174e69ed883c8eac63db6df3\nauthor Jordi Boggiano <j.boggiano@seld.be> 1528286517 +0200\ncommitter GitHub <noreply@github.com> 1528286517 +0200\n\nMerge pull request #7357 from Toflar\/better-solver-debug-output\n\nImprove SAT resolving developer debug information"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3fb2a054a736ba91d3ff19573e95eea72b8aef30",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3fb2a054a736ba91d3ff19573e95eea72b8aef30",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3fb2a054a736ba91d3ff19573e95eea72b8aef30\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "db71ce93bac88163ca59a335fc28a9ec8211b4eb",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/db71ce93bac88163ca59a335fc28a9ec8211b4eb",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/db71ce93bac88163ca59a335fc28a9ec8211b4eb"
                },
                {
                    "sha": "d82bdc04ac0f4de4174e69ed883c8eac63db6df3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d82bdc04ac0f4de4174e69ed883c8eac63db6df3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d82bdc04ac0f4de4174e69ed883c8eac63db6df3"
                }
            ]
        },
        {
            "sha": "0a27ca7b653856a0b989f889a8a089b70581059e",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowYTI3Y2E3YjY1Mzg1NmEwYjk4OWY4ODlhOGEwODliNzA1ODEwNTll",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-05-31T15:02:04Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-06-06T12:51:52Z"
                },
                "message": "Make sure circular dependencies do not break the autoload dumper, refs #7316, refs #7348",
                "tree": {
                    "sha": "debd7ae653b2da913336f99d7a347cc01dbe008d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/debd7ae653b2da913336f99d7a347cc01dbe008d"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0a27ca7b653856a0b989f889a8a089b70581059e",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0a27ca7b653856a0b989f889a8a089b70581059e",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0a27ca7b653856a0b989f889a8a089b70581059e",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0a27ca7b653856a0b989f889a8a089b70581059e\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "ccb4acaf3f3fce1320d569d59ecbaadf0170623f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ccb4acaf3f3fce1320d569d59ecbaadf0170623f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ccb4acaf3f3fce1320d569d59ecbaadf0170623f"
                }
            ]
        },
        {
            "sha": "1dd2e6f222f176721e0cbc0714b5091e697f80b7",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxZGQyZTZmMjIyZjE3NjcyMWUwY2JjMDcxNGI1MDkxZTY5N2Y4MGI3",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-06-06T12:55:49Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-06-06T12:55:49Z"
                },
                "message": "Merge branch '1.6'",
                "tree": {
                    "sha": "29791c172d8497a578155d257dc9003a470fe523",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/29791c172d8497a578155d257dc9003a470fe523"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/1dd2e6f222f176721e0cbc0714b5091e697f80b7",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1dd2e6f222f176721e0cbc0714b5091e697f80b7",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1dd2e6f222f176721e0cbc0714b5091e697f80b7",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1dd2e6f222f176721e0cbc0714b5091e697f80b7\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "3fb2a054a736ba91d3ff19573e95eea72b8aef30",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3fb2a054a736ba91d3ff19573e95eea72b8aef30",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3fb2a054a736ba91d3ff19573e95eea72b8aef30"
                },
                {
                    "sha": "0a27ca7b653856a0b989f889a8a089b70581059e",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0a27ca7b653856a0b989f889a8a089b70581059e",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0a27ca7b653856a0b989f889a8a089b70581059e"
                }
            ]
        },
        {
            "sha": "07867724d0b053a1b43241ee983143f5a5156d8b",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowNzg2NzcyNGQwYjA1M2ExYjQzMjQxZWU5ODMxNDNmNWE1MTU2ZDhi",
            "commit": {
                "author": {
                    "name": "Rasmus Schultz",
                    "email": "mindplay-dk@users.noreply.github.com",
                    "date": "2018-06-01T10:47:22Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-06-07T09:15:01Z"
                },
                "message": "add back the warning about missing unzip\n\ndisplay an error-message on non-Windows OS if unzip is unavailable, per #7383",
                "tree": {
                    "sha": "e61fdd1ef62bd3023218747a086d50944b53ebef",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e61fdd1ef62bd3023218747a086d50944b53ebef"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/07867724d0b053a1b43241ee983143f5a5156d8b",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/07867724d0b053a1b43241ee983143f5a5156d8b",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/07867724d0b053a1b43241ee983143f5a5156d8b",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/07867724d0b053a1b43241ee983143f5a5156d8b\/comments",
            "author": {
                "login": "mindplay-dk",
                "id": 103348,
                "node_id": "MDQ6VXNlcjEwMzM0OA==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/103348?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/mindplay-dk",
                "html_url": "https:\/\/github.com\/mindplay-dk",
                "followers_url": "https:\/\/api.github.com\/users\/mindplay-dk\/followers",
                "following_url": "https:\/\/api.github.com\/users\/mindplay-dk\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/mindplay-dk\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/mindplay-dk\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/mindplay-dk\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/mindplay-dk\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/mindplay-dk\/repos",
                "events_url": "https:\/\/api.github.com\/users\/mindplay-dk\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/mindplay-dk\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0a27ca7b653856a0b989f889a8a089b70581059e",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0a27ca7b653856a0b989f889a8a089b70581059e",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0a27ca7b653856a0b989f889a8a089b70581059e"
                }
            ]
        },
        {
            "sha": "5bae1913abfea7bdea9fc13c81f26403e36b3d68",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo1YmFlMTkxM2FiZmVhN2JkZWE5ZmMxM2M4MWYyNjQwM2UzNmIzZDY4",
            "commit": {
                "author": {
                    "name": "Rasmus Schultz",
                    "email": "mindplay-dk@users.noreply.github.com",
                    "date": "2018-06-07T09:08:50Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-06-07T09:15:10Z"
                },
                "message": "swap tests to prevent conflicting error-messages",
                "tree": {
                    "sha": "47e537d7f14326c8f925b7db297f1b37e77b6019",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/47e537d7f14326c8f925b7db297f1b37e77b6019"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/5bae1913abfea7bdea9fc13c81f26403e36b3d68",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5bae1913abfea7bdea9fc13c81f26403e36b3d68",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5bae1913abfea7bdea9fc13c81f26403e36b3d68",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5bae1913abfea7bdea9fc13c81f26403e36b3d68\/comments",
            "author": {
                "login": "mindplay-dk",
                "id": 103348,
                "node_id": "MDQ6VXNlcjEwMzM0OA==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/103348?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/mindplay-dk",
                "html_url": "https:\/\/github.com\/mindplay-dk",
                "followers_url": "https:\/\/api.github.com\/users\/mindplay-dk\/followers",
                "following_url": "https:\/\/api.github.com\/users\/mindplay-dk\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/mindplay-dk\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/mindplay-dk\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/mindplay-dk\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/mindplay-dk\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/mindplay-dk\/repos",
                "events_url": "https:\/\/api.github.com\/users\/mindplay-dk\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/mindplay-dk\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "07867724d0b053a1b43241ee983143f5a5156d8b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/07867724d0b053a1b43241ee983143f5a5156d8b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/07867724d0b053a1b43241ee983143f5a5156d8b"
                }
            ]
        },
        {
            "sha": "837ad7c14e8ce364296e0d0600d04c415b6e359d",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4MzdhZDdjMTRlOGNlMzY0Mjk2ZTBkMDYwMGQwNGM0MTViNmUzNTlk",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-06-07T09:15:18Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-06-07T09:15:18Z"
                },
                "message": "Merge branch '1.6'",
                "tree": {
                    "sha": "fbcd21be8356fe06bf0038dcce28d107a365e448",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/fbcd21be8356fe06bf0038dcce28d107a365e448"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/837ad7c14e8ce364296e0d0600d04c415b6e359d",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/837ad7c14e8ce364296e0d0600d04c415b6e359d",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/837ad7c14e8ce364296e0d0600d04c415b6e359d",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/837ad7c14e8ce364296e0d0600d04c415b6e359d\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "1dd2e6f222f176721e0cbc0714b5091e697f80b7",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1dd2e6f222f176721e0cbc0714b5091e697f80b7",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1dd2e6f222f176721e0cbc0714b5091e697f80b7"
                },
                {
                    "sha": "5bae1913abfea7bdea9fc13c81f26403e36b3d68",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5bae1913abfea7bdea9fc13c81f26403e36b3d68",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5bae1913abfea7bdea9fc13c81f26403e36b3d68"
                }
            ]
        },
        {
            "sha": "87646ae6897ff7f72c5e3b2776ce5d7b54626722",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4NzY0NmFlNjg5N2ZmN2Y3MmM1ZTNiMjc3NmNlNWQ3YjU0NjI2NzIy",
            "commit": {
                "author": {
                    "name": "Th\u00e9o FIDRY",
                    "email": "theo.fidry@gmail.com",
                    "date": "2018-06-09T11:23:41Z"
                },
                "committer": {
                    "name": "Th\u00e9o FIDRY",
                    "email": "theo.fidry@gmail.com",
                    "date": "2018-06-09T14:18:21Z"
                },
                "message": "Hide suggest reason when there is not one",
                "tree": {
                    "sha": "d185c4df74d74c246d0213c3cc835b15f5421a2f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/d185c4df74d74c246d0213c3cc835b15f5421a2f"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/87646ae6897ff7f72c5e3b2776ce5d7b54626722",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEECYHFlnFws3C98IIN+MZrwkKW3n4FAlsb4a0ACgkQ+MZrwkKW\n3n5EWggAy6hcmpMvNvN6aKcoVEGazoQrKjbw7LI0OtD99b48q8F6eqzAM+hIq\/92\nU\/SLYzgB3+kc03pN+3gSShdLDnbbYyIGa8oU3lw86Cj0Vkh9JA81HQnhCYHJCynz\nAOzFWPjkCITqhL4hRU\/gsFeBpTqaPDsgQGSifyBzREUOB9u7PPwfV8Oli2snKHC1\nnk03FQz9XggtTSfgovwJyCx31kZ1ulWtH4\/7QDxw2P7iVIXOL\/DmYf7EeItnXn4o\nFDcHiniJ6MsPKS5Xh9rN3\/obf\/FLd5XMN7HA1APiDxnkyWGYkIO6WEuP68CPiokf\nT+YTzghvuqpzoY6Lbj1tkMzT7gOoIw==\n=iOR7\n-----END PGP SIGNATURE-----",
                    "payload": "tree d185c4df74d74c246d0213c3cc835b15f5421a2f\nparent 5bae1913abfea7bdea9fc13c81f26403e36b3d68\nauthor Th\u00e9o FIDRY <theo.fidry@gmail.com> 1528543421 +0100\ncommitter Th\u00e9o FIDRY <theo.fidry@gmail.com> 1528553901 +0100\n\nHide suggest reason when there is not one\n"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/87646ae6897ff7f72c5e3b2776ce5d7b54626722",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/87646ae6897ff7f72c5e3b2776ce5d7b54626722",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/87646ae6897ff7f72c5e3b2776ce5d7b54626722\/comments",
            "author": {
                "login": "theofidry",
                "id": 5175937,
                "node_id": "MDQ6VXNlcjUxNzU5Mzc=",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/5175937?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/theofidry",
                "html_url": "https:\/\/github.com\/theofidry",
                "followers_url": "https:\/\/api.github.com\/users\/theofidry\/followers",
                "following_url": "https:\/\/api.github.com\/users\/theofidry\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/theofidry\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/theofidry\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/theofidry\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/theofidry\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/theofidry\/repos",
                "events_url": "https:\/\/api.github.com\/users\/theofidry\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/theofidry\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "theofidry",
                "id": 5175937,
                "node_id": "MDQ6VXNlcjUxNzU5Mzc=",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/5175937?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/theofidry",
                "html_url": "https:\/\/github.com\/theofidry",
                "followers_url": "https:\/\/api.github.com\/users\/theofidry\/followers",
                "following_url": "https:\/\/api.github.com\/users\/theofidry\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/theofidry\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/theofidry\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/theofidry\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/theofidry\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/theofidry\/repos",
                "events_url": "https:\/\/api.github.com\/users\/theofidry\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/theofidry\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "5bae1913abfea7bdea9fc13c81f26403e36b3d68",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5bae1913abfea7bdea9fc13c81f26403e36b3d68",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5bae1913abfea7bdea9fc13c81f26403e36b3d68"
                }
            ]
        },
        {
            "sha": "f92e15b032675e05898fee17eead52e6db9e5f99",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpmOTJlMTViMDMyNjc1ZTA1ODk4ZmVlMTdlZWFkNTJlNmRiOWU1Zjk5",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-06-09T14:21:39Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-06-09T14:21:39Z"
                },
                "message": "Merge pull request #7399 from theofidry\/bugfix\/fix-suggest-reporter\n\nHide suggest reason when there is not one",
                "tree": {
                    "sha": "d185c4df74d74c246d0213c3cc835b15f5421a2f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/d185c4df74d74c246d0213c3cc835b15f5421a2f"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/f92e15b032675e05898fee17eead52e6db9e5f99",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbG+JzCRBK7hj4Ov3rIwAAdHIIAGjA+1MjQaM3vVpir5Xj1Jqx\nC+vbBsrwNrl7\/oKbmE+lVXC1QvYRHRBVPksXwG0J7e+3g\/fGZLkKUVUmpE4LEN0g\nZ\/MKgaRwCa6dYpYEZmSksTdVkSilL5ybgvHNvYe4kMQhF6FRMY\/06\/qnkdbkSiNg\nmZusO5VU5wyk6uXkU2yhP4Z1WAbZx2VI8aajmtdJOlEch1a6GlpFVsd7+q43celI\noXcKQK759J5PXvsP5o4+hhQ3IparQ57g6I1qJCtBEaYjaKawsGsgLoK+sGOQP5xg\n8gEy7XsHQBMQFfuyc4TJnkRkL55lSnbSIruf8TGUvwcfhWgpeNTeP93+2He5hLA=\n=Zc3c\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree d185c4df74d74c246d0213c3cc835b15f5421a2f\nparent 5bae1913abfea7bdea9fc13c81f26403e36b3d68\nparent 87646ae6897ff7f72c5e3b2776ce5d7b54626722\nauthor Jordi Boggiano <j.boggiano@seld.be> 1528554099 +0200\ncommitter GitHub <noreply@github.com> 1528554099 +0200\n\nMerge pull request #7399 from theofidry\/bugfix\/fix-suggest-reporter\n\nHide suggest reason when there is not one"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f92e15b032675e05898fee17eead52e6db9e5f99",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f92e15b032675e05898fee17eead52e6db9e5f99",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f92e15b032675e05898fee17eead52e6db9e5f99\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "5bae1913abfea7bdea9fc13c81f26403e36b3d68",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5bae1913abfea7bdea9fc13c81f26403e36b3d68",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5bae1913abfea7bdea9fc13c81f26403e36b3d68"
                },
                {
                    "sha": "87646ae6897ff7f72c5e3b2776ce5d7b54626722",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/87646ae6897ff7f72c5e3b2776ce5d7b54626722",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/87646ae6897ff7f72c5e3b2776ce5d7b54626722"
                }
            ]
        },
        {
            "sha": "20e89a76210accf20f3574553796bd4c059a4bb9",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyMGU4OWE3NjIxMGFjY2YyMGYzNTc0NTUzNzk2YmQ0YzA1OWE0YmI5",
            "commit": {
                "author": {
                    "name": "mohsen shafiei",
                    "email": "mohsen.jch@gmail.com",
                    "date": "2018-06-10T20:39:52Z"
                },
                "committer": {
                    "name": "mohsen shafiei",
                    "email": "mohsen.jch@gmail.com",
                    "date": "2018-06-10T20:39:52Z"
                },
                "message": "composer show options -t and -l do not work together, fixes #7210",
                "tree": {
                    "sha": "5d6a6bbc46b82024fdb10ebf88553cef0ad0a5cc",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/5d6a6bbc46b82024fdb10ebf88553cef0ad0a5cc"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/20e89a76210accf20f3574553796bd4c059a4bb9",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/20e89a76210accf20f3574553796bd4c059a4bb9",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/20e89a76210accf20f3574553796bd4c059a4bb9",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/20e89a76210accf20f3574553796bd4c059a4bb9\/comments",
            "author": {
                "login": "m-jch",
                "id": 3691463,
                "node_id": "MDQ6VXNlcjM2OTE0NjM=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/3691463?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/m-jch",
                "html_url": "https:\/\/github.com\/m-jch",
                "followers_url": "https:\/\/api.github.com\/users\/m-jch\/followers",
                "following_url": "https:\/\/api.github.com\/users\/m-jch\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/m-jch\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/m-jch\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/m-jch\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/m-jch\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/m-jch\/repos",
                "events_url": "https:\/\/api.github.com\/users\/m-jch\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/m-jch\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "m-jch",
                "id": 3691463,
                "node_id": "MDQ6VXNlcjM2OTE0NjM=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/3691463?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/m-jch",
                "html_url": "https:\/\/github.com\/m-jch",
                "followers_url": "https:\/\/api.github.com\/users\/m-jch\/followers",
                "following_url": "https:\/\/api.github.com\/users\/m-jch\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/m-jch\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/m-jch\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/m-jch\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/m-jch\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/m-jch\/repos",
                "events_url": "https:\/\/api.github.com\/users\/m-jch\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/m-jch\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/837ad7c14e8ce364296e0d0600d04c415b6e359d"
                }
            ]
        },
        {
            "sha": "3db5e0e3fc3fd30e1384437ce4d6e3c0ba674b18",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozZGI1ZTBlM2ZjM2ZkMzBlMTM4NDQzN2NlNGQ2ZTNjMGJhNjc0YjE4",
            "commit": {
                "author": {
                    "name": "Dariusz Rumi\u0144ski",
                    "email": "keradus@gmail.com",
                    "date": "2018-06-17T10:01:38Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-06-17T10:01:38Z"
                },
                "message": "DX: .php_cs - drop commented option of v1\n\nThis option had been removed in v2.0, linter is enabled and can't be disabled. Don't worry - under PHP 7 it has no performance impact",
                "tree": {
                    "sha": "4728690c4dd3c6fb4270b811d04843d5e570343c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/4728690c4dd3c6fb4270b811d04843d5e570343c"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/3db5e0e3fc3fd30e1384437ce4d6e3c0ba674b18",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbJjGCCRBK7hj4Ov3rIwAAdHIIAFNeQX5TpsTfDgL+r\/fYp7yi\naop1f\/7k+sHnJbKiX5EsezC+7mdZWfQVaggt8tzpjUqNqkPa\/OZF0jM6pdoL8gkS\n4BOfjFuf1yB1PpVQRyFwkLLqxGL3V4dQpMMg1JEofieYlbm6suW8dMc9kc+EajfG\nuTDqocqJgDdW+EwanokjieIYYAzhBnk4CxrBQpK91g7EYioBjV1HykWnuLPh5NzN\nEWYdSD80cEtxCnhIUPH72aZxChnGDD7CW0nshqefauk1R2TL7hv28FTC\/MS+CezE\n++\/S+mdu10jJubG3FNq6Z0I4ETM4UTe5xvMvHibjNlpTJBkMC\/2y60dd4eAeIhQ=\n=W\/3j\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 4728690c4dd3c6fb4270b811d04843d5e570343c\nparent 837ad7c14e8ce364296e0d0600d04c415b6e359d\nauthor Dariusz Rumi\u0144ski <keradus@gmail.com> 1529229698 +0200\ncommitter GitHub <noreply@github.com> 1529229698 +0200\n\nDX: .php_cs - drop commented option of v1\n\nThis option had been removed in v2.0, linter is enabled and can't be disabled. Don't worry - under PHP 7 it has no performance impact"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3db5e0e3fc3fd30e1384437ce4d6e3c0ba674b18",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3db5e0e3fc3fd30e1384437ce4d6e3c0ba674b18",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3db5e0e3fc3fd30e1384437ce4d6e3c0ba674b18\/comments",
            "author": {
                "login": "keradus",
                "id": 2716794,
                "node_id": "MDQ6VXNlcjI3MTY3OTQ=",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/2716794?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/keradus",
                "html_url": "https:\/\/github.com\/keradus",
                "followers_url": "https:\/\/api.github.com\/users\/keradus\/followers",
                "following_url": "https:\/\/api.github.com\/users\/keradus\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/keradus\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/keradus\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/keradus\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/keradus\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/keradus\/repos",
                "events_url": "https:\/\/api.github.com\/users\/keradus\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/keradus\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/837ad7c14e8ce364296e0d0600d04c415b6e359d"
                }
            ]
        },
        {
            "sha": "7221e4ea4ee63d0fd03dae62dfe21990d2faf7d0",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3MjIxZTRlYTRlZTYzZDBmZDAzZGFlNjJkZmUyMTk5MGQyZmFmN2Qw",
            "commit": {
                "author": {
                    "name": "Matrosov",
                    "email": "aleksandr.matrosov@check24.de",
                    "date": "2018-06-19T15:29:00Z"
                },
                "committer": {
                    "name": "Matrosov",
                    "email": "aleksandr.matrosov@check24.de",
                    "date": "2018-06-19T15:29:00Z"
                },
                "message": "Generate tree view before displaying it\nAdd support json tree view",
                "tree": {
                    "sha": "a4ff73ea9b0644e8e1d7df753fa191f0a4dc53e6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/a4ff73ea9b0644e8e1d7df753fa191f0a4dc53e6"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/7221e4ea4ee63d0fd03dae62dfe21990d2faf7d0",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7221e4ea4ee63d0fd03dae62dfe21990d2faf7d0",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7221e4ea4ee63d0fd03dae62dfe21990d2faf7d0",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7221e4ea4ee63d0fd03dae62dfe21990d2faf7d0\/comments",
            "author": null,
            "committer": null,
            "parents": [
                {
                    "sha": "837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/837ad7c14e8ce364296e0d0600d04c415b6e359d"
                }
            ]
        },
        {
            "sha": "dcdef95785e5bfa97e1344ec317e36d04d4fb085",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkY2RlZjk1Nzg1ZTViZmE5N2UxMzQ0ZWMzMTdlMzZkMDRkNGZiMDg1",
            "commit": {
                "author": {
                    "name": "Nathan Purcell",
                    "email": "nathanpurcell@users.noreply.github.com",
                    "date": "2018-06-21T08:02:29Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-06-21T08:02:29Z"
                },
                "message": "Update example for auth.json in BitBucket config\n\nRemove the `config` level",
                "tree": {
                    "sha": "5d27071e1d868e564d8b31b183957a7c61e35a2b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/5d27071e1d868e564d8b31b183957a7c61e35a2b"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/dcdef95785e5bfa97e1344ec317e36d04d4fb085",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbK1uVCRBK7hj4Ov3rIwAAdHIIAGBRPJDvEo+j1+LItuskCT\/t\nSb9ivmFGaIkP8N8cLTDXtKlrpgBAi1jOTrDDcoqz9aKEpKVfHPf3qM5QVd14KqKZ\nU1bYl1I2ezl4+qby4OWrUb0PVoe+1VxQakbcs64gv1r+slFqkiqVgjUhdjCh5XcS\naqDXgId7xyq1nGdl0B3GSPCxRL3Oyuy3WMJR\/s7+CfTXaApmD7R5\/72WRK9PHlsV\n8ljkeu2qfX9QgsUE+5gIQSvdS+6yoQViRxTvKgP+nWW29WVpdoyNnRSpGljEePMb\n51mdWb8GPEqfr8c6H3\/\/TIjE4HKGM4SEmpnS6MXIvdhaq9KwwmSxMgD5iY0\/ed8=\n=xfCU\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 5d27071e1d868e564d8b31b183957a7c61e35a2b\nparent 837ad7c14e8ce364296e0d0600d04c415b6e359d\nauthor Nathan Purcell <nathanpurcell@users.noreply.github.com> 1529568149 +0100\ncommitter GitHub <noreply@github.com> 1529568149 +0100\n\nUpdate example for auth.json in BitBucket config\n\nRemove the `config` level"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/dcdef95785e5bfa97e1344ec317e36d04d4fb085",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/dcdef95785e5bfa97e1344ec317e36d04d4fb085",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/dcdef95785e5bfa97e1344ec317e36d04d4fb085\/comments",
            "author": {
                "login": "nathanpurcell",
                "id": 4105739,
                "node_id": "MDQ6VXNlcjQxMDU3Mzk=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/4105739?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/nathanpurcell",
                "html_url": "https:\/\/github.com\/nathanpurcell",
                "followers_url": "https:\/\/api.github.com\/users\/nathanpurcell\/followers",
                "following_url": "https:\/\/api.github.com\/users\/nathanpurcell\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/nathanpurcell\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/nathanpurcell\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/nathanpurcell\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/nathanpurcell\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/nathanpurcell\/repos",
                "events_url": "https:\/\/api.github.com\/users\/nathanpurcell\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/nathanpurcell\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/837ad7c14e8ce364296e0d0600d04c415b6e359d"
                }
            ]
        },
        {
            "sha": "e0022f69dadef49723c68b3825ebc1db5e457798",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplMDAyMmY2OWRhZGVmNDk3MjNjNjhiMzgyNWViYzFkYjVlNDU3Nzk4",
            "commit": {
                "author": {
                    "name": "Andreas M\u00f6ller",
                    "email": "am@localheinz.com",
                    "date": "2018-06-24T08:56:35Z"
                },
                "committer": {
                    "name": "Andreas M\u00f6ller",
                    "email": "am@localheinz.com",
                    "date": "2018-06-24T08:56:35Z"
                },
                "message": "Enhancement: Normalize composer.json",
                "tree": {
                    "sha": "6915c8e6f375901574a61f67eb2ead88e7fb288b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/6915c8e6f375901574a61f67eb2ead88e7fb288b"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/e0022f69dadef49723c68b3825ebc1db5e457798",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEjbQrjARU5itc0p5Yn7IKC69g4R8FAlsvXMMACgkQn7IKC69g\n4R+i6Q\/7BdYqJERF6V8qQNrmjqnM90JX31lk\/C371qqqvxpiLo\/do3v36h62Piwg\n7em3m5sfva45g+QIXjrjBHFmKsqLC7bjYHLBcSVdfDtql8IP2AIXfOE+JD78tW8t\npBYMnlYNsgz9Qi+nHbff3KMH92Sbu3Q49RZOJXX14DNkyiuC+XcS9m\/cAF2JQYX+\njJ++aJaivm0i12I7TGxID6TIq2EJf4y0JMmPEMQ9M2o6VfnTwREZFfd9EdmKOGg+\niJXcKgVHIGpJdtqxBZ6pnoGtTGObLWJTVrn2wuVE0k8YNJQNeTFtwZQ6iLw8HE7P\nCOR08E1RXiTea5837ws05jAIgndhDVFGaIx\/YhvHjK7mb1Su3RVjOc\/3y5o7mQG0\n+ffOAAsWEAm0R+wrGqDvn9RvqeTKFpJFTD7ETrsCVkvRiygy8vbJN2xfDJm83AXN\nzhKF0xv7fE2pvl4ZHdaGs1FH6LF47Bgikidcm8tFuXkgIDb15qTbk4RS+MEnJcIr\n16HIVg1xMRJqt7YvQyNxTS3HK4xbSpq2R2uonwvTghse4Zxn2xcHgxqSwUMd\/yNK\nfRGECq7jmY1HCgHC\/fCmF7zOvlMN8fKwFIDhPtkUwvdj\/V3F5TITu\/cVCZDCUX37\nTC+8pCw3z1U1\/uJhKe+atisV3x7xLRMDyb1Gj39hOmfsQK2TpBg=\n=0TOv\n-----END PGP SIGNATURE-----",
                    "payload": "tree 6915c8e6f375901574a61f67eb2ead88e7fb288b\nparent 837ad7c14e8ce364296e0d0600d04c415b6e359d\nauthor Andreas M\u00f6ller <am@localheinz.com> 1529830595 +0200\ncommitter Andreas M\u00f6ller <am@localheinz.com> 1529830595 +0200\n\nEnhancement: Normalize composer.json\n"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e0022f69dadef49723c68b3825ebc1db5e457798",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e0022f69dadef49723c68b3825ebc1db5e457798",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e0022f69dadef49723c68b3825ebc1db5e457798\/comments",
            "author": {
                "login": "localheinz",
                "id": 605483,
                "node_id": "MDQ6VXNlcjYwNTQ4Mw==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/605483?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/localheinz",
                "html_url": "https:\/\/github.com\/localheinz",
                "followers_url": "https:\/\/api.github.com\/users\/localheinz\/followers",
                "following_url": "https:\/\/api.github.com\/users\/localheinz\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/localheinz\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/localheinz\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/localheinz\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/localheinz\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/localheinz\/repos",
                "events_url": "https:\/\/api.github.com\/users\/localheinz\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/localheinz\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "localheinz",
                "id": 605483,
                "node_id": "MDQ6VXNlcjYwNTQ4Mw==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/605483?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/localheinz",
                "html_url": "https:\/\/github.com\/localheinz",
                "followers_url": "https:\/\/api.github.com\/users\/localheinz\/followers",
                "following_url": "https:\/\/api.github.com\/users\/localheinz\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/localheinz\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/localheinz\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/localheinz\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/localheinz\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/localheinz\/repos",
                "events_url": "https:\/\/api.github.com\/users\/localheinz\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/localheinz\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/837ad7c14e8ce364296e0d0600d04c415b6e359d"
                }
            ]
        },
        {
            "sha": "c5cbdec0de46bb78f0ab2d5fa50ef1fbd189ea9a",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpjNWNiZGVjMGRlNDZiYjc4ZjBhYjJkNWZhNTBlZjFmYmQxODllYTlh",
            "commit": {
                "author": {
                    "name": "Andreas M\u00f6ller",
                    "email": "am@localheinz.com",
                    "date": "2018-06-24T16:53:36Z"
                },
                "committer": {
                    "name": "Andreas M\u00f6ller",
                    "email": "am@localheinz.com",
                    "date": "2018-06-24T16:53:36Z"
                },
                "message": "Fix: Remove VersionEye badges",
                "tree": {
                    "sha": "344c5744c1d25c818d48d516c21c9d886000c7bc",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/344c5744c1d25c818d48d516c21c9d886000c7bc"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/c5cbdec0de46bb78f0ab2d5fa50ef1fbd189ea9a",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEjbQrjARU5itc0p5Yn7IKC69g4R8FAlsvzJAACgkQn7IKC69g\n4R9nAA\/+PB0sM51N+yU1FAT7ys4FCxocf0I97tzTkNkGEaCI17I+O\/CZaNkAVrmC\nZ4zPhg1GaNUgiX77s3NvGFENuV9JIpfz4wyjhim8BeP3ZkntaMmowlvYOr8tlO5N\nRyNxxfFodaDEX22MCBu5TwQrtCV1J7gI6NQJq1exjSyVNa6UwnCqQa0XflPmoYKY\n1ptHe3HGkjnUifGfGgmXRKFpu94TxaQ3sq6SUQdt1jTXIWaSi7QTt6D4ll7dgTdv\nwBURmN8h20Neluml4y\/Bg1nWJMgtO4oDo4Mv4TdANyLCNe8+JQL63ooa4Ok6FeB3\nzT4+pBkn96+brE\/DAGnV4k3lgrfhR2ovgWOVB\/dooleAVsc7tlxeNC9q8uSem9h\/\nUk6dEx+vyFexF58T\/KK9aiweX8JhyOIrrnY4POtWIBnmAdfeTlTjMUmN9BYIy+cx\n8qqB7nVlkei7RRgGuuTUx+MD\/T5i6VLXZX1o87YNw0J+W843RoGXnYRyifKiRmqH\n2NJBqfP6PX9vbK4pDgODmpilSqPbZxeEzWFqCfAAPcVkHj3ldGJ0KR3dcUqqNl1K\nK1vwaRrVrAmjD2Mn42IkHRehL0DMW7GtBHgFv32iFjRSmilVJX+FK3RpKwetJ5Qb\ncF9I9oRuFSZm3wuaqqZlv19YzPJ\/NT\/3vCS8oyjxrJ+itm9hdgs=\n=Zwwn\n-----END PGP SIGNATURE-----",
                    "payload": "tree 344c5744c1d25c818d48d516c21c9d886000c7bc\nparent 837ad7c14e8ce364296e0d0600d04c415b6e359d\nauthor Andreas M\u00f6ller <am@localheinz.com> 1529859216 +0200\ncommitter Andreas M\u00f6ller <am@localheinz.com> 1529859216 +0200\n\nFix: Remove VersionEye badges\n"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c5cbdec0de46bb78f0ab2d5fa50ef1fbd189ea9a",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c5cbdec0de46bb78f0ab2d5fa50ef1fbd189ea9a",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c5cbdec0de46bb78f0ab2d5fa50ef1fbd189ea9a\/comments",
            "author": {
                "login": "localheinz",
                "id": 605483,
                "node_id": "MDQ6VXNlcjYwNTQ4Mw==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/605483?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/localheinz",
                "html_url": "https:\/\/github.com\/localheinz",
                "followers_url": "https:\/\/api.github.com\/users\/localheinz\/followers",
                "following_url": "https:\/\/api.github.com\/users\/localheinz\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/localheinz\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/localheinz\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/localheinz\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/localheinz\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/localheinz\/repos",
                "events_url": "https:\/\/api.github.com\/users\/localheinz\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/localheinz\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "localheinz",
                "id": 605483,
                "node_id": "MDQ6VXNlcjYwNTQ4Mw==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/605483?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/localheinz",
                "html_url": "https:\/\/github.com\/localheinz",
                "followers_url": "https:\/\/api.github.com\/users\/localheinz\/followers",
                "following_url": "https:\/\/api.github.com\/users\/localheinz\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/localheinz\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/localheinz\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/localheinz\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/localheinz\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/localheinz\/repos",
                "events_url": "https:\/\/api.github.com\/users\/localheinz\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/localheinz\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/837ad7c14e8ce364296e0d0600d04c415b6e359d"
                }
            ]
        },
        {
            "sha": "9355ebd3f67bd91d4595fddd856e4b344f5512ec",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo5MzU1ZWJkM2Y2N2JkOTFkNDU5NWZkZGQ4NTZlNGIzNDRmNTUxMmVj",
            "commit": {
                "author": {
                    "name": "efajnzilberg",
                    "email": "e.fajnzi@kernel42.com",
                    "date": "2018-06-25T08:34:00Z"
                },
                "committer": {
                    "name": "efajnzilberg",
                    "email": "e.fajnzi@kernel42.com",
                    "date": "2018-06-25T08:34:00Z"
                },
                "message": "Closing the ZipArchive in ArtifactRepository::getComposerInformation()",
                "tree": {
                    "sha": "659bf2ce5ac0cc8e824f34f9c7f004347f276672",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/659bf2ce5ac0cc8e824f34f9c7f004347f276672"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/9355ebd3f67bd91d4595fddd856e4b344f5512ec",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9355ebd3f67bd91d4595fddd856e4b344f5512ec",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/9355ebd3f67bd91d4595fddd856e4b344f5512ec",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9355ebd3f67bd91d4595fddd856e4b344f5512ec\/comments",
            "author": null,
            "committer": null,
            "parents": [
                {
                    "sha": "f92e15b032675e05898fee17eead52e6db9e5f99",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f92e15b032675e05898fee17eead52e6db9e5f99",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f92e15b032675e05898fee17eead52e6db9e5f99"
                }
            ]
        },
        {
            "sha": "0c20d19d33fad84f495b90217b628ca1b62ecb3a",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowYzIwZDE5ZDMzZmFkODRmNDk1YjkwMjE3YjYyOGNhMWI2MmVjYjNh",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-02T15:49:44Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-02T15:49:44Z"
                },
                "message": "Merge pull request #7412 from keradus\/patch-1\n\nDX: .php_cs - drop commented option of v1",
                "tree": {
                    "sha": "4728690c4dd3c6fb4270b811d04843d5e570343c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/4728690c4dd3c6fb4270b811d04843d5e570343c"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0c20d19d33fad84f495b90217b628ca1b62ecb3a",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbOkmYCRBK7hj4Ov3rIwAAdHIIADtV7E5rc1r83xkfz4vwbx73\ntPzcVyQDM5j\/YsEZEci3ngIpnOCTuXQDw2tsCG8E8g9cajQtvIhiHD\/JM24K6zJv\nZsCEIGku3cNYSkbttI0GXdDuXxlWqrqJrjhpTcyi5ELCbCBFIjb6GbrZ9743VFwb\nrfFnwhrSkrEfaqiTFfQUODmriG+6Z1x+i2czpVvLIVOMnNnFhNNXKp6FWGMqh64k\n27ZUd4Lx7fIV7XTGUyqhoF5Ve9p\/8+W67XXR\/q+kxtbIX4yLQ0bsOpnkogdnojj6\n+d8\/DcZCa0g6vll4W6vOggetfKk\/Gndzy1FnBmKGODerZ7rPRY8CeWh8KriIlCg=\n=9r\/a\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 4728690c4dd3c6fb4270b811d04843d5e570343c\nparent 837ad7c14e8ce364296e0d0600d04c415b6e359d\nparent 3db5e0e3fc3fd30e1384437ce4d6e3c0ba674b18\nauthor Rob <alcohol@users.noreply.github.com> 1530546584 +0200\ncommitter GitHub <noreply@github.com> 1530546584 +0200\n\nMerge pull request #7412 from keradus\/patch-1\n\nDX: .php_cs - drop commented option of v1"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0c20d19d33fad84f495b90217b628ca1b62ecb3a",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0c20d19d33fad84f495b90217b628ca1b62ecb3a",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0c20d19d33fad84f495b90217b628ca1b62ecb3a\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/837ad7c14e8ce364296e0d0600d04c415b6e359d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/837ad7c14e8ce364296e0d0600d04c415b6e359d"
                },
                {
                    "sha": "3db5e0e3fc3fd30e1384437ce4d6e3c0ba674b18",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3db5e0e3fc3fd30e1384437ce4d6e3c0ba674b18",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3db5e0e3fc3fd30e1384437ce4d6e3c0ba674b18"
                }
            ]
        },
        {
            "sha": "0c6201de3e06fdcd2a75411db3615b89bdfc643d",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowYzYyMDFkZTNlMDZmZGNkMmE3NTQxMWRiMzYxNWI4OWJkZmM2NDNk",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-02T15:51:41Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-02T15:51:41Z"
                },
                "message": "Merge pull request #7419 from nathanpurcell\/patch-1\n\nUpdate example for auth.json in BitBucket config",
                "tree": {
                    "sha": "ca8bead1e0e47f179f12e58e18eaee7e82978f3c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ca8bead1e0e47f179f12e58e18eaee7e82978f3c"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0c6201de3e06fdcd2a75411db3615b89bdfc643d",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbOkoNCRBK7hj4Ov3rIwAAdHIIAKTP\/3VNEwW7PXPGPgT2ksEI\nSqKFnecbUO\/z6cM842eW3CZcVNCvl5gyPxsIh+jAFlim2ocJbdUQW\/nO1fGP5ecu\nx1Cm2qlQCyn+Vcoc0fpy0RR4KDffCFskMV5N22954sBe6SJsYOrS1BhStoX3PN5K\ni+UcOraclHeUuy02XiA+y0ked4bWVM3Ezia25bLLeK0JBKstHnjrD8L3aT7+0\/RW\nJJqhpUJepyNyp1zYclkSR+aYkBm3Bwqs1I3hQmQaWyGu\/ehzCVYD1GlC6WSrWua6\nRHuIFqEWLsBdwjgYE\/M4gWXkBo6\/zFLocYeDXpJwY2lhZvbUAV9ubD2dQ5eY3r0=\n=gqjd\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree ca8bead1e0e47f179f12e58e18eaee7e82978f3c\nparent 0c20d19d33fad84f495b90217b628ca1b62ecb3a\nparent dcdef95785e5bfa97e1344ec317e36d04d4fb085\nauthor Rob <alcohol@users.noreply.github.com> 1530546701 +0200\ncommitter GitHub <noreply@github.com> 1530546701 +0200\n\nMerge pull request #7419 from nathanpurcell\/patch-1\n\nUpdate example for auth.json in BitBucket config"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0c6201de3e06fdcd2a75411db3615b89bdfc643d",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0c6201de3e06fdcd2a75411db3615b89bdfc643d",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0c6201de3e06fdcd2a75411db3615b89bdfc643d\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0c20d19d33fad84f495b90217b628ca1b62ecb3a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0c20d19d33fad84f495b90217b628ca1b62ecb3a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0c20d19d33fad84f495b90217b628ca1b62ecb3a"
                },
                {
                    "sha": "dcdef95785e5bfa97e1344ec317e36d04d4fb085",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/dcdef95785e5bfa97e1344ec317e36d04d4fb085",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/dcdef95785e5bfa97e1344ec317e36d04d4fb085"
                }
            ]
        },
        {
            "sha": "bbee0a6d857a4a06b1830430959fecc233e4b59d",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiYmVlMGE2ZDg1N2E0YTA2YjE4MzA0MzA5NTlmZWNjMjMzZTRiNTlk",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-02T15:52:54Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-02T15:52:54Z"
                },
                "message": "Merge pull request #7428 from epieddy\/bugfix\/ziparchive-closing\n\nClosing the ZipArchive in ArtifactRepository::getComposerInformation()",
                "tree": {
                    "sha": "659bf2ce5ac0cc8e824f34f9c7f004347f276672",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/659bf2ce5ac0cc8e824f34f9c7f004347f276672"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/bbee0a6d857a4a06b1830430959fecc233e4b59d",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbOkpWCRBK7hj4Ov3rIwAAdHIIAJ1vU+Wz3qwzSAbULVIGa5TF\nkimk04yMneHzmK9GepHsmn\/U07DJ9dlkTcL59JqdwV\/f2Xfs5\/X5eYqX2fBY0lSP\n5rsVqy\/0GPcHT7xRG7JNMFTOVXnsf4VIgd4dHWZn2eKmgEBjbHsVHyhkWvYn0X0S\n0ggwOU\/4gRf2XeG8HjcwFDxEs5MzGTxq9W3D3YJo4pggcw4GTWTEZjziphUSaVvg\ngaN98HJ3PrCGKXPBFqs\/dH4i7mnIBgapdLwDsb80ITM9PO7+dBT8SSFq6KjZfspH\nguUqLi7Vmk8\/OCEWuZTeaw8b3390RajHoPDzHbf\/Kr2SJL82dOBAGm8mz4YwiYs=\n=ZnRh\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 659bf2ce5ac0cc8e824f34f9c7f004347f276672\nparent f92e15b032675e05898fee17eead52e6db9e5f99\nparent 9355ebd3f67bd91d4595fddd856e4b344f5512ec\nauthor Rob <alcohol@users.noreply.github.com> 1530546774 +0200\ncommitter GitHub <noreply@github.com> 1530546774 +0200\n\nMerge pull request #7428 from epieddy\/bugfix\/ziparchive-closing\n\nClosing the ZipArchive in ArtifactRepository::getComposerInformation()"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bbee0a6d857a4a06b1830430959fecc233e4b59d",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bbee0a6d857a4a06b1830430959fecc233e4b59d",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bbee0a6d857a4a06b1830430959fecc233e4b59d\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f92e15b032675e05898fee17eead52e6db9e5f99",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f92e15b032675e05898fee17eead52e6db9e5f99",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f92e15b032675e05898fee17eead52e6db9e5f99"
                },
                {
                    "sha": "9355ebd3f67bd91d4595fddd856e4b344f5512ec",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9355ebd3f67bd91d4595fddd856e4b344f5512ec",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/9355ebd3f67bd91d4595fddd856e4b344f5512ec"
                }
            ]
        },
        {
            "sha": "ff3ac9a876d611f1fc962ee2a9655fdaa5d2f4db",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpmZjNhYzlhODc2ZDYxMWYxZmM5NjJlZTJhOTY1NWZkYWE1ZDJmNGRi",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-05T07:18:55Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-05T07:18:55Z"
                },
                "message": "Merge pull request #7424 from localheinz\/fix\/badge\n\nFix: Remove VersionEye badges",
                "tree": {
                    "sha": "7ce9ffe074cc39577c04d7897becde19b890cf97",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/7ce9ffe074cc39577c04d7897becde19b890cf97"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/ff3ac9a876d611f1fc962ee2a9655fdaa5d2f4db",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbPcZfCRBK7hj4Ov3rIwAAdHIIAHdtgHNaQgcLaPat5lZHb9iD\nQYXFGjNMpvuOUzSSmK0r52x2iitZ5bqQhjyPX7V0ErV+3tWZugwFcCnffJIcYU2y\n96+aDd2QFb9q6Vwd0OptozvWYPkDeQOduLjskjGKMl6yvmZGd4MtPduYWlLHFPlM\nfEOideEiL8fK6eizWL9NdglTPtDQXMolW+Ib3DaXKReaQpcMx2nm7yjYnP8Sa9R2\nu0reXpS2eB69t1mCBFfZao+uqRf1eCrKZq2Lrpbm8je89TKBaxuq53knHzsqIUWD\n03Yun8yIP7Z8YN6VkninssjI0DeLB7m3Yhfhin6sguIFksJqMByo04iZkgsi\/pU=\n=vMCi\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 7ce9ffe074cc39577c04d7897becde19b890cf97\nparent 0c6201de3e06fdcd2a75411db3615b89bdfc643d\nparent c5cbdec0de46bb78f0ab2d5fa50ef1fbd189ea9a\nauthor Rob <alcohol@users.noreply.github.com> 1530775135 +0200\ncommitter GitHub <noreply@github.com> 1530775135 +0200\n\nMerge pull request #7424 from localheinz\/fix\/badge\n\nFix: Remove VersionEye badges"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ff3ac9a876d611f1fc962ee2a9655fdaa5d2f4db",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ff3ac9a876d611f1fc962ee2a9655fdaa5d2f4db",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ff3ac9a876d611f1fc962ee2a9655fdaa5d2f4db\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0c6201de3e06fdcd2a75411db3615b89bdfc643d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0c6201de3e06fdcd2a75411db3615b89bdfc643d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0c6201de3e06fdcd2a75411db3615b89bdfc643d"
                },
                {
                    "sha": "c5cbdec0de46bb78f0ab2d5fa50ef1fbd189ea9a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c5cbdec0de46bb78f0ab2d5fa50ef1fbd189ea9a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c5cbdec0de46bb78f0ab2d5fa50ef1fbd189ea9a"
                }
            ]
        },
        {
            "sha": "7d9f8e22474ce3d6c92f5f2469b5f6423892b617",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3ZDlmOGUyMjQ3NGNlM2Q2YzkyZjVmMjQ2OWI1ZjY0MjM4OTJiNjE3",
            "commit": {
                "author": {
                    "name": "Gabriel Caruso",
                    "email": "carusogabriel34@gmail.com",
                    "date": "2018-07-05T00:52:04Z"
                },
                "committer": {
                    "name": "Gabriel Caruso",
                    "email": "carusogabriel34@gmail.com",
                    "date": "2018-07-05T10:44:43Z"
                },
                "message": "Improvements\n\nSmall improvements, such as remove unused imports, unecessaries casts, parentheses, etc.",
                "tree": {
                    "sha": "2d716f54c4ed2c6deb234f2c2984e88a4f784629",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/2d716f54c4ed2c6deb234f2c2984e88a4f784629"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/7d9f8e22474ce3d6c92f5f2469b5f6423892b617",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQHOBAABCgA4FiEEhqXc+iyK+QlX0nGB6oXHmI9aaHcFAls99sIaHGNhcnVzb2dh\nYnJpZWwzNEBnbWFpbC5jb20ACgkQ6oXHmI9aaHe9KgwAnom8PTJpXK6bVMIGcTTw\n2Y3riWZx3TOd+FVJUAGPUpOqhqVuZplFGf4w\/f+OeKN0ySuKAy7OG\/X4D2VvI+aN\nOhmmBies66nc4f6N49F24iKREZyu\/u0PZlY98\/0ZIvCiiG6sRO7Yfj4dqESr35ip\nVTGp2Twa\/v6sUe\/nKmB0kVtY8zkEFlEcUcWS+7hcSpkc1HLbsj0SMmOwKHPZNZXN\nmY7ZzpCxdnJODgXrBGzNQiK5bYWeSGiJJprmgci9b5mTv1AjvRBtxeeKSAUxVKK1\nLI58tWmwwzAcxBhq0hwZDRNp7cE\/\/vWVLUcaZ5hLJ3Y4pcc1EMJ8hLTf3ouQwyPW\nNEwLkTu30sU2UwT51TuWCILAxQK6nz7F5OHE1O0orzDEDqmM9Eufc3r\/bqo6iIZh\nirir1h9ANaz\/kwcOsFY217ZalNxJWXxY9uB1I54NTrKKr9Ujp0caOuhqt86RWqJc\n4rO30TwnlN0lELfs5ppI96ziOJg43NyGN93WbdXHvMoV\n=QpJC\n-----END PGP SIGNATURE-----",
                    "payload": "tree 2d716f54c4ed2c6deb234f2c2984e88a4f784629\nparent 0c6201de3e06fdcd2a75411db3615b89bdfc643d\nauthor Gabriel Caruso <carusogabriel34@gmail.com> 1530751924 -0300\ncommitter Gabriel Caruso <carusogabriel34@gmail.com> 1530787483 -0300\n\nImprovements\n\nSmall improvements, such as remove unused imports, unecessaries casts, parentheses, etc.\n"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7d9f8e22474ce3d6c92f5f2469b5f6423892b617",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7d9f8e22474ce3d6c92f5f2469b5f6423892b617",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7d9f8e22474ce3d6c92f5f2469b5f6423892b617\/comments",
            "author": {
                "login": "carusogabriel",
                "id": 16328050,
                "node_id": "MDQ6VXNlcjE2MzI4MDUw",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/16328050?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/carusogabriel",
                "html_url": "https:\/\/github.com\/carusogabriel",
                "followers_url": "https:\/\/api.github.com\/users\/carusogabriel\/followers",
                "following_url": "https:\/\/api.github.com\/users\/carusogabriel\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/carusogabriel\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/carusogabriel\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/carusogabriel\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/carusogabriel\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/carusogabriel\/repos",
                "events_url": "https:\/\/api.github.com\/users\/carusogabriel\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/carusogabriel\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "carusogabriel",
                "id": 16328050,
                "node_id": "MDQ6VXNlcjE2MzI4MDUw",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/16328050?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/carusogabriel",
                "html_url": "https:\/\/github.com\/carusogabriel",
                "followers_url": "https:\/\/api.github.com\/users\/carusogabriel\/followers",
                "following_url": "https:\/\/api.github.com\/users\/carusogabriel\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/carusogabriel\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/carusogabriel\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/carusogabriel\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/carusogabriel\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/carusogabriel\/repos",
                "events_url": "https:\/\/api.github.com\/users\/carusogabriel\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/carusogabriel\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0c6201de3e06fdcd2a75411db3615b89bdfc643d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0c6201de3e06fdcd2a75411db3615b89bdfc643d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0c6201de3e06fdcd2a75411db3615b89bdfc643d"
                }
            ]
        },
        {
            "sha": "f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpmMjRmY2VhMzViNGU4NDM4Y2FhOTZiYWNjZWM3ZmY5MzJjNGFjMGMz",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-05T12:10:25Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-05T12:10:25Z"
                },
                "message": "Merge pull request #7441 from carusogabriel\/improvements\n\nImprovements",
                "tree": {
                    "sha": "78440991b6809586c5055af9bdbc1b7696836827",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/78440991b6809586c5055af9bdbc1b7696836827"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbPgqxCRBK7hj4Ov3rIwAAdHIIAI4VRIO9bJJ83itu4s3\/WsUV\n2uhmgnTKbLACg8IsYz9hlibKR67jyZp0WksUC1efp7nu3AlOLwvjFxgT6qi3lK25\nzVUvXZkGfQxDpCrOstWZjsN5pzaM2\/kFfLGYR1KPmMi2imUvhPeBtIfWwYp3+x5J\nH3ASGQiK3n7+L48npb\/fSZ5bv8riRt3TflumqkxMxtZzKsSGxc2AB5UIfz2IKvbZ\njQZioDaSYya9kaReKvE\/GbmtEAnNozzPdhnNeUgXPUVBMd2Az2xWe8guXKEBvzAh\na39mOUxn91z\/DfuvMjX23nAwmSagHBPsqUHdN6GoaMYyhEFou8vyAnnY6OK9VgQ=\n=pFtZ\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 78440991b6809586c5055af9bdbc1b7696836827\nparent ff3ac9a876d611f1fc962ee2a9655fdaa5d2f4db\nparent 7d9f8e22474ce3d6c92f5f2469b5f6423892b617\nauthor Rob <alcohol@users.noreply.github.com> 1530792625 +0200\ncommitter GitHub <noreply@github.com> 1530792625 +0200\n\nMerge pull request #7441 from carusogabriel\/improvements\n\nImprovements"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "ff3ac9a876d611f1fc962ee2a9655fdaa5d2f4db",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ff3ac9a876d611f1fc962ee2a9655fdaa5d2f4db",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ff3ac9a876d611f1fc962ee2a9655fdaa5d2f4db"
                },
                {
                    "sha": "7d9f8e22474ce3d6c92f5f2469b5f6423892b617",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7d9f8e22474ce3d6c92f5f2469b5f6423892b617",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7d9f8e22474ce3d6c92f5f2469b5f6423892b617"
                }
            ]
        },
        {
            "sha": "354eec76aea9d16401dae184f575585b00f7d613",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozNTRlZWM3NmFlYTlkMTY0MDFkYWUxODRmNTc1NTg1YjAwZjdkNjEz",
            "commit": {
                "author": {
                    "name": "Kazuhiro Inari",
                    "email": "inarinlab@gmail.com",
                    "date": "2018-07-06T15:47:27Z"
                },
                "committer": {
                    "name": "Kazuhiro Inari",
                    "email": "inarinlab@gmail.com",
                    "date": "2018-07-06T15:47:27Z"
                },
                "message": "Add repositories path glob",
                "tree": {
                    "sha": "0300ab2afb3eed2b4f6a6f5ef13967445fd8ecdc",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/0300ab2afb3eed2b4f6a6f5ef13967445fd8ecdc"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/354eec76aea9d16401dae184f575585b00f7d613",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/354eec76aea9d16401dae184f575585b00f7d613",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/354eec76aea9d16401dae184f575585b00f7d613",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/354eec76aea9d16401dae184f575585b00f7d613\/comments",
            "author": {
                "login": "inaling",
                "id": 48197,
                "node_id": "MDQ6VXNlcjQ4MTk3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/48197?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/inaling",
                "html_url": "https:\/\/github.com\/inaling",
                "followers_url": "https:\/\/api.github.com\/users\/inaling\/followers",
                "following_url": "https:\/\/api.github.com\/users\/inaling\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/inaling\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/inaling\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/inaling\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/inaling\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/inaling\/repos",
                "events_url": "https:\/\/api.github.com\/users\/inaling\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/inaling\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "inaling",
                "id": 48197,
                "node_id": "MDQ6VXNlcjQ4MTk3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/48197?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/inaling",
                "html_url": "https:\/\/github.com\/inaling",
                "followers_url": "https:\/\/api.github.com\/users\/inaling\/followers",
                "following_url": "https:\/\/api.github.com\/users\/inaling\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/inaling\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/inaling\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/inaling\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/inaling\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/inaling\/repos",
                "events_url": "https:\/\/api.github.com\/users\/inaling\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/inaling\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3"
                }
            ]
        },
        {
            "sha": "0aa7ec2d2cbec6cb61f70b3bfc4d1faab6f3e292",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowYWE3ZWMyZDJjYmVjNmNiNjFmNzBiM2JmYzRkMWZhYWI2ZjNlMjky",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-09T12:01:57Z"
                },
                "committer": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-09T12:01:57Z"
                },
                "message": "Use a simpler hashing for the Rule2Literal case\n\nthis speeds up \"composer update\" by ~18%",
                "tree": {
                    "sha": "fed728b3b7197de9fc91667daf1173c672b4daec",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/fed728b3b7197de9fc91667daf1173c672b4daec"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0aa7ec2d2cbec6cb61f70b3bfc4d1faab6f3e292",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0aa7ec2d2cbec6cb61f70b3bfc4d1faab6f3e292",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0aa7ec2d2cbec6cb61f70b3bfc4d1faab6f3e292",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0aa7ec2d2cbec6cb61f70b3bfc4d1faab6f3e292\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3"
                }
            ]
        },
        {
            "sha": "07383552b30bf37efa827c5582dea4679ccadbd7",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowNzM4MzU1MmIzMGJmMzdlZmE4MjdjNTU4MmRlYTQ2NzljY2FkYmQ3",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-09T12:09:46Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-09T12:09:46Z"
                },
                "message": "Temporary save the package-name into a variable\n\nthis reduces number of unnecessary function calls in the hot path of \"composer update\"",
                "tree": {
                    "sha": "e45ed752204e06fa08d62985ea1b7ad21dd1f352",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e45ed752204e06fa08d62985ea1b7ad21dd1f352"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/07383552b30bf37efa827c5582dea4679ccadbd7",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbQ1CKCRBK7hj4Ov3rIwAAdHIIAKPF1D9G3wC\/RwqlMqm6Hfmp\nSsSdC65jVN7oYj++nr8\/j2MpAgbAMw+ciVeimEG6aSNIwvkD6o2R0sEA1DscuuAs\nBDjeNFmy68Z5Zx39OP9u+BPQknv5U0u99gHjXq08Ebt7TuLijkz10YLl2quvftmb\nUK2DUFgAeOa6OdNh\/Fax33B8jys\/LPj5YrFaML368\/WvN3OIMcNmCQlm2Wng14pn\n+ae+xBN\/NwBZEk6DtVM2d7UuLMc\/kng8zhnnpZThaUlWIQJUanCh51kB2omFQkLt\nAkk7k2QIpGI81fEKgz92GJvZhzbj15OekSPYdlUZSTd0BJPrb29nETDDuIpw1x4=\n=XgNn\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree e45ed752204e06fa08d62985ea1b7ad21dd1f352\nparent f24fcea35b4e8438caa96baccec7ff932c4ac0c3\nauthor Markus Staab <markus.staab@redaxo.de> 1531138186 +0200\ncommitter GitHub <noreply@github.com> 1531138186 +0200\n\nTemporary save the package-name into a variable\n\nthis reduces number of unnecessary function calls in the hot path of \"composer update\""
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/07383552b30bf37efa827c5582dea4679ccadbd7",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/07383552b30bf37efa827c5582dea4679ccadbd7",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/07383552b30bf37efa827c5582dea4679ccadbd7\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3"
                }
            ]
        },
        {
            "sha": "7a4937bbccab9a9bd8f344e347fee908781f5e15",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3YTQ5MzdiYmNjYWI5YTliZDhmMzQ0ZTM0N2ZlZTkwODc4MWY1ZTE1",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-10T16:24:06Z"
                },
                "committer": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-10T16:24:06Z"
                },
                "message": "Specialize Rule2Literal->equals(Rule2Literal) for speedup",
                "tree": {
                    "sha": "814f9277ee9cd20eed02672ff1ec0c0b58da492c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/814f9277ee9cd20eed02672ff1ec0c0b58da492c"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/7a4937bbccab9a9bd8f344e347fee908781f5e15",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7a4937bbccab9a9bd8f344e347fee908781f5e15",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7a4937bbccab9a9bd8f344e347fee908781f5e15",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7a4937bbccab9a9bd8f344e347fee908781f5e15\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3"
                }
            ]
        },
        {
            "sha": "e3a23f4ae6c12a2ac52719f41e2d986d38db0acd",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplM2EyM2Y0YWU2YzEyYTJhYzUyNzE5ZjQxZTJkOTg2ZDM4ZGIwYWNk",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-10T18:49:24Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-10T18:49:24Z"
                },
                "message": "Remove unnecessary abs() calls\n\nLiteral cannot be negative at this point",
                "tree": {
                    "sha": "50a93533f34dd4aebc31f1d7a8600f8ff189ce62",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/50a93533f34dd4aebc31f1d7a8600f8ff189ce62"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/e3a23f4ae6c12a2ac52719f41e2d986d38db0acd",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRP+0CRBK7hj4Ov3rIwAAdHIIABD0qYljJr3csOsVdZistjss\nm0HsuwqLnnYE923sIbe8iMm6Pqd5h3x0CIqIs3KHF8Cs9tvXH5b1o2\/g7KgWOJBX\n2bVSfP+BZmv8WqpZarRJ4fvuaSYxUyDCvdmu04uZllRNG2kJ3k6jgzJ8gOGXftv1\nbJnoJ8vv6OSMOjliETWdgFo0mVxxhrGydT\/lh4J1WAeDy9GJ2ajLrunsaYQwDIB1\nn+zfLB9RfgEmJ5kUDxncDe0terFCb3AyJKdWqVpT2Xc8E4dslPHypziZ+zzbmZOl\nNTr\/7GGwm7h41d+PkutKckkGaKYvYqH3l1fv7hJ0MQezeyHnJwGxhFtE2wayc6s=\n=vwjz\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 50a93533f34dd4aebc31f1d7a8600f8ff189ce62\nparent f24fcea35b4e8438caa96baccec7ff932c4ac0c3\nauthor Markus Staab <markus.staab@redaxo.de> 1531248564 +0200\ncommitter GitHub <noreply@github.com> 1531248564 +0200\n\nRemove unnecessary abs() calls\n\nLiteral cannot be negative at this point"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e3a23f4ae6c12a2ac52719f41e2d986d38db0acd",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e3a23f4ae6c12a2ac52719f41e2d986d38db0acd",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e3a23f4ae6c12a2ac52719f41e2d986d38db0acd\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3"
                }
            ]
        },
        {
            "sha": "0e16dbabde469752c2f9db8ce086aa9c762d6693",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowZTE2ZGJhYmRlNDY5NzUyYzJmOWRiOGNlMDg2YWE5Yzc2MmQ2Njkz",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "maggus.staab@googlemail.com",
                    "date": "2018-07-10T18:55:14Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-10T18:55:14Z"
                },
                "message": "Removed another unnecessary abs() call",
                "tree": {
                    "sha": "70846f3cb77dac95e1e2474cf3f6a6402ab6cfd5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/70846f3cb77dac95e1e2474cf3f6a6402ab6cfd5"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0e16dbabde469752c2f9db8ce086aa9c762d6693",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRQESCRBK7hj4Ov3rIwAAdHIIADDuIhUEQ4UXLBv6nJew30PC\njTiarnjBl8rRC3J\/5Rl7CRoK6blU5a6VKd\/M5vB0pTNu7iafv7O1ISXti1s8oKh\/\nzPCWiRsF1\/OrVetRqklYvZDeqSESusD566qVOF9WkhvDEkCiry8L\/BjM0r5KEjzT\n6bjjK8xcGRElkfFGGyfyu6KJb7dYomhwkug0NOwGqeZr8bAQQwMpru8L\/+E2ZGdq\n3Z6Q1YZ\/tvNqdKzPWSAH3sU8sN6jeMZ8nVAXTIAREpc+vETN3Wnkg9LWpv\/F6sM6\nBMY2XZ6ej5lvBdPJfP7jW\/x9cBWX41zCNMfvv5sDAE8an9aEtTJulBj0gNtw8XM=\n=AJnn\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 70846f3cb77dac95e1e2474cf3f6a6402ab6cfd5\nparent e3a23f4ae6c12a2ac52719f41e2d986d38db0acd\nauthor Markus Staab <maggus.staab@googlemail.com> 1531248914 +0200\ncommitter GitHub <noreply@github.com> 1531248914 +0200\n\nRemoved another unnecessary abs() call"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0e16dbabde469752c2f9db8ce086aa9c762d6693",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0e16dbabde469752c2f9db8ce086aa9c762d6693",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0e16dbabde469752c2f9db8ce086aa9c762d6693\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "e3a23f4ae6c12a2ac52719f41e2d986d38db0acd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e3a23f4ae6c12a2ac52719f41e2d986d38db0acd",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e3a23f4ae6c12a2ac52719f41e2d986d38db0acd"
                }
            ]
        },
        {
            "sha": "42516901f1b0592119daa3fbb41a40c24f0338f1",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0MjUxNjkwMWYxYjA1OTIxMTlkYWEzZmJiNDFhNDBjMjRmMDMzOGYx",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "maggus.staab@googlemail.com",
                    "date": "2018-07-10T18:59:39Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-10T18:59:39Z"
                },
                "message": "Removed another unnecessary abs() call",
                "tree": {
                    "sha": "e113036134013010ecfd736c03a3868413a1cf2a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e113036134013010ecfd736c03a3868413a1cf2a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/42516901f1b0592119daa3fbb41a40c24f0338f1",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRQIbCRBK7hj4Ov3rIwAAdHIIACVIfbAU+buhjgFm63TOePve\nbg67gVEMd11D4j7dFhdPgQaVset5VA5dYsDrNNienc40rxsLMXNPi6oiKj\/GkoTg\nLDPZkH9JL4cFJRCxOkGirRpxJv2VVuYXWZhz3oUqfPE3FgOnW0zfnHHPrJPO9zn6\nUIIe2rBx6lNXsgHYpEcqzdjSoU+dE2cKC5ot3FQg+DRXWrJjVmK\/tEatcY7+hRq3\n1r0nQP0l0nA\/t012ZnkuPmdSVn69NH7uP73lpn75sdfXLyuRNHyRRiNnUTzyz5JZ\nIpKfNxZwCG7LZ9dlF+pyNft+L6VBkyuhfiEvIiszKebNyLDXLwhxVntW7Lzyq0I=\n=LoI9\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree e113036134013010ecfd736c03a3868413a1cf2a\nparent 0e16dbabde469752c2f9db8ce086aa9c762d6693\nauthor Markus Staab <maggus.staab@googlemail.com> 1531249179 +0200\ncommitter GitHub <noreply@github.com> 1531249179 +0200\n\nRemoved another unnecessary abs() call"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42516901f1b0592119daa3fbb41a40c24f0338f1",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/42516901f1b0592119daa3fbb41a40c24f0338f1",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42516901f1b0592119daa3fbb41a40c24f0338f1\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0e16dbabde469752c2f9db8ce086aa9c762d6693",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0e16dbabde469752c2f9db8ce086aa9c762d6693",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0e16dbabde469752c2f9db8ce086aa9c762d6693"
                }
            ]
        },
        {
            "sha": "86d5de2965a3cfe168a9c8955e3ee0d1ed34b634",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4NmQ1ZGUyOTY1YTNjZmUxNjhhOWM4OTU1ZTNlZTBkMWVkMzRiNjM0",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "maggus.staab@googlemail.com",
                    "date": "2018-07-10T19:01:52Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-10T19:01:52Z"
                },
                "message": "Define variable only when actually used",
                "tree": {
                    "sha": "2946c1782c79c33a74825aec9e74ed0276319261",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/2946c1782c79c33a74825aec9e74ed0276319261"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/86d5de2965a3cfe168a9c8955e3ee0d1ed34b634",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRQKgCRBK7hj4Ov3rIwAAdHIIAGGK9CZCzaYKGJslpKnTSfvK\n1B6EOaT\/XRXLdJYO8mXFdtdAWlvngIUY46yOJydSo9MpFG+2snZ4seFCLhZE2JL8\nZtJU1ANNhNa0gtwP+GsTpdRLktFN8kT0ulOKPbqgvMa37oD+gbQb1yVeQhP2e6dB\nAavELZipmBqhKg6AC67Ow7uvpgZi5g9tH\/csQf4aHb8954n\/7asqtsYskdwt0pga\ns4kz0zEVKuTzEvOLzwmQJ68XdEqvIXcudfg8UkToDm+spWqSsXv6Sx7dUt62iuis\n7cp1Pw9IdhOOLHLMwJZxk3PVID0nmIZTOjK8Lk+zMgAeVEI17TY\/AOskYmfeMXU=\n=BpzY\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 2946c1782c79c33a74825aec9e74ed0276319261\nparent f24fcea35b4e8438caa96baccec7ff932c4ac0c3\nauthor Markus Staab <maggus.staab@googlemail.com> 1531249312 +0200\ncommitter GitHub <noreply@github.com> 1531249312 +0200\n\nDefine variable only when actually used"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/86d5de2965a3cfe168a9c8955e3ee0d1ed34b634",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/86d5de2965a3cfe168a9c8955e3ee0d1ed34b634",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/86d5de2965a3cfe168a9c8955e3ee0d1ed34b634\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3"
                }
            ]
        },
        {
            "sha": "b63e2de819acd7d571f2a51023484335eb31b6a0",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiNjNlMmRlODE5YWNkN2Q1NzFmMmE1MTAyMzQ4NDMzNWViMzFiNmEw",
            "commit": {
                "author": {
                    "name": "refael iliaguyev",
                    "email": "rellect@gmail.com",
                    "date": "2018-07-11T17:21:09Z"
                },
                "committer": {
                    "name": "refael iliaguyev",
                    "email": "rellect@gmail.com",
                    "date": "2018-07-11T17:37:34Z"
                },
                "message": "add alias `i` to the install command",
                "tree": {
                    "sha": "49aee2d0dcfda54a395fa4b1dc3ecc26e4354201",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/49aee2d0dcfda54a395fa4b1dc3ecc26e4354201"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b63e2de819acd7d571f2a51023484335eb31b6a0",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b63e2de819acd7d571f2a51023484335eb31b6a0",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b63e2de819acd7d571f2a51023484335eb31b6a0",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b63e2de819acd7d571f2a51023484335eb31b6a0\/comments",
            "author": {
                "login": "rellect",
                "id": 2431842,
                "node_id": "MDQ6VXNlcjI0MzE4NDI=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/2431842?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/rellect",
                "html_url": "https:\/\/github.com\/rellect",
                "followers_url": "https:\/\/api.github.com\/users\/rellect\/followers",
                "following_url": "https:\/\/api.github.com\/users\/rellect\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/rellect\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/rellect\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/rellect\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/rellect\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/rellect\/repos",
                "events_url": "https:\/\/api.github.com\/users\/rellect\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/rellect\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "rellect",
                "id": 2431842,
                "node_id": "MDQ6VXNlcjI0MzE4NDI=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/2431842?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/rellect",
                "html_url": "https:\/\/github.com\/rellect",
                "followers_url": "https:\/\/api.github.com\/users\/rellect\/followers",
                "following_url": "https:\/\/api.github.com\/users\/rellect\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/rellect\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/rellect\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/rellect\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/rellect\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/rellect\/repos",
                "events_url": "https:\/\/api.github.com\/users\/rellect\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/rellect\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3"
                }
            ]
        },
        {
            "sha": "e0eaca21f71ac56da3bb7117d70dcb36083791d8",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplMGVhY2EyMWY3MWFjNTZkYTNiYjcxMTdkNzBkY2IzNjA4Mzc5MWQ4",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-12T07:57:18Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-12T07:57:18Z"
                },
                "message": "Merge pull request #7451 from staabm\/patch-1\n\nTemporary save the package-name into a variable",
                "tree": {
                    "sha": "e45ed752204e06fa08d62985ea1b7ad21dd1f352",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e45ed752204e06fa08d62985ea1b7ad21dd1f352"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/e0eaca21f71ac56da3bb7117d70dcb36083791d8",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRwneCRBK7hj4Ov3rIwAAdHIIAHBk5RxuC48SR6w83bcrAnCC\n4SV+L5Irm4RhOX1AWJiWX9ntZEIP5z2wznqkuAiQfmd91bBZc4mpGpLfT49QUAO3\nuhhghZYHeYLJB1vSINbte5O6av1j18wqjHBMRd977h+Z+3A4z97Lq7NxtbfvKfCx\n5abOTb9OZBnKY1Skohv7E+dJG+tK9CWNplPhkZll0MMqZSUXGHzAkSPW1QEuS54c\nWygjw8cziT7fNM\/jAqL2peZFhzvHllBnbt6kxqEvGV\/JV6sQR45z8VJ+9K5OPRSH\noXLnmTmEvLok27P7Kq4T2RN1f2ea1slwULWWAe9wUJ2MMgSG3n7wtDsjYrlm5Dg=\n=OD54\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree e45ed752204e06fa08d62985ea1b7ad21dd1f352\nparent f24fcea35b4e8438caa96baccec7ff932c4ac0c3\nparent 07383552b30bf37efa827c5582dea4679ccadbd7\nauthor Rob <alcohol@users.noreply.github.com> 1531382238 +0200\ncommitter GitHub <noreply@github.com> 1531382238 +0200\n\nMerge pull request #7451 from staabm\/patch-1\n\nTemporary save the package-name into a variable"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e0eaca21f71ac56da3bb7117d70dcb36083791d8",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e0eaca21f71ac56da3bb7117d70dcb36083791d8",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e0eaca21f71ac56da3bb7117d70dcb36083791d8\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f24fcea35b4e8438caa96baccec7ff932c4ac0c3"
                },
                {
                    "sha": "07383552b30bf37efa827c5582dea4679ccadbd7",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/07383552b30bf37efa827c5582dea4679ccadbd7",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/07383552b30bf37efa827c5582dea4679ccadbd7"
                }
            ]
        },
        {
            "sha": "b350c09c7e9351bb3ae374fb0f32c50b245f8778",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiMzUwYzA5YzdlOTM1MWJiM2FlMzc0ZmIwZjMyYzUwYjI0NWY4Nzc4",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-12T07:58:38Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-12T07:58:38Z"
                },
                "message": "Merge pull request #7457 from staabm\/patch-2\n\nRemove unnecessary abs() calls",
                "tree": {
                    "sha": "bc47c4e722afeae62c988fcceef9f12b3a62bfda",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/bc47c4e722afeae62c988fcceef9f12b3a62bfda"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b350c09c7e9351bb3ae374fb0f32c50b245f8778",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRwouCRBK7hj4Ov3rIwAAdHIIAAdxcS\/LvqhEsMSU3MlqVn3R\nMimsHhsKozfiLucE1oifJo5tBYsvfuXSWAvxUg+QG6tU21LLAHE2UAFW48sK7IRj\nHTAKQPynXf059pJO\/hAbcoMyIJRHntSY5fSGnpUZJN2WJaxaPojUD8NOmxGFeMPV\nEB7CQt2wvboZygRNsiHUonsAZrYcZJuBWuQ+4AELFXEfSh1oXtAnRNZuwslJH2\/S\nTqLRPQe23dT2n3JkWHJqycWTgFJazEwRMrYlGY4ed+7umvxY0ImFQV8HK3Z8x7+D\nUOM\/YrUCe\/vb\/1fLUTOD0i\/jvpUssldID6Sd4PQEfKLt+XxTE8C0FejViyVtyEw=\n=MgYs\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree bc47c4e722afeae62c988fcceef9f12b3a62bfda\nparent e0eaca21f71ac56da3bb7117d70dcb36083791d8\nparent 42516901f1b0592119daa3fbb41a40c24f0338f1\nauthor Rob <alcohol@users.noreply.github.com> 1531382318 +0200\ncommitter GitHub <noreply@github.com> 1531382318 +0200\n\nMerge pull request #7457 from staabm\/patch-2\n\nRemove unnecessary abs() calls"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b350c09c7e9351bb3ae374fb0f32c50b245f8778",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b350c09c7e9351bb3ae374fb0f32c50b245f8778",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b350c09c7e9351bb3ae374fb0f32c50b245f8778\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "e0eaca21f71ac56da3bb7117d70dcb36083791d8",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e0eaca21f71ac56da3bb7117d70dcb36083791d8",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e0eaca21f71ac56da3bb7117d70dcb36083791d8"
                },
                {
                    "sha": "42516901f1b0592119daa3fbb41a40c24f0338f1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42516901f1b0592119daa3fbb41a40c24f0338f1",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/42516901f1b0592119daa3fbb41a40c24f0338f1"
                }
            ]
        },
        {
            "sha": "7079cdb70d101c132c5c449cecbdae7aaab97bba",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3MDc5Y2RiNzBkMTAxYzEzMmM1YzQ0OWNlY2JkYWU3YWFhYjk3YmJh",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-12T08:01:19Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-12T08:01:19Z"
                },
                "message": "Merge pull request #7458 from staabm\/patch-3\n\nDefine variable only when actually used",
                "tree": {
                    "sha": "a651833e743ce4b1d1bcacf1a08d16ae74370d65",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/a651833e743ce4b1d1bcacf1a08d16ae74370d65"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/7079cdb70d101c132c5c449cecbdae7aaab97bba",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRwrPCRBK7hj4Ov3rIwAAdHIIAJZntm3zCAB0Nu6f\/x934uWK\n+cYRjEJrXyWxIkMmcWNtQdxaMRJViPAjQydNeh3CA4mIh71kLEb9qnle9UB8igsO\nXpo30X1XG6MOPhepbgo0oW6hhhxDJ3Adv3HbOW2ROJW2J\/r1Ffk6T6oBjSRtZG91\nhENeah245ZdinvFzi2jsBcD3hFKLxkP0\/1lvi9y67LHU\/hjzBGtPC\/\/0jcdYhH23\nyd7iREy4kvqAYSf3pTd7lLl3XOq2lPnzv0GZse8+ISIBsTP8pHtGFf\/pBvhMzBcv\nGuyWtMC2RYssRORuym6BD6cbfqORe93nAQH8iYU5IEXdHhTm7xjKOPQ2nAGq3Pk=\n=joPd\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree a651833e743ce4b1d1bcacf1a08d16ae74370d65\nparent b350c09c7e9351bb3ae374fb0f32c50b245f8778\nparent 86d5de2965a3cfe168a9c8955e3ee0d1ed34b634\nauthor Rob <alcohol@users.noreply.github.com> 1531382479 +0200\ncommitter GitHub <noreply@github.com> 1531382479 +0200\n\nMerge pull request #7458 from staabm\/patch-3\n\nDefine variable only when actually used"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7079cdb70d101c132c5c449cecbdae7aaab97bba",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7079cdb70d101c132c5c449cecbdae7aaab97bba",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7079cdb70d101c132c5c449cecbdae7aaab97bba\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b350c09c7e9351bb3ae374fb0f32c50b245f8778",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b350c09c7e9351bb3ae374fb0f32c50b245f8778",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b350c09c7e9351bb3ae374fb0f32c50b245f8778"
                },
                {
                    "sha": "86d5de2965a3cfe168a9c8955e3ee0d1ed34b634",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/86d5de2965a3cfe168a9c8955e3ee0d1ed34b634",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/86d5de2965a3cfe168a9c8955e3ee0d1ed34b634"
                }
            ]
        },
        {
            "sha": "1e9136f0866eeeb66c888ccb1972db200631eefe",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxZTkxMzZmMDg2NmVlZWI2NmM4ODhjY2IxOTcyZGIyMDA2MzFlZWZl",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-12T08:02:36Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-12T08:02:36Z"
                },
                "message": "Merge pull request #7456 from staabm\/simpler-equals\n\nSpecialize Rule2Literal->equals(Rule2Literal) for speedup",
                "tree": {
                    "sha": "6c8307d3278933f4295037d335dc06369a4e12ca",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/6c8307d3278933f4295037d335dc06369a4e12ca"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/1e9136f0866eeeb66c888ccb1972db200631eefe",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRwscCRBK7hj4Ov3rIwAAdHIIAAcs+KKNtF9f6EYcBRt0jDyC\nsMCrG48Q3t+ZvDelvTKUvmzI\/RRIU+D6nOUq\/MAX+o7jy3HqSHx9xilAXaIzLYYY\nT9R+haho8Tg5p0h+O6d25So0pDuUBNlKZj51DzIjD2yXxzwBd+yrLiKFQTCv1e9n\nLabEEO2WFBNbypnaGjXyZ4VNCLBo8egfF6MfluJVp6lXvMHaYudUGOe1AJvCjN84\naD+RSLDVanjln8tH+j6JdjblxYkg6ZpDTq\/F1tGBFW3iEdXwPev9z5lE0Tdxb1Ve\nyDOUPr9GJJqtfJRRF6HuXQcYx8O2wYhDaeZRaUiNMkFGgW4PMaz4XsQlHUuPsRE=\n=sADH\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 6c8307d3278933f4295037d335dc06369a4e12ca\nparent 7079cdb70d101c132c5c449cecbdae7aaab97bba\nparent 7a4937bbccab9a9bd8f344e347fee908781f5e15\nauthor Rob <alcohol@users.noreply.github.com> 1531382556 +0200\ncommitter GitHub <noreply@github.com> 1531382556 +0200\n\nMerge pull request #7456 from staabm\/simpler-equals\n\nSpecialize Rule2Literal->equals(Rule2Literal) for speedup"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1e9136f0866eeeb66c888ccb1972db200631eefe",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1e9136f0866eeeb66c888ccb1972db200631eefe",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1e9136f0866eeeb66c888ccb1972db200631eefe\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "7079cdb70d101c132c5c449cecbdae7aaab97bba",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7079cdb70d101c132c5c449cecbdae7aaab97bba",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7079cdb70d101c132c5c449cecbdae7aaab97bba"
                },
                {
                    "sha": "7a4937bbccab9a9bd8f344e347fee908781f5e15",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7a4937bbccab9a9bd8f344e347fee908781f5e15",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7a4937bbccab9a9bd8f344e347fee908781f5e15"
                }
            ]
        },
        {
            "sha": "68d468d683c09a9a0e9356dacfa812f297e776fa",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo2OGQ0NjhkNjgzYzA5YTlhMGU5MzU2ZGFjZmE4MTJmMjk3ZTc3NmZh",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-12T08:05:24Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-12T08:05:24Z"
                },
                "message": "Merge pull request #7450 from staabm\/simpler-hash\n\nUse a simpler hashing for the Rule2Literal case",
                "tree": {
                    "sha": "06ed401223d401aef70aeb1c8e6be3ed668f8b42",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/06ed401223d401aef70aeb1c8e6be3ed668f8b42"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/68d468d683c09a9a0e9356dacfa812f297e776fa",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbRwvECRBK7hj4Ov3rIwAAdHIIAJ9h1MDYt4y35yWje9uiwW58\nZqXI\/65ytLBQ2OH96Vb4dms19wsc27BX8\/V7duBRMv\/5ReC9q64Rr79iL8I0eWbI\nN2j9yhbQBkNikffHkNtx390PARFsFn6kcQYczNknAKlrIsZe2lOCgJrndYCqRd+p\ni2YI4VqCTlTxrJYOYPs8Hby2dxIMvkPLI\/Pl1EN62qJNmedDsjdV9hijcDBol2z6\nuOQZwJXA3CBwR+UdqdNrrW6Ti41IJZJcMeqOZTl4Ev8IuDZvK24Z70WL+qYk+7NF\nNFjWxVK3jmAlBlg8MWENSPLgwtUqWt4hEfl6Yfz37kimzt94QP9WUrZ2XegHINo=\n=XO4b\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 06ed401223d401aef70aeb1c8e6be3ed668f8b42\nparent 1e9136f0866eeeb66c888ccb1972db200631eefe\nparent 0aa7ec2d2cbec6cb61f70b3bfc4d1faab6f3e292\nauthor Rob <alcohol@users.noreply.github.com> 1531382724 +0200\ncommitter GitHub <noreply@github.com> 1531382724 +0200\n\nMerge pull request #7450 from staabm\/simpler-hash\n\nUse a simpler hashing for the Rule2Literal case"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/68d468d683c09a9a0e9356dacfa812f297e776fa",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/68d468d683c09a9a0e9356dacfa812f297e776fa",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/68d468d683c09a9a0e9356dacfa812f297e776fa\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "1e9136f0866eeeb66c888ccb1972db200631eefe",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1e9136f0866eeeb66c888ccb1972db200631eefe",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1e9136f0866eeeb66c888ccb1972db200631eefe"
                },
                {
                    "sha": "0aa7ec2d2cbec6cb61f70b3bfc4d1faab6f3e292",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0aa7ec2d2cbec6cb61f70b3bfc4d1faab6f3e292",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0aa7ec2d2cbec6cb61f70b3bfc4d1faab6f3e292"
                }
            ]
        },
        {
            "sha": "50565cb0c8bbdc9be17e6c1452b4f856a28b3be0",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo1MDU2NWNiMGM4YmJkYzliZTE3ZTZjMTQ1MmI0Zjg1NmEyOGIzYmUw",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-12T18:44:24Z"
                },
                "committer": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-12T18:44:24Z"
                },
                "message": "Use variable to call count() less often",
                "tree": {
                    "sha": "7c18d28d7bb7c47b3f5675883def368a18b67b64",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/7c18d28d7bb7c47b3f5675883def368a18b67b64"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/50565cb0c8bbdc9be17e6c1452b4f856a28b3be0",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/50565cb0c8bbdc9be17e6c1452b4f856a28b3be0",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/50565cb0c8bbdc9be17e6c1452b4f856a28b3be0",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/50565cb0c8bbdc9be17e6c1452b4f856a28b3be0\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "68d468d683c09a9a0e9356dacfa812f297e776fa",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/68d468d683c09a9a0e9356dacfa812f297e776fa",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/68d468d683c09a9a0e9356dacfa812f297e776fa"
                }
            ]
        },
        {
            "sha": "006c921abde5a9fa5ec682014265e3203a0987b1",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowMDZjOTIxYWJkZTVhOWZhNWVjNjgyMDE0MjY1ZTMyMDNhMDk4N2Ix",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-12T20:08:52Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-12T20:08:52Z"
                },
                "message": "Merge pull request #7467 from staabm\/less-count\n\nUse variable to call count() less often",
                "tree": {
                    "sha": "7c18d28d7bb7c47b3f5675883def368a18b67b64",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/7c18d28d7bb7c47b3f5675883def368a18b67b64"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/006c921abde5a9fa5ec682014265e3203a0987b1",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbR7VUCRBK7hj4Ov3rIwAAdHIIAGV4oH06FkIcS1sqmzbJunay\nrcGC9t\/OuxdXaEq3Os+xQHaulqfJK7HWl9B3n2fWBqlKIzh+CTCkjIfQxzj7Ug3h\n22IkJmxn7UDnoWAb5rJTrqjR0WQDfrUxo+G5GnPJqVmz7cIVzcoGUZiP\/+zrBbna\ngBguRNukXH8gBNowUMAmiKhVWkEywXn\/vfaIV6ASLNuhfOrClV4I1N\/f74cSluS2\nehy04lZTsjiOc+tWc7sJ3u9jcWRbA9CxDUm9RLiKSzmqnJL5OnxcXnATpP3F25go\nnvj1JscuVeYajLDYGT2lfImmbomqByzT9Y5HqIcQ4RMXOwg2VGYk\/OyzB+WGN58=\n=xrAJ\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 7c18d28d7bb7c47b3f5675883def368a18b67b64\nparent 68d468d683c09a9a0e9356dacfa812f297e776fa\nparent 50565cb0c8bbdc9be17e6c1452b4f856a28b3be0\nauthor Rob <alcohol@users.noreply.github.com> 1531426132 +0200\ncommitter GitHub <noreply@github.com> 1531426132 +0200\n\nMerge pull request #7467 from staabm\/less-count\n\nUse variable to call count() less often"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/006c921abde5a9fa5ec682014265e3203a0987b1",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/006c921abde5a9fa5ec682014265e3203a0987b1",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/006c921abde5a9fa5ec682014265e3203a0987b1\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "68d468d683c09a9a0e9356dacfa812f297e776fa",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/68d468d683c09a9a0e9356dacfa812f297e776fa",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/68d468d683c09a9a0e9356dacfa812f297e776fa"
                },
                {
                    "sha": "50565cb0c8bbdc9be17e6c1452b4f856a28b3be0",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/50565cb0c8bbdc9be17e6c1452b4f856a28b3be0",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/50565cb0c8bbdc9be17e6c1452b4f856a28b3be0"
                }
            ]
        },
        {
            "sha": "cd39efc72c9b00c350080e30994ed6eede53163a",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpjZDM5ZWZjNzJjOWIwMGMzNTAwODBlMzA5OTRlZDZlZWRlNTMxNjNh",
            "commit": {
                "author": {
                    "name": "Vladimir Reznichenko",
                    "email": "kalessil@gmail.com",
                    "date": "2018-07-14T18:55:26Z"
                },
                "committer": {
                    "name": "Vladimir Reznichenko",
                    "email": "kalessil@gmail.com",
                    "date": "2018-07-14T18:55:26Z"
                },
                "message": "New finding by Static Code Analysis",
                "tree": {
                    "sha": "e14e631174495055aa2571b8fad21a4fa93729a5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e14e631174495055aa2571b8fad21a4fa93729a5"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/cd39efc72c9b00c350080e30994ed6eede53163a",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/cd39efc72c9b00c350080e30994ed6eede53163a",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/cd39efc72c9b00c350080e30994ed6eede53163a",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/cd39efc72c9b00c350080e30994ed6eede53163a\/comments",
            "author": {
                "login": "kalessil",
                "id": 1577185,
                "node_id": "MDQ6VXNlcjE1NzcxODU=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1577185?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/kalessil",
                "html_url": "https:\/\/github.com\/kalessil",
                "followers_url": "https:\/\/api.github.com\/users\/kalessil\/followers",
                "following_url": "https:\/\/api.github.com\/users\/kalessil\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/kalessil\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/kalessil\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/kalessil\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/kalessil\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/kalessil\/repos",
                "events_url": "https:\/\/api.github.com\/users\/kalessil\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/kalessil\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "kalessil",
                "id": 1577185,
                "node_id": "MDQ6VXNlcjE1NzcxODU=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1577185?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/kalessil",
                "html_url": "https:\/\/github.com\/kalessil",
                "followers_url": "https:\/\/api.github.com\/users\/kalessil\/followers",
                "following_url": "https:\/\/api.github.com\/users\/kalessil\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/kalessil\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/kalessil\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/kalessil\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/kalessil\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/kalessil\/repos",
                "events_url": "https:\/\/api.github.com\/users\/kalessil\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/kalessil\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "006c921abde5a9fa5ec682014265e3203a0987b1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/006c921abde5a9fa5ec682014265e3203a0987b1",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/006c921abde5a9fa5ec682014265e3203a0987b1"
                }
            ]
        },
        {
            "sha": "6f6d59426d0e1123ff80e98188000a542be5e320",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo2ZjZkNTk0MjZkMGUxMTIzZmY4MGU5ODE4ODAwMGE1NDJiZTVlMzIw",
            "commit": {
                "author": {
                    "name": "Vladimir Reznichenko",
                    "email": "kalessil@gmail.com",
                    "date": "2018-07-16T20:40:48Z"
                },
                "committer": {
                    "name": "Vladimir Reznichenko",
                    "email": "kalessil@gmail.com",
                    "date": "2018-07-16T20:40:48Z"
                },
                "message": "New finding by Static Code Analysis: revert uniqid() to comply long path requirements",
                "tree": {
                    "sha": "2c2c82f9c3c2a503851b436d82b1a9f9f06aa1bd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/2c2c82f9c3c2a503851b436d82b1a9f9f06aa1bd"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/6f6d59426d0e1123ff80e98188000a542be5e320",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6f6d59426d0e1123ff80e98188000a542be5e320",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/6f6d59426d0e1123ff80e98188000a542be5e320",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6f6d59426d0e1123ff80e98188000a542be5e320\/comments",
            "author": {
                "login": "kalessil",
                "id": 1577185,
                "node_id": "MDQ6VXNlcjE1NzcxODU=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1577185?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/kalessil",
                "html_url": "https:\/\/github.com\/kalessil",
                "followers_url": "https:\/\/api.github.com\/users\/kalessil\/followers",
                "following_url": "https:\/\/api.github.com\/users\/kalessil\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/kalessil\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/kalessil\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/kalessil\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/kalessil\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/kalessil\/repos",
                "events_url": "https:\/\/api.github.com\/users\/kalessil\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/kalessil\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "kalessil",
                "id": 1577185,
                "node_id": "MDQ6VXNlcjE1NzcxODU=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1577185?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/kalessil",
                "html_url": "https:\/\/github.com\/kalessil",
                "followers_url": "https:\/\/api.github.com\/users\/kalessil\/followers",
                "following_url": "https:\/\/api.github.com\/users\/kalessil\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/kalessil\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/kalessil\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/kalessil\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/kalessil\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/kalessil\/repos",
                "events_url": "https:\/\/api.github.com\/users\/kalessil\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/kalessil\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "cd39efc72c9b00c350080e30994ed6eede53163a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/cd39efc72c9b00c350080e30994ed6eede53163a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/cd39efc72c9b00c350080e30994ed6eede53163a"
                }
            ]
        },
        {
            "sha": "1a725d5e1f7d24aeab9355b2174681b7927346dd",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxYTcyNWQ1ZTFmN2QyNGFlYWI5MzU1YjIxNzQ2ODFiNzkyNzM0NmRk",
            "commit": {
                "author": {
                    "name": "Jonas Renaudot",
                    "email": "jonas.renaudot@gmail.com",
                    "date": "2018-07-17T10:04:27Z"
                },
                "committer": {
                    "name": "Jonas Renaudot",
                    "email": "jonas.renaudot@gmail.com",
                    "date": "2018-07-17T10:04:27Z"
                },
                "message": "Add support for authentication with mercurial repositories.",
                "tree": {
                    "sha": "c4bfe92801357ba4bc541c01073bd28354303621",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/c4bfe92801357ba4bc541c01073bd28354303621"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/1a725d5e1f7d24aeab9355b2174681b7927346dd",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1a725d5e1f7d24aeab9355b2174681b7927346dd",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1a725d5e1f7d24aeab9355b2174681b7927346dd",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1a725d5e1f7d24aeab9355b2174681b7927346dd\/comments",
            "author": {
                "login": "Elendev",
                "id": 1331273,
                "node_id": "MDQ6VXNlcjEzMzEyNzM=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1331273?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Elendev",
                "html_url": "https:\/\/github.com\/Elendev",
                "followers_url": "https:\/\/api.github.com\/users\/Elendev\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Elendev\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Elendev\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Elendev\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Elendev\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Elendev\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Elendev\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Elendev\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Elendev\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Elendev",
                "id": 1331273,
                "node_id": "MDQ6VXNlcjEzMzEyNzM=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1331273?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Elendev",
                "html_url": "https:\/\/github.com\/Elendev",
                "followers_url": "https:\/\/api.github.com\/users\/Elendev\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Elendev\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Elendev\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Elendev\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Elendev\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Elendev\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Elendev\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Elendev\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Elendev\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "006c921abde5a9fa5ec682014265e3203a0987b1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/006c921abde5a9fa5ec682014265e3203a0987b1",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/006c921abde5a9fa5ec682014265e3203a0987b1"
                }
            ]
        },
        {
            "sha": "81326fadc84f2cdf75debc37281ef06d876da425",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4MTMyNmZhZGM4NGYyY2RmNzVkZWJjMzcyODFlZjA2ZDg3NmRhNDI1",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-17T15:07:00Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-17T15:07:00Z"
                },
                "message": "Merge pull request #7470 from kalessil\/master\n\n[minor] SCA",
                "tree": {
                    "sha": "2c2c82f9c3c2a503851b436d82b1a9f9f06aa1bd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/2c2c82f9c3c2a503851b436d82b1a9f9f06aa1bd"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/81326fadc84f2cdf75debc37281ef06d876da425",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbTgYUCRBK7hj4Ov3rIwAAdHIIAB1BqnvVLyUvq5ChRTwexuCm\nJckxiBNi8dT2wM3I1D+kPQveeUlflglV\/afD8nka6rexiWLbEU1PDTDwWun+NkZk\nmAgKQFRhLtRu8ZnHueR41TsZRHqkzqvh+Kx0i4iqzynhrDH7o6ecp+\/SbOiy0Qp8\n6B\/GQh0dYZW5zvDYKlP9JLSvoaVUdC02Hg7MmqCsnUMyt1TlSyJwFg+xvdeiNkrK\n5fM9O09CI1hzQ0cYlmGsZ4gCVirEAMR211c4opunBTqcKuP4IZA0fqK21G4kD8pI\n\/P+ayrsI0hLMfP2+61Nv7UOdeLWiiRSFI1fXjr7Zmj92lTza+YWdL3gEGM4RNJc=\n=UffZ\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 2c2c82f9c3c2a503851b436d82b1a9f9f06aa1bd\nparent 006c921abde5a9fa5ec682014265e3203a0987b1\nparent 6f6d59426d0e1123ff80e98188000a542be5e320\nauthor Jordi Boggiano <j.boggiano@seld.be> 1531840020 +0200\ncommitter GitHub <noreply@github.com> 1531840020 +0200\n\nMerge pull request #7470 from kalessil\/master\n\n[minor] SCA"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/81326fadc84f2cdf75debc37281ef06d876da425",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/81326fadc84f2cdf75debc37281ef06d876da425",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/81326fadc84f2cdf75debc37281ef06d876da425\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "006c921abde5a9fa5ec682014265e3203a0987b1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/006c921abde5a9fa5ec682014265e3203a0987b1",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/006c921abde5a9fa5ec682014265e3203a0987b1"
                },
                {
                    "sha": "6f6d59426d0e1123ff80e98188000a542be5e320",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6f6d59426d0e1123ff80e98188000a542be5e320",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/6f6d59426d0e1123ff80e98188000a542be5e320"
                }
            ]
        },
        {
            "sha": "3d2b0deb6a4692c1daec8b9f969c41fa0dec1fab",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozZDJiMGRlYjZhNDY5MmMxZGFlYzhiOWY5NjljNDFmYTBkZWMxZmFi",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-17T15:33:56Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-17T15:33:56Z"
                },
                "message": "Merge pull request #7402 from m-jch\/master\n\ncomposer show options -t and -l do not work together, fixes #7210",
                "tree": {
                    "sha": "3f1d76a059cb63a826726cc3a2155d7a1e7b5f0b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/3f1d76a059cb63a826726cc3a2155d7a1e7b5f0b"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/3d2b0deb6a4692c1daec8b9f969c41fa0dec1fab",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbTgxkCRBK7hj4Ov3rIwAAdHIIAA0ihvObElYycugzuapszlIX\nFOdiXIbuAl0z3DCk+I6wJuou2N\/+P76RgI0mk0dSuqg7aDmCuTo+s+Yo+OmoVH4T\nZNBn\/fw2By0VT7mGgRyQXWdi8Ikik7EclN\/kLPcg6lUN5NXiEuUw7fRheqLB1lYI\nWs45BdyT8PxmlOldMfM4IjarQUzQlhoY3uu\/AYhQW4mF3oYncDBvZje7jb3kXJV0\nePcf2HOjQPGiXJCL4yzOfp6vRA9jq\/XiW6rAhTwIxWvOuvaQKCTzWmkPLI0uRAYA\nfXjoDwY5Ha9MMQLDQKctEsaGhpZ3mIB047MMgt0F9Zro\/WACDwDPtYUlBEJV1m8=\n=Jfso\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 3f1d76a059cb63a826726cc3a2155d7a1e7b5f0b\nparent 81326fadc84f2cdf75debc37281ef06d876da425\nparent 20e89a76210accf20f3574553796bd4c059a4bb9\nauthor Jordi Boggiano <j.boggiano@seld.be> 1531841636 +0200\ncommitter GitHub <noreply@github.com> 1531841636 +0200\n\nMerge pull request #7402 from m-jch\/master\n\ncomposer show options -t and -l do not work together, fixes #7210"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3d2b0deb6a4692c1daec8b9f969c41fa0dec1fab",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3d2b0deb6a4692c1daec8b9f969c41fa0dec1fab",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3d2b0deb6a4692c1daec8b9f969c41fa0dec1fab\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "81326fadc84f2cdf75debc37281ef06d876da425",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/81326fadc84f2cdf75debc37281ef06d876da425",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/81326fadc84f2cdf75debc37281ef06d876da425"
                },
                {
                    "sha": "20e89a76210accf20f3574553796bd4c059a4bb9",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/20e89a76210accf20f3574553796bd4c059a4bb9",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/20e89a76210accf20f3574553796bd4c059a4bb9"
                }
            ]
        },
        {
            "sha": "b3d6a17518f88678b812b4badb627f8baaf30644",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiM2Q2YTE3NTE4Zjg4Njc4YjgxMmI0YmFkYjYyN2Y4YmFhZjMwNjQ0",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-17T15:53:23Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-17T15:53:23Z"
                },
                "message": "Merge pull request #7444 from inaling\/add_repositories_path_glob\n\nAdd repositories path glob",
                "tree": {
                    "sha": "05ddea415184a274eaf0c3a8ac8843056aebbdaa",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/05ddea415184a274eaf0c3a8ac8843056aebbdaa"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b3d6a17518f88678b812b4badb627f8baaf30644",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbThDzCRBK7hj4Ov3rIwAAdHIIAHGCgAB1TcE5OlbrkL6x4zIm\nW3eJv36TXruRwKeYKL8ntRh9LFfWMzNLosQB3JVgoeFhUjnAwLjL6uiye09LY296\nMD\/fNeKINzbU+cUPBcAP2PGxL1nO8sR0yUd3Y3JOvnclEWHmCI2CSOyp7H2Hvn1j\nnikdUOd+clcqYjnSEMo2ul1JZ9m4\/jfm30j5x69nCeuDbT5tBhFzyzEJQxm8vswL\n8Q1cup+\/sPyLcZdHK52Cy\/Ichv8S9KS\/jlGUAeVa\/d1Kw00YY60WiimAlBc9PncK\nKNonhvazKhdT+o4goYDUmdEgzbQcZf3AWcC00+T8yex3D8Y\/5VtmT4lXMu+iu5o=\n=02+Z\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 05ddea415184a274eaf0c3a8ac8843056aebbdaa\nparent 3d2b0deb6a4692c1daec8b9f969c41fa0dec1fab\nparent 354eec76aea9d16401dae184f575585b00f7d613\nauthor Jordi Boggiano <j.boggiano@seld.be> 1531842803 +0200\ncommitter GitHub <noreply@github.com> 1531842803 +0200\n\nMerge pull request #7444 from inaling\/add_repositories_path_glob\n\nAdd repositories path glob"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b3d6a17518f88678b812b4badb627f8baaf30644",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b3d6a17518f88678b812b4badb627f8baaf30644",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b3d6a17518f88678b812b4badb627f8baaf30644\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "3d2b0deb6a4692c1daec8b9f969c41fa0dec1fab",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3d2b0deb6a4692c1daec8b9f969c41fa0dec1fab",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3d2b0deb6a4692c1daec8b9f969c41fa0dec1fab"
                },
                {
                    "sha": "354eec76aea9d16401dae184f575585b00f7d613",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/354eec76aea9d16401dae184f575585b00f7d613",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/354eec76aea9d16401dae184f575585b00f7d613"
                }
            ]
        },
        {
            "sha": "5c2b34a1af4b6e6ac93c8f5389369a9605051a92",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo1YzJiMzRhMWFmNGI2ZTZhYzkzYzhmNTM4OTM2OWE5NjA1MDUxYTky",
            "commit": {
                "author": {
                    "name": "Elendev",
                    "email": "jonas.renaudot@gmail.com",
                    "date": "2018-07-17T17:46:25Z"
                },
                "committer": {
                    "name": "Elendev",
                    "email": "jonas.renaudot@gmail.com",
                    "date": "2018-07-17T17:46:25Z"
                },
                "message": "Encode the username correctly (fix typo)",
                "tree": {
                    "sha": "311db71876a69bb3877dabb17b8993fdc5f19d77",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/311db71876a69bb3877dabb17b8993fdc5f19d77"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/5c2b34a1af4b6e6ac93c8f5389369a9605051a92",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5c2b34a1af4b6e6ac93c8f5389369a9605051a92",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5c2b34a1af4b6e6ac93c8f5389369a9605051a92",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5c2b34a1af4b6e6ac93c8f5389369a9605051a92\/comments",
            "author": {
                "login": "Elendev",
                "id": 1331273,
                "node_id": "MDQ6VXNlcjEzMzEyNzM=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1331273?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Elendev",
                "html_url": "https:\/\/github.com\/Elendev",
                "followers_url": "https:\/\/api.github.com\/users\/Elendev\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Elendev\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Elendev\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Elendev\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Elendev\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Elendev\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Elendev\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Elendev\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Elendev\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Elendev",
                "id": 1331273,
                "node_id": "MDQ6VXNlcjEzMzEyNzM=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1331273?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Elendev",
                "html_url": "https:\/\/github.com\/Elendev",
                "followers_url": "https:\/\/api.github.com\/users\/Elendev\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Elendev\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Elendev\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Elendev\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Elendev\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Elendev\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Elendev\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Elendev\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Elendev\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "1a725d5e1f7d24aeab9355b2174681b7927346dd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1a725d5e1f7d24aeab9355b2174681b7927346dd",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1a725d5e1f7d24aeab9355b2174681b7927346dd"
                }
            ]
        },
        {
            "sha": "ea5644281a1c4d27058a884ed684934875d14bde",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplYTU2NDQyODFhMWM0ZDI3MDU4YTg4NGVkNjg0OTM0ODc1ZDE0YmRl",
            "commit": {
                "author": {
                    "name": "Elendev",
                    "email": "jonas.renaudot@gmail.com",
                    "date": "2018-07-17T18:03:07Z"
                },
                "committer": {
                    "name": "Elendev",
                    "email": "jonas.renaudot@gmail.com",
                    "date": "2018-07-17T18:03:07Z"
                },
                "message": "Display the error output in the thrown exception",
                "tree": {
                    "sha": "1f9985fb5e5a62a4e44f9ee4586e5e844e019280",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/1f9985fb5e5a62a4e44f9ee4586e5e844e019280"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/ea5644281a1c4d27058a884ed684934875d14bde",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ea5644281a1c4d27058a884ed684934875d14bde",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ea5644281a1c4d27058a884ed684934875d14bde",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ea5644281a1c4d27058a884ed684934875d14bde\/comments",
            "author": {
                "login": "Elendev",
                "id": 1331273,
                "node_id": "MDQ6VXNlcjEzMzEyNzM=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1331273?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Elendev",
                "html_url": "https:\/\/github.com\/Elendev",
                "followers_url": "https:\/\/api.github.com\/users\/Elendev\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Elendev\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Elendev\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Elendev\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Elendev\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Elendev\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Elendev\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Elendev\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Elendev\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Elendev",
                "id": 1331273,
                "node_id": "MDQ6VXNlcjEzMzEyNzM=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1331273?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Elendev",
                "html_url": "https:\/\/github.com\/Elendev",
                "followers_url": "https:\/\/api.github.com\/users\/Elendev\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Elendev\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Elendev\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Elendev\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Elendev\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Elendev\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Elendev\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Elendev\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Elendev\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "5c2b34a1af4b6e6ac93c8f5389369a9605051a92",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5c2b34a1af4b6e6ac93c8f5389369a9605051a92",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5c2b34a1af4b6e6ac93c8f5389369a9605051a92"
                }
            ]
        },
        {
            "sha": "e89d16c47d5094191ca7723e14d979c0ec41f9a9",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplODlkMTZjNDdkNTA5NDE5MWNhNzcyM2UxNGQ5NzljMGVjNDFmOWE5",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-18T14:00:32Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-18T14:00:32Z"
                },
                "message": "GLOB_BRACE is not defined on all platforms",
                "tree": {
                    "sha": "33336e56002e1e7974e5eef4e03dc8a200e2b7eb",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/33336e56002e1e7974e5eef4e03dc8a200e2b7eb"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/e89d16c47d5094191ca7723e14d979c0ec41f9a9",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbT0gBCRBK7hj4Ov3rIwAAdHIIACBPbnK3JMdJZ6pitvdR+2qC\nFbVVHxZUVJ1sKxIC6lxUExye9UXoMZaCQ34R1jne4pYwJ1lSF\/aqhuUFs2letZgv\ng9FpwNHmX9PATzVeaCLav82GGu17tZuj1Vl2GxEhKxTuMZwzQmS72GTU0iV3tViz\nsAilQL2sZuEQEP6Lzpn1qRyF3MvJKFaUB7lVuV8KnUSDjY6ewV+4LpJDgUera+tD\n4o93YDxXLgilY74gXpsRQ1Nbq6rty2iBI\/xcnnyPe\/M7J0GGDoM4MkoziN3TUMHw\n7dlaMy\/5VXDASxLHiyy2kJY1jVd2ro5XYiT2sACfMbgAnnEvZTYiVpf7xgD+hsc=\n=sWHG\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 33336e56002e1e7974e5eef4e03dc8a200e2b7eb\nparent b3d6a17518f88678b812b4badb627f8baaf30644\nauthor Markus Staab <markus.staab@redaxo.de> 1531922432 +0200\ncommitter GitHub <noreply@github.com> 1531922432 +0200\n\nGLOB_BRACE is not defined on all platforms"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e89d16c47d5094191ca7723e14d979c0ec41f9a9",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e89d16c47d5094191ca7723e14d979c0ec41f9a9",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e89d16c47d5094191ca7723e14d979c0ec41f9a9\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b3d6a17518f88678b812b4badb627f8baaf30644",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b3d6a17518f88678b812b4badb627f8baaf30644",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b3d6a17518f88678b812b4badb627f8baaf30644"
                }
            ]
        },
        {
            "sha": "70a1a6e5103bc8515e5d71fc529185ee15948cd6",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3MGExYTZlNTEwM2JjODUxNWU1ZDcxZmM1MjkxODVlZTE1OTQ4Y2Q2",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "maggus.staab@googlemail.com",
                    "date": "2018-07-18T14:38:44Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-18T14:38:44Z"
                },
                "message": "Throw a RuntimeException when glob braces are used but not supported by the OS",
                "tree": {
                    "sha": "520625686cda1f3156ee7090e492253ca2424ded",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/520625686cda1f3156ee7090e492253ca2424ded"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/70a1a6e5103bc8515e5d71fc529185ee15948cd6",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbT1D0CRBK7hj4Ov3rIwAAdHIIAB8\/JWbozGYMWaQScg32ReD6\nE1xwzMEbDUjgX\/QT5gknNdQrC4vH4iKfJC1qcOQy3d0lZs1ghaX1XU5TRXppzdjh\nh8PlqSMGgBfFXQBvuiEN5ABGj3vBAsZ1ZFOEcOcFKue0O1ILHZtf\/78gXMRDFxH4\nRcw5Y2MRih96ldKlt+TsHioSO\/fo7q3MTjcbYw0XWXMFSHBxsgwEDG73SB7k2E3H\n3xwfgnOGiGH8zn5arQjvc6E7RkihkXhlpwJWYGhgK9xSq\/vf9QWZsOUNMroOqP1g\n2d+bZKKDqyQl35u8GsVKibdbKGfvQLVgrq7rU9un4HEnTiBPP8BBJVGsAlOgy4E=\n=+4Ci\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 520625686cda1f3156ee7090e492253ca2424ded\nparent e89d16c47d5094191ca7723e14d979c0ec41f9a9\nauthor Markus Staab <maggus.staab@googlemail.com> 1531924724 +0200\ncommitter GitHub <noreply@github.com> 1531924724 +0200\n\nThrow a RuntimeException when glob braces are used but not supported by the OS"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/70a1a6e5103bc8515e5d71fc529185ee15948cd6",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/70a1a6e5103bc8515e5d71fc529185ee15948cd6",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/70a1a6e5103bc8515e5d71fc529185ee15948cd6\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "e89d16c47d5094191ca7723e14d979c0ec41f9a9",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e89d16c47d5094191ca7723e14d979c0ec41f9a9",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e89d16c47d5094191ca7723e14d979c0ec41f9a9"
                }
            ]
        },
        {
            "sha": "b44c9acae60fa70ed4915fe79b578141ec05a10c",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiNDRjOWFjYWU2MGZhNzBlZDQ5MTVmZTc5YjU3ODE0MWVjMDVhMTBj",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-18T15:01:29Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-18T15:01:29Z"
                },
                "message": "Merge pull request #7477 from staabm\/patch-1\n\nGLOB_BRACE is not defined on all platforms",
                "tree": {
                    "sha": "520625686cda1f3156ee7090e492253ca2424ded",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/520625686cda1f3156ee7090e492253ca2424ded"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b44c9acae60fa70ed4915fe79b578141ec05a10c",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbT1ZJCRBK7hj4Ov3rIwAAdHIIAHUm9rAUHNCttFZ3jU9GpVAn\nhWIccx98H\/Wok7wktdACG5UFyCzXlGXMm5SkSZpyvjK4mzTtXOzyD4o3\/p+mZxE2\nMfzTFczh2K17UHYxo\/BJKl+4DEKwI8YVpR+ZnbuQskcxh3KDpoXZFUO0p6bBSkha\n1OjdXX30hyxFW7apzptXJfMj7T11jn+jrw059GBWpfDakngvWrmxTkBUfTMBsX5G\n2O8RlKmVFszYHWxPozd5R2qWiTW8LIfpaUvZ3dAz1CkNmiUm1PdSox2pKgBVCJTI\nyij1aKlpO5rACgTOCAWnERAPLhEQkz04boorXc6bL3YOGQPrNPGPIrP1BK0J+Z0=\n=VUAG\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 520625686cda1f3156ee7090e492253ca2424ded\nparent b3d6a17518f88678b812b4badb627f8baaf30644\nparent 70a1a6e5103bc8515e5d71fc529185ee15948cd6\nauthor Rob <alcohol@users.noreply.github.com> 1531926089 +0200\ncommitter GitHub <noreply@github.com> 1531926089 +0200\n\nMerge pull request #7477 from staabm\/patch-1\n\nGLOB_BRACE is not defined on all platforms"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b44c9acae60fa70ed4915fe79b578141ec05a10c",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b44c9acae60fa70ed4915fe79b578141ec05a10c",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b44c9acae60fa70ed4915fe79b578141ec05a10c\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b3d6a17518f88678b812b4badb627f8baaf30644",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b3d6a17518f88678b812b4badb627f8baaf30644",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b3d6a17518f88678b812b4badb627f8baaf30644"
                },
                {
                    "sha": "70a1a6e5103bc8515e5d71fc529185ee15948cd6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/70a1a6e5103bc8515e5d71fc529185ee15948cd6",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/70a1a6e5103bc8515e5d71fc529185ee15948cd6"
                }
            ]
        },
        {
            "sha": "3b647f8686b123e8cc91fb3b1c9e4221e02d63fb",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozYjY0N2Y4Njg2YjEyM2U4Y2M5MWZiM2IxYzllNDIyMWUwMmQ2M2Zi",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-18T16:24:11Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-18T16:24:11Z"
                },
                "message": "prevent preg_replace() calls when cache is not enabled",
                "tree": {
                    "sha": "0ae7d6afb9b1db8899236e9ef08bc95b96ca2056",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/0ae7d6afb9b1db8899236e9ef08bc95b96ca2056"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/3b647f8686b123e8cc91fb3b1c9e4221e02d63fb",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbT2mrCRBK7hj4Ov3rIwAAdHIIACMVCzLUM\/zmE9ksk0DuxWpC\nUsNdb0QuqQ0DVncKcv5G3CnZVvkfaUNP0UeXotA9mlmbd+fpmO6rckea3j+Vnpax\nrecfa6mhDnTTlB4WH9B1gy4hOt5jfchPMX1UUpTQGNMa475TMXN1yf3U8SJIoVAh\nMrMGTmxSBqAYe6gEUTNDOCjKmJn8aCAa6FkfrUZVvvD6Tu0nrSel1S3fySN0opys\nwKhNeIZp03+wlQP9wbjQVEeCw2iJldYxgHIFr+vnGQDaIihdSC5Ijovk8wZJg4IK\nkE30eVYMtfvAFymTQ7DnmLN2d9Ven9l2sH38N\/LBJTqLm5dUlzuH8eV58B1Dekw=\n=B\/Qp\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 0ae7d6afb9b1db8899236e9ef08bc95b96ca2056\nparent b44c9acae60fa70ed4915fe79b578141ec05a10c\nauthor Markus Staab <markus.staab@redaxo.de> 1531931051 +0200\ncommitter GitHub <noreply@github.com> 1531931051 +0200\n\nprevent preg_replace() calls when cache is not enabled"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3b647f8686b123e8cc91fb3b1c9e4221e02d63fb",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3b647f8686b123e8cc91fb3b1c9e4221e02d63fb",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3b647f8686b123e8cc91fb3b1c9e4221e02d63fb\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b44c9acae60fa70ed4915fe79b578141ec05a10c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b44c9acae60fa70ed4915fe79b578141ec05a10c",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b44c9acae60fa70ed4915fe79b578141ec05a10c"
                }
            ]
        },
        {
            "sha": "f7a1c34c9238dc09c031830c3ba633d576afd84d",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpmN2ExYzM0YzkyMzhkYzA5YzAzMTgzMGMzYmE2MzNkNTc2YWZkODRk",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-18T18:21:04Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-18T18:21:04Z"
                },
                "message": "Removed unused variables",
                "tree": {
                    "sha": "6105578816da41a53652143198d1ca25ba31f9d8",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/6105578816da41a53652143198d1ca25ba31f9d8"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/f7a1c34c9238dc09c031830c3ba633d576afd84d",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbT4UQCRBK7hj4Ov3rIwAAdHIIAGJGxYezrnM\/fhG4UIytqSlP\nFSKgwRr6AIxtia4+YriqtHx5Aw0eUt9\/G4YnUbNC1rlA+qrLn1UP+VnqS47Szcbs\ncLH039Iqh5UOCYZVQtxPUoVCmhVdt8bKSi6CWtqH4WHzyNp\/j5enSI7en1YiP7uI\n7G+Q6TztwT8i9DFHiyop\/6AfuDzEG+AgJxNsS+z+HgDzwsYdjipW3iyNVsda2tPH\nuS2X3bQHe4BqHma6gD5Hoosxz\/pCwQtPiJH0F2S3nkXwf5H8mXKEVuEAWwbD5Mzr\nORQLoaRco35ftoZqTfmUzDs2wlKBWXjZy656g9mBVAuKHwimHSTd75D21gov6Bs=\n=pIK4\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 6105578816da41a53652143198d1ca25ba31f9d8\nparent b44c9acae60fa70ed4915fe79b578141ec05a10c\nauthor Markus Staab <markus.staab@redaxo.de> 1531938064 +0200\ncommitter GitHub <noreply@github.com> 1531938064 +0200\n\nRemoved unused variables"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f7a1c34c9238dc09c031830c3ba633d576afd84d",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f7a1c34c9238dc09c031830c3ba633d576afd84d",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f7a1c34c9238dc09c031830c3ba633d576afd84d\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b44c9acae60fa70ed4915fe79b578141ec05a10c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b44c9acae60fa70ed4915fe79b578141ec05a10c",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b44c9acae60fa70ed4915fe79b578141ec05a10c"
                }
            ]
        },
        {
            "sha": "05499099a0d967e348ee8eaf47c37bf245b12acc",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowNTQ5OTA5OWEwZDk2N2UzNDhlZThlYWY0N2MzN2JmMjQ1YjEyYWNj",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-18T18:50:46Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-18T18:50:46Z"
                },
                "message": "Simplify Rule->getJob()",
                "tree": {
                    "sha": "1f786fb2dd82edad2db5f54c70cd9b1db295a826",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/1f786fb2dd82edad2db5f54c70cd9b1db295a826"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/05499099a0d967e348ee8eaf47c37bf245b12acc",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbT4wGCRBK7hj4Ov3rIwAAdHIIAJxKv3UbDX3y0cAAE7GtfjYv\nLKnsSWdYRoEwvP6iYlBR\/wck2Di2eHKZGOiH1PV41wodDZleWd\/yF1+MAN72nhsE\ner9hLI9Hxber6G15xw9P7pmTQRgflyPYJEFG5WpN4kYtLbf7dQq8jBHUj9jJiD8z\nczI0UmbTKa59XVgbJ4bTSD6RGG\/rBEqNCzU4dJ1P4LLArBRXITl0GZHkUQnlVPh\/\nX7JaoaowRGT+tRUBlk7aAFjrh9c\/qg0a88aHGRG3OkOAy1yNCrROpWBrfGUjuixO\nZCR6DmaAxQa2FEk6Lf02MWfbgSPVk5YvkVkJ9RPwBTzzaXhPdrrmc+4HAezY\/Ig=\n=pn\/L\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 1f786fb2dd82edad2db5f54c70cd9b1db295a826\nparent b44c9acae60fa70ed4915fe79b578141ec05a10c\nauthor Markus Staab <markus.staab@redaxo.de> 1531939846 +0200\ncommitter GitHub <noreply@github.com> 1531939846 +0200\n\nSimplify Rule->getJob()"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/05499099a0d967e348ee8eaf47c37bf245b12acc",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/05499099a0d967e348ee8eaf47c37bf245b12acc",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/05499099a0d967e348ee8eaf47c37bf245b12acc\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b44c9acae60fa70ed4915fe79b578141ec05a10c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b44c9acae60fa70ed4915fe79b578141ec05a10c",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b44c9acae60fa70ed4915fe79b578141ec05a10c"
                }
            ]
        },
        {
            "sha": "d64f95b70c7ccdd244d3cdeaccf9bd801968c1d8",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkNjRmOTViNzBjN2NjZGQyNDRkM2NkZWFjY2Y5YmQ4MDE5NjhjMWQ4",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-19T07:02:40Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-19T07:02:40Z"
                },
                "message": "Merge pull request #7475 from Elendev\/mercurial-auth-json\n\nAdd support for authentication with mercurial repositories.",
                "tree": {
                    "sha": "c5e49b1340ae49407b7df0b25bc7d70c62046e59",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/c5e49b1340ae49407b7df0b25bc7d70c62046e59"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/d64f95b70c7ccdd244d3cdeaccf9bd801968c1d8",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbUDeQCRBK7hj4Ov3rIwAAdHIIAAa1MyM9qoVCKII5dNboHRti\nIw3xZamSADoCcVLL5lytQm5W179u\/llyJw0KZ8VPMvzZPxycSwh0WtUjL1PBUatO\nz2VCLXale60A6T7Tyf0GmdRchfnmhlwkDniHrYcQVzqI4bnjLu3xuaDm\/7JzJOOi\nqJeK8Xs4njAy0iqfd0KqOwvcu720nyT+XvhCshgiNjidQuwegb+Rxs5YX00xZmo9\nCX374qoZX5F8xt+8ehkKNkxOgpjwgjJIgzegkoTJx8QWdYwsYsRmLim6nq\/+1An8\nrzBA27Ab4xA2haLRyat9r6ykVCV4CgZ5\/Pm+zM25neUvXeIUv1kgUzSteHUdl1w=\n=\/Mlz\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree c5e49b1340ae49407b7df0b25bc7d70c62046e59\nparent b44c9acae60fa70ed4915fe79b578141ec05a10c\nparent ea5644281a1c4d27058a884ed684934875d14bde\nauthor Jordi Boggiano <j.boggiano@seld.be> 1531983760 +0200\ncommitter GitHub <noreply@github.com> 1531983760 +0200\n\nMerge pull request #7475 from Elendev\/mercurial-auth-json\n\nAdd support for authentication with mercurial repositories."
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d64f95b70c7ccdd244d3cdeaccf9bd801968c1d8",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d64f95b70c7ccdd244d3cdeaccf9bd801968c1d8",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d64f95b70c7ccdd244d3cdeaccf9bd801968c1d8\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b44c9acae60fa70ed4915fe79b578141ec05a10c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b44c9acae60fa70ed4915fe79b578141ec05a10c",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b44c9acae60fa70ed4915fe79b578141ec05a10c"
                },
                {
                    "sha": "ea5644281a1c4d27058a884ed684934875d14bde",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ea5644281a1c4d27058a884ed684934875d14bde",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ea5644281a1c4d27058a884ed684934875d14bde"
                }
            ]
        },
        {
            "sha": "2f347e134721b3b6ee825fca273ca056e5cedbd3",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyZjM0N2UxMzQ3MjFiM2I2ZWU4MjVmY2EyNzNjYTA1NmU1Y2VkYmQz",
            "commit": {
                "author": {
                    "name": "refael iliaguyev",
                    "email": "rellect@gmail.com",
                    "date": "2018-07-19T08:38:43Z"
                },
                "committer": {
                    "name": "refael iliaguyev",
                    "email": "rellect@gmail.com",
                    "date": "2018-07-19T08:38:43Z"
                },
                "message": "add alias `u` to the update command",
                "tree": {
                    "sha": "a0c9d2befbf92d5d8a3c7043a6019ef807342f79",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/a0c9d2befbf92d5d8a3c7043a6019ef807342f79"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/2f347e134721b3b6ee825fca273ca056e5cedbd3",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2f347e134721b3b6ee825fca273ca056e5cedbd3",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2f347e134721b3b6ee825fca273ca056e5cedbd3",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2f347e134721b3b6ee825fca273ca056e5cedbd3\/comments",
            "author": {
                "login": "rellect",
                "id": 2431842,
                "node_id": "MDQ6VXNlcjI0MzE4NDI=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/2431842?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/rellect",
                "html_url": "https:\/\/github.com\/rellect",
                "followers_url": "https:\/\/api.github.com\/users\/rellect\/followers",
                "following_url": "https:\/\/api.github.com\/users\/rellect\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/rellect\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/rellect\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/rellect\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/rellect\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/rellect\/repos",
                "events_url": "https:\/\/api.github.com\/users\/rellect\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/rellect\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "rellect",
                "id": 2431842,
                "node_id": "MDQ6VXNlcjI0MzE4NDI=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/2431842?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/rellect",
                "html_url": "https:\/\/github.com\/rellect",
                "followers_url": "https:\/\/api.github.com\/users\/rellect\/followers",
                "following_url": "https:\/\/api.github.com\/users\/rellect\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/rellect\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/rellect\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/rellect\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/rellect\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/rellect\/repos",
                "events_url": "https:\/\/api.github.com\/users\/rellect\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/rellect\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b63e2de819acd7d571f2a51023484335eb31b6a0",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b63e2de819acd7d571f2a51023484335eb31b6a0",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b63e2de819acd7d571f2a51023484335eb31b6a0"
                }
            ]
        },
        {
            "sha": "6f56ce062c3f3d5a8036827963a32afc89f0d84b",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo2ZjU2Y2UwNjJjM2YzZDVhODAzNjgyNzk2M2EzMmFmYzg5ZjBkODRi",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T05:48:22Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-20T05:48:22Z"
                },
                "message": "Merge pull request #7464 from rellect\/composer_i\n\nAdd `composer i` shorthand for `composer install`",
                "tree": {
                    "sha": "898846f52cedae175adf98c66ec122eeff9bd938",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/898846f52cedae175adf98c66ec122eeff9bd938"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/6f56ce062c3f3d5a8036827963a32afc89f0d84b",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbUXemCRBK7hj4Ov3rIwAAdHIIAAd1mp8V4t+3eVFBLndJmob7\nVkxvM3wfSvnOt8wcFu0KS7+iohoo3kwZXZT6AVMRQHd8V8psAAjwucB3ojXgeXd8\n+797+ht420BG337volFsUlzzcYXqJf63wLx8m1vYZweIK+a+XiS6Xdg5REZ6MUc4\n5yW7nbxae5VhW1IDr8v4Pp2F9WMSKGNFPYy1HOzfzfehrMQbVeO23nmth27Upp11\ncIt\/dq5uHFUVKrQsTK04rwwbxK7bOT1pMZ9acEw\/BRkhz4tvpW6nSP9+4CTXgdNp\nxYlb3AnAf1dTlloLZgENZQGfApYu5curvjxzzfLjrUrn6amIdFAup2FTxFPybE4=\n=\/Vn6\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 898846f52cedae175adf98c66ec122eeff9bd938\nparent d64f95b70c7ccdd244d3cdeaccf9bd801968c1d8\nparent 2f347e134721b3b6ee825fca273ca056e5cedbd3\nauthor Jordi Boggiano <j.boggiano@seld.be> 1532065702 +0200\ncommitter GitHub <noreply@github.com> 1532065702 +0200\n\nMerge pull request #7464 from rellect\/composer_i\n\nAdd `composer i` shorthand for `composer install`"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6f56ce062c3f3d5a8036827963a32afc89f0d84b",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/6f56ce062c3f3d5a8036827963a32afc89f0d84b",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6f56ce062c3f3d5a8036827963a32afc89f0d84b\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "d64f95b70c7ccdd244d3cdeaccf9bd801968c1d8",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d64f95b70c7ccdd244d3cdeaccf9bd801968c1d8",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d64f95b70c7ccdd244d3cdeaccf9bd801968c1d8"
                },
                {
                    "sha": "2f347e134721b3b6ee825fca273ca056e5cedbd3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2f347e134721b3b6ee825fca273ca056e5cedbd3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2f347e134721b3b6ee825fca273ca056e5cedbd3"
                }
            ]
        },
        {
            "sha": "71d25851dfa90bd5da7f04ff1945302efd84e140",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3MWQyNTg1MWRmYTkwYmQ1ZGE3ZjA0ZmYxOTQ1MzAyZWZkODRlMTQw",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T09:21:17Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-20T09:21:17Z"
                },
                "message": "Merge pull request #7479 from staabm\/patch-2\n\nRemoved unused variables",
                "tree": {
                    "sha": "4464325e12d4f7e603a46c45310414f86bf0e17f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/4464325e12d4f7e603a46c45310414f86bf0e17f"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/71d25851dfa90bd5da7f04ff1945302efd84e140",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbUamNCRBK7hj4Ov3rIwAAdHIIACiCaaSVWAT4ASbUf7ecar7r\n8gAmTcJuVw8FMEMZdW7ZV+wzP9TcCLt27Ux8nsIdZn2yeP5xjpnlMwQRsWQjt1LK\nMCeVRWJhCXEx227jQ5+cOlUrfBfBX8\/YfXovVOcRVJWp1BOWN6PwyQmENMpX9fAn\nvf6JLx7vbcCu8apty7F3eXoCt0L7ALLg6A2f9tufiFqQS+8nYln7EoPSczylY6rc\n0NlSSosvlslXMQpZFVrIk3pxYW0Wpyzrfrw+vQ+U6O\/mTod69mx125mfvZX34X+Y\nCIfgfBOe8ljyn8iCrMzlOnSUrx3\/W9PpXOgfh2eqsZUsj\/r++4+kSxzm\/xoP3dU=\n=qeA1\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 4464325e12d4f7e603a46c45310414f86bf0e17f\nparent 6f56ce062c3f3d5a8036827963a32afc89f0d84b\nparent f7a1c34c9238dc09c031830c3ba633d576afd84d\nauthor Jordi Boggiano <j.boggiano@seld.be> 1532078477 +0200\ncommitter GitHub <noreply@github.com> 1532078477 +0200\n\nMerge pull request #7479 from staabm\/patch-2\n\nRemoved unused variables"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/71d25851dfa90bd5da7f04ff1945302efd84e140",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/71d25851dfa90bd5da7f04ff1945302efd84e140",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/71d25851dfa90bd5da7f04ff1945302efd84e140\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "6f56ce062c3f3d5a8036827963a32afc89f0d84b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6f56ce062c3f3d5a8036827963a32afc89f0d84b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/6f56ce062c3f3d5a8036827963a32afc89f0d84b"
                },
                {
                    "sha": "f7a1c34c9238dc09c031830c3ba633d576afd84d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f7a1c34c9238dc09c031830c3ba633d576afd84d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f7a1c34c9238dc09c031830c3ba633d576afd84d"
                }
            ]
        },
        {
            "sha": "0d92c8df63c266f04f1a1a2c55563bb4f80decd7",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowZDkyYzhkZjYzYzI2NmYwNGYxYTFhMmM1NTU2M2JiNGY4MGRlY2Q3",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T09:25:33Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-20T09:25:33Z"
                },
                "message": "Merge pull request #7480 from staabm\/patch-3\n\nSimplify Rule->getJob()",
                "tree": {
                    "sha": "e6b9d1bc27a3a3676c387470a99aae1192277a3c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e6b9d1bc27a3a3676c387470a99aae1192277a3c"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0d92c8df63c266f04f1a1a2c55563bb4f80decd7",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbUaqNCRBK7hj4Ov3rIwAAdHIIAHYZc+WWj5yWd+o8IBzYK6gS\ncoz\/XzUyzt\/JrK7aKa16cxZUz1eLEZSnVP8IJBYpGITTNgs2QMxBVAhAuRFaD5c8\nxZPbagtfmNR0Balou6PE8D6QNwTAxGoS0+4\/Au58y\/N5iJRQSDhCOklHryVE2ejI\nc+nDou+\/SBv\/lnPLNg7EfM0KiHUuovo6DwuDTfSOe3rCaZgwLJbBe47TfgQXchnj\n84ABnFQQp+xgN8m7GWFiTa3iNKu7zojPylDUGU+KBmoE+FEk+APEwguy6fv18xwp\nzUtYfAgIAAelndt3b5A7NuIci+IJ\/F\/\/FM9NFMaFvTEHYU+Lprog0tw2e6JR9jg=\n=63x6\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree e6b9d1bc27a3a3676c387470a99aae1192277a3c\nparent 71d25851dfa90bd5da7f04ff1945302efd84e140\nparent 05499099a0d967e348ee8eaf47c37bf245b12acc\nauthor Jordi Boggiano <j.boggiano@seld.be> 1532078733 +0200\ncommitter GitHub <noreply@github.com> 1532078733 +0200\n\nMerge pull request #7480 from staabm\/patch-3\n\nSimplify Rule->getJob()"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0d92c8df63c266f04f1a1a2c55563bb4f80decd7",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0d92c8df63c266f04f1a1a2c55563bb4f80decd7",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0d92c8df63c266f04f1a1a2c55563bb4f80decd7\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "71d25851dfa90bd5da7f04ff1945302efd84e140",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/71d25851dfa90bd5da7f04ff1945302efd84e140",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/71d25851dfa90bd5da7f04ff1945302efd84e140"
                },
                {
                    "sha": "05499099a0d967e348ee8eaf47c37bf245b12acc",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/05499099a0d967e348ee8eaf47c37bf245b12acc",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/05499099a0d967e348ee8eaf47c37bf245b12acc"
                }
            ]
        },
        {
            "sha": "945adcf172d3c0bfba357e3ca6160104eacac46c",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo5NDVhZGNmMTcyZDNjMGJmYmEzNTdlM2NhNjE2MDEwNGVhY2FjNDZj",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T09:38:49Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T09:38:58Z"
                },
                "message": "Fix doc ambiguity, fixes #7471",
                "tree": {
                    "sha": "8655ca1a08ad67f2f4773c1ad165811449164471",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/8655ca1a08ad67f2f4773c1ad165811449164471"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/945adcf172d3c0bfba357e3ca6160104eacac46c",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/945adcf172d3c0bfba357e3ca6160104eacac46c",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/945adcf172d3c0bfba357e3ca6160104eacac46c",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/945adcf172d3c0bfba357e3ca6160104eacac46c\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0d92c8df63c266f04f1a1a2c55563bb4f80decd7",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0d92c8df63c266f04f1a1a2c55563bb4f80decd7",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0d92c8df63c266f04f1a1a2c55563bb4f80decd7"
                }
            ]
        },
        {
            "sha": "16af52be8a6dd4409e5a2b07cb1c5ea129843bd5",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxNmFmNTJiZThhNmRkNDQwOWU1YTJiMDdjYjFjNWVhMTI5ODQzYmQ1",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T09:39:44Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T09:39:44Z"
                },
                "message": "Merge remote-tracking branch 'origin\/1.6'",
                "tree": {
                    "sha": "52840e5b49dbe821586db5b02afed0a6079af380",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/52840e5b49dbe821586db5b02afed0a6079af380"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/16af52be8a6dd4409e5a2b07cb1c5ea129843bd5",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/16af52be8a6dd4409e5a2b07cb1c5ea129843bd5",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/16af52be8a6dd4409e5a2b07cb1c5ea129843bd5",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/16af52be8a6dd4409e5a2b07cb1c5ea129843bd5\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "945adcf172d3c0bfba357e3ca6160104eacac46c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/945adcf172d3c0bfba357e3ca6160104eacac46c",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/945adcf172d3c0bfba357e3ca6160104eacac46c"
                },
                {
                    "sha": "bbee0a6d857a4a06b1830430959fecc233e4b59d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bbee0a6d857a4a06b1830430959fecc233e4b59d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bbee0a6d857a4a06b1830430959fecc233e4b59d"
                }
            ]
        },
        {
            "sha": "145db9ff52d59432c5bb6bbfdaa76fb128fe1d2e",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxNDVkYjlmZjUyZDU5NDMyYzViYjZiYmZkYWE3NmZiMTI4ZmUxZDJl",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T09:47:09Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-20T09:47:09Z"
                },
                "message": "Merge pull request #7478 from staabm\/patch-1\n\nprevent preg_replace() calls when cache is not enabled",
                "tree": {
                    "sha": "e71c9829df00501c6c24e89c3c47af0d6dbf1b24",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e71c9829df00501c6c24e89c3c47af0d6dbf1b24"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/145db9ff52d59432c5bb6bbfdaa76fb128fe1d2e",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbUa+dCRBK7hj4Ov3rIwAAdHIIAF+39N+kPzZyrq9NJVLGNPxF\nkOSVEnnBmd\/HG68tlC1vgLF6tfBOXLsW\/C6bkctdGLknIprqozHJD4DwJSKKATpF\nBZXWssWGfrXTZsH1nv8d63Q81hjtwiOuktoGSvtQdlIgpCb0EYmQtsPt+s3LwXuw\nX8CibE2NzUJemLRRWeon2e+RVEsc8tOr4Zdp2YWCW\/7IR0GY61lL+qMhovc5lvkk\n0iZzCYouskNppZcyRN4NDDGuRPBXgKxDn2\/\/b42u6fAfY\/FR3Tjqg9zMcD\/HM6Pz\nd5AAm7lIZPr290vj5RuGuLYm0AgE+aNfeq\/mJjDG9YNppcjUF8NuwNBG3t73LF8=\n=yfZO\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree e71c9829df00501c6c24e89c3c47af0d6dbf1b24\nparent 16af52be8a6dd4409e5a2b07cb1c5ea129843bd5\nparent 3b647f8686b123e8cc91fb3b1c9e4221e02d63fb\nauthor Jordi Boggiano <j.boggiano@seld.be> 1532080029 +0200\ncommitter GitHub <noreply@github.com> 1532080029 +0200\n\nMerge pull request #7478 from staabm\/patch-1\n\nprevent preg_replace() calls when cache is not enabled"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/145db9ff52d59432c5bb6bbfdaa76fb128fe1d2e",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/145db9ff52d59432c5bb6bbfdaa76fb128fe1d2e",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/145db9ff52d59432c5bb6bbfdaa76fb128fe1d2e\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "16af52be8a6dd4409e5a2b07cb1c5ea129843bd5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/16af52be8a6dd4409e5a2b07cb1c5ea129843bd5",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/16af52be8a6dd4409e5a2b07cb1c5ea129843bd5"
                },
                {
                    "sha": "3b647f8686b123e8cc91fb3b1c9e4221e02d63fb",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3b647f8686b123e8cc91fb3b1c9e4221e02d63fb",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3b647f8686b123e8cc91fb3b1c9e4221e02d63fb"
                }
            ]
        },
        {
            "sha": "28fdc842ee29706b1a108f73edfde91cfc64a1a5",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyOGZkYzg0MmVlMjk3MDZiMWExMDhmNzNlZGZkZTkxY2ZjNjRhMWE1",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T09:57:58Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-20T09:57:58Z"
                },
                "message": "Merge pull request #7423 from localheinz\/feature\/normalize\n\nEnhancement: Normalize composer.json",
                "tree": {
                    "sha": "250e2811fd406e5c64e93ec6c007895921c29eb9",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/250e2811fd406e5c64e93ec6c007895921c29eb9"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/28fdc842ee29706b1a108f73edfde91cfc64a1a5",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbUbImCRBK7hj4Ov3rIwAAdHIIAC+VUGjIWvliL7kznrwzpxve\nO3\/h34L3+ghMFXBZ0Fk812WmMuYjJPiscCNdMvLeQ5XyfPsXJfLVWcL3OdU3jIOe\n4CnTKNhT6HG70PHqiq1vTr8FfHJ8ZbrynIn4fWLHlJelQnuyM2Rklem3amBRk\/Kb\nUki2pzwGpFBwSPfh5zrMGYnrZ27vnnHXZkHXNgosx9sREFEdKSQbLIxx\/YEA0QRo\nZ\/Kr9wIESDm5qXu4wNCO55tk9FlqXgXfa0u0fFurn32MfQrDsytoqDBDEn4IzCOf\nuY1PYOh8L1yCSYOq4nHoY30r0wt3spBy3UYR6VdMsWh3UclXsFOPEABsf7K6KcI=\n=RkcS\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 250e2811fd406e5c64e93ec6c007895921c29eb9\nparent 145db9ff52d59432c5bb6bbfdaa76fb128fe1d2e\nparent e0022f69dadef49723c68b3825ebc1db5e457798\nauthor Jordi Boggiano <j.boggiano@seld.be> 1532080678 +0200\ncommitter GitHub <noreply@github.com> 1532080678 +0200\n\nMerge pull request #7423 from localheinz\/feature\/normalize\n\nEnhancement: Normalize composer.json"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/28fdc842ee29706b1a108f73edfde91cfc64a1a5",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/28fdc842ee29706b1a108f73edfde91cfc64a1a5",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/28fdc842ee29706b1a108f73edfde91cfc64a1a5\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "145db9ff52d59432c5bb6bbfdaa76fb128fe1d2e",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/145db9ff52d59432c5bb6bbfdaa76fb128fe1d2e",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/145db9ff52d59432c5bb6bbfdaa76fb128fe1d2e"
                },
                {
                    "sha": "e0022f69dadef49723c68b3825ebc1db5e457798",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e0022f69dadef49723c68b3825ebc1db5e457798",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e0022f69dadef49723c68b3825ebc1db5e457798"
                }
            ]
        },
        {
            "sha": "1983a450b44916f4d9f8a7561bed1611c04532a5",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxOTgzYTQ1MGI0NDkxNmY0ZDlmOGE3NTYxYmVkMTYxMWMwNDUzMmE1",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T09:44:54Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T10:03:08Z"
                },
                "message": "Use rawurldecode instead of urldecode, fixes #7407",
                "tree": {
                    "sha": "829abd28c7c65bdb3a3dc97ebf05cd0dc1fab87c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/829abd28c7c65bdb3a3dc97ebf05cd0dc1fab87c"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/1983a450b44916f4d9f8a7561bed1611c04532a5",
                "comment_count": 1,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1983a450b44916f4d9f8a7561bed1611c04532a5",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1983a450b44916f4d9f8a7561bed1611c04532a5",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1983a450b44916f4d9f8a7561bed1611c04532a5\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "28fdc842ee29706b1a108f73edfde91cfc64a1a5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/28fdc842ee29706b1a108f73edfde91cfc64a1a5",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/28fdc842ee29706b1a108f73edfde91cfc64a1a5"
                }
            ]
        },
        {
            "sha": "d5a9d86ee4e934d06073521e630556d4f337629c",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkNWE5ZDg2ZWU0ZTkzNGQwNjA3MzUyMWU2MzA1NTZkNGYzMzc2Mjlj",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T10:02:31Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T10:03:08Z"
                },
                "message": "Undo reformatting from #7441",
                "tree": {
                    "sha": "d6931c4232a3ae753f50fc407e64d443a540998d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/d6931c4232a3ae753f50fc407e64d443a540998d"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/d5a9d86ee4e934d06073521e630556d4f337629c",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d5a9d86ee4e934d06073521e630556d4f337629c",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d5a9d86ee4e934d06073521e630556d4f337629c",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d5a9d86ee4e934d06073521e630556d4f337629c\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "1983a450b44916f4d9f8a7561bed1611c04532a5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1983a450b44916f4d9f8a7561bed1611c04532a5",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1983a450b44916f4d9f8a7561bed1611c04532a5"
                }
            ]
        },
        {
            "sha": "00fdb5555cb4986bb0135f07e24f36b46df1d0f9",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowMGZkYjU1NTVjYjQ5ODZiYjAxMzVmMDdlMjRmMzZiNDZkZjFkMGY5",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T11:48:39Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-20T11:48:39Z"
                },
                "message": "Update lock file",
                "tree": {
                    "sha": "6896bd694780045b20463483511893351d9f8f62",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/6896bd694780045b20463483511893351d9f8f62"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/00fdb5555cb4986bb0135f07e24f36b46df1d0f9",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/00fdb5555cb4986bb0135f07e24f36b46df1d0f9",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/00fdb5555cb4986bb0135f07e24f36b46df1d0f9",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/00fdb5555cb4986bb0135f07e24f36b46df1d0f9\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "d5a9d86ee4e934d06073521e630556d4f337629c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d5a9d86ee4e934d06073521e630556d4f337629c",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d5a9d86ee4e934d06073521e630556d4f337629c"
                }
            ]
        },
        {
            "sha": "0db48b4f2e84ae4f177189e6a21383eabd26ea1a",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowZGI0OGI0ZjJlODRhZTRmMTc3MTg5ZTZhMjEzODNlYWJkMjZlYTFh",
            "commit": {
                "author": {
                    "name": "Rob Bast",
                    "email": "rob.bast@gmail.com",
                    "date": "2018-07-23T05:53:12Z"
                },
                "committer": {
                    "name": "Rob Bast",
                    "email": "rob.bast@gmail.com",
                    "date": "2018-07-23T05:53:12Z"
                },
                "message": "addendum to #7428",
                "tree": {
                    "sha": "843014faf16788c0d86063155d54a42f05ed8798",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/843014faf16788c0d86063155d54a42f05ed8798"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0db48b4f2e84ae4f177189e6a21383eabd26ea1a",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGecr0DIm\/bmCAArScwduNeYWXzkFAltVbVcACgkQcwduNeYW\nXzlCrxAAkElxEK6KuaCZjaHFAbNSbc0HGyO82v\/3ZwBOSIib79ALRAwKkOFrml62\nPM2xnHupWhKMyeJJdN9iQKRBvx6C2i+uXHSy7wT3DUjDJLlfV3pCiYniuTA5iOyF\ntkSa\/Asbaw4XV+vfT6qC8dZmHQJ0nrHs0yUQNCAg2+RcFPuJrunN1FPiiDAyRyGg\neLeTD1pyxIRhKO2wWadeekX0E\/gwzmhvkZ2oIcLPcdhCH8VYJbqL8MeZIgGhrUTF\nKYVlubeviAARzcx5r46NoBVrEz0R9AKDiyar036JKtpuSR+h7\/4AckLG\/9TITlIb\nwzaxWEgIgFpBexXeVjHuNZbk\/W9u4kC4R3c9+5aUXn9gCM23+XQc0dwEDYm6duua\n2hzFBret9NIqYZNiyT76dS7wLgcLRWmRQVoLHewOh1173YeEAWN9pMo3KmePMPJl\nBtNES2McIhzBD8iAXKpSk56c5fKHc35LKsy0qM23bposcTNVVU94jwd9S6H6cgfZ\nVE5coDciivSAwwk5cfFIMVH1HhD816aMOeORdeY1HUzcLl6+XdEQMXXdi2jJjLfs\n4aXUUKMtyl\/SD3069X+gYT4K3bU1vyrBQBfaoqwFe\/JJ2qQRxuVlOjMnZEGLHeYg\nzyoxM\/SfOduls5uQ95A4Rbb7feLTChyK+vE\/3XSnSbLQPkJ9v6Q=\n=C+1N\n-----END PGP SIGNATURE-----",
                    "payload": "tree 843014faf16788c0d86063155d54a42f05ed8798\nparent bbee0a6d857a4a06b1830430959fecc233e4b59d\nauthor Rob Bast <rob.bast@gmail.com> 1532325192 +0200\ncommitter Rob Bast <rob.bast@gmail.com> 1532325192 +0200\n\naddendum to #7428\n"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0db48b4f2e84ae4f177189e6a21383eabd26ea1a",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0db48b4f2e84ae4f177189e6a21383eabd26ea1a",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0db48b4f2e84ae4f177189e6a21383eabd26ea1a\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "bbee0a6d857a4a06b1830430959fecc233e4b59d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bbee0a6d857a4a06b1830430959fecc233e4b59d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bbee0a6d857a4a06b1830430959fecc233e4b59d"
                }
            ]
        },
        {
            "sha": "10f707e3169dafebb345a03e75c9e66c2a57335b",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxMGY3MDdlMzE2OWRhZmViYjM0NWEwM2U3NWM5ZTY2YzJhNTczMzVi",
            "commit": {
                "author": {
                    "name": "Tom\u00e1\u0161 Votruba",
                    "email": "info@tomasvotruba.cz",
                    "date": "2018-07-23T16:49:39Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-23T16:49:39Z"
                },
                "message": "basic usage - promote safe version range\n\nI'm aware this just an example, but it [leads readers to see it a best practise](https:\/\/github.com\/Automattic\/phpcs-neutron-standard\/commit\/40642df5ec9ea39871f1b99ada7fa34976169788#r29802440).\r\n\r\nHaving code with `\"php\": \">=5.4.0\"` is pretty dangerous and will probably break with next major version.\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"php\": \"^5.4\"\r\n    }\r\n}\r\n```\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"php\": \"^7.1\"\r\n    }\r\n}\r\n```\r\n\r\nis much more safer. Promoting best and proven practise should from *Basic usage* helps people to use composer the best way they can.\r\n\r\nWhat do you think?",
                "tree": {
                    "sha": "8e29c9c7100675159aeccefc0d6fbacd92553ad7",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/8e29c9c7100675159aeccefc0d6fbacd92553ad7"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/10f707e3169dafebb345a03e75c9e66c2a57335b",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbVgcjCRBK7hj4Ov3rIwAAdHIIAGwwWFw\/cmtGlNkWDbyryZLN\nnlDgXaNMd3EXJXrrfOyULPfR16sndQhZRe5BsrI7kke6c8UVF\/5fO1XMHvm7aTje\n0FG464zDp12GD1UAsxNo8kiif5lGKMeR0HP+guZSC82\/ek8rT4Y74AM\/GfjJhSd8\n75iz5T8Nqj+METgUeBbJ64o4JLrcOhtjzywbmS8K85d2vT9Jw81cFSY7S2FZJsiW\nUw5R24YKHQjxhUuMnDEDJdjon6fTylO2UVVa+M9a7fIwSa3xDOumQjCagmeZLBPo\nk1uAv+EDzguOuS3\/PB0Vw9XTFUhkbCaY9FgxDjOKAoFvsR2\/fAAF5BUh+gSqoGU=\n=w4OU\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 8e29c9c7100675159aeccefc0d6fbacd92553ad7\nparent 00fdb5555cb4986bb0135f07e24f36b46df1d0f9\nauthor Tom\u00e1\u0161 Votruba <info@tomasvotruba.cz> 1532364579 +0200\ncommitter GitHub <noreply@github.com> 1532364579 +0200\n\nbasic usage - promote safe version range\n\nI'm aware this just an example, but it [leads readers to see it a best practise](https:\/\/github.com\/Automattic\/phpcs-neutron-standard\/commit\/40642df5ec9ea39871f1b99ada7fa34976169788#r29802440).\r\n\r\nHaving code with `\"php\": \">=5.4.0\"` is pretty dangerous and will probably break with next major version.\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"php\": \"^5.4\"\r\n    }\r\n}\r\n```\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"php\": \"^7.1\"\r\n    }\r\n}\r\n```\r\n\r\nis much more safer. Promoting best and proven practise should from *Basic usage* helps people to use composer the best way they can.\r\n\r\nWhat do you think?"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/10f707e3169dafebb345a03e75c9e66c2a57335b",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/10f707e3169dafebb345a03e75c9e66c2a57335b",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/10f707e3169dafebb345a03e75c9e66c2a57335b\/comments",
            "author": null,
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "00fdb5555cb4986bb0135f07e24f36b46df1d0f9",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/00fdb5555cb4986bb0135f07e24f36b46df1d0f9",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/00fdb5555cb4986bb0135f07e24f36b46df1d0f9"
                }
            ]
        },
        {
            "sha": "fd25474660254f496ee70e3e92898de90e66ed9f",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpmZDI1NDc0NjYwMjU0ZjQ5NmVlNzBlM2U5Mjg5OGRlOTBlNjZlZDlm",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-23T17:32:42Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-23T17:32:42Z"
                },
                "message": "Merge pull request #7483 from TomasVotruba\/patch-2\n\n[docs] basic usage - promote safe version range",
                "tree": {
                    "sha": "8e29c9c7100675159aeccefc0d6fbacd92553ad7",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/8e29c9c7100675159aeccefc0d6fbacd92553ad7"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/fd25474660254f496ee70e3e92898de90e66ed9f",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbVhE6CRBK7hj4Ov3rIwAAdHIIAHgnA5rzouGSXMt49lrlzCy6\n+Dvxts83csSG1wQss9GoxGJFqpr1aJpv6u\/bUGGP089XMPjStG9UHRZq3DwonTtY\ncdRkFFNEqfvvYtbNpkVqX1CvZCA2Yo8rCuU\/SPAVQBhbM5w196M7lP51mq73oiQ9\nqMUvu4jGELLq8sGuuUGnrO2bocgZ+AQSaQcU8l1T+OPLQuQ7IY1FvPre2JZ5ZFLs\ndhCTeiT5vQkWlRZL4Y2uG4vuZAHWMYUF0A5\/hNux0Ct1E53hlJ6Bm9PzSGsd54TD\nak83hSzcF4ePswOr\/bnOJIwOg+GYRFGd6jjqt7n7UkxDL0jBSOCKHIAx+yBRE1s=\n=dQzS\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 8e29c9c7100675159aeccefc0d6fbacd92553ad7\nparent 00fdb5555cb4986bb0135f07e24f36b46df1d0f9\nparent 10f707e3169dafebb345a03e75c9e66c2a57335b\nauthor Jordi Boggiano <j.boggiano@seld.be> 1532367162 +0200\ncommitter GitHub <noreply@github.com> 1532367162 +0200\n\nMerge pull request #7483 from TomasVotruba\/patch-2\n\n[docs] basic usage - promote safe version range"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/fd25474660254f496ee70e3e92898de90e66ed9f",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/fd25474660254f496ee70e3e92898de90e66ed9f",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/fd25474660254f496ee70e3e92898de90e66ed9f\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "00fdb5555cb4986bb0135f07e24f36b46df1d0f9",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/00fdb5555cb4986bb0135f07e24f36b46df1d0f9",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/00fdb5555cb4986bb0135f07e24f36b46df1d0f9"
                },
                {
                    "sha": "10f707e3169dafebb345a03e75c9e66c2a57335b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/10f707e3169dafebb345a03e75c9e66c2a57335b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/10f707e3169dafebb345a03e75c9e66c2a57335b"
                }
            ]
        },
        {
            "sha": "2f69739c1ac32ccdb63b9d1c1b958c325d647fd3",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyZjY5NzM5YzFhYzMyY2NkYjYzYjlkMWMxYjk1OGMzMjVkNjQ3ZmQz",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-23T17:41:08Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-23T17:41:08Z"
                },
                "message": "Merge remote-tracking branch 'origin\/1.6'",
                "tree": {
                    "sha": "eec458d5db67305d4cb9548a6d8b1dc0fad251fc",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/eec458d5db67305d4cb9548a6d8b1dc0fad251fc"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/2f69739c1ac32ccdb63b9d1c1b958c325d647fd3",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2f69739c1ac32ccdb63b9d1c1b958c325d647fd3",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2f69739c1ac32ccdb63b9d1c1b958c325d647fd3",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2f69739c1ac32ccdb63b9d1c1b958c325d647fd3\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "fd25474660254f496ee70e3e92898de90e66ed9f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/fd25474660254f496ee70e3e92898de90e66ed9f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/fd25474660254f496ee70e3e92898de90e66ed9f"
                },
                {
                    "sha": "0db48b4f2e84ae4f177189e6a21383eabd26ea1a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0db48b4f2e84ae4f177189e6a21383eabd26ea1a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0db48b4f2e84ae4f177189e6a21383eabd26ea1a"
                }
            ]
        },
        {
            "sha": "c5fa3bdde0e042b64e32102c21edb2e12e474746",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpjNWZhM2JkZGUwZTA0MmI2NGUzMjEwMmMyMWVkYjJlMTJlNDc0NzQ2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-24T07:30:06Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-24T07:30:06Z"
                },
                "message": "Migrate to repo.packagist.org for package metadata",
                "tree": {
                    "sha": "d461a76dbdc602b9148040b157303969e4c698e4",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/d461a76dbdc602b9148040b157303969e4c698e4"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/c5fa3bdde0e042b64e32102c21edb2e12e474746",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c5fa3bdde0e042b64e32102c21edb2e12e474746",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c5fa3bdde0e042b64e32102c21edb2e12e474746",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c5fa3bdde0e042b64e32102c21edb2e12e474746\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "2f69739c1ac32ccdb63b9d1c1b958c325d647fd3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2f69739c1ac32ccdb63b9d1c1b958c325d647fd3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2f69739c1ac32ccdb63b9d1c1b958c325d647fd3"
                }
            ]
        },
        {
            "sha": "3f9e85a4c32a210d142e06612693a728715562ea",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozZjllODVhNGMzMmEyMTBkMTQyZTA2NjEyNjkzYTcyODcxNTU2MmVh",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-24T08:51:43Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-24T08:51:43Z"
                },
                "message": "Merge remote-tracking branch 'unglud\/feature\/show-tree-json'",
                "tree": {
                    "sha": "866b223812569b49dc31cf55fbedcfb968177d71",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/866b223812569b49dc31cf55fbedcfb968177d71"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/3f9e85a4c32a210d142e06612693a728715562ea",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3f9e85a4c32a210d142e06612693a728715562ea",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3f9e85a4c32a210d142e06612693a728715562ea",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3f9e85a4c32a210d142e06612693a728715562ea\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "c5fa3bdde0e042b64e32102c21edb2e12e474746",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c5fa3bdde0e042b64e32102c21edb2e12e474746",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c5fa3bdde0e042b64e32102c21edb2e12e474746"
                },
                {
                    "sha": "7221e4ea4ee63d0fd03dae62dfe21990d2faf7d0",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7221e4ea4ee63d0fd03dae62dfe21990d2faf7d0",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7221e4ea4ee63d0fd03dae62dfe21990d2faf7d0"
                }
            ]
        },
        {
            "sha": "02d56da41407d7c1a19a9fc79fc3dbba06f08927",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowMmQ1NmRhNDE0MDdkN2MxYTE5YTlmYzc5ZmMzZGJiYTA2ZjA4OTI3",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-24T11:45:41Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-24T11:45:41Z"
                },
                "message": "Update deps",
                "tree": {
                    "sha": "d2c2f554014e4f62bdee68028fc37f93ef42a4a6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/d2c2f554014e4f62bdee68028fc37f93ef42a4a6"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/02d56da41407d7c1a19a9fc79fc3dbba06f08927",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/02d56da41407d7c1a19a9fc79fc3dbba06f08927",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/02d56da41407d7c1a19a9fc79fc3dbba06f08927",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/02d56da41407d7c1a19a9fc79fc3dbba06f08927\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "3f9e85a4c32a210d142e06612693a728715562ea",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3f9e85a4c32a210d142e06612693a728715562ea",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3f9e85a4c32a210d142e06612693a728715562ea"
                }
            ]
        },
        {
            "sha": "ff59bbdab0fb5bef212f291bbf9f152c7467fd7d",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpmZjU5YmJkYWIwZmI1YmVmMjEyZjI5MWJiZjlmMTUyYzc0NjdmZDdk",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-24T12:32:52Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-24T12:32:52Z"
                },
                "message": "CS fixer",
                "tree": {
                    "sha": "d073547c6e2fae01456a35c2b5d251b63f05b9dd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/d073547c6e2fae01456a35c2b5d251b63f05b9dd"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/ff59bbdab0fb5bef212f291bbf9f152c7467fd7d",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ff59bbdab0fb5bef212f291bbf9f152c7467fd7d",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ff59bbdab0fb5bef212f291bbf9f152c7467fd7d",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ff59bbdab0fb5bef212f291bbf9f152c7467fd7d\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "02d56da41407d7c1a19a9fc79fc3dbba06f08927",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/02d56da41407d7c1a19a9fc79fc3dbba06f08927",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/02d56da41407d7c1a19a9fc79fc3dbba06f08927"
                }
            ]
        },
        {
            "sha": "158e1c95da02cc0b932de74f9a09a1c7b6cf654f",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxNThlMWM5NWRhMDJjYzBiOTMyZGU3NGY5YTA5YTFjN2I2Y2Y2NTRm",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-24T12:33:38Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-24T12:33:38Z"
                },
                "message": "Prepare changelog",
                "tree": {
                    "sha": "7383d03845aa11f5a46ee8b538ff2a057b7aac53",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/7383d03845aa11f5a46ee8b538ff2a057b7aac53"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/158e1c95da02cc0b932de74f9a09a1c7b6cf654f",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/158e1c95da02cc0b932de74f9a09a1c7b6cf654f",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/158e1c95da02cc0b932de74f9a09a1c7b6cf654f",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/158e1c95da02cc0b932de74f9a09a1c7b6cf654f\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "ff59bbdab0fb5bef212f291bbf9f152c7467fd7d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ff59bbdab0fb5bef212f291bbf9f152c7467fd7d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ff59bbdab0fb5bef212f291bbf9f152c7467fd7d"
                }
            ]
        },
        {
            "sha": "76bf6bdf972eabca66bc0d2eb5c5f49796166e40",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3NmJmNmJkZjk3MmVhYmNhNjZiYzBkMmViNWM1ZjQ5Nzk2MTY2ZTQw",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-24T16:20:04Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-24T16:20:04Z"
                },
                "message": "Fixed typo",
                "tree": {
                    "sha": "08f0789dcf19be551ba2634b490aea452d8eb5e1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/08f0789dcf19be551ba2634b490aea452d8eb5e1"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/76bf6bdf972eabca66bc0d2eb5c5f49796166e40",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbV1G0CRBK7hj4Ov3rIwAAdHIIAKUW7sPOhiH9JheBKsvppzHP\nNQ3HUls0MdYp6kgHiHYC5Gkv+KQjrpKeLsD\/i5\/cZmTMNVNc2AB\/8I5RQW89HA1E\nivWyFOv8zzXIVC0HTfjIxvucAT0S\/kYacdNanuyWj4IQ9fHiPpNZ1Z\/QNf1hz+69\nE5IhTq71jIlA2GvdZTlhV7C9KI4fYA4+Xn9KFYlcmi76JYUUSu3q8u5XVYWsV4VR\nPJMM5SVMPPBXmTPf8dzhTJgLTAQmTyKW+SdtkoN1Rj1Z\/ue7d0f1tnsvLcjG56qA\nZ2kVdmxF6AfWs+eqwmfTlgQN1l5jfNIiQdVFFAUxToXUbjI8N1Fe2ot9yxjMUFM=\n=FoXa\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 08f0789dcf19be551ba2634b490aea452d8eb5e1\nparent 158e1c95da02cc0b932de74f9a09a1c7b6cf654f\nauthor Markus Staab <markus.staab@redaxo.de> 1532449204 +0200\ncommitter GitHub <noreply@github.com> 1532449204 +0200\n\nFixed typo"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/76bf6bdf972eabca66bc0d2eb5c5f49796166e40",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/76bf6bdf972eabca66bc0d2eb5c5f49796166e40",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/76bf6bdf972eabca66bc0d2eb5c5f49796166e40\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "158e1c95da02cc0b932de74f9a09a1c7b6cf654f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/158e1c95da02cc0b932de74f9a09a1c7b6cf654f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/158e1c95da02cc0b932de74f9a09a1c7b6cf654f"
                }
            ]
        },
        {
            "sha": "eb94f8346a8b2d963ff3563d726030acdbfe1aaa",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplYjk0ZjgzNDZhOGIyZDk2M2ZmMzU2M2Q3MjYwMzBhY2RiZmUxYWFh",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-07-24T16:21:40Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-24T16:21:40Z"
                },
                "message": "Fixed typo",
                "tree": {
                    "sha": "b46cf29d0d1f505e5b2a8082f57ae18b298d9ab8",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/b46cf29d0d1f505e5b2a8082f57ae18b298d9ab8"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/eb94f8346a8b2d963ff3563d726030acdbfe1aaa",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbV1IUCRBK7hj4Ov3rIwAAdHIIABylD5bEORaokH3fecyaXvxC\nCA0TBNPOoI511+cPmEX6QNIV25f+J4vodqNhcYdeIXL7y2zFR+0hM7KQdAk+s63A\n2vtuBaSJzVJOvMv4qf0EZOoODdFIGXjwtwVUQgawVgArvWvwXaR44BRYxkrQbjRk\nyrAeWKGn\/UwhCJviKAYP+\/6s7E6i6y5o8ub5PA57NxktLSxaH\/r3AeM7vMcLB4pu\n3qpC0pZ8Kig8B5H2Rg+VhSkFfGb+PfYPb1JLsp+s0hSN0rMflEz4VR7+NXWy+EnK\nwlx7yoUwK0db91eYSoJCDjlRQxV4Y6TA34Gewlktk4PhXlzM1ftE1X2sj+3PFJU=\n=ThuX\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree b46cf29d0d1f505e5b2a8082f57ae18b298d9ab8\nparent 158e1c95da02cc0b932de74f9a09a1c7b6cf654f\nauthor Markus Staab <markus.staab@redaxo.de> 1532449300 +0200\ncommitter GitHub <noreply@github.com> 1532449300 +0200\n\nFixed typo"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/eb94f8346a8b2d963ff3563d726030acdbfe1aaa",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/eb94f8346a8b2d963ff3563d726030acdbfe1aaa",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/eb94f8346a8b2d963ff3563d726030acdbfe1aaa\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "158e1c95da02cc0b932de74f9a09a1c7b6cf654f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/158e1c95da02cc0b932de74f9a09a1c7b6cf654f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/158e1c95da02cc0b932de74f9a09a1c7b6cf654f"
                }
            ]
        },
        {
            "sha": "f70f1c30193655b746f4757dce37c8ab3b40f6e9",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpmNzBmMWMzMDE5MzY1NWI3NDZmNDc1N2RjZTM3YzhhYjNiNDBmNmU5",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-24T19:44:06Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-24T19:44:06Z"
                },
                "message": "Merge pull request #7488 from staabm\/patch-2\n\nFixed typo",
                "tree": {
                    "sha": "b46cf29d0d1f505e5b2a8082f57ae18b298d9ab8",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/b46cf29d0d1f505e5b2a8082f57ae18b298d9ab8"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/f70f1c30193655b746f4757dce37c8ab3b40f6e9",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbV4GGCRBK7hj4Ov3rIwAAdHIIACYDKy549OhBC6eOa5CFq5MZ\n6P4d9sN3VUcpC63toioE49\/+kD4lnWzmTENlmrB8HeUVcJiwJZKM76Lm07+vFxLY\ncxVhF0rujqG9i1awFEaUXJLi8uRWPgTX8ap0EbIdtAicLBkLqZG\/MrwSk5Kio83r\n1GpUxR\/XM9hIFInmgQSIFfLKy1euwAHoJ39RcP5vTO5QAkYP08vFcP20M9gTLIA6\nn7WaMw8YTB0hRz71IVzWsCFzLKmgae+38EpIhf9QxDE6ANsKFhqvKtMpJ9ptu9A0\nJ117gAR8Tk+hq7cLfLUgwEWmHwEoMg8gVIHfiQKEZlkQ763GlOW\/+yVZuTyFxSE=\n=+JYW\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree b46cf29d0d1f505e5b2a8082f57ae18b298d9ab8\nparent 158e1c95da02cc0b932de74f9a09a1c7b6cf654f\nparent eb94f8346a8b2d963ff3563d726030acdbfe1aaa\nauthor Jordi Boggiano <j.boggiano@seld.be> 1532461446 +0200\ncommitter GitHub <noreply@github.com> 1532461446 +0200\n\nMerge pull request #7488 from staabm\/patch-2\n\nFixed typo"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f70f1c30193655b746f4757dce37c8ab3b40f6e9",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f70f1c30193655b746f4757dce37c8ab3b40f6e9",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f70f1c30193655b746f4757dce37c8ab3b40f6e9\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "158e1c95da02cc0b932de74f9a09a1c7b6cf654f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/158e1c95da02cc0b932de74f9a09a1c7b6cf654f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/158e1c95da02cc0b932de74f9a09a1c7b6cf654f"
                },
                {
                    "sha": "eb94f8346a8b2d963ff3563d726030acdbfe1aaa",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/eb94f8346a8b2d963ff3563d726030acdbfe1aaa",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/eb94f8346a8b2d963ff3563d726030acdbfe1aaa"
                }
            ]
        },
        {
            "sha": "8eae15182c171bc33fc558c1f88ea3e832674c3c",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4ZWFlMTUxODJjMTcxYmMzM2ZjNTU4YzFmODhlYTNlODMyNjc0YzNj",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-24T19:44:27Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-24T19:44:27Z"
                },
                "message": "Merge pull request #7487 from staabm\/patch-1\n\nFixed typo",
                "tree": {
                    "sha": "59c09b5c46ca51c143e35f76a9a756bec64c6654",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/59c09b5c46ca51c143e35f76a9a756bec64c6654"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/8eae15182c171bc33fc558c1f88ea3e832674c3c",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbV4GbCRBK7hj4Ov3rIwAAdHIIACv6dFZO0OUTNz+jjpeIQi\/d\n3b1bjCKKyYve2FeiqGHlW3nRq3pQ0Y981Tk7sydIa2si8VJ4hDJQfcvX9ZNUDf\/Q\nm8G7mMcvMH+Cmd868ExJlUIIvnkTaqmMEs6dHkoZ5\/LzqtVpnabDE3P4RU87eBBk\nXTzCQ+pMcyL\/teJAQYwrQqg8WfuuyvoTAdc34ZbWkxfF6IvRup73eugy\/XwJlkfZ\nEE3XJneduSDDOZhAu2FUfOEx+Lr31oTAO4h7yBr1pFuxbUysbXIrn9Yq9VikQu2U\nrDu8aSxg+uUwgZh6zEaeHnXrbruirpw0GqNHATCj4exKitnwbHuxmiDyxl9Aakg=\n=s5jV\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 59c09b5c46ca51c143e35f76a9a756bec64c6654\nparent f70f1c30193655b746f4757dce37c8ab3b40f6e9\nparent 76bf6bdf972eabca66bc0d2eb5c5f49796166e40\nauthor Jordi Boggiano <j.boggiano@seld.be> 1532461467 +0200\ncommitter GitHub <noreply@github.com> 1532461467 +0200\n\nMerge pull request #7487 from staabm\/patch-1\n\nFixed typo"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8eae15182c171bc33fc558c1f88ea3e832674c3c",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/8eae15182c171bc33fc558c1f88ea3e832674c3c",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8eae15182c171bc33fc558c1f88ea3e832674c3c\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f70f1c30193655b746f4757dce37c8ab3b40f6e9",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f70f1c30193655b746f4757dce37c8ab3b40f6e9",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f70f1c30193655b746f4757dce37c8ab3b40f6e9"
                },
                {
                    "sha": "76bf6bdf972eabca66bc0d2eb5c5f49796166e40",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/76bf6bdf972eabca66bc0d2eb5c5f49796166e40",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/76bf6bdf972eabca66bc0d2eb5c5f49796166e40"
                }
            ]
        },
        {
            "sha": "d73aef5c8a8cb9f1cb7f707e27cbf45f3411c838",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkNzNhZWY1YzhhOGNiOWYxY2I3ZjcwN2UyN2NiZjQ1ZjM0MTFjODM4",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-25T08:22:05Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-25T08:22:21Z"
                },
                "message": "Respect --no-plugins flag when firing pre-command-run event",
                "tree": {
                    "sha": "bd191c7ce4548f13784b1c32fe68a9e256328cec",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/bd191c7ce4548f13784b1c32fe68a9e256328cec"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/d73aef5c8a8cb9f1cb7f707e27cbf45f3411c838",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d73aef5c8a8cb9f1cb7f707e27cbf45f3411c838",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d73aef5c8a8cb9f1cb7f707e27cbf45f3411c838",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d73aef5c8a8cb9f1cb7f707e27cbf45f3411c838\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "8eae15182c171bc33fc558c1f88ea3e832674c3c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8eae15182c171bc33fc558c1f88ea3e832674c3c",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/8eae15182c171bc33fc558c1f88ea3e832674c3c"
                }
            ]
        },
        {
            "sha": "9bc578e24a32f265f01f46e389edb028a61e9a07",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo5YmM1NzhlMjRhMzJmMjY1ZjAxZjQ2ZTM4OWVkYjAyOGE2MWU5YTA3",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-26T12:15:32Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-26T12:15:32Z"
                },
                "message": "Fix warning tag name, fixes #7494",
                "tree": {
                    "sha": "67c7e95db95ab5bf310996d5386a090bff75683f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/67c7e95db95ab5bf310996d5386a090bff75683f"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/9bc578e24a32f265f01f46e389edb028a61e9a07",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9bc578e24a32f265f01f46e389edb028a61e9a07",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/9bc578e24a32f265f01f46e389edb028a61e9a07",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9bc578e24a32f265f01f46e389edb028a61e9a07\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "d73aef5c8a8cb9f1cb7f707e27cbf45f3411c838",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d73aef5c8a8cb9f1cb7f707e27cbf45f3411c838",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d73aef5c8a8cb9f1cb7f707e27cbf45f3411c838"
                }
            ]
        },
        {
            "sha": "a3bbcf9c7731930dc492527b27b6703268e4a19b",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphM2JiY2Y5Yzc3MzE5MzBkYzQ5MjUyN2IyN2I2NzAzMjY4ZTRhMTli",
            "commit": {
                "author": {
                    "name": "Nicolas Grekas",
                    "email": "nicolas.grekas@gmail.com",
                    "date": "2018-07-26T15:31:40Z"
                },
                "committer": {
                    "name": "Nicolas Grekas",
                    "email": "nicolas.grekas@gmail.com",
                    "date": "2018-07-26T16:31:33Z"
                },
                "message": "Make RemoteFilesystem::getRemoteContents() report response headers also on exceptions",
                "tree": {
                    "sha": "5eff554bf6246894d80cde65d29b39f8ad6f96a7",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/5eff554bf6246894d80cde65d29b39f8ad6f96a7"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a3bbcf9c7731930dc492527b27b6703268e4a19b",
                "comment_count": 1,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a3bbcf9c7731930dc492527b27b6703268e4a19b",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a3bbcf9c7731930dc492527b27b6703268e4a19b",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a3bbcf9c7731930dc492527b27b6703268e4a19b\/comments",
            "author": {
                "login": "nicolas-grekas",
                "id": 243674,
                "node_id": "MDQ6VXNlcjI0MzY3NA==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/243674?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/nicolas-grekas",
                "html_url": "https:\/\/github.com\/nicolas-grekas",
                "followers_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/followers",
                "following_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/repos",
                "events_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "nicolas-grekas",
                "id": 243674,
                "node_id": "MDQ6VXNlcjI0MzY3NA==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/243674?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/nicolas-grekas",
                "html_url": "https:\/\/github.com\/nicolas-grekas",
                "followers_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/followers",
                "following_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/repos",
                "events_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/nicolas-grekas\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "9bc578e24a32f265f01f46e389edb028a61e9a07",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9bc578e24a32f265f01f46e389edb028a61e9a07",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/9bc578e24a32f265f01f46e389edb028a61e9a07"
                }
            ]
        },
        {
            "sha": "35389f1cc2ef3abf2a069a21902fb681302e0217",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozNTM4OWYxY2MyZWYzYWJmMmEwNjlhMjE5MDJmYjY4MTMwMmUwMjE3",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-26T20:27:39Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-26T20:27:39Z"
                },
                "message": "Merge pull request #7495 from nicolas-grekas\/resp-exc\n\nMake RemoteFilesystem::getRemoteContents() report response headers also on exceptions",
                "tree": {
                    "sha": "5eff554bf6246894d80cde65d29b39f8ad6f96a7",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/5eff554bf6246894d80cde65d29b39f8ad6f96a7"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/35389f1cc2ef3abf2a069a21902fb681302e0217",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbWi67CRBK7hj4Ov3rIwAAdHIIAIIp36yRDOAEAt4w5q3vOk4k\n\/BkjbAxGqyWxnBEP4+t46clVE77Lg6TrQmQw+U8srZnFNMQT1TvldKwTI0\/s4DM2\nEhsOLyFEKxTtZVl7awpC4rKz2Zdst1aAkLsKoSUkwlaLk5ZSyl3gAg0WBbgtNCux\ntvQa2+Poqe9AZHILJSCuC6fc1zAKmrBJH4a0EksDyvEblS8NG2BV2KpaPc+Wt0kZ\nq8bxEo4fp\/q9RbucYsfEPYIiueb5t\/I8b3YEGm0zTVy4gFSR3Ul4OkD+c9a8QacF\nqi3qwzWKkJcogLlUzVknkQ+iggePeASlGILdwJjavJwTUjXuO9U3vvWXkSN0SRQ=\n=YlZW\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 5eff554bf6246894d80cde65d29b39f8ad6f96a7\nparent 9bc578e24a32f265f01f46e389edb028a61e9a07\nparent a3bbcf9c7731930dc492527b27b6703268e4a19b\nauthor Jordi Boggiano <j.boggiano@seld.be> 1532636859 +0200\ncommitter GitHub <noreply@github.com> 1532636859 +0200\n\nMerge pull request #7495 from nicolas-grekas\/resp-exc\n\nMake RemoteFilesystem::getRemoteContents() report response headers also on exceptions"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/35389f1cc2ef3abf2a069a21902fb681302e0217",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/35389f1cc2ef3abf2a069a21902fb681302e0217",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/35389f1cc2ef3abf2a069a21902fb681302e0217\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "9bc578e24a32f265f01f46e389edb028a61e9a07",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9bc578e24a32f265f01f46e389edb028a61e9a07",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/9bc578e24a32f265f01f46e389edb028a61e9a07"
                },
                {
                    "sha": "a3bbcf9c7731930dc492527b27b6703268e4a19b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a3bbcf9c7731930dc492527b27b6703268e4a19b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a3bbcf9c7731930dc492527b27b6703268e4a19b"
                }
            ]
        },
        {
            "sha": "de6432f5f013e240f87584c752a8a1acdd5e9d58",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkZTY0MzJmNWYwMTNlMjQwZjg3NTg0Yzc1MmE4YTFhY2RkNWU5ZDU4",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-27T08:59:36Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-07-27T09:03:45Z"
                },
                "message": "Show overridden php version in diagnose command, fixes #7497",
                "tree": {
                    "sha": "290475ec53515128a7224a44889472ab91ac7554",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/290475ec53515128a7224a44889472ab91ac7554"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/de6432f5f013e240f87584c752a8a1acdd5e9d58",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/de6432f5f013e240f87584c752a8a1acdd5e9d58",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/de6432f5f013e240f87584c752a8a1acdd5e9d58",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/de6432f5f013e240f87584c752a8a1acdd5e9d58\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "35389f1cc2ef3abf2a069a21902fb681302e0217",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/35389f1cc2ef3abf2a069a21902fb681302e0217",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/35389f1cc2ef3abf2a069a21902fb681302e0217"
                }
            ]
        },
        {
            "sha": "42739e7959d81f38e0e41ab7ae96e5db88c0411d",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0MjczOWU3OTU5ZDgxZjM4ZTBlNDFhYjdhZTk2ZTVkYjg4YzA0MTFk",
            "commit": {
                "author": {
                    "name": "Rafael Kassner",
                    "email": "kassner@gmail.com",
                    "date": "2018-07-29T14:12:58Z"
                },
                "committer": {
                    "name": "Rafael Kassner",
                    "email": "kassner@gmail.com",
                    "date": "2018-07-29T14:16:02Z"
                },
                "message": "Do not dump source and dist for metapackages",
                "tree": {
                    "sha": "4fde7b2d3232e23a7748c539b631435dd4f89175",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/4fde7b2d3232e23a7748c539b631435dd4f89175"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/42739e7959d81f38e0e41ab7ae96e5db88c0411d",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42739e7959d81f38e0e41ab7ae96e5db88c0411d",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/42739e7959d81f38e0e41ab7ae96e5db88c0411d",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42739e7959d81f38e0e41ab7ae96e5db88c0411d\/comments",
            "author": {
                "login": "kassner",
                "id": 301255,
                "node_id": "MDQ6VXNlcjMwMTI1NQ==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/301255?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/kassner",
                "html_url": "https:\/\/github.com\/kassner",
                "followers_url": "https:\/\/api.github.com\/users\/kassner\/followers",
                "following_url": "https:\/\/api.github.com\/users\/kassner\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/kassner\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/kassner\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/kassner\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/kassner\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/kassner\/repos",
                "events_url": "https:\/\/api.github.com\/users\/kassner\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/kassner\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "kassner",
                "id": 301255,
                "node_id": "MDQ6VXNlcjMwMTI1NQ==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/301255?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/kassner",
                "html_url": "https:\/\/github.com\/kassner",
                "followers_url": "https:\/\/api.github.com\/users\/kassner\/followers",
                "following_url": "https:\/\/api.github.com\/users\/kassner\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/kassner\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/kassner\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/kassner\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/kassner\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/kassner\/repos",
                "events_url": "https:\/\/api.github.com\/users\/kassner\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/kassner\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "de6432f5f013e240f87584c752a8a1acdd5e9d58",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/de6432f5f013e240f87584c752a8a1acdd5e9d58",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/de6432f5f013e240f87584c752a8a1acdd5e9d58"
                }
            ]
        },
        {
            "sha": "a53b3c6b665dee9767579997c01c257f3b695bba",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphNTNiM2M2YjY2NWRlZTk3Njc1Nzk5OTdjMDFjMjU3ZjNiNjk1YmJh",
            "commit": {
                "author": {
                    "name": "Rob",
                    "email": "alcohol@users.noreply.github.com",
                    "date": "2018-07-30T10:16:25Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-07-30T10:16:25Z"
                },
                "message": "Merge pull request #7501 from kassner\/patch-1\n\nDo not dump source and dist for metapackages",
                "tree": {
                    "sha": "4fde7b2d3232e23a7748c539b631435dd4f89175",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/4fde7b2d3232e23a7748c539b631435dd4f89175"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a53b3c6b665dee9767579997c01c257f3b695bba",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbXuV5CRBK7hj4Ov3rIwAAdHIIAFRbfLis8vyAH3Q+meOESoJ+\n2BvBpBnVHZyvAEceZYkL\/G8+y+wdDRreRbxN5r5YiiEaYGB8G62iHDJsawF5lgjw\nInztXEGMG+Nh4Qkn+MaWXIdTMVkurYLZUky557rzd+9sr2huErub5QEAR6XOlLzB\nPtE6490HdEwnwUwn0BVjxn4\/3+sfySn47NmEudE8Sw5ramudOPxoW5UurQEeUkDW\nPF60gfjH5EqhhyeMX6umVNyXSA2VCFZgjEUKIDnFdaLqX1iBLs7a3hKEGTiOJGJz\nk6PodAZ32tDXXhYJ8hVJtcTilzBLjxvepl1wPodR3wyjquo0r2DcCshBNuJbcV0=\n=qUbt\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 4fde7b2d3232e23a7748c539b631435dd4f89175\nparent de6432f5f013e240f87584c752a8a1acdd5e9d58\nparent 42739e7959d81f38e0e41ab7ae96e5db88c0411d\nauthor Rob <alcohol@users.noreply.github.com> 1532945785 +0200\ncommitter GitHub <noreply@github.com> 1532945785 +0200\n\nMerge pull request #7501 from kassner\/patch-1\n\nDo not dump source and dist for metapackages"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a53b3c6b665dee9767579997c01c257f3b695bba",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a53b3c6b665dee9767579997c01c257f3b695bba",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a53b3c6b665dee9767579997c01c257f3b695bba\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "de6432f5f013e240f87584c752a8a1acdd5e9d58",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/de6432f5f013e240f87584c752a8a1acdd5e9d58",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/de6432f5f013e240f87584c752a8a1acdd5e9d58"
                },
                {
                    "sha": "42739e7959d81f38e0e41ab7ae96e5db88c0411d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42739e7959d81f38e0e41ab7ae96e5db88c0411d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/42739e7959d81f38e0e41ab7ae96e5db88c0411d"
                }
            ]
        },
        {
            "sha": "73f14c0c7ce94509ba49a5b2e0813d0b30da73ec",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3M2YxNGMwYzdjZTk0NTA5YmE0OWE1YjJlMDgxM2QwYjMwZGE3M2Vj",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-03T12:06:31Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-03T12:06:31Z"
                },
                "message": "Fix output when loading zips from cache, fixes #7498",
                "tree": {
                    "sha": "0999fe1b0672055e379797102f063373e4c95919",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/0999fe1b0672055e379797102f063373e4c95919"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/73f14c0c7ce94509ba49a5b2e0813d0b30da73ec",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/73f14c0c7ce94509ba49a5b2e0813d0b30da73ec",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/73f14c0c7ce94509ba49a5b2e0813d0b30da73ec",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/73f14c0c7ce94509ba49a5b2e0813d0b30da73ec\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a53b3c6b665dee9767579997c01c257f3b695bba",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a53b3c6b665dee9767579997c01c257f3b695bba",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a53b3c6b665dee9767579997c01c257f3b695bba"
                }
            ]
        },
        {
            "sha": "0fdf746ebeecf40672b6b97daa233b1f1e8ee284",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowZmRmNzQ2ZWJlZWNmNDA2NzJiNmI5N2RhYTIzM2IxZjFlOGVlMjg0",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-03T13:23:04Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-03T13:23:04Z"
                },
                "message": "Fix --no-plugins not working in certain edge cases",
                "tree": {
                    "sha": "7de56f4e8d76052f42bc7fa0ea018de8acb5d02d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/7de56f4e8d76052f42bc7fa0ea018de8acb5d02d"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0fdf746ebeecf40672b6b97daa233b1f1e8ee284",
                "comment_count": 1,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0fdf746ebeecf40672b6b97daa233b1f1e8ee284",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0fdf746ebeecf40672b6b97daa233b1f1e8ee284",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0fdf746ebeecf40672b6b97daa233b1f1e8ee284\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "73f14c0c7ce94509ba49a5b2e0813d0b30da73ec",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/73f14c0c7ce94509ba49a5b2e0813d0b30da73ec",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/73f14c0c7ce94509ba49a5b2e0813d0b30da73ec"
                }
            ]
        },
        {
            "sha": "a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphMTE3OWFhNGE3YTY5NDg3MmQ4ZjQ3YTJjYzliNDJjZDg5M2IxZWQ2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-03T13:38:59Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-03T13:38:59Z"
                },
                "message": "Update changelog",
                "tree": {
                    "sha": "ece7112cd57169e6f11ea8c54d5e353fa205b8d5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ece7112cd57169e6f11ea8c54d5e353fa205b8d5"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6",
                "comment_count": 3,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0fdf746ebeecf40672b6b97daa233b1f1e8ee284",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0fdf746ebeecf40672b6b97daa233b1f1e8ee284",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0fdf746ebeecf40672b6b97daa233b1f1e8ee284"
                }
            ]
        },
        {
            "sha": "a5037385d198c852da3b7d2de1c0cded53059a82",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphNTAzNzM4NWQxOThjODUyZGEzYjdkMmRlMWMwY2RlZDUzMDU5YTgy",
            "commit": {
                "author": {
                    "name": "David Z\u00fclke",
                    "email": "dzuelke@gmail.com",
                    "date": "2018-08-03T15:21:28Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-08-03T15:21:28Z"
                },
                "message": "Fix 1.7.0 changes link",
                "tree": {
                    "sha": "82cbbdd07bcefb08079a8345abe0df92efc9cce2",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/82cbbdd07bcefb08079a8345abe0df92efc9cce2"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a5037385d198c852da3b7d2de1c0cded53059a82",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbZHL4CRBK7hj4Ov3rIwAAdHIIAG0yKsgvUxbrc53Fwe1+e\/iy\n+lE5ZHTL1jT3ihwrg8EaFLTMTGcSfLb0DabisMdWPR0sEBuuyYOFusvjTtWfu2ML\nb1T4kvKeHTAhrYad3yahWMhoLCH5tkTc60x\/PjrsS1loMabPIhUzOlgyn0QMIdu\/\n3AfFPrA\/SX3f3b2DkZPiBrsizwMxFjQjzaxlAVk60qHTAKfNOcZKHkT2iBFkL8IA\naIIawI4H9KTCt68or3khvF8WSH24eV622ouxt4BwZfgaKyx4OTuSOzrNAzhL\/y1G\n8D1O+R\/986ZBDNYUZ0Q8G\/GeFhSfbfHTYIBruQaFcoaoZLj\/Wv\/ygVwMz5PYetw=\n=eoE1\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 82cbbdd07bcefb08079a8345abe0df92efc9cce2\nparent a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6\nauthor David Z\u00fclke <dzuelke@gmail.com> 1533309688 +0200\ncommitter GitHub <noreply@github.com> 1533309688 +0200\n\nFix 1.7.0 changes link"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a5037385d198c852da3b7d2de1c0cded53059a82",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a5037385d198c852da3b7d2de1c0cded53059a82",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a5037385d198c852da3b7d2de1c0cded53059a82\/comments",
            "author": {
                "login": "dzuelke",
                "id": 27900,
                "node_id": "MDQ6VXNlcjI3OTAw",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/27900?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/dzuelke",
                "html_url": "https:\/\/github.com\/dzuelke",
                "followers_url": "https:\/\/api.github.com\/users\/dzuelke\/followers",
                "following_url": "https:\/\/api.github.com\/users\/dzuelke\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/dzuelke\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/dzuelke\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/dzuelke\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/dzuelke\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/dzuelke\/repos",
                "events_url": "https:\/\/api.github.com\/users\/dzuelke\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/dzuelke\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6"
                }
            ]
        },
        {
            "sha": "2f6d9741e7baa2634ec33c4784874cfc8d97533f",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyZjZkOTc0MWU3YmFhMjYzNGVjMzNjNDc4NDg3NGNmYzhkOTc1MzNm",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-03T16:05:27Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-08-03T16:05:27Z"
                },
                "message": "Merge pull request #7515 from dzuelke\/patch-1\n\nFix 1.7.0 changes link",
                "tree": {
                    "sha": "82cbbdd07bcefb08079a8345abe0df92efc9cce2",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/82cbbdd07bcefb08079a8345abe0df92efc9cce2"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/2f6d9741e7baa2634ec33c4784874cfc8d97533f",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbZH1HCRBK7hj4Ov3rIwAAdHIIALK6Q1ejkn6uEE1FiDpuEs2m\nvLNqendb7hSIgoGxsJcReV3KNOnFRv8SLvRKR84\/nhalySpnVQ1VGusvRqAydKrp\naZ+DajXG8hbGQHkKB+reiLDvOcxxB44qIBEbUBZboLofmzB9UicUnyem54tW7Gbh\nUoQxspRHong9FxPo\/DGDIWU8zKvfXNDJxDTlwIswi8v0+SaUDd\/BtBcr5hRv3\/55\ntpLghkrb7tN24ju3OjuL8z7+QI50k9hVX+xC2+IK9oKaVosWR5knmOqW4BpNUpay\nqmxBuJATIWIt+7QGSHut2LVXTq\/Dsjnwv+TE+xDuOBEh+TqV0PAHYAO8h7XWN6o=\n=\/teg\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 82cbbdd07bcefb08079a8345abe0df92efc9cce2\nparent a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6\nparent a5037385d198c852da3b7d2de1c0cded53059a82\nauthor Jordi Boggiano <j.boggiano@seld.be> 1533312327 +0200\ncommitter GitHub <noreply@github.com> 1533312327 +0200\n\nMerge pull request #7515 from dzuelke\/patch-1\n\nFix 1.7.0 changes link"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2f6d9741e7baa2634ec33c4784874cfc8d97533f",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2f6d9741e7baa2634ec33c4784874cfc8d97533f",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2f6d9741e7baa2634ec33c4784874cfc8d97533f\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6"
                },
                {
                    "sha": "a5037385d198c852da3b7d2de1c0cded53059a82",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a5037385d198c852da3b7d2de1c0cded53059a82",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a5037385d198c852da3b7d2de1c0cded53059a82"
                }
            ]
        },
        {
            "sha": "a74b63985e7cd811e5cdde30753249d8466666dd",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphNzRiNjM5ODVlN2NkODExZTVjZGRlMzA3NTMyNDlkODQ2NjY2NmRk",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-04T15:43:34Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-04T15:43:43Z"
                },
                "message": "Avoid filtering dev-require packages when loading plugins\/scripts, fixes #7516",
                "tree": {
                    "sha": "4ace52d508e143a9c065847f6b6ad5ddc3b52e5d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/4ace52d508e143a9c065847f6b6ad5ddc3b52e5d"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a74b63985e7cd811e5cdde30753249d8466666dd",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a74b63985e7cd811e5cdde30753249d8466666dd",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a74b63985e7cd811e5cdde30753249d8466666dd",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a74b63985e7cd811e5cdde30753249d8466666dd\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a1179aa4a7a694872d8f47a2cc9b42cd893b1ed6"
                }
            ]
        },
        {
            "sha": "7ea15eec6c92fac66f4a5810b11b495e6ab1861b",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3ZWExNWVlYzZjOTJmYWM2NmY0YTU4MTBiMTFiNDk1ZTZhYjE4NjFi",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-04T15:44:30Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-04T15:44:30Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "27ed19ed0a548a03a43c58c25db77ada9749b4e6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/27ed19ed0a548a03a43c58c25db77ada9749b4e6"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/7ea15eec6c92fac66f4a5810b11b495e6ab1861b",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7ea15eec6c92fac66f4a5810b11b495e6ab1861b",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7ea15eec6c92fac66f4a5810b11b495e6ab1861b",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7ea15eec6c92fac66f4a5810b11b495e6ab1861b\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "2f6d9741e7baa2634ec33c4784874cfc8d97533f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2f6d9741e7baa2634ec33c4784874cfc8d97533f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2f6d9741e7baa2634ec33c4784874cfc8d97533f"
                },
                {
                    "sha": "a74b63985e7cd811e5cdde30753249d8466666dd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a74b63985e7cd811e5cdde30753249d8466666dd",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a74b63985e7cd811e5cdde30753249d8466666dd"
                }
            ]
        },
        {
            "sha": "a28808752d5a87f9a7a9e4dcbdc572fcab9028aa",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphMjg4MDg3NTJkNWE4N2Y5YTdhOWU0ZGNiZGM1NzJmY2FiOTAyOGFh",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-07T06:11:10Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-07T06:11:10Z"
                },
                "message": "Attempt workaround for repo.packagist.org domain SSL on very old PHP, fixes #7530",
                "tree": {
                    "sha": "6363386ab4194465bd9149eb273646c7610d5b62",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/6363386ab4194465bd9149eb273646c7610d5b62"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a28808752d5a87f9a7a9e4dcbdc572fcab9028aa",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a28808752d5a87f9a7a9e4dcbdc572fcab9028aa",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a28808752d5a87f9a7a9e4dcbdc572fcab9028aa",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a28808752d5a87f9a7a9e4dcbdc572fcab9028aa\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "7ea15eec6c92fac66f4a5810b11b495e6ab1861b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7ea15eec6c92fac66f4a5810b11b495e6ab1861b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7ea15eec6c92fac66f4a5810b11b495e6ab1861b"
                }
            ]
        },
        {
            "sha": "e7a9bd336229122792cbbd3fd078b8af174611de",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplN2E5YmQzMzYyMjkxMjI3OTJjYmJkM2ZkMDc4YjhhZjE3NDYxMWRl",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-07T06:11:10Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-07T07:33:04Z"
                },
                "message": "Attempt workaround for repo.packagist.org domain SSL on very old PHP, fixes #7530",
                "tree": {
                    "sha": "878986b2ec0b79fa4056a28ae5ec5903464e0073",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/878986b2ec0b79fa4056a28ae5ec5903464e0073"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/e7a9bd336229122792cbbd3fd078b8af174611de",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e7a9bd336229122792cbbd3fd078b8af174611de",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e7a9bd336229122792cbbd3fd078b8af174611de",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e7a9bd336229122792cbbd3fd078b8af174611de\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a74b63985e7cd811e5cdde30753249d8466666dd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a74b63985e7cd811e5cdde30753249d8466666dd",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a74b63985e7cd811e5cdde30753249d8466666dd"
                }
            ]
        },
        {
            "sha": "9e7d48f70edd4afa51c8495afc4ae5be77a9acdf",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo5ZTdkNDhmNzBlZGQ0YWZhNTFjODQ5NWFmYzRhZTViZTc3YTlhY2Rm",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-07T07:38:26Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-07T07:38:26Z"
                },
                "message": "Update changelog",
                "tree": {
                    "sha": "d6b145da7e928decaa37bc8399f435a5a4efa26a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/d6b145da7e928decaa37bc8399f435a5a4efa26a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/9e7d48f70edd4afa51c8495afc4ae5be77a9acdf",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9e7d48f70edd4afa51c8495afc4ae5be77a9acdf",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/9e7d48f70edd4afa51c8495afc4ae5be77a9acdf",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9e7d48f70edd4afa51c8495afc4ae5be77a9acdf\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "e7a9bd336229122792cbbd3fd078b8af174611de",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e7a9bd336229122792cbbd3fd078b8af174611de",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e7a9bd336229122792cbbd3fd078b8af174611de"
                }
            ]
        },
        {
            "sha": "b9adf38571d98b39133622620fa0c592aa77d24a",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiOWFkZjM4NTcxZDk4YjM5MTMzNjIyNjIwZmEwYzU5MmFhNzdkMjRh",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-07T07:38:53Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-07T07:38:53Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "d6b145da7e928decaa37bc8399f435a5a4efa26a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/d6b145da7e928decaa37bc8399f435a5a4efa26a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b9adf38571d98b39133622620fa0c592aa77d24a",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b9adf38571d98b39133622620fa0c592aa77d24a",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b9adf38571d98b39133622620fa0c592aa77d24a",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b9adf38571d98b39133622620fa0c592aa77d24a\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a28808752d5a87f9a7a9e4dcbdc572fcab9028aa",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a28808752d5a87f9a7a9e4dcbdc572fcab9028aa",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a28808752d5a87f9a7a9e4dcbdc572fcab9028aa"
                },
                {
                    "sha": "9e7d48f70edd4afa51c8495afc4ae5be77a9acdf",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9e7d48f70edd4afa51c8495afc4ae5be77a9acdf",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/9e7d48f70edd4afa51c8495afc4ae5be77a9acdf"
                }
            ]
        },
        {
            "sha": "d87416e6d0c86dc98784ad38e2e76d12a667d7fe",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkODc0MTZlNmQwYzg2ZGM5ODc4NGFkMzhlMmU3NmQxMmE2NjdkN2Zl",
            "commit": {
                "author": {
                    "name": "Daniel Karl",
                    "email": "daniel.karl@boc-group.com",
                    "date": "2018-08-08T14:01:58Z"
                },
                "committer": {
                    "name": "Rob",
                    "email": "rob.bast@gmail.com",
                    "date": "2018-08-09T06:22:41Z"
                },
                "message": "Using cwd for 2nd process-execution (auth) in HgUtils",
                "tree": {
                    "sha": "b875755595e15a53475a235b8d46eeb20d6c2033",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/b875755595e15a53475a235b8d46eeb20d6c2033"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/d87416e6d0c86dc98784ad38e2e76d12a667d7fe",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d87416e6d0c86dc98784ad38e2e76d12a667d7fe",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d87416e6d0c86dc98784ad38e2e76d12a667d7fe",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d87416e6d0c86dc98784ad38e2e76d12a667d7fe\/comments",
            "author": null,
            "committer": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b9adf38571d98b39133622620fa0c592aa77d24a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b9adf38571d98b39133622620fa0c592aa77d24a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b9adf38571d98b39133622620fa0c592aa77d24a"
                }
            ]
        },
        {
            "sha": "e718f34ba4f8fccf2a6f15d991fb69ea862f5dce",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplNzE4ZjM0YmE0ZjhmY2NmMmE2ZjE1ZDk5MWZiNjllYTg2MmY1ZGNl",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-10T06:43:51Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-10T06:43:51Z"
                },
                "message": "Properly detect rate limit errors on github before outputting messages, fixes #6621",
                "tree": {
                    "sha": "c814e0bb7275bd9eac2c20544a75c7a7a56b1177",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/c814e0bb7275bd9eac2c20544a75c7a7a56b1177"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/e718f34ba4f8fccf2a6f15d991fb69ea862f5dce",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e718f34ba4f8fccf2a6f15d991fb69ea862f5dce",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e718f34ba4f8fccf2a6f15d991fb69ea862f5dce",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e718f34ba4f8fccf2a6f15d991fb69ea862f5dce\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "9e7d48f70edd4afa51c8495afc4ae5be77a9acdf",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9e7d48f70edd4afa51c8495afc4ae5be77a9acdf",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/9e7d48f70edd4afa51c8495afc4ae5be77a9acdf"
                }
            ]
        },
        {
            "sha": "1e6ceea0f935f0865af59e7e9a4c68862d732f81",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxZTZjZWVhMGY5MzVmMDg2NWFmNTllN2U5YTRjNjg4NjJkNzMyZjgx",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-10T06:52:30Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-10T06:52:30Z"
                },
                "message": "Update to latest CA bundle",
                "tree": {
                    "sha": "3060c36df58224e07a0911709491e92af326e076",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/3060c36df58224e07a0911709491e92af326e076"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/1e6ceea0f935f0865af59e7e9a4c68862d732f81",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1e6ceea0f935f0865af59e7e9a4c68862d732f81",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1e6ceea0f935f0865af59e7e9a4c68862d732f81",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1e6ceea0f935f0865af59e7e9a4c68862d732f81\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "e718f34ba4f8fccf2a6f15d991fb69ea862f5dce",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e718f34ba4f8fccf2a6f15d991fb69ea862f5dce",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e718f34ba4f8fccf2a6f15d991fb69ea862f5dce"
                }
            ]
        },
        {
            "sha": "5a22a4f1f31a44c41a518764dc9e49b113431400",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo1YTIyYTRmMWYzMWE0NGM0MWE1MTg3NjRkYzllNDliMTEzNDMxNDAw",
            "commit": {
                "author": {
                    "name": "Alexander Kurilo",
                    "email": "alex@kurilo.me",
                    "date": "2018-08-02T20:47:14Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-10T06:54:27Z"
                },
                "message": "Make surrogate sequences in JSON work on PHP 5.3\n\nFixes #7510",
                "tree": {
                    "sha": "f7b800b7681ab364aafe78679d73a6321a266000",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/f7b800b7681ab364aafe78679d73a6321a266000"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/5a22a4f1f31a44c41a518764dc9e49b113431400",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5a22a4f1f31a44c41a518764dc9e49b113431400",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5a22a4f1f31a44c41a518764dc9e49b113431400",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5a22a4f1f31a44c41a518764dc9e49b113431400\/comments",
            "author": {
                "login": "kamazee",
                "id": 231518,
                "node_id": "MDQ6VXNlcjIzMTUxOA==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/231518?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/kamazee",
                "html_url": "https:\/\/github.com\/kamazee",
                "followers_url": "https:\/\/api.github.com\/users\/kamazee\/followers",
                "following_url": "https:\/\/api.github.com\/users\/kamazee\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/kamazee\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/kamazee\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/kamazee\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/kamazee\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/kamazee\/repos",
                "events_url": "https:\/\/api.github.com\/users\/kamazee\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/kamazee\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "1e6ceea0f935f0865af59e7e9a4c68862d732f81",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1e6ceea0f935f0865af59e7e9a4c68862d732f81",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1e6ceea0f935f0865af59e7e9a4c68862d732f81"
                }
            ]
        },
        {
            "sha": "e1a6bd5ff1bf2b73cd7a6b2fd029641d4a505147",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplMWE2YmQ1ZmYxYmYyYjczY2Q3YTZiMmZkMDI5NjQxZDRhNTA1MTQ3",
            "commit": {
                "author": {
                    "name": "Alexander Kurilo",
                    "email": "alex@kurilo.me",
                    "date": "2018-08-07T20:20:08Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-10T06:54:34Z"
                },
                "message": "Make JSON formatter test clearer",
                "tree": {
                    "sha": "ddcd7ae3b8c6785a3e3d092818b343eecea64cc3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ddcd7ae3b8c6785a3e3d092818b343eecea64cc3"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/e1a6bd5ff1bf2b73cd7a6b2fd029641d4a505147",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e1a6bd5ff1bf2b73cd7a6b2fd029641d4a505147",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e1a6bd5ff1bf2b73cd7a6b2fd029641d4a505147",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e1a6bd5ff1bf2b73cd7a6b2fd029641d4a505147\/comments",
            "author": {
                "login": "kamazee",
                "id": 231518,
                "node_id": "MDQ6VXNlcjIzMTUxOA==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/231518?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/kamazee",
                "html_url": "https:\/\/github.com\/kamazee",
                "followers_url": "https:\/\/api.github.com\/users\/kamazee\/followers",
                "following_url": "https:\/\/api.github.com\/users\/kamazee\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/kamazee\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/kamazee\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/kamazee\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/kamazee\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/kamazee\/repos",
                "events_url": "https:\/\/api.github.com\/users\/kamazee\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/kamazee\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "5a22a4f1f31a44c41a518764dc9e49b113431400",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5a22a4f1f31a44c41a518764dc9e49b113431400",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5a22a4f1f31a44c41a518764dc9e49b113431400"
                }
            ]
        },
        {
            "sha": "849f4eda56c8bfa20d9640c79e9a721996bf0c85",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4NDlmNGVkYTU2YzhiZmEyMGQ5NjQwYzc5ZTlhNzIxOTk2YmYwYzg1",
            "commit": {
                "author": {
                    "name": "Daniel Karl",
                    "email": "daniel.karl@boc-group.com",
                    "date": "2018-08-08T14:01:58Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-10T06:58:05Z"
                },
                "message": "Using cwd for 2nd process-execution (auth) in HgUtils",
                "tree": {
                    "sha": "ba9fec04f01068ee0ce3aa560b6242f07c57985a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ba9fec04f01068ee0ce3aa560b6242f07c57985a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/849f4eda56c8bfa20d9640c79e9a721996bf0c85",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/849f4eda56c8bfa20d9640c79e9a721996bf0c85",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/849f4eda56c8bfa20d9640c79e9a721996bf0c85",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/849f4eda56c8bfa20d9640c79e9a721996bf0c85\/comments",
            "author": null,
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "e1a6bd5ff1bf2b73cd7a6b2fd029641d4a505147",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e1a6bd5ff1bf2b73cd7a6b2fd029641d4a505147",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e1a6bd5ff1bf2b73cd7a6b2fd029641d4a505147"
                }
            ]
        },
        {
            "sha": "db13cc49603d18b315fdb64f55c5f6fee9e1aa02",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkYjEzY2M0OTYwM2QxOGIzMTVmZGI2NGY1NWM1ZjZmZWU5ZTFhYTAy",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-10T06:58:12Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-10T06:58:12Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "ba9fec04f01068ee0ce3aa560b6242f07c57985a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ba9fec04f01068ee0ce3aa560b6242f07c57985a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/db13cc49603d18b315fdb64f55c5f6fee9e1aa02",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/db13cc49603d18b315fdb64f55c5f6fee9e1aa02",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/db13cc49603d18b315fdb64f55c5f6fee9e1aa02",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/db13cc49603d18b315fdb64f55c5f6fee9e1aa02\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "d87416e6d0c86dc98784ad38e2e76d12a667d7fe",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d87416e6d0c86dc98784ad38e2e76d12a667d7fe",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d87416e6d0c86dc98784ad38e2e76d12a667d7fe"
                },
                {
                    "sha": "849f4eda56c8bfa20d9640c79e9a721996bf0c85",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/849f4eda56c8bfa20d9640c79e9a721996bf0c85",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/849f4eda56c8bfa20d9640c79e9a721996bf0c85"
                }
            ]
        },
        {
            "sha": "d65e1c0112944666ea31e16fbb66e9b809efb2da",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkNjVlMWMwMTEyOTQ0NjY2ZWEzMWUxNmZiYjY2ZTliODA5ZWZiMmRh",
            "commit": {
                "author": {
                    "name": "Pierre du Plessis",
                    "email": "pierre@pcservice.co.za",
                    "date": "2018-08-15T10:59:05Z"
                },
                "committer": {
                    "name": "Pierre du Plessis",
                    "email": "pierre@pcservice.co.za",
                    "date": "2018-08-15T10:59:05Z"
                },
                "message": "Revert composer.json changes when require process stops",
                "tree": {
                    "sha": "655d6ecef197a277cf2536882d360c2904ee65da",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/655d6ecef197a277cf2536882d360c2904ee65da"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/d65e1c0112944666ea31e16fbb66e9b809efb2da",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEElrgTm5fIJ+Zlyp9N3LndkmBElV0FAlt0B3kACgkQ3LndkmBE\nlV1ZIg\/+N57gULkljIX+Pm0dy4Vj2CoY6Sidg3qvHiQz1BiV7\/88q7SjouZS8rcR\noAoZGFoLcEp7uaHBXXK0cLrvMi1Q8FdK7zlxXlHoFt9jbbtvI804DVp4LHn6Ps7\/\nXGJmQEMt4E+H2CtBj\/ftuk0WTm7GhTVVSjBFm\/qoJ7qV9UlnonFkxg8S9Mm5M5WT\nHH7APCMJMYrBku5bjTAiHK+vvCZmGTc8TLDrYPSOSkRi2FXKCkn5M4ovpT5AfsGG\ns\/gYmZiRYRte8v6F4thDAbYLwiW9J+vV0ursjpQPoWvyHkh3gR1boXqNkjHfVrR9\nvRM1GgTJhX0MolUy9jvZ+DcDB+cJT23xFVXH8Y2ezn6jbCHhEcFhtUdYlrXtkGjp\n5bJiKFeaF8eSyXK2omDFswYmE\/xFrol8FkMH\/gEsyNMVRfnYaizYbXjB2t2u4E31\nN0vboorWOmRCicVqaTo3Dd55BNsrBkoTellBdZ8KsAkgJ+xG8v0141sGkdtHR2wW\nsRiQlvWdSPDYdvM\/J0dGD1LQv3xkrXvIhZDApugVS1sAwfh016hjsNOE\/akevl\/U\n+pwXuqaMTLoVbhYkVaDfP07a5tEMD5c77iN0\/ds5qlZszFpAQkdVs4peAJk5q9fW\nLMMaFXpm83EeEYPSBWPselEwe5LGqVYkcHhUSDqLZpA+7K1zkqs=\n=g4DZ\n-----END PGP SIGNATURE-----",
                    "payload": "tree 655d6ecef197a277cf2536882d360c2904ee65da\nparent db13cc49603d18b315fdb64f55c5f6fee9e1aa02\nauthor Pierre du Plessis <pierre@pcservice.co.za> 1534330745 +0200\ncommitter Pierre du Plessis <pierre@pcservice.co.za> 1534330745 +0200\n\nRevert composer.json changes when require process stops\n"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d65e1c0112944666ea31e16fbb66e9b809efb2da",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d65e1c0112944666ea31e16fbb66e9b809efb2da",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d65e1c0112944666ea31e16fbb66e9b809efb2da\/comments",
            "author": {
                "login": "pierredup",
                "id": 144858,
                "node_id": "MDQ6VXNlcjE0NDg1OA==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/144858?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/pierredup",
                "html_url": "https:\/\/github.com\/pierredup",
                "followers_url": "https:\/\/api.github.com\/users\/pierredup\/followers",
                "following_url": "https:\/\/api.github.com\/users\/pierredup\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/pierredup\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/pierredup\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/pierredup\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/pierredup\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/pierredup\/repos",
                "events_url": "https:\/\/api.github.com\/users\/pierredup\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/pierredup\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "pierredup",
                "id": 144858,
                "node_id": "MDQ6VXNlcjE0NDg1OA==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/144858?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/pierredup",
                "html_url": "https:\/\/github.com\/pierredup",
                "followers_url": "https:\/\/api.github.com\/users\/pierredup\/followers",
                "following_url": "https:\/\/api.github.com\/users\/pierredup\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/pierredup\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/pierredup\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/pierredup\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/pierredup\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/pierredup\/repos",
                "events_url": "https:\/\/api.github.com\/users\/pierredup\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/pierredup\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "db13cc49603d18b315fdb64f55c5f6fee9e1aa02",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/db13cc49603d18b315fdb64f55c5f6fee9e1aa02",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/db13cc49603d18b315fdb64f55c5f6fee9e1aa02"
                }
            ]
        },
        {
            "sha": "b8e8cc2516d00d1af8c1cc824df04362c6c62916",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiOGU4Y2MyNTE2ZDAwZDFhZjhjMWNjODI0ZGYwNDM2MmM2YzYyOTE2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T13:18:40Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T13:18:40Z"
                },
                "message": "Update xdebug-handler, fixes #7517",
                "tree": {
                    "sha": "e29180e8a1dd049f297d92c172596abe1e068502",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e29180e8a1dd049f297d92c172596abe1e068502"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b8e8cc2516d00d1af8c1cc824df04362c6c62916",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b8e8cc2516d00d1af8c1cc824df04362c6c62916",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b8e8cc2516d00d1af8c1cc824df04362c6c62916",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b8e8cc2516d00d1af8c1cc824df04362c6c62916\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "849f4eda56c8bfa20d9640c79e9a721996bf0c85",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/849f4eda56c8bfa20d9640c79e9a721996bf0c85",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/849f4eda56c8bfa20d9640c79e9a721996bf0c85"
                }
            ]
        },
        {
            "sha": "020d1f88c74490a91140322355e1d895737ca0b6",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowMjBkMWY4OGM3NDQ5MGE5MTE0MDMyMjM1NWUxZDg5NTczN2NhMGI2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:08:31Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:08:31Z"
                },
                "message": "Improve error reporting on global command, fixes #7556",
                "tree": {
                    "sha": "cb9e2cc7afb9dafb2ab3437521e877f42131248e",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/cb9e2cc7afb9dafb2ab3437521e877f42131248e"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/020d1f88c74490a91140322355e1d895737ca0b6",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/020d1f88c74490a91140322355e1d895737ca0b6",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/020d1f88c74490a91140322355e1d895737ca0b6",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/020d1f88c74490a91140322355e1d895737ca0b6\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b8e8cc2516d00d1af8c1cc824df04362c6c62916",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b8e8cc2516d00d1af8c1cc824df04362c6c62916",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b8e8cc2516d00d1af8c1cc824df04362c6c62916"
                }
            ]
        },
        {
            "sha": "0dab7facbf20ecc4d27ee1304687d21ff84d29d7",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowZGFiN2ZhY2JmMjBlY2M0ZDI3ZWUxMzA0Njg3ZDIxZmY4NGQyOWQ3",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:12:42Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-08-16T14:12:42Z"
                },
                "message": "Merge pull request #7555 from pierredup\/require-signal\n\nRevert composer.json changes when require process stops",
                "tree": {
                    "sha": "655d6ecef197a277cf2536882d360c2904ee65da",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/655d6ecef197a277cf2536882d360c2904ee65da"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0dab7facbf20ecc4d27ee1304687d21ff84d29d7",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbdYZaCRBK7hj4Ov3rIwAAdHIIAKqpWQEkaOMjIlYabORpwKXx\niVF8X0u970bWT5Rcpu6VoI0DZLS2dWHKaKRx+bMwCQJkQ5VQGJuK9wnrZnE0xN+k\n3OxQ2cjN18YRLZ24H9gHtJJN+xITNc2HC1DY1jQrMQu8ys1cySzzRzCWowfwOCls\nB\/pqO7b\/BHsBjatKyqVB5+ou9e5etliT59wN7jZtcJSRSl7jHj\/lvBVmV4qDR6Hn\nr+hG53WXYZRnpwGNHP4NdnbbET45MUE5rBjo\/IJ\/LgSdre8l29LOHbSMb3VK8tV1\nJkQPqsAFq+i9ytpNNfLmu8GjGnMlnXNv3JtsDyXRhsYirpRtvBHUtI+y8fzpP9g=\n=e2hd\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 655d6ecef197a277cf2536882d360c2904ee65da\nparent db13cc49603d18b315fdb64f55c5f6fee9e1aa02\nparent d65e1c0112944666ea31e16fbb66e9b809efb2da\nauthor Jordi Boggiano <j.boggiano@seld.be> 1534428762 +0200\ncommitter GitHub <noreply@github.com> 1534428762 +0200\n\nMerge pull request #7555 from pierredup\/require-signal\n\nRevert composer.json changes when require process stops"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0dab7facbf20ecc4d27ee1304687d21ff84d29d7",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0dab7facbf20ecc4d27ee1304687d21ff84d29d7",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0dab7facbf20ecc4d27ee1304687d21ff84d29d7\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "db13cc49603d18b315fdb64f55c5f6fee9e1aa02",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/db13cc49603d18b315fdb64f55c5f6fee9e1aa02",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/db13cc49603d18b315fdb64f55c5f6fee9e1aa02"
                },
                {
                    "sha": "d65e1c0112944666ea31e16fbb66e9b809efb2da",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d65e1c0112944666ea31e16fbb66e9b809efb2da",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d65e1c0112944666ea31e16fbb66e9b809efb2da"
                }
            ]
        },
        {
            "sha": "0181f074911524965b244e5a7877f7f7dc7211a5",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowMTgxZjA3NDkxMTUyNDk2NWIyNDRlNWE3ODc3ZjdmN2RjNzIxMWE1",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:48:47Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:48:47Z"
                },
                "message": "Fix create-project not updating to latest commit when cache is present, fixes #7550",
                "tree": {
                    "sha": "22108371376d7e2f3aed63281a97849ae5c69ec9",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/22108371376d7e2f3aed63281a97849ae5c69ec9"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0181f074911524965b244e5a7877f7f7dc7211a5",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0181f074911524965b244e5a7877f7f7dc7211a5",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0181f074911524965b244e5a7877f7f7dc7211a5",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0181f074911524965b244e5a7877f7f7dc7211a5\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "020d1f88c74490a91140322355e1d895737ca0b6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/020d1f88c74490a91140322355e1d895737ca0b6",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/020d1f88c74490a91140322355e1d895737ca0b6"
                }
            ]
        },
        {
            "sha": "15313209d60045aed53c80b7358dee999005c788",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxNTMxMzIwOWQ2MDA0NWFlZDUzYzgwYjczNThkZWU5OTkwMDVjNzg4",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:50:10Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:50:10Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "bdd7075e04b11533b2d15ea70491484c522313ff",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/bdd7075e04b11533b2d15ea70491484c522313ff"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/15313209d60045aed53c80b7358dee999005c788",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/15313209d60045aed53c80b7358dee999005c788",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/15313209d60045aed53c80b7358dee999005c788",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/15313209d60045aed53c80b7358dee999005c788\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0dab7facbf20ecc4d27ee1304687d21ff84d29d7",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0dab7facbf20ecc4d27ee1304687d21ff84d29d7",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0dab7facbf20ecc4d27ee1304687d21ff84d29d7"
                },
                {
                    "sha": "0181f074911524965b244e5a7877f7f7dc7211a5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0181f074911524965b244e5a7877f7f7dc7211a5",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0181f074911524965b244e5a7877f7f7dc7211a5"
                }
            ]
        },
        {
            "sha": "7d273f7cd8f1bc2947282e162fd6b0d418188d41",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3ZDI3M2Y3Y2Q4ZjFiYzI5NDcyODJlMTYyZmQ2YjBkNDE4MTg4ZDQx",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:57:03Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:57:03Z"
                },
                "message": "Update changelog",
                "tree": {
                    "sha": "1653ceb5e594ddc092e7e6be101148c3320857c2",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/1653ceb5e594ddc092e7e6be101148c3320857c2"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/7d273f7cd8f1bc2947282e162fd6b0d418188d41",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7d273f7cd8f1bc2947282e162fd6b0d418188d41",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7d273f7cd8f1bc2947282e162fd6b0d418188d41",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7d273f7cd8f1bc2947282e162fd6b0d418188d41\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0181f074911524965b244e5a7877f7f7dc7211a5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0181f074911524965b244e5a7877f7f7dc7211a5",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0181f074911524965b244e5a7877f7f7dc7211a5"
                }
            ]
        },
        {
            "sha": "5e21826fba1124f81c1e75f1771b61637696b736",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo1ZTIxODI2ZmJhMTEyNGY4MWMxZTc1ZjE3NzFiNjE2Mzc2OTZiNzM2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:57:41Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:57:41Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "f1dd0f18b7035d46c71684ff526fa6cd06508cb4",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/f1dd0f18b7035d46c71684ff526fa6cd06508cb4"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/5e21826fba1124f81c1e75f1771b61637696b736",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5e21826fba1124f81c1e75f1771b61637696b736",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5e21826fba1124f81c1e75f1771b61637696b736",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5e21826fba1124f81c1e75f1771b61637696b736\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "15313209d60045aed53c80b7358dee999005c788",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/15313209d60045aed53c80b7358dee999005c788",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/15313209d60045aed53c80b7358dee999005c788"
                },
                {
                    "sha": "7d273f7cd8f1bc2947282e162fd6b0d418188d41",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7d273f7cd8f1bc2947282e162fd6b0d418188d41",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7d273f7cd8f1bc2947282e162fd6b0d418188d41"
                }
            ]
        },
        {
            "sha": "81516098e5ac4fe4fb6a948ec5c6477011fda232",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4MTUxNjA5OGU1YWM0ZmU0ZmI2YTk0OGVjNWM2NDc3MDExZmRhMjMy",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:58:19Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-16T14:58:19Z"
                },
                "message": "Update target release for master",
                "tree": {
                    "sha": "f426b04b21513711dd1ba7e8c28afcf54406b39c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/f426b04b21513711dd1ba7e8c28afcf54406b39c"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/81516098e5ac4fe4fb6a948ec5c6477011fda232",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/81516098e5ac4fe4fb6a948ec5c6477011fda232",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/81516098e5ac4fe4fb6a948ec5c6477011fda232",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/81516098e5ac4fe4fb6a948ec5c6477011fda232\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "5e21826fba1124f81c1e75f1771b61637696b736",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5e21826fba1124f81c1e75f1771b61637696b736",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5e21826fba1124f81c1e75f1771b61637696b736"
                }
            ]
        },
        {
            "sha": "cfb0d33c4525d30cd5c283d0c6ac4b389e8b3cd7",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpjZmIwZDMzYzQ1MjVkMzBjZDVjMjgzZDBjNmFjNGIzODllOGIzY2Q3",
            "commit": {
                "author": {
                    "name": "Rob Bast",
                    "email": "rob.bast@gmail.com",
                    "date": "2018-08-20T08:41:34Z"
                },
                "committer": {
                    "name": "Rob Bast",
                    "email": "rob.bast@gmail.com",
                    "date": "2018-08-20T08:41:34Z"
                },
                "message": "add removePackage() to RepositoryInterface",
                "tree": {
                    "sha": "350d3ae8d7d34bf1f5a482e43b6fdd063622fe07",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/350d3ae8d7d34bf1f5a482e43b6fdd063622fe07"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/cfb0d33c4525d30cd5c283d0c6ac4b389e8b3cd7",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGecr0DIm\/bmCAArScwduNeYWXzkFAlt6fs4ACgkQcwduNeYW\nXzlnSQ\/\/aTLEMT3QnV4Wm+3a\/z\/p5bAT2dDJG8X793Zxs6nKsxFrSiYxilrl8PAk\nGsRxtcyB94A89oo+KfYx4KzWS2ysNcszHwUgSB7hUuV\/9aDGlNhTmI46pkjq8p10\n6yn4zz3fBo\/jusO1DArS3pbXLjo+J2GPjyoEligclJEAGJ+sszjO+SFEc4OmQQUt\nwjyq8uOb7jzz6n5qmXUpBdPOY7TQsFId4xEDrPOm4vdDRZVAKhe\/LmKC4RtLdF28\nY0ULeV9o2N770Dn2cLjC5slMFkP3YQy9WIUggPUTc3I9Ra7PW9\/seymY44hF9zMz\nIRrxbADDvgY0TjW08+oIX0Ft9ex\/wFLGvwP\/RomffhoW8x2RD+3T08RljNXkh7ab\no+Bykc2toY66eGrZYckepre9IW5u7sdzjNvx27AwVkbwMDiJYTNofHo+AI2kUyi6\n9QsiKeKqm4tTohdpuB1LcLnPMPWbjPPyIy6AJOyk4gJcdh7UrYDOc92gRmD7B\/MN\n4jG0X4oLicIb6AVosBHizMiJin2cqq\/dZmb6Ino1q3F0ut1xbYGWIMmv2dXygZBP\nxI2b0YIFWVVTNyH0NsrCdAhY7UXhSTsHnd7K+AZC\/QBoLswC4tkzl+5uKOrFPfeh\nYvXrQRcTHb+q\/roan2wByATO2iesxefqlr7vSP\/2Yqr\/VtTwQvE=\n=CBnA\n-----END PGP SIGNATURE-----",
                    "payload": "tree 350d3ae8d7d34bf1f5a482e43b6fdd063622fe07\nparent 7d273f7cd8f1bc2947282e162fd6b0d418188d41\nauthor Rob Bast <rob.bast@gmail.com> 1534754494 +0200\ncommitter Rob Bast <rob.bast@gmail.com> 1534754494 +0200\n\nadd removePackage() to RepositoryInterface\n"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/cfb0d33c4525d30cd5c283d0c6ac4b389e8b3cd7",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/cfb0d33c4525d30cd5c283d0c6ac4b389e8b3cd7",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/cfb0d33c4525d30cd5c283d0c6ac4b389e8b3cd7\/comments",
            "author": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "7d273f7cd8f1bc2947282e162fd6b0d418188d41",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7d273f7cd8f1bc2947282e162fd6b0d418188d41",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7d273f7cd8f1bc2947282e162fd6b0d418188d41"
                }
            ]
        },
        {
            "sha": "c46f9f061af8a162b54b896f551ec20fe1fd9a6d",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpjNDZmOWYwNjFhZjhhMTYyYjU0Yjg5NmY1NTFlYzIwZmUxZmQ5YTZk",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-22T07:43:30Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-22T07:43:30Z"
                },
                "message": "Update deps",
                "tree": {
                    "sha": "ba7bc2ec1750f7cc9d0cef7ab355b049f97cf0f3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ba7bc2ec1750f7cc9d0cef7ab355b049f97cf0f3"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/c46f9f061af8a162b54b896f551ec20fe1fd9a6d",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c46f9f061af8a162b54b896f551ec20fe1fd9a6d",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c46f9f061af8a162b54b896f551ec20fe1fd9a6d",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c46f9f061af8a162b54b896f551ec20fe1fd9a6d\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "81516098e5ac4fe4fb6a948ec5c6477011fda232",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/81516098e5ac4fe4fb6a948ec5c6477011fda232",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/81516098e5ac4fe4fb6a948ec5c6477011fda232"
                }
            ]
        },
        {
            "sha": "3d01ef28faac1363e10fd797aa81f2a8a6cdbd95",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozZDAxZWYyOGZhYWMxMzYzZTEwZmQ3OTdhYTgxZjJhOGE2Y2RiZDk1",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-22T07:45:54Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-22T07:45:54Z"
                },
                "message": "Revert \"Do not dump source and dist for metapackages\"\n\nThe source\/dist reference is needed to operate composer outdated and other functionality\n\nFixes #7546\n\nThis reverts commit 42739e7959d81f38e0e41ab7ae96e5db88c0411d.",
                "tree": {
                    "sha": "dfea3d426ad6271a6f614a5d524c6e624583745c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/dfea3d426ad6271a6f614a5d524c6e624583745c"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/3d01ef28faac1363e10fd797aa81f2a8a6cdbd95",
                "comment_count": 2,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3d01ef28faac1363e10fd797aa81f2a8a6cdbd95",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3d01ef28faac1363e10fd797aa81f2a8a6cdbd95",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3d01ef28faac1363e10fd797aa81f2a8a6cdbd95\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "7d273f7cd8f1bc2947282e162fd6b0d418188d41",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7d273f7cd8f1bc2947282e162fd6b0d418188d41",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7d273f7cd8f1bc2947282e162fd6b0d418188d41"
                }
            ]
        },
        {
            "sha": "0f6b305bd94b4b2de37816cd6e26071378be811d",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowZjZiMzA1YmQ5NGI0YjJkZTM3ODE2Y2Q2ZTI2MDcxMzc4YmU4MTFk",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-22T07:57:41Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-22T07:57:41Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "a5d1bb1358db3b60a14aa6cef283c32d720669d5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/a5d1bb1358db3b60a14aa6cef283c32d720669d5"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0f6b305bd94b4b2de37816cd6e26071378be811d",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0f6b305bd94b4b2de37816cd6e26071378be811d",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0f6b305bd94b4b2de37816cd6e26071378be811d",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0f6b305bd94b4b2de37816cd6e26071378be811d\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "c46f9f061af8a162b54b896f551ec20fe1fd9a6d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c46f9f061af8a162b54b896f551ec20fe1fd9a6d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c46f9f061af8a162b54b896f551ec20fe1fd9a6d"
                },
                {
                    "sha": "3d01ef28faac1363e10fd797aa81f2a8a6cdbd95",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3d01ef28faac1363e10fd797aa81f2a8a6cdbd95",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3d01ef28faac1363e10fd797aa81f2a8a6cdbd95"
                }
            ]
        },
        {
            "sha": "4014c914ab488fd035f0f4b9c8f3b24bdcf55b24",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0MDE0YzkxNGFiNDg4ZmQwMzVmMGY0YjljOGYzYjI0YmRjZjU1YjI0",
            "commit": {
                "author": {
                    "name": "Farhad Safarov",
                    "email": "farhad.safarov@gmail.com",
                    "date": "2018-08-21T11:51:20Z"
                },
                "committer": {
                    "name": "Farhad Safarov",
                    "email": "farhad.safarov@gmail.com",
                    "date": "2018-08-25T13:37:20Z"
                },
                "message": "remove Github 404 retries",
                "tree": {
                    "sha": "fe7032f72c79c7ea2f87fe783e896396b079a8fa",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/fe7032f72c79c7ea2f87fe783e896396b079a8fa"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/4014c914ab488fd035f0f4b9c8f3b24bdcf55b24",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/4014c914ab488fd035f0f4b9c8f3b24bdcf55b24",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/4014c914ab488fd035f0f4b9c8f3b24bdcf55b24",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/4014c914ab488fd035f0f4b9c8f3b24bdcf55b24\/comments",
            "author": {
                "login": "seferov",
                "id": 1233843,
                "node_id": "MDQ6VXNlcjEyMzM4NDM=",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/1233843?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/seferov",
                "html_url": "https:\/\/github.com\/seferov",
                "followers_url": "https:\/\/api.github.com\/users\/seferov\/followers",
                "following_url": "https:\/\/api.github.com\/users\/seferov\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/seferov\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/seferov\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/seferov\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/seferov\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/seferov\/repos",
                "events_url": "https:\/\/api.github.com\/users\/seferov\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/seferov\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "seferov",
                "id": 1233843,
                "node_id": "MDQ6VXNlcjEyMzM4NDM=",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/1233843?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/seferov",
                "html_url": "https:\/\/github.com\/seferov",
                "followers_url": "https:\/\/api.github.com\/users\/seferov\/followers",
                "following_url": "https:\/\/api.github.com\/users\/seferov\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/seferov\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/seferov\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/seferov\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/seferov\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/seferov\/repos",
                "events_url": "https:\/\/api.github.com\/users\/seferov\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/seferov\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "3d01ef28faac1363e10fd797aa81f2a8a6cdbd95",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3d01ef28faac1363e10fd797aa81f2a8a6cdbd95",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3d01ef28faac1363e10fd797aa81f2a8a6cdbd95"
                }
            ]
        },
        {
            "sha": "bf125295df9da84c44989e33f9f84b4ed4f8ea56",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiZjEyNTI5NWRmOWRhODRjNDQ5ODllMzNmOWY4NGI0ZWQ0ZjhlYTU2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-25T15:45:08Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-25T16:48:56Z"
                },
                "message": "Fix escaping of URLs in Perforce and Subversion drivers",
                "tree": {
                    "sha": "1a39bf7eadf9b4cac2aa7e4b149d2fd1ce5e4fd4",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/1a39bf7eadf9b4cac2aa7e4b149d2fd1ce5e4fd4"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/bf125295df9da84c44989e33f9f84b4ed4f8ea56",
                "comment_count": 2,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bf125295df9da84c44989e33f9f84b4ed4f8ea56",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bf125295df9da84c44989e33f9f84b4ed4f8ea56",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bf125295df9da84c44989e33f9f84b4ed4f8ea56\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "3d01ef28faac1363e10fd797aa81f2a8a6cdbd95",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3d01ef28faac1363e10fd797aa81f2a8a6cdbd95",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3d01ef28faac1363e10fd797aa81f2a8a6cdbd95"
                }
            ]
        },
        {
            "sha": "3b587eed21fce07b7c56781542628b0e22962b0d",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozYjU4N2VlZDIxZmNlMDdiN2M1Njc4MTU0MjYyOGIwZTIyOTYyYjBk",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-25T15:47:11Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-25T16:48:56Z"
                },
                "message": "Update xdebug-handler to latest, fixes #7436",
                "tree": {
                    "sha": "3fdd565385839db417977fdd70b3ed8f696aeb95",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/3fdd565385839db417977fdd70b3ed8f696aeb95"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/3b587eed21fce07b7c56781542628b0e22962b0d",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3b587eed21fce07b7c56781542628b0e22962b0d",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3b587eed21fce07b7c56781542628b0e22962b0d",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3b587eed21fce07b7c56781542628b0e22962b0d\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "bf125295df9da84c44989e33f9f84b4ed4f8ea56",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bf125295df9da84c44989e33f9f84b4ed4f8ea56",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bf125295df9da84c44989e33f9f84b4ed4f8ea56"
                }
            ]
        },
        {
            "sha": "d1006209871ff28f617611972569421d22e36100",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkMTAwNjIwOTg3MWZmMjhmNjE3NjExOTcyNTY5NDIxZDIyZTM2MTAw",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-25T16:49:56Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-25T16:49:56Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "9c36ee47863e333081b473ff536dbdda0c27001a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/9c36ee47863e333081b473ff536dbdda0c27001a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/d1006209871ff28f617611972569421d22e36100",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d1006209871ff28f617611972569421d22e36100",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d1006209871ff28f617611972569421d22e36100",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d1006209871ff28f617611972569421d22e36100\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0f6b305bd94b4b2de37816cd6e26071378be811d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0f6b305bd94b4b2de37816cd6e26071378be811d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0f6b305bd94b4b2de37816cd6e26071378be811d"
                },
                {
                    "sha": "3b587eed21fce07b7c56781542628b0e22962b0d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3b587eed21fce07b7c56781542628b0e22962b0d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3b587eed21fce07b7c56781542628b0e22962b0d"
                }
            ]
        },
        {
            "sha": "33341130a93add87c8c264ba3608e982600338ca",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozMzM0MTEzMGE5M2FkZDg3YzhjMjY0YmEzNjA4ZTk4MjYwMDMzOGNh",
            "commit": {
                "author": {
                    "name": "Pierre du Plessis",
                    "email": "pierre@pcservice.co.za",
                    "date": "2018-08-27T07:13:52Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-08-27T07:13:52Z"
                },
                "message": "Fix typo in variable name in GitHubDriver",
                "tree": {
                    "sha": "87d80a75a86f9b083bcb3d7dadae90f6af245b97",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/87d80a75a86f9b083bcb3d7dadae90f6af245b97"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/33341130a93add87c8c264ba3608e982600338ca",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbg6SwCRBK7hj4Ov3rIwAAdHIIAJztMamEs9qv3N7hKMdKSU1i\nPM6wWNObKHlol+Gcn9qeu6FAYOGYEmuI7YJdoXcK623jA4OdJORe2tLD4aJplWLv\nyMc7kfPx+AYceTXGArDVPdrFi8XPhwBX0npy3+ChoCdodd7oRaFawCJCGvr9\/A19\ndZPI1WqfDfpOH8tanL5HsG\/dEZg+9nYUW3+FpcglV03vD7+3zll3XSisarU6u0yV\na\/Ue9uuSukBniBhp9U38f4yNj2Lprr6RbqO7vUc+X5Y73ffxAQNHKMq6CRXy\/BUq\nUZ8aH1xowrjV1UlPzXwrDqlPWGpySYsIshKF4RsuC++ncGbDBdCdxB8aq3yEDUc=\n=85Mt\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 87d80a75a86f9b083bcb3d7dadae90f6af245b97\nparent 3b587eed21fce07b7c56781542628b0e22962b0d\nauthor Pierre du Plessis <pierre@pcservice.co.za> 1535354032 +0200\ncommitter GitHub <noreply@github.com> 1535354032 +0200\n\nFix typo in variable name in GitHubDriver"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/33341130a93add87c8c264ba3608e982600338ca",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/33341130a93add87c8c264ba3608e982600338ca",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/33341130a93add87c8c264ba3608e982600338ca\/comments",
            "author": {
                "login": "pierredup",
                "id": 144858,
                "node_id": "MDQ6VXNlcjE0NDg1OA==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/144858?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/pierredup",
                "html_url": "https:\/\/github.com\/pierredup",
                "followers_url": "https:\/\/api.github.com\/users\/pierredup\/followers",
                "following_url": "https:\/\/api.github.com\/users\/pierredup\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/pierredup\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/pierredup\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/pierredup\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/pierredup\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/pierredup\/repos",
                "events_url": "https:\/\/api.github.com\/users\/pierredup\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/pierredup\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "3b587eed21fce07b7c56781542628b0e22962b0d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3b587eed21fce07b7c56781542628b0e22962b0d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3b587eed21fce07b7c56781542628b0e22962b0d"
                }
            ]
        },
        {
            "sha": "bcf615ddc713cf6958fd871ee1ed71f43ea62d58",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiY2Y2MTVkZGM3MTNjZjY5NThmZDg3MWVlMWVkNzFmNDNlYTYyZDU4",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-27T07:54:10Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-08-27T07:54:10Z"
                },
                "message": "Merge pull request #7589 from pierredup\/patch-2\n\nFix typo in variable name in GitHubDriver",
                "tree": {
                    "sha": "87d80a75a86f9b083bcb3d7dadae90f6af245b97",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/87d80a75a86f9b083bcb3d7dadae90f6af245b97"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/bcf615ddc713cf6958fd871ee1ed71f43ea62d58",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbg64iCRBK7hj4Ov3rIwAAdHIIAFLhelN0j9rhiF5+zcPvyMSV\nD9TgATwAn1E2xDBWAGm1YGeFZzKT2S5+ohO7Wtl5940bMBw7gakmwQ+Dlrmry44d\nlaHlCISK9JwHhAHa9zLMxTpGLbYiJxDlCJgKJrSKABriS\/SjR4+AnLdxhcKSl0wB\np7QZKDt9niFABbo7P13xCD36mfK03ehwAFeyif4ZWL7Gyt4TJG02DryfQmWMjNZc\nQiaLno1WpSEE65iJwcskuXZF2byVmJLbcBYfyua610DOVwfpuxPQm7rhU89sqvEw\nECkE+2U1zsjbaWPjcHEQ1FcxtuCh3EQ\/pU+QKut6YepRGBa+kpgYlHh\/6J1VO5Q=\n=AD22\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 87d80a75a86f9b083bcb3d7dadae90f6af245b97\nparent 3b587eed21fce07b7c56781542628b0e22962b0d\nparent 33341130a93add87c8c264ba3608e982600338ca\nauthor Jordi Boggiano <j.boggiano@seld.be> 1535356450 +0200\ncommitter GitHub <noreply@github.com> 1535356450 +0200\n\nMerge pull request #7589 from pierredup\/patch-2\n\nFix typo in variable name in GitHubDriver"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bcf615ddc713cf6958fd871ee1ed71f43ea62d58",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bcf615ddc713cf6958fd871ee1ed71f43ea62d58",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bcf615ddc713cf6958fd871ee1ed71f43ea62d58\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "3b587eed21fce07b7c56781542628b0e22962b0d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3b587eed21fce07b7c56781542628b0e22962b0d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3b587eed21fce07b7c56781542628b0e22962b0d"
                },
                {
                    "sha": "33341130a93add87c8c264ba3608e982600338ca",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/33341130a93add87c8c264ba3608e982600338ca",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/33341130a93add87c8c264ba3608e982600338ca"
                }
            ]
        },
        {
            "sha": "734735c69199aba5875e24f2479b38a0efa68c39",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3MzQ3MzVjNjkxOTlhYmE1ODc1ZTI0ZjI0NzliMzhhMGVmYTY4YzM5",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-27T07:56:31Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-08-27T07:56:31Z"
                },
                "message": "Merge pull request #7574 from seferov\/patch-1\n\nRemove github API request retries as it is not needed anymore",
                "tree": {
                    "sha": "ca53957a86932199a4977eda992c9906ff1dfd3a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ca53957a86932199a4977eda992c9906ff1dfd3a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/734735c69199aba5875e24f2479b38a0efa68c39",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbg66vCRBK7hj4Ov3rIwAAdHIIAJH6Acw6BAWfZ7Z4s4G+IrrU\nSJEB0kWgIN+emKWMvcYeAWyr4MOUUeWPimrfH9WIFMkHtOTUB5ZxhpNWsUfqgrTx\nA7to7nk8SdhOYDuzOAShfZz64Z7\/xNk2SuCHqf6LNEnyUITOYoPYx5s8m4iH6VQD\nYj\/Y6aC+l221R3a49c\/njjNVHpHAdD+h2CAkkV3nFSNN5CEgYU47SF0mi6YeqITp\n8TNYjMyqHZCPkeeWPDEoaS\/55GJMySnSiX7z89UALNDW\/2oDKEekLsDRyg4fyYZt\nEAKCrH928v3m5jYhYXp26wRq18ruz839DaJbe0yoDpcmYtmAihNS+tMEordF+CM=\n=3aY7\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree ca53957a86932199a4977eda992c9906ff1dfd3a\nparent bcf615ddc713cf6958fd871ee1ed71f43ea62d58\nparent 4014c914ab488fd035f0f4b9c8f3b24bdcf55b24\nauthor Jordi Boggiano <j.boggiano@seld.be> 1535356591 +0200\ncommitter GitHub <noreply@github.com> 1535356591 +0200\n\nMerge pull request #7574 from seferov\/patch-1\n\nRemove github API request retries as it is not needed anymore"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/734735c69199aba5875e24f2479b38a0efa68c39",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/734735c69199aba5875e24f2479b38a0efa68c39",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/734735c69199aba5875e24f2479b38a0efa68c39\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "bcf615ddc713cf6958fd871ee1ed71f43ea62d58",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bcf615ddc713cf6958fd871ee1ed71f43ea62d58",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bcf615ddc713cf6958fd871ee1ed71f43ea62d58"
                },
                {
                    "sha": "4014c914ab488fd035f0f4b9c8f3b24bdcf55b24",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/4014c914ab488fd035f0f4b9c8f3b24bdcf55b24",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/4014c914ab488fd035f0f4b9c8f3b24bdcf55b24"
                }
            ]
        },
        {
            "sha": "e5b948c683e98ed2618431456ad447d0d7c8d209",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplNWI5NDhjNjgzZTk4ZWQyNjE4NDMxNDU2YWQ0NDdkMGQ3YzhkMjA5",
            "commit": {
                "author": {
                    "name": "Christophe Coevoet",
                    "email": "stof@notk.org",
                    "date": "2018-07-09T20:07:12Z"
                },
                "committer": {
                    "name": "Christophe Coevoet",
                    "email": "stof@notk.org",
                    "date": "2018-08-27T10:14:34Z"
                },
                "message": "Refactor the handling of conflict rules in the solver\n\nConflict rules are not added in the solver based on the packages loaded in the\nsolver by require rules, instead of loading remote metadata for them. This has\n2 benefits:\n\n- it reduces the number of conflict rules in the solver in case of conflict\n  rules targetting packages which are not required\n- it fixes the behavior of replaces, which is meant to conflict with all\n  versions of the replaced package, without introducing a performance\n  regression (this behavior was changed when optimizing composer in the past).",
                "tree": {
                    "sha": "053477e0598b88c8ca0fd1762aa9974dd209e9c2",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/053477e0598b88c8ca0fd1762aa9974dd209e9c2"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/e5b948c683e98ed2618431456ad447d0d7c8d209",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e5b948c683e98ed2618431456ad447d0d7c8d209",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e5b948c683e98ed2618431456ad447d0d7c8d209",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e5b948c683e98ed2618431456ad447d0d7c8d209\/comments",
            "author": {
                "login": "stof",
                "id": 439401,
                "node_id": "MDQ6VXNlcjQzOTQwMQ==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/439401?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/stof",
                "html_url": "https:\/\/github.com\/stof",
                "followers_url": "https:\/\/api.github.com\/users\/stof\/followers",
                "following_url": "https:\/\/api.github.com\/users\/stof\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/stof\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/stof\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/stof\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/stof\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/stof\/repos",
                "events_url": "https:\/\/api.github.com\/users\/stof\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/stof\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "stof",
                "id": 439401,
                "node_id": "MDQ6VXNlcjQzOTQwMQ==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/439401?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/stof",
                "html_url": "https:\/\/github.com\/stof",
                "followers_url": "https:\/\/api.github.com\/users\/stof\/followers",
                "following_url": "https:\/\/api.github.com\/users\/stof\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/stof\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/stof\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/stof\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/stof\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/stof\/repos",
                "events_url": "https:\/\/api.github.com\/users\/stof\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/stof\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "734735c69199aba5875e24f2479b38a0efa68c39",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/734735c69199aba5875e24f2479b38a0efa68c39",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/734735c69199aba5875e24f2479b38a0efa68c39"
                }
            ]
        },
        {
            "sha": "8c3898aa576643fb4238141ad94c2f5a6e1e74ad",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4YzM4OThhYTU3NjY0M2ZiNDIzODE0MWFkOTRjMmY1YTZlMWU3NGFk",
            "commit": {
                "author": {
                    "name": "Christophe Coevoet",
                    "email": "stof@notk.org",
                    "date": "2018-07-09T20:51:23Z"
                },
                "committer": {
                    "name": "Christophe Coevoet",
                    "email": "stof@notk.org",
                    "date": "2018-08-27T10:14:34Z"
                },
                "message": "Update tests for replace conflicts\n\nThis reverts the test changes done in b4698568d2 to the original tests added\nin 1425bb7fc3.",
                "tree": {
                    "sha": "7cf539c925f1ff0d07879d740bfb741210d0a148",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/7cf539c925f1ff0d07879d740bfb741210d0a148"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/8c3898aa576643fb4238141ad94c2f5a6e1e74ad",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8c3898aa576643fb4238141ad94c2f5a6e1e74ad",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/8c3898aa576643fb4238141ad94c2f5a6e1e74ad",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8c3898aa576643fb4238141ad94c2f5a6e1e74ad\/comments",
            "author": {
                "login": "stof",
                "id": 439401,
                "node_id": "MDQ6VXNlcjQzOTQwMQ==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/439401?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/stof",
                "html_url": "https:\/\/github.com\/stof",
                "followers_url": "https:\/\/api.github.com\/users\/stof\/followers",
                "following_url": "https:\/\/api.github.com\/users\/stof\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/stof\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/stof\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/stof\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/stof\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/stof\/repos",
                "events_url": "https:\/\/api.github.com\/users\/stof\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/stof\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "stof",
                "id": 439401,
                "node_id": "MDQ6VXNlcjQzOTQwMQ==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/439401?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/stof",
                "html_url": "https:\/\/github.com\/stof",
                "followers_url": "https:\/\/api.github.com\/users\/stof\/followers",
                "following_url": "https:\/\/api.github.com\/users\/stof\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/stof\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/stof\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/stof\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/stof\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/stof\/repos",
                "events_url": "https:\/\/api.github.com\/users\/stof\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/stof\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "e5b948c683e98ed2618431456ad447d0d7c8d209",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e5b948c683e98ed2618431456ad447d0d7c8d209",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e5b948c683e98ed2618431456ad447d0d7c8d209"
                }
            ]
        },
        {
            "sha": "bbd10c1552ac1ddc466b33c6865afccaff2d03cd",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiYmQxMGMxNTUyYWMxZGRjNDY2YjMzYzY4NjVhZmNjYWZmMmQwM2Nk",
            "commit": {
                "author": {
                    "name": "Nils Adermann",
                    "email": "naderman@naderman.de",
                    "date": "2018-08-27T10:30:15Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-08-27T10:30:15Z"
                },
                "message": "Merge pull request #7454 from stof\/conflict_optimization\n\n Refactor the handling of conflict rules in the solver",
                "tree": {
                    "sha": "7cf539c925f1ff0d07879d740bfb741210d0a148",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/7cf539c925f1ff0d07879d740bfb741210d0a148"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/bbd10c1552ac1ddc466b33c6865afccaff2d03cd",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbg9K3CRBK7hj4Ov3rIwAAdHIIACIwR3iYAJCFw4IJQObpNdKB\novx5OLsnlF1PfS4HAsA++cB4wF+qKgpfTaPiellXOi1rxe9NYd9v4zoT8Rx\/peMk\nggJXv3E6B5KXXRna0QX7ZrBKGP1z5KryqZoFmwKplH9+XDSmC7kztoWr64EBanhM\n\/Cx7Amja5L0chk0pkIQhOnCes3teuy2XAFoG94oM5XDxadlzyBnG1KM87g00pHP2\nXpOt0EL9mBoabwOlFh7tszmElxkyHBe9J+iJyIfwiPDJklPX0+IDeumbitLmvFPf\ncs90mIJ5SFXwM5pd\/W+0ZXVZAgcbJCoKoeRV26pro8jRXFUsAYb5La99vHExrIM=\n=9Tu8\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 7cf539c925f1ff0d07879d740bfb741210d0a148\nparent 734735c69199aba5875e24f2479b38a0efa68c39\nparent 8c3898aa576643fb4238141ad94c2f5a6e1e74ad\nauthor Nils Adermann <naderman@naderman.de> 1535365815 +0200\ncommitter GitHub <noreply@github.com> 1535365815 +0200\n\nMerge pull request #7454 from stof\/conflict_optimization\n\n Refactor the handling of conflict rules in the solver "
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bbd10c1552ac1ddc466b33c6865afccaff2d03cd",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bbd10c1552ac1ddc466b33c6865afccaff2d03cd",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bbd10c1552ac1ddc466b33c6865afccaff2d03cd\/comments",
            "author": {
                "login": "naderman",
                "id": 154844,
                "node_id": "MDQ6VXNlcjE1NDg0NA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/154844?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/naderman",
                "html_url": "https:\/\/github.com\/naderman",
                "followers_url": "https:\/\/api.github.com\/users\/naderman\/followers",
                "following_url": "https:\/\/api.github.com\/users\/naderman\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/naderman\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/naderman\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/naderman\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/naderman\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/naderman\/repos",
                "events_url": "https:\/\/api.github.com\/users\/naderman\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/naderman\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "734735c69199aba5875e24f2479b38a0efa68c39",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/734735c69199aba5875e24f2479b38a0efa68c39",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/734735c69199aba5875e24f2479b38a0efa68c39"
                },
                {
                    "sha": "8c3898aa576643fb4238141ad94c2f5a6e1e74ad",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8c3898aa576643fb4238141ad94c2f5a6e1e74ad",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/8c3898aa576643fb4238141ad94c2f5a6e1e74ad"
                }
            ]
        },
        {
            "sha": "df2f2dc113da68dd06c0f0eaed77a05133c0b7f6",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkZjJmMmRjMTEzZGE2OGRkMDZjMGYwZWFlZDc3YTA1MTMzYzBiN2Y2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-27T10:34:42Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-08-27T10:34:42Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "ef8eb4f9c4661e96c25747e030e6a31ecea0ebfd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ef8eb4f9c4661e96c25747e030e6a31ecea0ebfd"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/df2f2dc113da68dd06c0f0eaed77a05133c0b7f6",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/df2f2dc113da68dd06c0f0eaed77a05133c0b7f6",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/df2f2dc113da68dd06c0f0eaed77a05133c0b7f6",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/df2f2dc113da68dd06c0f0eaed77a05133c0b7f6\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "d1006209871ff28f617611972569421d22e36100",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d1006209871ff28f617611972569421d22e36100",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d1006209871ff28f617611972569421d22e36100"
                },
                {
                    "sha": "bbd10c1552ac1ddc466b33c6865afccaff2d03cd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bbd10c1552ac1ddc466b33c6865afccaff2d03cd",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bbd10c1552ac1ddc466b33c6865afccaff2d03cd"
                }
            ]
        },
        {
            "sha": "766ceccd006288101eaada496a8abedf26a9b24c",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3NjZjZWNjZDAwNjI4ODEwMWVhYWRhNDk2YThhYmVkZjI2YTliMjRj",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-08-27T12:46:05Z"
                },
                "committer": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-08-27T12:51:04Z"
                },
                "message": "Print number of classes contained within the generated classmap\n\nto give the developer a better feeling about number of dependent classes",
                "tree": {
                    "sha": "b2c6dd840eb1f347848e895830a8d0b8cb25d6dd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/b2c6dd840eb1f347848e895830a8d0b8cb25d6dd"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/766ceccd006288101eaada496a8abedf26a9b24c",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/766ceccd006288101eaada496a8abedf26a9b24c",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/766ceccd006288101eaada496a8abedf26a9b24c",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/766ceccd006288101eaada496a8abedf26a9b24c\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "81516098e5ac4fe4fb6a948ec5c6477011fda232",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/81516098e5ac4fe4fb6a948ec5c6477011fda232",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/81516098e5ac4fe4fb6a948ec5c6477011fda232"
                }
            ]
        },
        {
            "sha": "4d49fabbc434bb899d34109d074a4add05bd4e64",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0ZDQ5ZmFiYmM0MzRiYjg5OWQzNDEwOWQwNzRhNGFkZDA1YmQ0ZTY0",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "maggus.staab@googlemail.com",
                    "date": "2018-08-27T15:36:11Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-08-27T15:36:11Z"
                },
                "message": "Generating -> Generated",
                "tree": {
                    "sha": "6f8537b12c6ccb286883b96963b9f289907372fd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/6f8537b12c6ccb286883b96963b9f289907372fd"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/4d49fabbc434bb899d34109d074a4add05bd4e64",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbhBprCRBK7hj4Ov3rIwAAdHIIAE5wO1sMqecRE8+DMzfLjQsF\n3K+tYWm61Hihr6DEEqV+tDnYEm1fnuc7sJI35YWvmLkZxC2DTDbompkTgTB67Iq9\nfr2u53ZG3H60BUgW\/tIM\/HKKX5Dl4PJr1G0NrLKx7BaIorVHcCaiSGmnO9rMN0bx\n+I8LkpJjzxV6\/9btbrhsmpGpJZMeqQuCMoz2p+VroZPPTFXToGD75kgRT\/VZUwHm\nWw+w+0Nl7zV9S8YaR6aDc3U89Aa9Q9mdYQLxm5bjT6TzaXZCidVqcSm1bUQFb3P8\nm9+31gfYdL00Le+NVWzky6wMELv2XvSr33\/rQFpz\/OL37kCXr7Ca\/xP05AFbhzc=\n=6V5r\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 6f8537b12c6ccb286883b96963b9f289907372fd\nparent 766ceccd006288101eaada496a8abedf26a9b24c\nauthor Markus Staab <maggus.staab@googlemail.com> 1535384171 +0200\ncommitter GitHub <noreply@github.com> 1535384171 +0200\n\nGenerating -> Generated"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/4d49fabbc434bb899d34109d074a4add05bd4e64",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/4d49fabbc434bb899d34109d074a4add05bd4e64",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/4d49fabbc434bb899d34109d074a4add05bd4e64\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "766ceccd006288101eaada496a8abedf26a9b24c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/766ceccd006288101eaada496a8abedf26a9b24c",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/766ceccd006288101eaada496a8abedf26a9b24c"
                }
            ]
        },
        {
            "sha": "7dd2a0d6f96f308b26ca0e022fecdc92cfa53150",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3ZGQyYTBkNmY5NmYzMDhiMjZjYTBlMDIyZmVjZGM5MmNmYTUzMTUw",
            "commit": {
                "author": {
                    "name": "johnstevenson",
                    "email": "john-stevenson@blueyonder.co.uk",
                    "date": "2018-08-31T13:27:28Z"
                },
                "committer": {
                    "name": "johnstevenson",
                    "email": "john-stevenson@blueyonder.co.uk",
                    "date": "2018-08-31T13:27:28Z"
                },
                "message": "Improve Appveyor caching and update PHP",
                "tree": {
                    "sha": "5f4ea2d261c5bc52cc38bc851f44fe65adbe5ca1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/5f4ea2d261c5bc52cc38bc851f44fe65adbe5ca1"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/7dd2a0d6f96f308b26ca0e022fecdc92cfa53150",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7dd2a0d6f96f308b26ca0e022fecdc92cfa53150",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7dd2a0d6f96f308b26ca0e022fecdc92cfa53150",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7dd2a0d6f96f308b26ca0e022fecdc92cfa53150\/comments",
            "author": {
                "login": "johnstevenson",
                "id": 881777,
                "node_id": "MDQ6VXNlcjg4MTc3Nw==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/881777?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/johnstevenson",
                "html_url": "https:\/\/github.com\/johnstevenson",
                "followers_url": "https:\/\/api.github.com\/users\/johnstevenson\/followers",
                "following_url": "https:\/\/api.github.com\/users\/johnstevenson\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/johnstevenson\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/johnstevenson\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/johnstevenson\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/johnstevenson\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/johnstevenson\/repos",
                "events_url": "https:\/\/api.github.com\/users\/johnstevenson\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/johnstevenson\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "johnstevenson",
                "id": 881777,
                "node_id": "MDQ6VXNlcjg4MTc3Nw==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/881777?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/johnstevenson",
                "html_url": "https:\/\/github.com\/johnstevenson",
                "followers_url": "https:\/\/api.github.com\/users\/johnstevenson\/followers",
                "following_url": "https:\/\/api.github.com\/users\/johnstevenson\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/johnstevenson\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/johnstevenson\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/johnstevenson\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/johnstevenson\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/johnstevenson\/repos",
                "events_url": "https:\/\/api.github.com\/users\/johnstevenson\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/johnstevenson\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "df2f2dc113da68dd06c0f0eaed77a05133c0b7f6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/df2f2dc113da68dd06c0f0eaed77a05133c0b7f6",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/df2f2dc113da68dd06c0f0eaed77a05133c0b7f6"
                }
            ]
        },
        {
            "sha": "2023690c7df88fd68d43f0c1ce9408e48235a388",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyMDIzNjkwYzdkZjg4ZmQ2OGQ0M2YwYzFjZTk0MDhlNDgyMzVhMzg4",
            "commit": {
                "author": {
                    "name": "johnstevenson",
                    "email": "john-stevenson@blueyonder.co.uk",
                    "date": "2018-09-01T10:26:03Z"
                },
                "committer": {
                    "name": "johnstevenson",
                    "email": "john-stevenson@blueyonder.co.uk",
                    "date": "2018-09-01T10:26:03Z"
                },
                "message": "Update xdebug-handler, fixes #7596",
                "tree": {
                    "sha": "80c792000cf7772a34228277bd6abb402a1e0a89",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/80c792000cf7772a34228277bd6abb402a1e0a89"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/2023690c7df88fd68d43f0c1ce9408e48235a388",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2023690c7df88fd68d43f0c1ce9408e48235a388",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2023690c7df88fd68d43f0c1ce9408e48235a388",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2023690c7df88fd68d43f0c1ce9408e48235a388\/comments",
            "author": {
                "login": "johnstevenson",
                "id": 881777,
                "node_id": "MDQ6VXNlcjg4MTc3Nw==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/881777?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/johnstevenson",
                "html_url": "https:\/\/github.com\/johnstevenson",
                "followers_url": "https:\/\/api.github.com\/users\/johnstevenson\/followers",
                "following_url": "https:\/\/api.github.com\/users\/johnstevenson\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/johnstevenson\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/johnstevenson\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/johnstevenson\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/johnstevenson\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/johnstevenson\/repos",
                "events_url": "https:\/\/api.github.com\/users\/johnstevenson\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/johnstevenson\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "johnstevenson",
                "id": 881777,
                "node_id": "MDQ6VXNlcjg4MTc3Nw==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/881777?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/johnstevenson",
                "html_url": "https:\/\/github.com\/johnstevenson",
                "followers_url": "https:\/\/api.github.com\/users\/johnstevenson\/followers",
                "following_url": "https:\/\/api.github.com\/users\/johnstevenson\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/johnstevenson\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/johnstevenson\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/johnstevenson\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/johnstevenson\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/johnstevenson\/repos",
                "events_url": "https:\/\/api.github.com\/users\/johnstevenson\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/johnstevenson\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "bbd10c1552ac1ddc466b33c6865afccaff2d03cd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bbd10c1552ac1ddc466b33c6865afccaff2d03cd",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bbd10c1552ac1ddc466b33c6865afccaff2d03cd"
                }
            ]
        },
        {
            "sha": "c279c7ca96e923e54b4a0fac765e9c4682916ac1",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpjMjc5YzdjYTk2ZTkyM2U1NGI0YTBmYWM3NjVlOWM0NjgyOTE2YWMx",
            "commit": {
                "author": {
                    "name": "SeRRg",
                    "email": "sergey_rus@bk.ru",
                    "date": "2018-09-02T06:37:19Z"
                },
                "committer": {
                    "name": "SeRRg",
                    "email": "sergey_rus@bk.ru",
                    "date": "2018-09-02T06:37:19Z"
                },
                "message": "Add --no-dev option to check-platform-reqs command",
                "tree": {
                    "sha": "a1e614add449f64600f12859f8a923e3bc9d4409",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/a1e614add449f64600f12859f8a923e3bc9d4409"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/c279c7ca96e923e54b4a0fac765e9c4682916ac1",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c279c7ca96e923e54b4a0fac765e9c4682916ac1",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c279c7ca96e923e54b4a0fac765e9c4682916ac1",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c279c7ca96e923e54b4a0fac765e9c4682916ac1\/comments",
            "author": {
                "login": "lamp-of-god",
                "id": 12278034,
                "node_id": "MDQ6VXNlcjEyMjc4MDM0",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/12278034?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/lamp-of-god",
                "html_url": "https:\/\/github.com\/lamp-of-god",
                "followers_url": "https:\/\/api.github.com\/users\/lamp-of-god\/followers",
                "following_url": "https:\/\/api.github.com\/users\/lamp-of-god\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/lamp-of-god\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/lamp-of-god\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/lamp-of-god\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/lamp-of-god\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/lamp-of-god\/repos",
                "events_url": "https:\/\/api.github.com\/users\/lamp-of-god\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/lamp-of-god\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "lamp-of-god",
                "id": 12278034,
                "node_id": "MDQ6VXNlcjEyMjc4MDM0",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/12278034?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/lamp-of-god",
                "html_url": "https:\/\/github.com\/lamp-of-god",
                "followers_url": "https:\/\/api.github.com\/users\/lamp-of-god\/followers",
                "following_url": "https:\/\/api.github.com\/users\/lamp-of-god\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/lamp-of-god\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/lamp-of-god\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/lamp-of-god\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/lamp-of-god\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/lamp-of-god\/repos",
                "events_url": "https:\/\/api.github.com\/users\/lamp-of-god\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/lamp-of-god\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "df2f2dc113da68dd06c0f0eaed77a05133c0b7f6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/df2f2dc113da68dd06c0f0eaed77a05133c0b7f6",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/df2f2dc113da68dd06c0f0eaed77a05133c0b7f6"
                }
            ]
        },
        {
            "sha": "1191bbc5f43d820cdb7306ad4e651f1a900d6f5f",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxMTkxYmJjNWY0M2Q4MjBjZGI3MzA2YWQ0ZTY1MWYxYTkwMGQ2ZjVm",
            "commit": {
                "author": {
                    "name": "Nguyen Xuan Quynh",
                    "email": "nguyenxuanquynh2210vghy@gmail.com",
                    "date": "2018-09-04T07:43:21Z"
                },
                "committer": {
                    "name": "Nguyen Xuan Quynh",
                    "email": "nguyenxuanquynh2210vghy@gmail.com",
                    "date": "2018-09-04T07:43:21Z"
                },
                "message": "Unify Composer concept",
                "tree": {
                    "sha": "4c4bcd9ebc8a116295e367d1340091dd8a6ca248",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/4c4bcd9ebc8a116295e367d1340091dd8a6ca248"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/1191bbc5f43d820cdb7306ad4e651f1a900d6f5f",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1191bbc5f43d820cdb7306ad4e651f1a900d6f5f",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1191bbc5f43d820cdb7306ad4e651f1a900d6f5f",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1191bbc5f43d820cdb7306ad4e651f1a900d6f5f\/comments",
            "author": {
                "login": "xuanquynh",
                "id": 16967350,
                "node_id": "MDQ6VXNlcjE2OTY3MzUw",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/16967350?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/xuanquynh",
                "html_url": "https:\/\/github.com\/xuanquynh",
                "followers_url": "https:\/\/api.github.com\/users\/xuanquynh\/followers",
                "following_url": "https:\/\/api.github.com\/users\/xuanquynh\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/xuanquynh\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/xuanquynh\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/xuanquynh\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/xuanquynh\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/xuanquynh\/repos",
                "events_url": "https:\/\/api.github.com\/users\/xuanquynh\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/xuanquynh\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "xuanquynh",
                "id": 16967350,
                "node_id": "MDQ6VXNlcjE2OTY3MzUw",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/16967350?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/xuanquynh",
                "html_url": "https:\/\/github.com\/xuanquynh",
                "followers_url": "https:\/\/api.github.com\/users\/xuanquynh\/followers",
                "following_url": "https:\/\/api.github.com\/users\/xuanquynh\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/xuanquynh\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/xuanquynh\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/xuanquynh\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/xuanquynh\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/xuanquynh\/repos",
                "events_url": "https:\/\/api.github.com\/users\/xuanquynh\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/xuanquynh\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "df2f2dc113da68dd06c0f0eaed77a05133c0b7f6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/df2f2dc113da68dd06c0f0eaed77a05133c0b7f6",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/df2f2dc113da68dd06c0f0eaed77a05133c0b7f6"
                }
            ]
        },
        {
            "sha": "e80b560fa88028d2584d24450b4fe178a597709b",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplODBiNTYwZmE4ODAyOGQyNTg0ZDI0NDUwYjRmZTE3OGE1OTc3MDli",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-04T17:35:05Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-09-04T17:35:05Z"
                },
                "message": "Merge pull request #7601 from johnstevenson\/update-xdebug-handler\n\nUpdate xdebug-handler, fixes #7596",
                "tree": {
                    "sha": "80c792000cf7772a34228277bd6abb402a1e0a89",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/80c792000cf7772a34228277bd6abb402a1e0a89"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/e80b560fa88028d2584d24450b4fe178a597709b",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbjsJJCRBK7hj4Ov3rIwAAdHIIAJRxSJY1Q4NkTsVkII1sESKI\nfUSit2TN0d2LbiNSKcBM6XxTzNIf5u\/B3ypvuQNOdDfjAR4ITKL+N6Yeff0X2AMw\nKItXL739mYt5zVvX5lswyVv21BXcZHqTXB6iCOiD1JIzV8v0+4UHYzvvotaG2Vdw\n6xQgMJfSypehm1M6s9qq9S\/CeKpBjPTay7NucKQMr4q4KGYGTlv41QafX74Tg02V\nNrmcsYNVsszwF+G7sFJXkXkAqPfTKctet\/oA4MAY\/GpwcoEDupH8fyzonxVwesoO\nObyisF2SULYF4Ee1U7Xvb\/0wA0cUdYiUDBjjP5kN6QM+sT2xg8geJPXRdVFTcmY=\n=UYeP\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 80c792000cf7772a34228277bd6abb402a1e0a89\nparent bbd10c1552ac1ddc466b33c6865afccaff2d03cd\nparent 2023690c7df88fd68d43f0c1ce9408e48235a388\nauthor Jordi Boggiano <j.boggiano@seld.be> 1536082505 +0200\ncommitter GitHub <noreply@github.com> 1536082505 +0200\n\nMerge pull request #7601 from johnstevenson\/update-xdebug-handler\n\nUpdate xdebug-handler, fixes #7596"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e80b560fa88028d2584d24450b4fe178a597709b",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e80b560fa88028d2584d24450b4fe178a597709b",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e80b560fa88028d2584d24450b4fe178a597709b\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "bbd10c1552ac1ddc466b33c6865afccaff2d03cd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bbd10c1552ac1ddc466b33c6865afccaff2d03cd",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bbd10c1552ac1ddc466b33c6865afccaff2d03cd"
                },
                {
                    "sha": "2023690c7df88fd68d43f0c1ce9408e48235a388",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2023690c7df88fd68d43f0c1ce9408e48235a388",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2023690c7df88fd68d43f0c1ce9408e48235a388"
                }
            ]
        },
        {
            "sha": "95840a0ab988b72ebca6e095c6ac703dbcfa71c0",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo5NTg0MGEwYWI5ODhiNzJlYmNhNmUwOTVjNmFjNzAzZGJjZmE3MWMw",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-04T22:00:25Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-04T22:00:25Z"
                },
                "message": "Remove useless curly braces around svn args",
                "tree": {
                    "sha": "e79bfaa03f156cadcf96f8e20b7e192d24489958",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e79bfaa03f156cadcf96f8e20b7e192d24489958"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/95840a0ab988b72ebca6e095c6ac703dbcfa71c0",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/95840a0ab988b72ebca6e095c6ac703dbcfa71c0",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/95840a0ab988b72ebca6e095c6ac703dbcfa71c0",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/95840a0ab988b72ebca6e095c6ac703dbcfa71c0\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "e80b560fa88028d2584d24450b4fe178a597709b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e80b560fa88028d2584d24450b4fe178a597709b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e80b560fa88028d2584d24450b4fe178a597709b"
                }
            ]
        },
        {
            "sha": "d65b175152b4f6009fd33ddb683d52f594a3a14b",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkNjViMTc1MTUyYjRmNjAwOWZkMzNkZGI2ODNkNTJmNTk0YTNhMTRi",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-04T22:16:53Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-09-04T22:16:53Z"
                },
                "message": "Merge pull request #7600 from johnstevenson\/appveyor\n\nImprove Appveyor caching and update PHP",
                "tree": {
                    "sha": "5f4ea2d261c5bc52cc38bc851f44fe65adbe5ca1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/5f4ea2d261c5bc52cc38bc851f44fe65adbe5ca1"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/d65b175152b4f6009fd33ddb683d52f594a3a14b",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbjwRVCRBK7hj4Ov3rIwAAdHIIAB5xqYuKC4VCHr\/Ym8fmqQGz\n2fOxN17Uuk9fl8W10Tco\/IJD8VwJCbxMGz8qQSoSzKNB7AbIp7MqN2KL28Vblpy6\n2SMXn7PAE5HW7qWXfhy5MgK8XDhOnUsaIkEetMt1XrKCO+Jpm6G2Tr7r9FPcXkcb\nZxpzYilYg07IdpefzfkepXGPvtFwz7b9XYIjD8fvLY\/J526suLR2\/Rcpex\/OJITs\nvDx7V1asjBEg+9i3XgBWu6gBwCagSuSztsYhRzjmVrQijk68T5\/CE9LkArtCl+dw\nuTkAltDwnsHu20Zfg4jmsnScZLL2OXuV+dXDeGCmIPNXUcLXX6qKlKr+Q8OLxgk=\n=9ivO\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 5f4ea2d261c5bc52cc38bc851f44fe65adbe5ca1\nparent df2f2dc113da68dd06c0f0eaed77a05133c0b7f6\nparent 7dd2a0d6f96f308b26ca0e022fecdc92cfa53150\nauthor Jordi Boggiano <j.boggiano@seld.be> 1536099413 +0200\ncommitter GitHub <noreply@github.com> 1536099413 +0200\n\nMerge pull request #7600 from johnstevenson\/appveyor\n\nImprove Appveyor caching and update PHP"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d65b175152b4f6009fd33ddb683d52f594a3a14b",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d65b175152b4f6009fd33ddb683d52f594a3a14b",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d65b175152b4f6009fd33ddb683d52f594a3a14b\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "df2f2dc113da68dd06c0f0eaed77a05133c0b7f6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/df2f2dc113da68dd06c0f0eaed77a05133c0b7f6",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/df2f2dc113da68dd06c0f0eaed77a05133c0b7f6"
                },
                {
                    "sha": "7dd2a0d6f96f308b26ca0e022fecdc92cfa53150",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7dd2a0d6f96f308b26ca0e022fecdc92cfa53150",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7dd2a0d6f96f308b26ca0e022fecdc92cfa53150"
                }
            ]
        },
        {
            "sha": "987bd5dd7c6279f9d19e6e9fc969e96c7968396e",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo5ODdiZDVkZDdjNjI3OWY5ZDE5ZTZlOWZjOTY5ZTk2Yzc5NjgzOTZl",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-04T22:24:10Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-09-04T22:24:10Z"
                },
                "message": "Merge pull request #7590 from staabm\/dump-nbclasses\n\nPrint number of classes contained within the generated classmap",
                "tree": {
                    "sha": "042cc5067695321242d5956c1bc1004546fe2f2d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/042cc5067695321242d5956c1bc1004546fe2f2d"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/987bd5dd7c6279f9d19e6e9fc969e96c7968396e",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbjwYLCRBK7hj4Ov3rIwAAdHIIAAnz\/MtVssvoeAHWG0EeufZ6\nmqa+8Ls4RDx4MkI9fIX27WAU8QwHTOXSugwQMq5Mze6UEznGxVOernMeRthX9wJ2\nP67eAqb1p66+aRvkaoEj2s\/PE+LCeb2dH\/jbS6+A8DU3zSU78gx7\/GSKYsMyGBOz\nT8xMEARced\/Xj5hiR1jMJgyqCDuK23ScnDDpCZ6ck6aB2W3+PuTz9qhdkCNyq95K\npkePC+2ttA0Lx6TpEg2LBVuuQMXy3eYAnye47XWFwWQx\/ppVdc2A+Szhgx1oRs3r\nXBh1zoEvnZ3egBZFNhe2wRCXTHdhF74FkWW5yi+0Vv2K3XBrMMBY2KCDS+y\/R0Y=\n=LQAq\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 042cc5067695321242d5956c1bc1004546fe2f2d\nparent d65b175152b4f6009fd33ddb683d52f594a3a14b\nparent 4d49fabbc434bb899d34109d074a4add05bd4e64\nauthor Jordi Boggiano <j.boggiano@seld.be> 1536099850 +0200\ncommitter GitHub <noreply@github.com> 1536099850 +0200\n\nMerge pull request #7590 from staabm\/dump-nbclasses\n\nPrint number of classes contained within the generated classmap"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/987bd5dd7c6279f9d19e6e9fc969e96c7968396e",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/987bd5dd7c6279f9d19e6e9fc969e96c7968396e",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/987bd5dd7c6279f9d19e6e9fc969e96c7968396e\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "d65b175152b4f6009fd33ddb683d52f594a3a14b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d65b175152b4f6009fd33ddb683d52f594a3a14b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d65b175152b4f6009fd33ddb683d52f594a3a14b"
                },
                {
                    "sha": "4d49fabbc434bb899d34109d074a4add05bd4e64",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/4d49fabbc434bb899d34109d074a4add05bd4e64",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/4d49fabbc434bb899d34109d074a4add05bd4e64"
                }
            ]
        },
        {
            "sha": "29434a22c2544672ac5c2aab9126b92d1d7eb660",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyOTQzNGEyMmMyNTQ0NjcyYWM1YzJhYWI5MTI2YjkyZDFkN2ViNjYw",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-04T22:28:29Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-09-04T22:28:29Z"
                },
                "message": "Merge pull request #7612 from xuanquynh\/unify_composer_concept\n\nUnify Composer concept",
                "tree": {
                    "sha": "8d8c9044fa984d39891c8805b73d96ce833ae230",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/8d8c9044fa984d39891c8805b73d96ce833ae230"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/29434a22c2544672ac5c2aab9126b92d1d7eb660",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbjwcNCRBK7hj4Ov3rIwAAdHIIAKy8oLTBMjZY04F46T3PNKGS\nbgpUv5k+82Gtr1cJZSzKxXKkuyzIeACebpROpVyvCTGSSBKEzhIY1intZG4jSjZ1\nTQ4jYb0pm0\/R+v25ale8mH4Zrcb5RAItwEtXRU4rpAwJsKkV5dtLMRbO9zQ1UPRT\nbVQtR3rqevpVnWFTXxxrJWl53kzHIEKbzc38eVtwUSh8PubrV52S5Spb2MXwmrsN\nrqx6fhZJ3+J60ypHg9Y8S+j1nC9YuvU2Rhwf6Gzye0rjq72RoqEouGCjXRd\/B1K9\n1a0JHZRalQEeFeWZkUusMk0pf93TlM\/m7HdaUZqGm\/egtbMrpoPeFGkyCXsSgIM=\n=IRhV\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 8d8c9044fa984d39891c8805b73d96ce833ae230\nparent 987bd5dd7c6279f9d19e6e9fc969e96c7968396e\nparent 1191bbc5f43d820cdb7306ad4e651f1a900d6f5f\nauthor Jordi Boggiano <j.boggiano@seld.be> 1536100109 +0200\ncommitter GitHub <noreply@github.com> 1536100109 +0200\n\nMerge pull request #7612 from xuanquynh\/unify_composer_concept\n\nUnify Composer concept"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/29434a22c2544672ac5c2aab9126b92d1d7eb660",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/29434a22c2544672ac5c2aab9126b92d1d7eb660",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/29434a22c2544672ac5c2aab9126b92d1d7eb660\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "987bd5dd7c6279f9d19e6e9fc969e96c7968396e",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/987bd5dd7c6279f9d19e6e9fc969e96c7968396e",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/987bd5dd7c6279f9d19e6e9fc969e96c7968396e"
                },
                {
                    "sha": "1191bbc5f43d820cdb7306ad4e651f1a900d6f5f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1191bbc5f43d820cdb7306ad4e651f1a900d6f5f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1191bbc5f43d820cdb7306ad4e651f1a900d6f5f"
                }
            ]
        },
        {
            "sha": "92dc2cd9ad78b1b7264454de99653b20c9e78bdb",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo5MmRjMmNkOWFkNzhiMWI3MjY0NDU0ZGU5OTY1M2IyMGM5ZTc4YmRi",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-04T22:29:03Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-04T22:29:03Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "0ca3c558515f226631d914b40289618787892df9",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/0ca3c558515f226631d914b40289618787892df9"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/92dc2cd9ad78b1b7264454de99653b20c9e78bdb",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/92dc2cd9ad78b1b7264454de99653b20c9e78bdb",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/92dc2cd9ad78b1b7264454de99653b20c9e78bdb",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/92dc2cd9ad78b1b7264454de99653b20c9e78bdb\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "29434a22c2544672ac5c2aab9126b92d1d7eb660",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/29434a22c2544672ac5c2aab9126b92d1d7eb660",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/29434a22c2544672ac5c2aab9126b92d1d7eb660"
                },
                {
                    "sha": "95840a0ab988b72ebca6e095c6ac703dbcfa71c0",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/95840a0ab988b72ebca6e095c6ac703dbcfa71c0",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/95840a0ab988b72ebca6e095c6ac703dbcfa71c0"
                }
            ]
        },
        {
            "sha": "a1ead0e8682f3d62ba5c851317d7b6d974f6584b",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphMWVhZDBlODY4MmYzZDYyYmE1Yzg1MTMxN2Q3YjZkOTc0ZjY1ODRi",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-10T11:33:39Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-09-10T11:33:39Z"
                },
                "message": "Merge pull request #7565 from alcohol\/add-remove-to-pkgrepointerface\n\nadd removePackage() to RepositoryInterface",
                "tree": {
                    "sha": "68743355c7349d57549790a86e8cab68378f434b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/68743355c7349d57549790a86e8cab68378f434b"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a1ead0e8682f3d62ba5c851317d7b6d974f6584b",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbllaTCRBK7hj4Ov3rIwAAdHIIAEm2CXLP\/n+DRyvZ1YGusbiv\nFs2RAjnTWD6o7ivAKbxqDXLOwUgjKGuOT4u5bUto7rUJac99XtYUmOB\/Hd+QkoL0\nzikaxWOGGdwLBwGshVGjR8NE31sQnoJflkh3yBeKcd82+qh1Zia25KUIvGVHe\/xP\nZDAf1fNrkzD\/BEO0N3o5KUPuBZfWp810a6iuNBDsBUE595Sf4y9Zxqs9CG0mQJT8\nn\/4Ielzh1ThRQUXYVyJQlcS85ewX5vx8Fx1IvlGfrTCgyovV+KkTUx9F7zES+P8n\nElEEjG+2EIQ8wd6AWdJFsiMNbfN6h7QP00wZAU4enypbf9Zs\/NGacswJjQZDLNM=\n=HxZv\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 68743355c7349d57549790a86e8cab68378f434b\nparent 95840a0ab988b72ebca6e095c6ac703dbcfa71c0\nparent cfb0d33c4525d30cd5c283d0c6ac4b389e8b3cd7\nauthor Jordi Boggiano <j.boggiano@seld.be> 1536579219 +0200\ncommitter GitHub <noreply@github.com> 1536579219 +0200\n\nMerge pull request #7565 from alcohol\/add-remove-to-pkgrepointerface\n\nadd removePackage() to RepositoryInterface"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1ead0e8682f3d62ba5c851317d7b6d974f6584b",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a1ead0e8682f3d62ba5c851317d7b6d974f6584b",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1ead0e8682f3d62ba5c851317d7b6d974f6584b\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "95840a0ab988b72ebca6e095c6ac703dbcfa71c0",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/95840a0ab988b72ebca6e095c6ac703dbcfa71c0",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/95840a0ab988b72ebca6e095c6ac703dbcfa71c0"
                },
                {
                    "sha": "cfb0d33c4525d30cd5c283d0c6ac4b389e8b3cd7",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/cfb0d33c4525d30cd5c283d0c6ac4b389e8b3cd7",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/cfb0d33c4525d30cd5c283d0c6ac4b389e8b3cd7"
                }
            ]
        },
        {
            "sha": "b99ac8505b63f6b0d2a68c5e435daf760f0ddb94",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiOTlhYzg1MDViNjNmNmIwZDJhNjhjNWU0MzVkYWY3NjBmMGRkYjk0",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-10T11:52:13Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-09-10T11:52:13Z"
                },
                "message": "Merge pull request #7605 from lamp-of-god\/check-requirements-no-dev\n\nAdd --no-dev option to check-platform-reqs command (#7314)",
                "tree": {
                    "sha": "5b9518d81def48a05670d78eacc9b70af2ceea3b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/5b9518d81def48a05670d78eacc9b70af2ceea3b"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b99ac8505b63f6b0d2a68c5e435daf760f0ddb94",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbllrtCRBK7hj4Ov3rIwAAdHIIAFKqfRMmzpAlWAAijfV5kGAp\nIhB6PL50FHHXu8eEK5dexHUyyqT+hhxxsC3QqdM952s+mYhyY0UGLcMaOy6eAt9b\ncFUd5FLgM3HuPkd+NIUr1Ndj9Kbqw\/bznXDOdy6LSmNlzj8yUST+ZnVuR\/1ZY\/yV\nAjVEGKnjpzo\/ggLJjQbFiJBLDqqAEN1uakhvKM103FocGMxD50nyDP\/OKYvDqXEz\nDeQRPqBFMOEVFEDl6ULru\/C28jS3lPFth5YuJrPOXs7KcqBVcG7nVI9jOLnxENCH\n+zVyFsDfhLKqntr6wwhXomu\/IdRgBAnsOU3INf2HQRcIyDk1qpGRwIEZtdG0Bi8=\n=i2hT\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 5b9518d81def48a05670d78eacc9b70af2ceea3b\nparent 92dc2cd9ad78b1b7264454de99653b20c9e78bdb\nparent c279c7ca96e923e54b4a0fac765e9c4682916ac1\nauthor Jordi Boggiano <j.boggiano@seld.be> 1536580333 +0200\ncommitter GitHub <noreply@github.com> 1536580333 +0200\n\nMerge pull request #7605 from lamp-of-god\/check-requirements-no-dev\n\nAdd --no-dev option to check-platform-reqs command (#7314)"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b99ac8505b63f6b0d2a68c5e435daf760f0ddb94",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b99ac8505b63f6b0d2a68c5e435daf760f0ddb94",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b99ac8505b63f6b0d2a68c5e435daf760f0ddb94\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "92dc2cd9ad78b1b7264454de99653b20c9e78bdb",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/92dc2cd9ad78b1b7264454de99653b20c9e78bdb",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/92dc2cd9ad78b1b7264454de99653b20c9e78bdb"
                },
                {
                    "sha": "c279c7ca96e923e54b4a0fac765e9c4682916ac1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c279c7ca96e923e54b4a0fac765e9c4682916ac1",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c279c7ca96e923e54b4a0fac765e9c4682916ac1"
                }
            ]
        },
        {
            "sha": "a25d6f6c355fe6de20bc3a7162f0025ab704bc4d",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphMjVkNmY2YzM1NWZlNmRlMjBiYzNhNzE2MmYwMDI1YWI3MDRiYzRk",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-10T11:58:13Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-10T11:58:13Z"
                },
                "message": "Use local repo for platform checks when possible to avoid surprises, refs #7605",
                "tree": {
                    "sha": "d62abb32332e39c7d507c9fb32a6873d91db8d6a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/d62abb32332e39c7d507c9fb32a6873d91db8d6a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a25d6f6c355fe6de20bc3a7162f0025ab704bc4d",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a25d6f6c355fe6de20bc3a7162f0025ab704bc4d",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a25d6f6c355fe6de20bc3a7162f0025ab704bc4d",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a25d6f6c355fe6de20bc3a7162f0025ab704bc4d\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b99ac8505b63f6b0d2a68c5e435daf760f0ddb94",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b99ac8505b63f6b0d2a68c5e435daf760f0ddb94",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b99ac8505b63f6b0d2a68c5e435daf760f0ddb94"
                }
            ]
        },
        {
            "sha": "9c4df4d4822a20d80077f18ed4886f73155fd900",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo5YzRkZjRkNDgyMmEyMGQ4MDA3N2YxOGVkNDg4NmY3MzE1NWZkOTAw",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-10T12:06:28Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-10T12:06:28Z"
                },
                "message": "Update deps",
                "tree": {
                    "sha": "b72dae9a5964bcac17d265e98ef7bac3358b9a77",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/b72dae9a5964bcac17d265e98ef7bac3358b9a77"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/9c4df4d4822a20d80077f18ed4886f73155fd900",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9c4df4d4822a20d80077f18ed4886f73155fd900",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/9c4df4d4822a20d80077f18ed4886f73155fd900",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9c4df4d4822a20d80077f18ed4886f73155fd900\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a25d6f6c355fe6de20bc3a7162f0025ab704bc4d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a25d6f6c355fe6de20bc3a7162f0025ab704bc4d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a25d6f6c355fe6de20bc3a7162f0025ab704bc4d"
                }
            ]
        },
        {
            "sha": "490f3ccd957e789837dd1ee06b9cf6a2f9e8132a",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0OTBmM2NjZDk1N2U3ODk4MzdkZDFlZTA2YjljZjZhMmY5ZTgxMzJh",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-10T12:06:33Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-10T12:06:33Z"
                },
                "message": "Merge remote-tracking branch 'origin\/1.7'",
                "tree": {
                    "sha": "f032e7a2f9b003d87355708d1e08a89ccf00299d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/f032e7a2f9b003d87355708d1e08a89ccf00299d"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/490f3ccd957e789837dd1ee06b9cf6a2f9e8132a",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/490f3ccd957e789837dd1ee06b9cf6a2f9e8132a",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/490f3ccd957e789837dd1ee06b9cf6a2f9e8132a",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/490f3ccd957e789837dd1ee06b9cf6a2f9e8132a\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "9c4df4d4822a20d80077f18ed4886f73155fd900",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9c4df4d4822a20d80077f18ed4886f73155fd900",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/9c4df4d4822a20d80077f18ed4886f73155fd900"
                },
                {
                    "sha": "a1ead0e8682f3d62ba5c851317d7b6d974f6584b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1ead0e8682f3d62ba5c851317d7b6d974f6584b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a1ead0e8682f3d62ba5c851317d7b6d974f6584b"
                }
            ]
        },
        {
            "sha": "a17f051e2906de312a30165f5295e1dc334e4d7c",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphMTdmMDUxZTI5MDZkZTMxMmEzMDE2NWY1Mjk1ZTFkYzMzNGU0ZDdj",
            "commit": {
                "author": {
                    "name": "Gabriel Caruso",
                    "email": "carusogabriel34@gmail.com",
                    "date": "2018-09-08T01:29:49Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-10T12:24:24Z"
                },
                "message": "Remove useless parentheses",
                "tree": {
                    "sha": "9b977c7a6159adee4e03bc69b5f6467b4efdf0d9",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/9b977c7a6159adee4e03bc69b5f6467b4efdf0d9"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a17f051e2906de312a30165f5295e1dc334e4d7c",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a17f051e2906de312a30165f5295e1dc334e4d7c",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a17f051e2906de312a30165f5295e1dc334e4d7c",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a17f051e2906de312a30165f5295e1dc334e4d7c\/comments",
            "author": {
                "login": "carusogabriel",
                "id": 16328050,
                "node_id": "MDQ6VXNlcjE2MzI4MDUw",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/16328050?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/carusogabriel",
                "html_url": "https:\/\/github.com\/carusogabriel",
                "followers_url": "https:\/\/api.github.com\/users\/carusogabriel\/followers",
                "following_url": "https:\/\/api.github.com\/users\/carusogabriel\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/carusogabriel\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/carusogabriel\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/carusogabriel\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/carusogabriel\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/carusogabriel\/repos",
                "events_url": "https:\/\/api.github.com\/users\/carusogabriel\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/carusogabriel\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "490f3ccd957e789837dd1ee06b9cf6a2f9e8132a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/490f3ccd957e789837dd1ee06b9cf6a2f9e8132a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/490f3ccd957e789837dd1ee06b9cf6a2f9e8132a"
                }
            ]
        },
        {
            "sha": "71c8735e115909f3e049060a359afbf9535e0008",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3MWM4NzM1ZTExNTkwOWYzZTA0OTA2MGEzNTlhZmJmOTUzNWUwMDA4",
            "commit": {
                "author": {
                    "name": "Gabriel Caruso",
                    "email": "carusogabriel34@gmail.com",
                    "date": "2018-09-08T01:35:35Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-10T12:24:41Z"
                },
                "message": "Use combined assignment operators",
                "tree": {
                    "sha": "1e59a58acde20b0b990f3d6dd6f334ea94d1683f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/1e59a58acde20b0b990f3d6dd6f334ea94d1683f"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/71c8735e115909f3e049060a359afbf9535e0008",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/71c8735e115909f3e049060a359afbf9535e0008",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/71c8735e115909f3e049060a359afbf9535e0008",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/71c8735e115909f3e049060a359afbf9535e0008\/comments",
            "author": {
                "login": "carusogabriel",
                "id": 16328050,
                "node_id": "MDQ6VXNlcjE2MzI4MDUw",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/16328050?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/carusogabriel",
                "html_url": "https:\/\/github.com\/carusogabriel",
                "followers_url": "https:\/\/api.github.com\/users\/carusogabriel\/followers",
                "following_url": "https:\/\/api.github.com\/users\/carusogabriel\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/carusogabriel\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/carusogabriel\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/carusogabriel\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/carusogabriel\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/carusogabriel\/repos",
                "events_url": "https:\/\/api.github.com\/users\/carusogabriel\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/carusogabriel\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a17f051e2906de312a30165f5295e1dc334e4d7c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a17f051e2906de312a30165f5295e1dc334e4d7c",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a17f051e2906de312a30165f5295e1dc334e4d7c"
                }
            ]
        },
        {
            "sha": "896d801a3080b2ebefa1b2e09f49093dc00f1f9d",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4OTZkODAxYTMwODBiMmViZWZhMWIyZTA5ZjQ5MDkzZGMwMGYxZjlk",
            "commit": {
                "author": {
                    "name": "Stephan Vock",
                    "email": "stephan.vock@gmail.com",
                    "date": "2018-09-12T16:01:43Z"
                },
                "committer": {
                    "name": "Stephan Vock",
                    "email": "stephan.vock@gmail.com",
                    "date": "2018-09-12T16:01:43Z"
                },
                "message": "Fix: Bitbucket getChangeDate throws exception for branches containing a slash",
                "tree": {
                    "sha": "440b6aedaccfbc465d1a869ba6f41e867d501922",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/440b6aedaccfbc465d1a869ba6f41e867d501922"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/896d801a3080b2ebefa1b2e09f49093dc00f1f9d",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/896d801a3080b2ebefa1b2e09f49093dc00f1f9d",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/896d801a3080b2ebefa1b2e09f49093dc00f1f9d",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/896d801a3080b2ebefa1b2e09f49093dc00f1f9d\/comments",
            "author": {
                "login": "glaubinix",
                "id": 442056,
                "node_id": "MDQ6VXNlcjQ0MjA1Ng==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/442056?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glaubinix",
                "html_url": "https:\/\/github.com\/glaubinix",
                "followers_url": "https:\/\/api.github.com\/users\/glaubinix\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glaubinix\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glaubinix\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glaubinix\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glaubinix\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glaubinix\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glaubinix\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glaubinix\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glaubinix\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "glaubinix",
                "id": 442056,
                "node_id": "MDQ6VXNlcjQ0MjA1Ng==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/442056?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glaubinix",
                "html_url": "https:\/\/github.com\/glaubinix",
                "followers_url": "https:\/\/api.github.com\/users\/glaubinix\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glaubinix\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glaubinix\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glaubinix\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glaubinix\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glaubinix\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glaubinix\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glaubinix\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glaubinix\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a1ead0e8682f3d62ba5c851317d7b6d974f6584b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1ead0e8682f3d62ba5c851317d7b6d974f6584b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a1ead0e8682f3d62ba5c851317d7b6d974f6584b"
                }
            ]
        },
        {
            "sha": "55fec6575f5a08a71897c579727923cb2017faf8",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo1NWZlYzY1NzVmNWEwOGE3MTg5N2M1Nzk3Mjc5MjNjYjIwMTdmYWY4",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-12T16:29:03Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-09-12T16:29:03Z"
                },
                "message": "Merge pull request #7632 from glaubinix\/f\/bitbucket-get-change-date-branch-with-slash\n\nFix: Bitbucket getChangeDate throws exception for branches containing a slash",
                "tree": {
                    "sha": "440b6aedaccfbc465d1a869ba6f41e867d501922",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/440b6aedaccfbc465d1a869ba6f41e867d501922"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/55fec6575f5a08a71897c579727923cb2017faf8",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbmT7PCRBK7hj4Ov3rIwAAdHIIABoKzCq1oT4ii\/+5hzPfjeHr\nMEquSdF9T6\/oA9aI5qYxsnrsSHPNjxrLsHdL\/lU677mUXQYWCNd2P8cIulFg9HmV\nN+vkM6euCGGkVlHOgOP8CnKidBcsNBjC5O7wvzxrXhrDwnq71qTaY\/doUGG9X2WQ\n4NpXj6P3dnlZZO\/C25Ehd1ROIC00OpadkeUdjktTrYjMR+uD53b0RMqTuL\/Yiwiw\n\/1rO+rCCNgAGGhN1FLF0zx53y1XsmIto\/EQvlp4MV9SMyUXxXOJBrVrq+MBdhy\/j\n8SKwlG4j+yOA8zieTS7ueYdao1\/FFfZClNeav9Wd7ZFDTkWgrGKRVU1NbSXu\/8E=\n=VGZC\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 440b6aedaccfbc465d1a869ba6f41e867d501922\nparent a1ead0e8682f3d62ba5c851317d7b6d974f6584b\nparent 896d801a3080b2ebefa1b2e09f49093dc00f1f9d\nauthor Jordi Boggiano <j.boggiano@seld.be> 1536769743 +0200\ncommitter GitHub <noreply@github.com> 1536769743 +0200\n\nMerge pull request #7632 from glaubinix\/f\/bitbucket-get-change-date-branch-with-slash\n\nFix: Bitbucket getChangeDate throws exception for branches containing a slash"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/55fec6575f5a08a71897c579727923cb2017faf8",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/55fec6575f5a08a71897c579727923cb2017faf8",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/55fec6575f5a08a71897c579727923cb2017faf8\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a1ead0e8682f3d62ba5c851317d7b6d974f6584b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1ead0e8682f3d62ba5c851317d7b6d974f6584b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a1ead0e8682f3d62ba5c851317d7b6d974f6584b"
                },
                {
                    "sha": "896d801a3080b2ebefa1b2e09f49093dc00f1f9d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/896d801a3080b2ebefa1b2e09f49093dc00f1f9d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/896d801a3080b2ebefa1b2e09f49093dc00f1f9d"
                }
            ]
        },
        {
            "sha": "b441176f214a114f940e6c7f090dd77b78663a80",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiNDQxMTc2ZjIxNGExMTRmOTQwZTZjN2YwOTBkZDc3Yjc4NjYzYTgw",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-12T16:29:53Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-12T16:29:53Z"
                },
                "message": "Merge remote-tracking branch 'origin\/1.7'",
                "tree": {
                    "sha": "948e5f74cbca7ddf7c0cf28f67613ac19ff105de",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/948e5f74cbca7ddf7c0cf28f67613ac19ff105de"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b441176f214a114f940e6c7f090dd77b78663a80",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b441176f214a114f940e6c7f090dd77b78663a80",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b441176f214a114f940e6c7f090dd77b78663a80",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b441176f214a114f940e6c7f090dd77b78663a80\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "71c8735e115909f3e049060a359afbf9535e0008",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/71c8735e115909f3e049060a359afbf9535e0008",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/71c8735e115909f3e049060a359afbf9535e0008"
                },
                {
                    "sha": "55fec6575f5a08a71897c579727923cb2017faf8",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/55fec6575f5a08a71897c579727923cb2017faf8",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/55fec6575f5a08a71897c579727923cb2017faf8"
                }
            ]
        },
        {
            "sha": "0124e7b553b265c625800ef3035e4c7ea1849336",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowMTI0ZTdiNTUzYjI2NWM2MjU4MDBlZjMwMzVlNGM3ZWExODQ5MzM2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-13T07:27:30Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-13T07:27:57Z"
                },
                "message": "Revert \"add removePackage() to RepositoryInterface\"\n\nThis reverts commit cfb0d33c4525d30cd5c283d0c6ac4b389e8b3cd7.\n\nFixes #7634",
                "tree": {
                    "sha": "85a242fca412b6fc61c95ee8754a4868ba4f1034",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/85a242fca412b6fc61c95ee8754a4868ba4f1034"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0124e7b553b265c625800ef3035e4c7ea1849336",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0124e7b553b265c625800ef3035e4c7ea1849336",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0124e7b553b265c625800ef3035e4c7ea1849336",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0124e7b553b265c625800ef3035e4c7ea1849336\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "55fec6575f5a08a71897c579727923cb2017faf8",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/55fec6575f5a08a71897c579727923cb2017faf8",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/55fec6575f5a08a71897c579727923cb2017faf8"
                }
            ]
        },
        {
            "sha": "af677553cce0967bf7c364d64a9a169152c33fcd",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphZjY3NzU1M2NjZTA5NjdiZjdjMzY0ZDY0YTlhMTY5MTUyYzMzZmNk",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-13T07:28:04Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-13T07:28:04Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "e246df9a67bf82790ae548147d897b0f545a5251",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e246df9a67bf82790ae548147d897b0f545a5251"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/af677553cce0967bf7c364d64a9a169152c33fcd",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/af677553cce0967bf7c364d64a9a169152c33fcd",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/af677553cce0967bf7c364d64a9a169152c33fcd",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/af677553cce0967bf7c364d64a9a169152c33fcd\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b441176f214a114f940e6c7f090dd77b78663a80",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b441176f214a114f940e6c7f090dd77b78663a80",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b441176f214a114f940e6c7f090dd77b78663a80"
                },
                {
                    "sha": "0124e7b553b265c625800ef3035e4c7ea1849336",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0124e7b553b265c625800ef3035e4c7ea1849336",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0124e7b553b265c625800ef3035e4c7ea1849336"
                }
            ]
        },
        {
            "sha": "4a8c416a024785eaa4094edf3a2eafec515972c3",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0YThjNDE2YTAyNDc4NWVhYTQwOTRlZGYzYTJlYWZlYzUxNTk3MmMz",
            "commit": {
                "author": {
                    "name": "Ahammar Yassine",
                    "email": "ahammar.yassine@gmail.com",
                    "date": "2018-09-13T11:17:30Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-09-13T11:17:30Z"
                },
                "message": "Update ValidateCommand.php\n\nSkip publish and lock check even in strict check mode when the user want so.\r\nExample : `composer validate --no-check-lock --strict composer.json`.\r\nIssue : #7624",
                "tree": {
                    "sha": "289d60898476a8ac6698b406961f57b6d99bf551",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/289d60898476a8ac6698b406961f57b6d99bf551"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/4a8c416a024785eaa4094edf3a2eafec515972c3",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbmkdKCRBK7hj4Ov3rIwAAdHIIAFTIApjeFXKsZpADLkhaTy1p\nwAMmpP4ORsV\/KdllbbWJM0XVym0wp4abgwjz43ead02CMmsEa6M\/tUMIcld7Vf+w\nRDUO2CI6ezTAK8wf8HZyJFy3lmBtr+REtY1LN4tLZDLV1T0TRVVvbs3jGzAFxKfx\nO3eUIR+Q7ET9leqPpOhHBuc2dshU\/o5\/Vynf2CnRySwIX\/548nk3KV\/XsjuPch4R\npGfzd49uFrWEEiDy+8uYhlvQE3Bv1eVkU5l21LzBQPIEYgWd4Vlykfza3KuU7ZGV\nR7JNlOwqFcZCX2OgSBbqA20PbQuEa56H2+rdFPDEZwzC8kmwZDXU4T1EpsutbyI=\n=MMNl\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 289d60898476a8ac6698b406961f57b6d99bf551\nparent af677553cce0967bf7c364d64a9a169152c33fcd\nauthor Ahammar Yassine <ahammar.yassine@gmail.com> 1536837450 +0000\ncommitter GitHub <noreply@github.com> 1536837450 +0000\n\nUpdate ValidateCommand.php\n\nSkip publish and lock check even in strict check mode when the user want so.\r\nExample : `composer validate --no-check-lock --strict composer.json`.\r\nIssue : #7624"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/4a8c416a024785eaa4094edf3a2eafec515972c3",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/4a8c416a024785eaa4094edf3a2eafec515972c3",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/4a8c416a024785eaa4094edf3a2eafec515972c3\/comments",
            "author": {
                "login": "yassine-ah",
                "id": 18461154,
                "node_id": "MDQ6VXNlcjE4NDYxMTU0",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/18461154?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/yassine-ah",
                "html_url": "https:\/\/github.com\/yassine-ah",
                "followers_url": "https:\/\/api.github.com\/users\/yassine-ah\/followers",
                "following_url": "https:\/\/api.github.com\/users\/yassine-ah\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/yassine-ah\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/yassine-ah\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/yassine-ah\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/yassine-ah\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/yassine-ah\/repos",
                "events_url": "https:\/\/api.github.com\/users\/yassine-ah\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/yassine-ah\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "af677553cce0967bf7c364d64a9a169152c33fcd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/af677553cce0967bf7c364d64a9a169152c33fcd",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/af677553cce0967bf7c364d64a9a169152c33fcd"
                }
            ]
        },
        {
            "sha": "14c6c2c99fcf11e822607d78f813eadbab215140",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxNGM2YzJjOTlmY2YxMWU4MjI2MDdkNzhmODEzZWFkYmFiMjE1MTQw",
            "commit": {
                "author": {
                    "name": "Nick Wilde",
                    "email": "nick@briarmoon.ca",
                    "date": "2018-09-16T20:12:14Z"
                },
                "committer": {
                    "name": "Nick Wilde",
                    "email": "nick@briarmoon.ca",
                    "date": "2018-09-16T20:12:14Z"
                },
                "message": "Allow plugin commands to be run from child folders as well as core commands",
                "tree": {
                    "sha": "78c9a2162bdcc3e7cc27b36870f548d7af280cc4",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/78c9a2162bdcc3e7cc27b36870f548d7af280cc4"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/14c6c2c99fcf11e822607d78f813eadbab215140",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/14c6c2c99fcf11e822607d78f813eadbab215140",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/14c6c2c99fcf11e822607d78f813eadbab215140",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/14c6c2c99fcf11e822607d78f813eadbab215140\/comments",
            "author": {
                "login": "NickWilde1990",
                "id": 92694,
                "node_id": "MDQ6VXNlcjkyNjk0",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/92694?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/NickWilde1990",
                "html_url": "https:\/\/github.com\/NickWilde1990",
                "followers_url": "https:\/\/api.github.com\/users\/NickWilde1990\/followers",
                "following_url": "https:\/\/api.github.com\/users\/NickWilde1990\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/NickWilde1990\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/NickWilde1990\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/NickWilde1990\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/NickWilde1990\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/NickWilde1990\/repos",
                "events_url": "https:\/\/api.github.com\/users\/NickWilde1990\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/NickWilde1990\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "NickWilde1990",
                "id": 92694,
                "node_id": "MDQ6VXNlcjkyNjk0",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/92694?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/NickWilde1990",
                "html_url": "https:\/\/github.com\/NickWilde1990",
                "followers_url": "https:\/\/api.github.com\/users\/NickWilde1990\/followers",
                "following_url": "https:\/\/api.github.com\/users\/NickWilde1990\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/NickWilde1990\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/NickWilde1990\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/NickWilde1990\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/NickWilde1990\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/NickWilde1990\/repos",
                "events_url": "https:\/\/api.github.com\/users\/NickWilde1990\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/NickWilde1990\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "af677553cce0967bf7c364d64a9a169152c33fcd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/af677553cce0967bf7c364d64a9a169152c33fcd",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/af677553cce0967bf7c364d64a9a169152c33fcd"
                }
            ]
        },
        {
            "sha": "4d86414dd1e094756d94b5f6b45ed69d514a61e8",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0ZDg2NDE0ZGQxZTA5NDc1NmQ5NGI1ZjZiNDVlZDY5ZDUxNGE2MWU4",
            "commit": {
                "author": {
                    "name": "Max",
                    "email": "max@swk-web.com",
                    "date": "2018-09-17T09:24:47Z"
                },
                "committer": {
                    "name": "Max Schlemmer",
                    "email": "max@swk-web.com",
                    "date": "2018-09-24T10:18:04Z"
                },
                "message": "Use a case insenstive method to check that SHA384 is a supported openssl algorithm",
                "tree": {
                    "sha": "f1f46c43a0cc78abb4b5aee1d2240d7dd46b51b3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/f1f46c43a0cc78abb4b5aee1d2240d7dd46b51b3"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/4d86414dd1e094756d94b5f6b45ed69d514a61e8",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/4d86414dd1e094756d94b5f6b45ed69d514a61e8",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/4d86414dd1e094756d94b5f6b45ed69d514a61e8",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/4d86414dd1e094756d94b5f6b45ed69d514a61e8\/comments",
            "author": {
                "login": "aragon999",
                "id": 6317761,
                "node_id": "MDQ6VXNlcjYzMTc3NjE=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/6317761?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/aragon999",
                "html_url": "https:\/\/github.com\/aragon999",
                "followers_url": "https:\/\/api.github.com\/users\/aragon999\/followers",
                "following_url": "https:\/\/api.github.com\/users\/aragon999\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/aragon999\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/aragon999\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/aragon999\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/aragon999\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/aragon999\/repos",
                "events_url": "https:\/\/api.github.com\/users\/aragon999\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/aragon999\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "aragon999",
                "id": 6317761,
                "node_id": "MDQ6VXNlcjYzMTc3NjE=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/6317761?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/aragon999",
                "html_url": "https:\/\/github.com\/aragon999",
                "followers_url": "https:\/\/api.github.com\/users\/aragon999\/followers",
                "following_url": "https:\/\/api.github.com\/users\/aragon999\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/aragon999\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/aragon999\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/aragon999\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/aragon999\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/aragon999\/repos",
                "events_url": "https:\/\/api.github.com\/users\/aragon999\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/aragon999\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0124e7b553b265c625800ef3035e4c7ea1849336",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0124e7b553b265c625800ef3035e4c7ea1849336",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0124e7b553b265c625800ef3035e4c7ea1849336"
                }
            ]
        },
        {
            "sha": "7e2e2318992fce27ed93877e703c902c91a83037",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3ZTJlMjMxODk5MmZjZTI3ZWQ5Mzg3N2U3MDNjOTAyYzkxYTgzMDM3",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-24T10:51:55Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-09-24T10:51:55Z"
                },
                "message": "Merge pull request #7649 from aragon999\/bugfix\/fix-detection-of-supported-ssl-algos\n\nUse a case insenstive method to check that SHA384 is a supported openssl algorithm",
                "tree": {
                    "sha": "f1f46c43a0cc78abb4b5aee1d2240d7dd46b51b3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/f1f46c43a0cc78abb4b5aee1d2240d7dd46b51b3"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/7e2e2318992fce27ed93877e703c902c91a83037",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbqMHLCRBK7hj4Ov3rIwAAdHIIAKlo4QRc3Rl5+L6Sq08AFugc\nIe1T+hgZWYUY7zZs4fJsdBtacD1SnWbTF3xcHZ8ro3pG\/hF631IqEiyDCFPA19yz\nvn2vPQyTiUOT8ZuRM09D1VFAvjDirvb1C+8pdtiYSRWs9fzA1R85KQ6+baUktqj7\nZIBNbpxeVGcFZvCbSWh\/9sa7TrbJlD6Iwlb8AR3WyziMvF4KIV05eMMGP3\/9upDJ\nwewyFGmcsg2ZN0af6EfrCSgJcdLr9hIuSUnGNEakJegER2J56pEfnPmoNdncZYGt\nhtZaf5tNCWvKq8B03qr\/VXvtyItgXVzUlh+aWBDQUq4bsnTz6hZpq6CSLJyn\/ag=\n=\/5B0\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree f1f46c43a0cc78abb4b5aee1d2240d7dd46b51b3\nparent 0124e7b553b265c625800ef3035e4c7ea1849336\nparent 4d86414dd1e094756d94b5f6b45ed69d514a61e8\nauthor Jordi Boggiano <j.boggiano@seld.be> 1537786315 +0200\ncommitter GitHub <noreply@github.com> 1537786315 +0200\n\nMerge pull request #7649 from aragon999\/bugfix\/fix-detection-of-supported-ssl-algos\n\nUse a case insenstive method to check that SHA384 is a supported openssl algorithm"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7e2e2318992fce27ed93877e703c902c91a83037",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7e2e2318992fce27ed93877e703c902c91a83037",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7e2e2318992fce27ed93877e703c902c91a83037\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0124e7b553b265c625800ef3035e4c7ea1849336",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0124e7b553b265c625800ef3035e4c7ea1849336",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0124e7b553b265c625800ef3035e4c7ea1849336"
                },
                {
                    "sha": "4d86414dd1e094756d94b5f6b45ed69d514a61e8",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/4d86414dd1e094756d94b5f6b45ed69d514a61e8",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/4d86414dd1e094756d94b5f6b45ed69d514a61e8"
                }
            ]
        },
        {
            "sha": "0ca5c6342d95b40ef11dff720d50ad41bddece7f",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowY2E1YzYzNDJkOTViNDBlZjExZGZmNzIwZDUwYWQ0MWJkZGVjZTdm",
            "commit": {
                "author": {
                    "name": "Christophe Coevoet",
                    "email": "stof@notk.org",
                    "date": "2018-09-26T13:12:25Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-09-26T13:12:25Z"
                },
                "message": "Fix the doc markup\n\nIn *nix, the star needs to be part of the content, not of the markdown markup, and so it requires escaping.",
                "tree": {
                    "sha": "bbe5a5a8092514f108e3fe32cce083d3ddc3a9e3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/bbe5a5a8092514f108e3fe32cce083d3ddc3a9e3"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0ca5c6342d95b40ef11dff720d50ad41bddece7f",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbq4W6CRBK7hj4Ov3rIwAAdHIIABU15yZQOgqovZcJ8UKxfS4U\nWbB9lIysfq\/JSbsEHt+FYrIo3wJbRI0ywcv7AM9v9DUsbTpWMNvMEGGIbeo7acv1\nL+rfEOxu62G7Y1s+gR9rUSsNpbp+\/bYUIrr\/YLvKNBzqc3RboFcfCqyC44RAKCML\n51vhSWiv\/k1DxiVmsUPCvTGICyZkos2S146Abg\/4VuB1iHJeBPw5B38nArGT40e2\nZG0xWEso7q2LnQCmJmDTxwh0U\/B2QSQzK+AV8E5zMxE8f3oCDMnDg8CP+McYkerl\nbgZd7jOZpNPF45pjAPNTGm3xX7JFDOHQDjSzYezisX2QaGftxyTnqryf9PQlAB4=\n=8FHO\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree bbe5a5a8092514f108e3fe32cce083d3ddc3a9e3\nparent 7e2e2318992fce27ed93877e703c902c91a83037\nauthor Christophe Coevoet <stof@notk.org> 1537967545 +0200\ncommitter GitHub <noreply@github.com> 1537967545 +0200\n\nFix the doc markup\n\nIn *nix, the star needs to be part of the content, not of the markdown markup, and so it requires escaping."
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0ca5c6342d95b40ef11dff720d50ad41bddece7f",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0ca5c6342d95b40ef11dff720d50ad41bddece7f",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0ca5c6342d95b40ef11dff720d50ad41bddece7f\/comments",
            "author": {
                "login": "stof",
                "id": 439401,
                "node_id": "MDQ6VXNlcjQzOTQwMQ==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/439401?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/stof",
                "html_url": "https:\/\/github.com\/stof",
                "followers_url": "https:\/\/api.github.com\/users\/stof\/followers",
                "following_url": "https:\/\/api.github.com\/users\/stof\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/stof\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/stof\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/stof\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/stof\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/stof\/repos",
                "events_url": "https:\/\/api.github.com\/users\/stof\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/stof\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "7e2e2318992fce27ed93877e703c902c91a83037",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7e2e2318992fce27ed93877e703c902c91a83037",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7e2e2318992fce27ed93877e703c902c91a83037"
                }
            ]
        },
        {
            "sha": "ed3aa1870cbcaf6ca223eca47c06770f37426143",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplZDNhYTE4NzBjYmNhZjZjYTIyM2VjYTQ3YzA2NzcwZjM3NDI2MTQz",
            "commit": {
                "author": {
                    "name": "Alexey Pyltsyn",
                    "email": "lex61rus@gmail.com",
                    "date": "2018-09-27T11:00:10Z"
                },
                "committer": {
                    "name": "Alexey Pyltsyn",
                    "email": "lex61rus@gmail.com",
                    "date": "2018-09-27T11:00:10Z"
                },
                "message": "Replace OSX with macOS",
                "tree": {
                    "sha": "05cd324f98909aa1e8d310ebf012b8e515c4c026",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/05cd324f98909aa1e8d310ebf012b8e515c4c026"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/ed3aa1870cbcaf6ca223eca47c06770f37426143",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ed3aa1870cbcaf6ca223eca47c06770f37426143",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ed3aa1870cbcaf6ca223eca47c06770f37426143",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ed3aa1870cbcaf6ca223eca47c06770f37426143\/comments",
            "author": {
                "login": "lex111",
                "id": 4408379,
                "node_id": "MDQ6VXNlcjQ0MDgzNzk=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/4408379?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/lex111",
                "html_url": "https:\/\/github.com\/lex111",
                "followers_url": "https:\/\/api.github.com\/users\/lex111\/followers",
                "following_url": "https:\/\/api.github.com\/users\/lex111\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/lex111\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/lex111\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/lex111\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/lex111\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/lex111\/repos",
                "events_url": "https:\/\/api.github.com\/users\/lex111\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/lex111\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "lex111",
                "id": 4408379,
                "node_id": "MDQ6VXNlcjQ0MDgzNzk=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/4408379?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/lex111",
                "html_url": "https:\/\/github.com\/lex111",
                "followers_url": "https:\/\/api.github.com\/users\/lex111\/followers",
                "following_url": "https:\/\/api.github.com\/users\/lex111\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/lex111\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/lex111\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/lex111\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/lex111\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/lex111\/repos",
                "events_url": "https:\/\/api.github.com\/users\/lex111\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/lex111\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "af677553cce0967bf7c364d64a9a169152c33fcd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/af677553cce0967bf7c364d64a9a169152c33fcd",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/af677553cce0967bf7c364d64a9a169152c33fcd"
                }
            ]
        },
        {
            "sha": "041028920f7ba5be4a3fab3ba344ce4fc1d09ae2",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowNDEwMjg5MjBmN2JhNWJlNGEzZmFiM2JhMzQ0Y2U0ZmMxZDA5YWUy",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-09-27T13:01:57Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-09-27T13:01:57Z"
                },
                "message": "Merge pull request #7674 from lex111\/doc-macos\n\nReplace OSX with macOS",
                "tree": {
                    "sha": "05cd324f98909aa1e8d310ebf012b8e515c4c026",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/05cd324f98909aa1e8d310ebf012b8e515c4c026"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/041028920f7ba5be4a3fab3ba344ce4fc1d09ae2",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbrNTFCRBK7hj4Ov3rIwAAdHIIAJt101puFS5dTLqDGTW+68Vb\nztcgaOgBRLuAjIn3ozsN+r6RL+kFiiBJrnpcURgHU4JP8DfkP9hFQUuJfl+sd\/Nz\nFbMU0NejQhkmWlKreYLd9scJjkJxTYUP5+7xhr0\/FN3vz7JUustOrdCg7Xsvjygq\n\/tfE+i93gPl1i8dtxvpm9dlCTOwynTrGhd5VWpWspAZWK1HLcW4hn51kWYcmXYvN\nG2iIP06vsYweRzHCftAIuMuQd7xep4ap+0ifFnh8ULqvBssIxcEBZdIzGL7bB67N\n3ne2MmdePU65ZlVlmZb5EJUewNyGiZqQx45FT3QRzm+Hh8lV+j7OIx81n5dHg2Q=\n=a\/6U\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 05cd324f98909aa1e8d310ebf012b8e515c4c026\nparent af677553cce0967bf7c364d64a9a169152c33fcd\nparent ed3aa1870cbcaf6ca223eca47c06770f37426143\nauthor Jordi Boggiano <j.boggiano@seld.be> 1538053317 +0200\ncommitter GitHub <noreply@github.com> 1538053317 +0200\n\nMerge pull request #7674 from lex111\/doc-macos\n\nReplace OSX with macOS"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/041028920f7ba5be4a3fab3ba344ce4fc1d09ae2",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/041028920f7ba5be4a3fab3ba344ce4fc1d09ae2",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/041028920f7ba5be4a3fab3ba344ce4fc1d09ae2\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "af677553cce0967bf7c364d64a9a169152c33fcd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/af677553cce0967bf7c364d64a9a169152c33fcd",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/af677553cce0967bf7c364d64a9a169152c33fcd"
                },
                {
                    "sha": "ed3aa1870cbcaf6ca223eca47c06770f37426143",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ed3aa1870cbcaf6ca223eca47c06770f37426143",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ed3aa1870cbcaf6ca223eca47c06770f37426143"
                }
            ]
        },
        {
            "sha": "add71388ca24572e2d9f959752b349273a15cfe3",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphZGQ3MTM4OGNhMjQ1NzJlMmQ5Zjk1OTc1MmIzNDkyNzNhMTVjZmUz",
            "commit": {
                "author": {
                    "name": "Kristof Ringleff, Fooman",
                    "email": "kristof@fooman.co.nz",
                    "date": "2018-09-21T03:32:35Z"
                },
                "committer": {
                    "name": "Kristof Ringleff, Fooman",
                    "email": "kristof@fooman.co.nz",
                    "date": "2018-10-01T10:03:51Z"
                },
                "message": "Add failing artifact",
                "tree": {
                    "sha": "6b63b6ccb59d4d6c7792b798254bc0ee15821a3a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/6b63b6ccb59d4d6c7792b798254bc0ee15821a3a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/add71388ca24572e2d9f959752b349273a15cfe3",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/add71388ca24572e2d9f959752b349273a15cfe3",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/add71388ca24572e2d9f959752b349273a15cfe3",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/add71388ca24572e2d9f959752b349273a15cfe3\/comments",
            "author": {
                "login": "fooman",
                "id": 455508,
                "node_id": "MDQ6VXNlcjQ1NTUwOA==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/455508?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/fooman",
                "html_url": "https:\/\/github.com\/fooman",
                "followers_url": "https:\/\/api.github.com\/users\/fooman\/followers",
                "following_url": "https:\/\/api.github.com\/users\/fooman\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/fooman\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/fooman\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/fooman\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/fooman\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/fooman\/repos",
                "events_url": "https:\/\/api.github.com\/users\/fooman\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/fooman\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "fooman",
                "id": 455508,
                "node_id": "MDQ6VXNlcjQ1NTUwOA==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/455508?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/fooman",
                "html_url": "https:\/\/github.com\/fooman",
                "followers_url": "https:\/\/api.github.com\/users\/fooman\/followers",
                "following_url": "https:\/\/api.github.com\/users\/fooman\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/fooman\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/fooman\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/fooman\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/fooman\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/fooman\/repos",
                "events_url": "https:\/\/api.github.com\/users\/fooman\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/fooman\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0124e7b553b265c625800ef3035e4c7ea1849336",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0124e7b553b265c625800ef3035e4c7ea1849336",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0124e7b553b265c625800ef3035e4c7ea1849336"
                }
            ]
        },
        {
            "sha": "bcf4e94e8a1bd6d2f82d8a232e59251c4880637b",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiY2Y0ZTk0ZThhMWJkNmQyZjgyZDhhMjMyZTU5MjUxYzQ4ODA2Mzdi",
            "commit": {
                "author": {
                    "name": "Kristof Ringleff, Fooman",
                    "email": "kristof@fooman.co.nz",
                    "date": "2018-09-21T03:51:38Z"
                },
                "committer": {
                    "name": "Kristof Ringleff, Fooman",
                    "email": "kristof@fooman.co.nz",
                    "date": "2018-10-01T10:03:51Z"
                },
                "message": "Ensure opening the zip was successful before proceeding",
                "tree": {
                    "sha": "7a5003d6dcd3c2531e9ab5534bdec23c4bd5defc",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/7a5003d6dcd3c2531e9ab5534bdec23c4bd5defc"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/bcf4e94e8a1bd6d2f82d8a232e59251c4880637b",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bcf4e94e8a1bd6d2f82d8a232e59251c4880637b",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bcf4e94e8a1bd6d2f82d8a232e59251c4880637b",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bcf4e94e8a1bd6d2f82d8a232e59251c4880637b\/comments",
            "author": {
                "login": "fooman",
                "id": 455508,
                "node_id": "MDQ6VXNlcjQ1NTUwOA==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/455508?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/fooman",
                "html_url": "https:\/\/github.com\/fooman",
                "followers_url": "https:\/\/api.github.com\/users\/fooman\/followers",
                "following_url": "https:\/\/api.github.com\/users\/fooman\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/fooman\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/fooman\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/fooman\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/fooman\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/fooman\/repos",
                "events_url": "https:\/\/api.github.com\/users\/fooman\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/fooman\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "fooman",
                "id": 455508,
                "node_id": "MDQ6VXNlcjQ1NTUwOA==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/455508?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/fooman",
                "html_url": "https:\/\/github.com\/fooman",
                "followers_url": "https:\/\/api.github.com\/users\/fooman\/followers",
                "following_url": "https:\/\/api.github.com\/users\/fooman\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/fooman\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/fooman\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/fooman\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/fooman\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/fooman\/repos",
                "events_url": "https:\/\/api.github.com\/users\/fooman\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/fooman\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "add71388ca24572e2d9f959752b349273a15cfe3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/add71388ca24572e2d9f959752b349273a15cfe3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/add71388ca24572e2d9f959752b349273a15cfe3"
                }
            ]
        },
        {
            "sha": "2ed573b22dc60ab894df430af368332d04c8cafc",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyZWQ1NzNiMjJkYzYwYWI4OTRkZjQzMGFmMzY4MzMyZDA0YzhjYWZj",
            "commit": {
                "author": {
                    "name": "Kristof Ringleff, Fooman",
                    "email": "kristof@fooman.co.nz",
                    "date": "2018-09-24T08:28:22Z"
                },
                "committer": {
                    "name": "Kristof Ringleff, Fooman",
                    "email": "kristof@fooman.co.nz",
                    "date": "2018-10-01T10:03:51Z"
                },
                "message": "Combine open zip call with conditional",
                "tree": {
                    "sha": "95393d6ea805f82ab1f5dfc3242f791b9b0b049f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/95393d6ea805f82ab1f5dfc3242f791b9b0b049f"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/2ed573b22dc60ab894df430af368332d04c8cafc",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2ed573b22dc60ab894df430af368332d04c8cafc",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2ed573b22dc60ab894df430af368332d04c8cafc",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2ed573b22dc60ab894df430af368332d04c8cafc\/comments",
            "author": {
                "login": "fooman",
                "id": 455508,
                "node_id": "MDQ6VXNlcjQ1NTUwOA==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/455508?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/fooman",
                "html_url": "https:\/\/github.com\/fooman",
                "followers_url": "https:\/\/api.github.com\/users\/fooman\/followers",
                "following_url": "https:\/\/api.github.com\/users\/fooman\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/fooman\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/fooman\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/fooman\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/fooman\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/fooman\/repos",
                "events_url": "https:\/\/api.github.com\/users\/fooman\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/fooman\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "fooman",
                "id": 455508,
                "node_id": "MDQ6VXNlcjQ1NTUwOA==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/455508?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/fooman",
                "html_url": "https:\/\/github.com\/fooman",
                "followers_url": "https:\/\/api.github.com\/users\/fooman\/followers",
                "following_url": "https:\/\/api.github.com\/users\/fooman\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/fooman\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/fooman\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/fooman\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/fooman\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/fooman\/repos",
                "events_url": "https:\/\/api.github.com\/users\/fooman\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/fooman\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "bcf4e94e8a1bd6d2f82d8a232e59251c4880637b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bcf4e94e8a1bd6d2f82d8a232e59251c4880637b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bcf4e94e8a1bd6d2f82d8a232e59251c4880637b"
                }
            ]
        },
        {
            "sha": "5f2eefb49b3658b50293481b643dc4346670fa3c",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo1ZjJlZWZiNDliMzY1OGI1MDI5MzQ4MWI2NDNkYzQzNDY2NzBmYTNj",
            "commit": {
                "author": {
                    "name": "Stephan Vock",
                    "email": "stephan.vock@gmail.com",
                    "date": "2018-10-10T12:09:42Z"
                },
                "committer": {
                    "name": "Stephan Vock",
                    "email": "stephan.vock@gmail.com",
                    "date": "2018-10-10T12:12:38Z"
                },
                "message": "Vcs Repository: add option to cache\/reuse entire versions",
                "tree": {
                    "sha": "ea020e378e7f8b55689b97d4260585dad51be76b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ea020e378e7f8b55689b97d4260585dad51be76b"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/5f2eefb49b3658b50293481b643dc4346670fa3c",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5f2eefb49b3658b50293481b643dc4346670fa3c",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5f2eefb49b3658b50293481b643dc4346670fa3c",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5f2eefb49b3658b50293481b643dc4346670fa3c\/comments",
            "author": {
                "login": "glaubinix",
                "id": 442056,
                "node_id": "MDQ6VXNlcjQ0MjA1Ng==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/442056?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glaubinix",
                "html_url": "https:\/\/github.com\/glaubinix",
                "followers_url": "https:\/\/api.github.com\/users\/glaubinix\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glaubinix\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glaubinix\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glaubinix\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glaubinix\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glaubinix\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glaubinix\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glaubinix\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glaubinix\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "glaubinix",
                "id": 442056,
                "node_id": "MDQ6VXNlcjQ0MjA1Ng==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/442056?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glaubinix",
                "html_url": "https:\/\/github.com\/glaubinix",
                "followers_url": "https:\/\/api.github.com\/users\/glaubinix\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glaubinix\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glaubinix\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glaubinix\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glaubinix\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glaubinix\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glaubinix\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glaubinix\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glaubinix\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "7e2e2318992fce27ed93877e703c902c91a83037",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7e2e2318992fce27ed93877e703c902c91a83037",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7e2e2318992fce27ed93877e703c902c91a83037"
                }
            ]
        },
        {
            "sha": "96347fbea17e2e67a0a264b1b3a57cace5385477",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo5NjM0N2ZiZWExN2UyZTY3YTBhMjY0YjFiM2E1N2NhY2U1Mzg1NDc3",
            "commit": {
                "author": {
                    "name": "David Manners",
                    "email": "dmanners87@gmail.com",
                    "date": "2018-10-14T11:15:25Z"
                },
                "committer": {
                    "name": "David Manners",
                    "email": "dmanners87@gmail.com",
                    "date": "2018-10-14T11:15:25Z"
                },
                "message": "composer\/composer#7384: add chat to support options\n - update schema documents to note that chat is allowed,\n - validate that chat must be a string and a url similar to forum options",
                "tree": {
                    "sha": "fdec8892f1015ef09636d17aff2ff7ccfe3cf010",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/fdec8892f1015ef09636d17aff2ff7ccfe3cf010"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/96347fbea17e2e67a0a264b1b3a57cace5385477",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/96347fbea17e2e67a0a264b1b3a57cace5385477",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/96347fbea17e2e67a0a264b1b3a57cace5385477",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/96347fbea17e2e67a0a264b1b3a57cace5385477\/comments",
            "author": {
                "login": "dmanners",
                "id": 1572836,
                "node_id": "MDQ6VXNlcjE1NzI4MzY=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1572836?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/dmanners",
                "html_url": "https:\/\/github.com\/dmanners",
                "followers_url": "https:\/\/api.github.com\/users\/dmanners\/followers",
                "following_url": "https:\/\/api.github.com\/users\/dmanners\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/dmanners\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/dmanners\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/dmanners\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/dmanners\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/dmanners\/repos",
                "events_url": "https:\/\/api.github.com\/users\/dmanners\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/dmanners\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "dmanners",
                "id": 1572836,
                "node_id": "MDQ6VXNlcjE1NzI4MzY=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1572836?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/dmanners",
                "html_url": "https:\/\/github.com\/dmanners",
                "followers_url": "https:\/\/api.github.com\/users\/dmanners\/followers",
                "following_url": "https:\/\/api.github.com\/users\/dmanners\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/dmanners\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/dmanners\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/dmanners\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/dmanners\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/dmanners\/repos",
                "events_url": "https:\/\/api.github.com\/users\/dmanners\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/dmanners\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "041028920f7ba5be4a3fab3ba344ce4fc1d09ae2",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/041028920f7ba5be4a3fab3ba344ce4fc1d09ae2",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/041028920f7ba5be4a3fab3ba344ce4fc1d09ae2"
                }
            ]
        },
        {
            "sha": "a1ab75a703c666e96cb753872e8cd1427725f1cb",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphMWFiNzVhNzAzYzY2NmU5NmNiNzUzODcyZThjZDE0Mjc3MjVmMWNi",
            "commit": {
                "author": {
                    "name": "David Manners",
                    "email": "dmanners87@gmail.com",
                    "date": "2018-10-14T14:19:08Z"
                },
                "committer": {
                    "name": "David Manners",
                    "email": "dmanners87@gmail.com",
                    "date": "2018-10-14T14:31:57Z"
                },
                "message": "composer\/composer#7159: make the remove command to a regex lookup on package name\n - if you have multiple vendor modules installed you should be able to do composer remove vendor\/* to remove all\n - update remove and also remove from alternative type to also do a preg_grep for what the user has inputed",
                "tree": {
                    "sha": "207897890b7ae986c4a3866a9ff05967360ebced",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/207897890b7ae986c4a3866a9ff05967360ebced"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a1ab75a703c666e96cb753872e8cd1427725f1cb",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1ab75a703c666e96cb753872e8cd1427725f1cb",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a1ab75a703c666e96cb753872e8cd1427725f1cb",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1ab75a703c666e96cb753872e8cd1427725f1cb\/comments",
            "author": {
                "login": "dmanners",
                "id": 1572836,
                "node_id": "MDQ6VXNlcjE1NzI4MzY=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1572836?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/dmanners",
                "html_url": "https:\/\/github.com\/dmanners",
                "followers_url": "https:\/\/api.github.com\/users\/dmanners\/followers",
                "following_url": "https:\/\/api.github.com\/users\/dmanners\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/dmanners\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/dmanners\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/dmanners\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/dmanners\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/dmanners\/repos",
                "events_url": "https:\/\/api.github.com\/users\/dmanners\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/dmanners\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "dmanners",
                "id": 1572836,
                "node_id": "MDQ6VXNlcjE1NzI4MzY=",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/1572836?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/dmanners",
                "html_url": "https:\/\/github.com\/dmanners",
                "followers_url": "https:\/\/api.github.com\/users\/dmanners\/followers",
                "following_url": "https:\/\/api.github.com\/users\/dmanners\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/dmanners\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/dmanners\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/dmanners\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/dmanners\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/dmanners\/repos",
                "events_url": "https:\/\/api.github.com\/users\/dmanners\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/dmanners\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "041028920f7ba5be4a3fab3ba344ce4fc1d09ae2",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/041028920f7ba5be4a3fab3ba344ce4fc1d09ae2",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/041028920f7ba5be4a3fab3ba344ce4fc1d09ae2"
                }
            ]
        },
        {
            "sha": "3c173702b5e45ba8180f991744ef947e863ece28",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozYzE3MzcwMmI1ZTQ1YmE4MTgwZjk5MTc0NGVmOTQ3ZTg2M2VjZTI4",
            "commit": {
                "author": {
                    "name": "jrfnl",
                    "email": "jrfnl@users.noreply.github.com",
                    "date": "2018-10-16T15:44:04Z"
                },
                "committer": {
                    "name": "Rob",
                    "email": "rob.bast@gmail.com",
                    "date": "2018-10-17T06:47:55Z"
                },
                "message": ":rocket: Build\/Travis: test builds against PHP 7.3\n\nOnce PHP 7.3-beta came out, the `nightly` build on Travis became PHP 7.4-dev and builds haven't been tested against PHP 7.3 for months now.\n\nAs of this week, Travis has (finally) made a PHP 7.3 alias available now RC3 is out, so I've added PHP 7.3 to the matrix.",
                "tree": {
                    "sha": "726e73a06ee0e3376954dbb7779eddfd6798f766",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/726e73a06ee0e3376954dbb7779eddfd6798f766"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/3c173702b5e45ba8180f991744ef947e863ece28",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3c173702b5e45ba8180f991744ef947e863ece28",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3c173702b5e45ba8180f991744ef947e863ece28",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3c173702b5e45ba8180f991744ef947e863ece28\/comments",
            "author": {
                "login": "jrfnl",
                "id": 663378,
                "node_id": "MDQ6VXNlcjY2MzM3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/663378?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/jrfnl",
                "html_url": "https:\/\/github.com\/jrfnl",
                "followers_url": "https:\/\/api.github.com\/users\/jrfnl\/followers",
                "following_url": "https:\/\/api.github.com\/users\/jrfnl\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/jrfnl\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/jrfnl\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/jrfnl\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/jrfnl\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/jrfnl\/repos",
                "events_url": "https:\/\/api.github.com\/users\/jrfnl\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/jrfnl\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "041028920f7ba5be4a3fab3ba344ce4fc1d09ae2",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/041028920f7ba5be4a3fab3ba344ce4fc1d09ae2",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/041028920f7ba5be4a3fab3ba344ce4fc1d09ae2"
                }
            ]
        },
        {
            "sha": "c6da110e71bbab46090df7ef0b8f48f239f71913",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpjNmRhMTEwZTcxYmJhYjQ2MDkwZGY3ZWYwYjhmNDhmMjM5ZjcxOTEz",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "markus.staab@redaxo.de",
                    "date": "2018-10-17T06:53:19Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-10-17T06:53:19Z"
                },
                "message": "Updated deploy php version to 7.2",
                "tree": {
                    "sha": "aed3e9d012d5cf16c1a1f5f6a3c53d1e76187c85",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/aed3e9d012d5cf16c1a1f5f6a3c53d1e76187c85"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/c6da110e71bbab46090df7ef0b8f48f239f71913",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbxtxfCRBK7hj4Ov3rIwAAdHIIAGsmqEPvgM10vqs2eXVbinhS\ntPTuCaPVGNtszwL5F3f+X0TUS3YOFTaEfdUFhqRJf6wQwThvO3f\/0xlK3QEuBCQP\n2nbGRr0phsY293cZX9kBNstwdWG9XOLEu5b+OTioLIsPlUci6Cd6ixZRab\/mtu44\nL6y31PqJ4JacR2vRXxQXSOKCTJDOwPdyaTr1vll\/ironAkKHkBVyFX+kQ47dGJ+1\nX5gB0CeVf5w4TOV3SnQQ0x7mdMXn5wLI\/9tXcaxIfFRz3LvnuhvRuN7Gf5nG89LF\nqfINx2t4Z6QHVaInPmxNO2qEaTe3mu+bMBkPN7n2XZGznnKt8xWqGeDO4dkV3nw=\n=UZ2Q\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree aed3e9d012d5cf16c1a1f5f6a3c53d1e76187c85\nparent 3c173702b5e45ba8180f991744ef947e863ece28\nauthor Markus Staab <markus.staab@redaxo.de> 1539759199 +0200\ncommitter GitHub <noreply@github.com> 1539759199 +0200\n\nUpdated deploy php version to 7.2"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c6da110e71bbab46090df7ef0b8f48f239f71913",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c6da110e71bbab46090df7ef0b8f48f239f71913",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c6da110e71bbab46090df7ef0b8f48f239f71913\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "3c173702b5e45ba8180f991744ef947e863ece28",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3c173702b5e45ba8180f991744ef947e863ece28",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3c173702b5e45ba8180f991744ef947e863ece28"
                }
            ]
        },
        {
            "sha": "819f487b38dc79f8ce3dc910a0d8ceda01086778",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4MTlmNDg3YjM4ZGM3OWY4Y2UzZGM5MTBhMGQ4Y2VkYTAxMDg2Nzc4",
            "commit": {
                "author": {
                    "name": "Stephan Vock",
                    "email": "stephan.vock@gmail.com",
                    "date": "2018-10-19T09:55:45Z"
                },
                "committer": {
                    "name": "Stephan Vock",
                    "email": "stephan.vock@gmail.com",
                    "date": "2018-10-19T12:31:17Z"
                },
                "message": "Bitbucket: switch to v2 API",
                "tree": {
                    "sha": "b09d4ae8629df2ca815ddce29fa8679e3d78da33",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/b09d4ae8629df2ca815ddce29fa8679e3d78da33"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/819f487b38dc79f8ce3dc910a0d8ceda01086778",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/819f487b38dc79f8ce3dc910a0d8ceda01086778",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/819f487b38dc79f8ce3dc910a0d8ceda01086778",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/819f487b38dc79f8ce3dc910a0d8ceda01086778\/comments",
            "author": {
                "login": "glaubinix",
                "id": 442056,
                "node_id": "MDQ6VXNlcjQ0MjA1Ng==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/442056?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glaubinix",
                "html_url": "https:\/\/github.com\/glaubinix",
                "followers_url": "https:\/\/api.github.com\/users\/glaubinix\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glaubinix\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glaubinix\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glaubinix\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glaubinix\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glaubinix\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glaubinix\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glaubinix\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glaubinix\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "glaubinix",
                "id": 442056,
                "node_id": "MDQ6VXNlcjQ0MjA1Ng==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/442056?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glaubinix",
                "html_url": "https:\/\/github.com\/glaubinix",
                "followers_url": "https:\/\/api.github.com\/users\/glaubinix\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glaubinix\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glaubinix\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glaubinix\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glaubinix\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glaubinix\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glaubinix\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glaubinix\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glaubinix\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a1ead0e8682f3d62ba5c851317d7b6d974f6584b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1ead0e8682f3d62ba5c851317d7b6d974f6584b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a1ead0e8682f3d62ba5c851317d7b6d974f6584b"
                }
            ]
        },
        {
            "sha": "e92eda56786844c6e30c97b91a0cf4706e0b3085",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzplOTJlZGE1Njc4Njg0NGM2ZTMwYzk3YjkxYTBjZjQ3MDZlMGIzMDg1",
            "commit": {
                "author": {
                    "name": "Alexey Kopytko",
                    "email": "alexey@kopytko.com",
                    "date": "2018-10-22T08:11:34Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-10-22T08:11:34Z"
                },
                "message": "composer\/composer#7384: update chat note based on code review feedback\n\nCo-Authored-By: dmanners <dmanners87@gmail.com>",
                "tree": {
                    "sha": "c5c88c2382ca02ebf5e9c2004b48e28d87647249",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/c5c88c2382ca02ebf5e9c2004b48e28d87647249"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/e92eda56786844c6e30c97b91a0cf4706e0b3085",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbzYY3CRBK7hj4Ov3rIwAAdHIIAI\/H9iAyGXgIDnaaccs4S+9O\n1nH0oK4Gce02TuuP83d1MtRFvlT3tlYJ31I9Ovks2v\/j7X68\/+g+RABgBGY+yxzE\nbfdFABv+zH3rqbCqm3\/iwqGmr6rOsm9WBCpOO5oQQyJIkB9zcrHYs4v00VU9oKEi\neoj8ic3UMF0OlmjLWsugqSB7jB4focqkJKV2Rumml2TSdJilm8YLVMOJZmWsNzut\nkZnVKCBtAEAsOqjxDGk\/xfgf4WmxWFBRgUPtzJ9X10QmTxDdWELsz73Xs\/h9o6pS\n73pre4BU0N59vpjQmXMtGsHdHAyQyYZvwj4pL1Zel9PN1hCflEg3yFnQ2atAoeE=\n=uTcR\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree c5c88c2382ca02ebf5e9c2004b48e28d87647249\nparent 96347fbea17e2e67a0a264b1b3a57cace5385477\nauthor Alexey Kopytko <alexey@kopytko.com> 1540195894 +0200\ncommitter GitHub <noreply@github.com> 1540195894 +0200\n\ncomposer\/composer#7384: update chat note based on code review feedback\n\nCo-Authored-By: dmanners <dmanners87@gmail.com>"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e92eda56786844c6e30c97b91a0cf4706e0b3085",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e92eda56786844c6e30c97b91a0cf4706e0b3085",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e92eda56786844c6e30c97b91a0cf4706e0b3085\/comments",
            "author": {
                "login": "sanmai",
                "id": 139488,
                "node_id": "MDQ6VXNlcjEzOTQ4OA==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/139488?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/sanmai",
                "html_url": "https:\/\/github.com\/sanmai",
                "followers_url": "https:\/\/api.github.com\/users\/sanmai\/followers",
                "following_url": "https:\/\/api.github.com\/users\/sanmai\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/sanmai\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/sanmai\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/sanmai\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/sanmai\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/sanmai\/repos",
                "events_url": "https:\/\/api.github.com\/users\/sanmai\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/sanmai\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "96347fbea17e2e67a0a264b1b3a57cace5385477",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/96347fbea17e2e67a0a264b1b3a57cace5385477",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/96347fbea17e2e67a0a264b1b3a57cace5385477"
                }
            ]
        },
        {
            "sha": "881dae09037b814514558e5d8c4933777fd5a4ac",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4ODFkYWUwOTAzN2I4MTQ1MTQ1NThlNWQ4YzQ5MzM3NzdmZDVhNGFj",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-22T19:05:57Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-10-22T19:05:57Z"
                },
                "message": "Merge pull request #7725 from staabm\/patch-1\n\nUpdated deploy php version to 7.2",
                "tree": {
                    "sha": "aed3e9d012d5cf16c1a1f5f6a3c53d1e76187c85",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/aed3e9d012d5cf16c1a1f5f6a3c53d1e76187c85"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/881dae09037b814514558e5d8c4933777fd5a4ac",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbzh+VCRBK7hj4Ov3rIwAAdHIIAJjDtM10UIbWvTO3+UH3ChG0\nKmMkyz4YBMvJ+reN\/NaduRLsppJ7J+AhD\/XAqQlb4wsSrJBRUzFHBO+rvmXUpz2V\nfw7Lt9l9jCe3X6gdIxdA3OZjcFOB3ZDfmZEXZp7F7WGf01m5f7oPjpHwRnNcAa74\nFtGUsxg+3YJuihk7CsOmBS55kyrKPPzU+i\/i1GPTrfui8HjwfGSfb272QO0Bp8tD\nxjypzGycXS7\/lnq2tvsXnelYgaK30hjZUCzjMKkfjwprZi0Fnh0rPeUMl64rx5CG\nGeGA38xYICyEKmJLAbbtwYsVtQ97SAxnsd494RdzEy9uXjO9JiL42o0XziAeTKc=\n=wzew\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree aed3e9d012d5cf16c1a1f5f6a3c53d1e76187c85\nparent 3c173702b5e45ba8180f991744ef947e863ece28\nparent c6da110e71bbab46090df7ef0b8f48f239f71913\nauthor Jordi Boggiano <j.boggiano@seld.be> 1540235157 +0200\ncommitter GitHub <noreply@github.com> 1540235157 +0200\n\nMerge pull request #7725 from staabm\/patch-1\n\nUpdated deploy php version to 7.2"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/881dae09037b814514558e5d8c4933777fd5a4ac",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/881dae09037b814514558e5d8c4933777fd5a4ac",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/881dae09037b814514558e5d8c4933777fd5a4ac\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "3c173702b5e45ba8180f991744ef947e863ece28",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3c173702b5e45ba8180f991744ef947e863ece28",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3c173702b5e45ba8180f991744ef947e863ece28"
                },
                {
                    "sha": "c6da110e71bbab46090df7ef0b8f48f239f71913",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/c6da110e71bbab46090df7ef0b8f48f239f71913",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/c6da110e71bbab46090df7ef0b8f48f239f71913"
                }
            ]
        },
        {
            "sha": "abb6377caa7fceb844be16867574ebe8a2192796",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphYmI2Mzc3Y2FhN2ZjZWI4NDRiZTE2ODY3NTc0ZWJlOGEyMTkyNzk2",
            "commit": {
                "author": {
                    "name": "Thomas Landauer",
                    "email": "thomas@landauer.at",
                    "date": "2018-10-23T13:26:43Z"
                },
                "committer": {
                    "name": "Rob",
                    "email": "rob.bast@gmail.com",
                    "date": "2018-10-24T07:39:28Z"
                },
                "message": "Update 05-repositories.md\n\nFixed typo.",
                "tree": {
                    "sha": "5d30d1299d0dada00ccaa062caddc6b67026bea1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/5d30d1299d0dada00ccaa062caddc6b67026bea1"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/abb6377caa7fceb844be16867574ebe8a2192796",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/abb6377caa7fceb844be16867574ebe8a2192796",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/abb6377caa7fceb844be16867574ebe8a2192796",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/abb6377caa7fceb844be16867574ebe8a2192796\/comments",
            "author": {
                "login": "ThomasLandauer",
                "id": 1054469,
                "node_id": "MDQ6VXNlcjEwNTQ0Njk=",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/1054469?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/ThomasLandauer",
                "html_url": "https:\/\/github.com\/ThomasLandauer",
                "followers_url": "https:\/\/api.github.com\/users\/ThomasLandauer\/followers",
                "following_url": "https:\/\/api.github.com\/users\/ThomasLandauer\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/ThomasLandauer\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/ThomasLandauer\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/ThomasLandauer\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/ThomasLandauer\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/ThomasLandauer\/repos",
                "events_url": "https:\/\/api.github.com\/users\/ThomasLandauer\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/ThomasLandauer\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "881dae09037b814514558e5d8c4933777fd5a4ac",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/881dae09037b814514558e5d8c4933777fd5a4ac",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/881dae09037b814514558e5d8c4933777fd5a4ac"
                }
            ]
        },
        {
            "sha": "23d37eebe6b7b87d98b54436eccd1a653ca04ab6",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyM2QzN2VlYmU2YjdiODdkOThiNTQ0MzZlY2NkMWE2NTNjYTA0YWI2",
            "commit": {
                "author": {
                    "name": "Stephan Vock",
                    "email": "stephan.vock@gmail.com",
                    "date": "2018-10-24T11:42:40Z"
                },
                "committer": {
                    "name": "Stephan Vock",
                    "email": "stephan.vock@gmail.com",
                    "date": "2018-10-24T11:52:08Z"
                },
                "message": "Fix: undefined index name in VcsRepository",
                "tree": {
                    "sha": "eb7d5302729a45d944a649e9f9d7f269200c3723",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/eb7d5302729a45d944a649e9f9d7f269200c3723"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/23d37eebe6b7b87d98b54436eccd1a653ca04ab6",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/23d37eebe6b7b87d98b54436eccd1a653ca04ab6",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/23d37eebe6b7b87d98b54436eccd1a653ca04ab6",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/23d37eebe6b7b87d98b54436eccd1a653ca04ab6\/comments",
            "author": {
                "login": "glaubinix",
                "id": 442056,
                "node_id": "MDQ6VXNlcjQ0MjA1Ng==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/442056?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glaubinix",
                "html_url": "https:\/\/github.com\/glaubinix",
                "followers_url": "https:\/\/api.github.com\/users\/glaubinix\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glaubinix\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glaubinix\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glaubinix\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glaubinix\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glaubinix\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glaubinix\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glaubinix\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glaubinix\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "glaubinix",
                "id": 442056,
                "node_id": "MDQ6VXNlcjQ0MjA1Ng==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/442056?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glaubinix",
                "html_url": "https:\/\/github.com\/glaubinix",
                "followers_url": "https:\/\/api.github.com\/users\/glaubinix\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glaubinix\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glaubinix\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glaubinix\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glaubinix\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glaubinix\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glaubinix\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glaubinix\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glaubinix\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "7e2e2318992fce27ed93877e703c902c91a83037",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7e2e2318992fce27ed93877e703c902c91a83037",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7e2e2318992fce27ed93877e703c902c91a83037"
                }
            ]
        },
        {
            "sha": "40a0c1d411c847a771c354c31e45bf94b424311e",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0MGEwYzFkNDExYzg0N2E3NzFjMzU0YzMxZTQ1YmY5NGI0MjQzMTFl",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-25T14:59:10Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-10-25T14:59:10Z"
                },
                "message": "Merge pull request #7745 from glaubinix\/f\/undefined-index-name\n\nFix: undefined index name in VcsRepository",
                "tree": {
                    "sha": "eb7d5302729a45d944a649e9f9d7f269200c3723",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/eb7d5302729a45d944a649e9f9d7f269200c3723"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/40a0c1d411c847a771c354c31e45bf94b424311e",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb0do+CRBK7hj4Ov3rIwAAdHIIAEvqRkhEb7B\/Oh42RE1qSWeS\n\/RwWcu1L8kJhWguwjyMipG+kK\/2lvD86o4rpTL2UgEc8B84Ne+1jt3SrqpzWzWaC\nTwbmy290IFmsj7aZW+g7WV9J2XRPvRnprspFVJnblAd9vORC\/mdNEKZHmeXtMJEK\nFEMNse65AxwhZZXGSPiIeDKuFZ8EXxZoDkTUfY3LQ+lPdNxU3EGlw6lr7NyrHBch\nI0InshXeNMYUnUVV\/EjDwQYjP5UkySkjRSZnhHVN8tv2LpM0ZVof+xWwhRWMy+dV\nPI3LE6nY4azpL9DEmtwNid1NGm\/31+Fwk48raJGDicf8+Z68zAdzKdZccoLfDVk=\n=p5jC\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree eb7d5302729a45d944a649e9f9d7f269200c3723\nparent 7e2e2318992fce27ed93877e703c902c91a83037\nparent 23d37eebe6b7b87d98b54436eccd1a653ca04ab6\nauthor Jordi Boggiano <j.boggiano@seld.be> 1540479550 +0200\ncommitter GitHub <noreply@github.com> 1540479550 +0200\n\nMerge pull request #7745 from glaubinix\/f\/undefined-index-name\n\nFix: undefined index name in VcsRepository"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/40a0c1d411c847a771c354c31e45bf94b424311e",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/40a0c1d411c847a771c354c31e45bf94b424311e",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/40a0c1d411c847a771c354c31e45bf94b424311e\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "7e2e2318992fce27ed93877e703c902c91a83037",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7e2e2318992fce27ed93877e703c902c91a83037",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7e2e2318992fce27ed93877e703c902c91a83037"
                },
                {
                    "sha": "23d37eebe6b7b87d98b54436eccd1a653ca04ab6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/23d37eebe6b7b87d98b54436eccd1a653ca04ab6",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/23d37eebe6b7b87d98b54436eccd1a653ca04ab6"
                }
            ]
        },
        {
            "sha": "8b8df013361c1d57caabc36f9e9efb516a177558",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4YjhkZjAxMzM2MWMxZDU3Y2FhYmMzNmY5ZTllZmI1MTZhMTc3NTU4",
            "commit": {
                "author": {
                    "name": "Stephan Vock",
                    "email": "stephan.vock@gmail.com",
                    "date": "2018-10-26T13:48:18Z"
                },
                "committer": {
                    "name": "Stephan Vock",
                    "email": "stephan.vock@gmail.com",
                    "date": "2018-10-26T13:48:18Z"
                },
                "message": "Bitbucket: fix redirect behaviour",
                "tree": {
                    "sha": "3310830c5e0f67ddc64310cd36d0b888148994c0",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/3310830c5e0f67ddc64310cd36d0b888148994c0"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/8b8df013361c1d57caabc36f9e9efb516a177558",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8b8df013361c1d57caabc36f9e9efb516a177558",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/8b8df013361c1d57caabc36f9e9efb516a177558",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8b8df013361c1d57caabc36f9e9efb516a177558\/comments",
            "author": {
                "login": "glaubinix",
                "id": 442056,
                "node_id": "MDQ6VXNlcjQ0MjA1Ng==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/442056?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glaubinix",
                "html_url": "https:\/\/github.com\/glaubinix",
                "followers_url": "https:\/\/api.github.com\/users\/glaubinix\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glaubinix\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glaubinix\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glaubinix\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glaubinix\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glaubinix\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glaubinix\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glaubinix\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glaubinix\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "glaubinix",
                "id": 442056,
                "node_id": "MDQ6VXNlcjQ0MjA1Ng==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/442056?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glaubinix",
                "html_url": "https:\/\/github.com\/glaubinix",
                "followers_url": "https:\/\/api.github.com\/users\/glaubinix\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glaubinix\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glaubinix\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glaubinix\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glaubinix\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glaubinix\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glaubinix\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glaubinix\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glaubinix\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "40a0c1d411c847a771c354c31e45bf94b424311e",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/40a0c1d411c847a771c354c31e45bf94b424311e",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/40a0c1d411c847a771c354c31e45bf94b424311e"
                }
            ]
        },
        {
            "sha": "105477218dcb31c82593460850f6b5f3dd225739",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxMDU0NzcyMThkY2IzMWM4MjU5MzQ2MDg1MGY2YjVmM2RkMjI1NzM5",
            "commit": {
                "author": {
                    "name": "Stephan Vock",
                    "email": "stephan.vock@gmail.com",
                    "date": "2018-10-29T11:01:46Z"
                },
                "committer": {
                    "name": "Stephan Vock",
                    "email": "stephan.vock@gmail.com",
                    "date": "2018-10-29T11:01:46Z"
                },
                "message": "VcsRepository: fix undefined index notice in preProcess",
                "tree": {
                    "sha": "153b487da0102b7fc86618c3b1a0991d7c77d9ef",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/153b487da0102b7fc86618c3b1a0991d7c77d9ef"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/105477218dcb31c82593460850f6b5f3dd225739",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/105477218dcb31c82593460850f6b5f3dd225739",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/105477218dcb31c82593460850f6b5f3dd225739",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/105477218dcb31c82593460850f6b5f3dd225739\/comments",
            "author": {
                "login": "glaubinix",
                "id": 442056,
                "node_id": "MDQ6VXNlcjQ0MjA1Ng==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/442056?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glaubinix",
                "html_url": "https:\/\/github.com\/glaubinix",
                "followers_url": "https:\/\/api.github.com\/users\/glaubinix\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glaubinix\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glaubinix\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glaubinix\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glaubinix\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glaubinix\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glaubinix\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glaubinix\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glaubinix\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "glaubinix",
                "id": 442056,
                "node_id": "MDQ6VXNlcjQ0MjA1Ng==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/442056?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glaubinix",
                "html_url": "https:\/\/github.com\/glaubinix",
                "followers_url": "https:\/\/api.github.com\/users\/glaubinix\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glaubinix\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glaubinix\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glaubinix\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glaubinix\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glaubinix\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glaubinix\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glaubinix\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glaubinix\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "40a0c1d411c847a771c354c31e45bf94b424311e",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/40a0c1d411c847a771c354c31e45bf94b424311e",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/40a0c1d411c847a771c354c31e45bf94b424311e"
                }
            ]
        },
        {
            "sha": "3a98f500b64d88445964db18fe128baf9a70139b",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozYTk4ZjUwMGI2NGQ4ODQ0NTk2NGRiMThmZTEyOGJhZjlhNzAxMzli",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-30T10:24:14Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-10-30T10:24:14Z"
                },
                "message": "Merge pull request #7752 from glaubinix\/t\/bitbucket-redirect\n\nBitbucket: fix redirect behaviour for private repositories",
                "tree": {
                    "sha": "3310830c5e0f67ddc64310cd36d0b888148994c0",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/3310830c5e0f67ddc64310cd36d0b888148994c0"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/3a98f500b64d88445964db18fe128baf9a70139b",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb2DFOCRBK7hj4Ov3rIwAAdHIIAAoFYHrY8GFAv562mpaN0jJO\nm9Fj2jHcHg6G8w71qyWUUk9UjY9gGdJQ7WfIALB9i5Za7L2y8gLxg\/vet8Cr+Khm\nfQuZyDIkzIA3j6MWqlkgSZKBmNMnbRdxNQAVMRgQbDG\/MiwC4mt7dS1lkGsqo3kk\n48NtjmQI6dCKMw50YeYQnEXCq8mRvPQx5uVErxTdbaTU8\/j0Zw4uOp8oqYB0MCkT\nHqKIhwt2uUB9zZxYUkN2RzhCory17nEN5sSyITQ7\/v4DMbDqrW3U4q7vF7kCYbCd\ndDf+W+hkzGDMiTpZpcEGYdeWqc+BghR6WieTVfwm3hTrH1ghamvQXevzIFsztdg=\n=0U30\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 3310830c5e0f67ddc64310cd36d0b888148994c0\nparent 40a0c1d411c847a771c354c31e45bf94b424311e\nparent 8b8df013361c1d57caabc36f9e9efb516a177558\nauthor Jordi Boggiano <j.boggiano@seld.be> 1540895054 +0100\ncommitter GitHub <noreply@github.com> 1540895054 +0100\n\nMerge pull request #7752 from glaubinix\/t\/bitbucket-redirect\n\nBitbucket: fix redirect behaviour for private repositories"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3a98f500b64d88445964db18fe128baf9a70139b",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3a98f500b64d88445964db18fe128baf9a70139b",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3a98f500b64d88445964db18fe128baf9a70139b\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "40a0c1d411c847a771c354c31e45bf94b424311e",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/40a0c1d411c847a771c354c31e45bf94b424311e",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/40a0c1d411c847a771c354c31e45bf94b424311e"
                },
                {
                    "sha": "8b8df013361c1d57caabc36f9e9efb516a177558",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8b8df013361c1d57caabc36f9e9efb516a177558",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/8b8df013361c1d57caabc36f9e9efb516a177558"
                }
            ]
        },
        {
            "sha": "5d92eea170f59ad9687eec514b511a6f583232d2",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo1ZDkyZWVhMTcwZjU5YWQ5Njg3ZWVjNTE0YjUxMWE2ZjU4MzIzMmQy",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-30T10:39:02Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-10-30T10:39:02Z"
                },
                "message": "Merge pull request #7756 from glaubinix\/f\/undefined-index-preprocess\n\nVcsRepository: fix undefined index notice in preProcess",
                "tree": {
                    "sha": "643d0a94bd06bb23dcc740935bbe48e3c18cc6e5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/643d0a94bd06bb23dcc740935bbe48e3c18cc6e5"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/5d92eea170f59ad9687eec514b511a6f583232d2",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb2DTGCRBK7hj4Ov3rIwAAdHIIAHIXhePIZzUwWZ2nIs7KrHvA\ndq32D+TWuYPMifvEtqwoCQQu9L\/Jmb+lVXaQzGCUG\/srO36rJXJsFjKCkVGbTXkP\n+j1N1lVg3YyP9wXjVMvi4n1WzjmzW0xS5uyu1zIn8WUDWJCOgdOZpAAQgoEazPL8\nuZ2flIgjbhzlLkIIBR0qHHHYFnqAzEYoY+ELkeWLMgQEoh26J\/htkhrejjoytq10\nmDXI+nL9bVGy1xwd7+9+o5hAunBhEYS3rDlnYxn1v8zb6k6K+h38rzzLHebeG8Gl\nGexv+kyFdX5LvqVYBwvUVCQzJfvthvMa+N37XH3AIG3u3QQJl8aADkjzkLnaHXI=\n=k224\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 643d0a94bd06bb23dcc740935bbe48e3c18cc6e5\nparent 3a98f500b64d88445964db18fe128baf9a70139b\nparent 105477218dcb31c82593460850f6b5f3dd225739\nauthor Jordi Boggiano <j.boggiano@seld.be> 1540895942 +0100\ncommitter GitHub <noreply@github.com> 1540895942 +0100\n\nMerge pull request #7756 from glaubinix\/f\/undefined-index-preprocess\n\nVcsRepository: fix undefined index notice in preProcess"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5d92eea170f59ad9687eec514b511a6f583232d2",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5d92eea170f59ad9687eec514b511a6f583232d2",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5d92eea170f59ad9687eec514b511a6f583232d2\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "3a98f500b64d88445964db18fe128baf9a70139b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3a98f500b64d88445964db18fe128baf9a70139b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3a98f500b64d88445964db18fe128baf9a70139b"
                },
                {
                    "sha": "105477218dcb31c82593460850f6b5f3dd225739",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/105477218dcb31c82593460850f6b5f3dd225739",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/105477218dcb31c82593460850f6b5f3dd225739"
                }
            ]
        },
        {
            "sha": "67e6d6d8a4770972ad175f876c25faa0f7fec456",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo2N2U2ZDZkOGE0NzcwOTcyYWQxNzVmODc2YzI1ZmFhMGY3ZmVjNDU2",
            "commit": {
                "author": {
                    "name": "Markus Staab",
                    "email": "maggus.staab@googlemail.com",
                    "date": "2018-10-27T07:58:10Z"
                },
                "committer": {
                    "name": "Rob",
                    "email": "rob.bast@gmail.com",
                    "date": "2018-10-30T14:53:47Z"
                },
                "message": "diagnose: write warning on stderr",
                "tree": {
                    "sha": "d49b0aa96fe7a6731bed70686387d459c8a7fda5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/d49b0aa96fe7a6731bed70686387d459c8a7fda5"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/67e6d6d8a4770972ad175f876c25faa0f7fec456",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/67e6d6d8a4770972ad175f876c25faa0f7fec456",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/67e6d6d8a4770972ad175f876c25faa0f7fec456",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/67e6d6d8a4770972ad175f876c25faa0f7fec456\/comments",
            "author": {
                "login": "staabm",
                "id": 120441,
                "node_id": "MDQ6VXNlcjEyMDQ0MQ==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/120441?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/staabm",
                "html_url": "https:\/\/github.com\/staabm",
                "followers_url": "https:\/\/api.github.com\/users\/staabm\/followers",
                "following_url": "https:\/\/api.github.com\/users\/staabm\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/staabm\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/staabm\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/staabm\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/staabm\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/staabm\/repos",
                "events_url": "https:\/\/api.github.com\/users\/staabm\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/staabm\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "abb6377caa7fceb844be16867574ebe8a2192796",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/abb6377caa7fceb844be16867574ebe8a2192796",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/abb6377caa7fceb844be16867574ebe8a2192796"
                }
            ]
        },
        {
            "sha": "20107dbf777fefd7d806745ad9579474e395e777",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyMDEwN2RiZjc3N2ZlZmQ3ZDgwNjc0NWFkOTU3OTQ3NGUzOTVlNzc3",
            "commit": {
                "author": {
                    "name": "Alexey Kopytko",
                    "email": "alexey@kopytko.com",
                    "date": "2018-10-26T03:12:10Z"
                },
                "committer": {
                    "name": "Rob",
                    "email": "rob.bast@gmail.com",
                    "date": "2018-10-30T14:56:24Z"
                },
                "message": "Ensure that a missing SSL\/TLS protection warning does not pollute STDOUT\n\nFixes #7737",
                "tree": {
                    "sha": "44fbaa62d8158363d901bcce286a8750d6c90d43",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/44fbaa62d8158363d901bcce286a8750d6c90d43"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/20107dbf777fefd7d806745ad9579474e395e777",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/20107dbf777fefd7d806745ad9579474e395e777",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/20107dbf777fefd7d806745ad9579474e395e777",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/20107dbf777fefd7d806745ad9579474e395e777\/comments",
            "author": {
                "login": "sanmai",
                "id": 139488,
                "node_id": "MDQ6VXNlcjEzOTQ4OA==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/139488?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/sanmai",
                "html_url": "https:\/\/github.com\/sanmai",
                "followers_url": "https:\/\/api.github.com\/users\/sanmai\/followers",
                "following_url": "https:\/\/api.github.com\/users\/sanmai\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/sanmai\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/sanmai\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/sanmai\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/sanmai\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/sanmai\/repos",
                "events_url": "https:\/\/api.github.com\/users\/sanmai\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/sanmai\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "67e6d6d8a4770972ad175f876c25faa0f7fec456",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/67e6d6d8a4770972ad175f876c25faa0f7fec456",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/67e6d6d8a4770972ad175f876c25faa0f7fec456"
                }
            ]
        },
        {
            "sha": "aa6d138bdca5c9d2b448d3a583bba4d2213c4806",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphYTZkMTM4YmRjYTVjOWQyYjQ0OGQzYTU4M2JiYTRkMjIxM2M0ODA2",
            "commit": {
                "author": {
                    "name": "Alexey Kopytko",
                    "email": "alexey@kopytko.com",
                    "date": "2018-10-26T03:17:38Z"
                },
                "committer": {
                    "name": "Rob",
                    "email": "rob.bast@gmail.com",
                    "date": "2018-10-30T14:56:24Z"
                },
                "message": "Check for the actual warning description",
                "tree": {
                    "sha": "753ec98c39bb7208c8e4fba3bd45b7352597ef90",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/753ec98c39bb7208c8e4fba3bd45b7352597ef90"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/aa6d138bdca5c9d2b448d3a583bba4d2213c4806",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/aa6d138bdca5c9d2b448d3a583bba4d2213c4806",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/aa6d138bdca5c9d2b448d3a583bba4d2213c4806",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/aa6d138bdca5c9d2b448d3a583bba4d2213c4806\/comments",
            "author": {
                "login": "sanmai",
                "id": 139488,
                "node_id": "MDQ6VXNlcjEzOTQ4OA==",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/139488?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/sanmai",
                "html_url": "https:\/\/github.com\/sanmai",
                "followers_url": "https:\/\/api.github.com\/users\/sanmai\/followers",
                "following_url": "https:\/\/api.github.com\/users\/sanmai\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/sanmai\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/sanmai\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/sanmai\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/sanmai\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/sanmai\/repos",
                "events_url": "https:\/\/api.github.com\/users\/sanmai\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/sanmai\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "20107dbf777fefd7d806745ad9579474e395e777",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/20107dbf777fefd7d806745ad9579474e395e777",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/20107dbf777fefd7d806745ad9579474e395e777"
                }
            ]
        },
        {
            "sha": "a64b652a6b451fc40482dcf25d9150fbe2600810",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphNjRiNjUyYTZiNDUxZmM0MDQ4MmRjZjI1ZDkxNTBmYmUyNjAwODEw",
            "commit": {
                "author": {
                    "name": "Gabriel Caruso",
                    "email": "carusogabriel34@gmail.com",
                    "date": "2018-10-14T20:45:44Z"
                },
                "committer": {
                    "name": "Rob",
                    "email": "rob.bast@gmail.com",
                    "date": "2018-10-30T14:57:27Z"
                },
                "message": "Use func_num_args instead of counting on func_get_args",
                "tree": {
                    "sha": "b7e8436854663b0254ffd269fd0c65b66d500ca5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/b7e8436854663b0254ffd269fd0c65b66d500ca5"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a64b652a6b451fc40482dcf25d9150fbe2600810",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a64b652a6b451fc40482dcf25d9150fbe2600810",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a64b652a6b451fc40482dcf25d9150fbe2600810",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a64b652a6b451fc40482dcf25d9150fbe2600810\/comments",
            "author": {
                "login": "carusogabriel",
                "id": 16328050,
                "node_id": "MDQ6VXNlcjE2MzI4MDUw",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/16328050?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/carusogabriel",
                "html_url": "https:\/\/github.com\/carusogabriel",
                "followers_url": "https:\/\/api.github.com\/users\/carusogabriel\/followers",
                "following_url": "https:\/\/api.github.com\/users\/carusogabriel\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/carusogabriel\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/carusogabriel\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/carusogabriel\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/carusogabriel\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/carusogabriel\/repos",
                "events_url": "https:\/\/api.github.com\/users\/carusogabriel\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/carusogabriel\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "aa6d138bdca5c9d2b448d3a583bba4d2213c4806",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/aa6d138bdca5c9d2b448d3a583bba4d2213c4806",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/aa6d138bdca5c9d2b448d3a583bba4d2213c4806"
                }
            ]
        },
        {
            "sha": "2805a69e5836a583c4af0331554a4af12f978b04",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyODA1YTY5ZTU4MzZhNTgzYzRhZjAzMzE1NTRhNGFmMTJmOTc4YjA0",
            "commit": {
                "author": {
                    "name": "Gabriel Caruso",
                    "email": "carusogabriel34@gmail.com",
                    "date": "2018-10-14T20:48:29Z"
                },
                "committer": {
                    "name": "Rob",
                    "email": "rob.bast@gmail.com",
                    "date": "2018-10-30T14:58:07Z"
                },
                "message": "Simplify conditions and inline temp variables",
                "tree": {
                    "sha": "b7f49c89242c61225f076d784c02ec42fcc60612",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/b7f49c89242c61225f076d784c02ec42fcc60612"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/2805a69e5836a583c4af0331554a4af12f978b04",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2805a69e5836a583c4af0331554a4af12f978b04",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2805a69e5836a583c4af0331554a4af12f978b04",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2805a69e5836a583c4af0331554a4af12f978b04\/comments",
            "author": {
                "login": "carusogabriel",
                "id": 16328050,
                "node_id": "MDQ6VXNlcjE2MzI4MDUw",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/16328050?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/carusogabriel",
                "html_url": "https:\/\/github.com\/carusogabriel",
                "followers_url": "https:\/\/api.github.com\/users\/carusogabriel\/followers",
                "following_url": "https:\/\/api.github.com\/users\/carusogabriel\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/carusogabriel\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/carusogabriel\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/carusogabriel\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/carusogabriel\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/carusogabriel\/repos",
                "events_url": "https:\/\/api.github.com\/users\/carusogabriel\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/carusogabriel\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "alcohol",
                "id": 21414,
                "node_id": "MDQ6VXNlcjIxNDE0",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/21414?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/alcohol",
                "html_url": "https:\/\/github.com\/alcohol",
                "followers_url": "https:\/\/api.github.com\/users\/alcohol\/followers",
                "following_url": "https:\/\/api.github.com\/users\/alcohol\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/alcohol\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/alcohol\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/alcohol\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/alcohol\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/alcohol\/repos",
                "events_url": "https:\/\/api.github.com\/users\/alcohol\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/alcohol\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a64b652a6b451fc40482dcf25d9150fbe2600810",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a64b652a6b451fc40482dcf25d9150fbe2600810",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a64b652a6b451fc40482dcf25d9150fbe2600810"
                }
            ]
        },
        {
            "sha": "11752864eb9f30885d8d47a8d9e9aab49c032f9a",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxMTc1Mjg2NGViOWYzMDg4NWQ4ZDQ3YThkOWU5YWFiNDljMDMyZjlh",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-30T15:52:13Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-10-30T15:52:13Z"
                },
                "message": "Merge pull request #7735 from glaubinix\/t\/bitbucket-v1-API-deprecation\n\nBitbucket: switch to v2 API",
                "tree": {
                    "sha": "210a6c20070b1e30d3e29b4e0d2041b68477d7ec",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/210a6c20070b1e30d3e29b4e0d2041b68477d7ec"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/11752864eb9f30885d8d47a8d9e9aab49c032f9a",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb2H4tCRBK7hj4Ov3rIwAAdHIIAA9caan30+4P1HBIswrJ\/XdW\nD9zB+bP8GQhu3s50Jh40KtHNnNTpfRvTagtgM3gXwUPJamQrsGXU1rKpHBKsSzZU\n3A7W69xiYq\/mUd822rfzRAYHwZCHpD1Gdp6LZ6UqIFWQ4mLnXbsr7oD4rnibtT6b\nhMnrQKv+oYcyMGGlFFT1SH4pirYcvKQ\/Ldh76GXRIauuyaH+qWRWr8VsHGhXJdh5\nAfZ6CR2ENuxkUzsc8G+15fxT6dhG4OqbveohaxePjLNvNmBxZfMK6MgTzymcp9lH\nNBW\/fYBz2xWSB7ggmEfIVaHmLU9FxWjFOxUtBF5gXZjMzFSeVnwqpRFree+Je60=\n=h1Pa\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 210a6c20070b1e30d3e29b4e0d2041b68477d7ec\nparent 5d92eea170f59ad9687eec514b511a6f583232d2\nparent 819f487b38dc79f8ce3dc910a0d8ceda01086778\nauthor Jordi Boggiano <j.boggiano@seld.be> 1540914733 +0100\ncommitter GitHub <noreply@github.com> 1540914733 +0100\n\nMerge pull request #7735 from glaubinix\/t\/bitbucket-v1-API-deprecation\n\nBitbucket: switch to v2 API"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/11752864eb9f30885d8d47a8d9e9aab49c032f9a",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/11752864eb9f30885d8d47a8d9e9aab49c032f9a",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/11752864eb9f30885d8d47a8d9e9aab49c032f9a\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "5d92eea170f59ad9687eec514b511a6f583232d2",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5d92eea170f59ad9687eec514b511a6f583232d2",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5d92eea170f59ad9687eec514b511a6f583232d2"
                },
                {
                    "sha": "819f487b38dc79f8ce3dc910a0d8ceda01086778",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/819f487b38dc79f8ce3dc910a0d8ceda01086778",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/819f487b38dc79f8ce3dc910a0d8ceda01086778"
                }
            ]
        },
        {
            "sha": "114217c6e3b35653923815786221c94b023c36a3",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxMTQyMTdjNmUzYjM1NjUzOTIzODE1Nzg2MjIxYzk0YjAyM2MzNmEz",
            "commit": {
                "author": {
                    "name": "Fran\u00e7ois-Xavier de Guillebon",
                    "email": "fx@gensdeconfiance.fr",
                    "date": "2018-10-31T08:55:53Z"
                },
                "committer": {
                    "name": "Fran\u00e7ois-Xavier de Guillebon",
                    "email": "fx@gensdeconfiance.fr",
                    "date": "2018-10-31T08:55:53Z"
                },
                "message": "Fix ini_get() for boolean values",
                "tree": {
                    "sha": "916768214318bb0a13697a7532951da4a7573b3d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/916768214318bb0a13697a7532951da4a7573b3d"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/114217c6e3b35653923815786221c94b023c36a3",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJKBAABCAA0FiEEXeyww+JG2GvqKn+DTHhmwdj+hs4FAlvZbhkWHGZ4QGdlbnNk\nZWNvbmZpYW5jZS5mcgAKCRBMeGbB2P6Gzk1YEADPXOiGLkouMgy+7s8EZuDKJVtx\n6PurrPUTemVaJc0yE32lQvm0ctdBN8s3xJuBF870lJzBIPPBnUtmgQ6gxpx\/ayhz\n\/bshxfkv\/43X1CeqASakvFdEPko5zAop1NxzW5B8V2W9Jqmm5NPR08+9Huhsu+Ly\naLdVoZaA\/7kcMeHCFrT2jQ+QEAOVWSQFlKfwSJPV\/oElOfu5t\/XNJxZB2kxFSsCy\nodc96NGbK5lAn3+6Mq8kOVD0Y57BYzlK8Y2ZoVgsxljajk6uKBPU1GIet\/0ybRuX\njP8t0KxfMVVOe89BmVjbpaDYC7FlopNUJK88TQsb7GAG9BwlX3hkdkVyjkhtjmap\n2VFfZemSFlXxG3bej1Rfr8zmd58ZwHQam3yZR4YTAZU4PeB05UZ3lkx7brVJQPfs\n4rLRfm2XCgI5EpsaSTVSGpBeNmw1R911NHJco+0AGCiX52kW8Kfgw0GWKkoHZajd\nSpa0plNSQ55hKlyL3+60CgZrZwG9rHk4NoVT8wS1U6wMJnYcK2emDQZhLHQxUPKH\nBYXpWBravjTZ\/q6zptRUEgYUoXAC+UAhhdQk\/zf63xlBbyt3ruFjEwVkOttgF1Id\nDxKcrnVHgBpWWONKKha9FgBZIs3u9sSpFHFq3f4CcLCcinGm+6gdxvXBrDJfJOLl\nVpmebNvxBzHD1cGehw==\n=IqHN\n-----END PGP SIGNATURE-----",
                    "payload": "tree 916768214318bb0a13697a7532951da4a7573b3d\nparent 11752864eb9f30885d8d47a8d9e9aab49c032f9a\nauthor Fran\u00e7ois-Xavier de Guillebon <fx@gensdeconfiance.fr> 1540976153 +0100\ncommitter Fran\u00e7ois-Xavier de Guillebon <fx@gensdeconfiance.fr> 1540976153 +0100\n\nFix ini_get() for boolean values\n"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/114217c6e3b35653923815786221c94b023c36a3",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/114217c6e3b35653923815786221c94b023c36a3",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/114217c6e3b35653923815786221c94b023c36a3\/comments",
            "author": {
                "login": "deguif",
                "id": 993399,
                "node_id": "MDQ6VXNlcjk5MzM5OQ==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/993399?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/deguif",
                "html_url": "https:\/\/github.com\/deguif",
                "followers_url": "https:\/\/api.github.com\/users\/deguif\/followers",
                "following_url": "https:\/\/api.github.com\/users\/deguif\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/deguif\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/deguif\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/deguif\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/deguif\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/deguif\/repos",
                "events_url": "https:\/\/api.github.com\/users\/deguif\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/deguif\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "deguif",
                "id": 993399,
                "node_id": "MDQ6VXNlcjk5MzM5OQ==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/993399?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/deguif",
                "html_url": "https:\/\/github.com\/deguif",
                "followers_url": "https:\/\/api.github.com\/users\/deguif\/followers",
                "following_url": "https:\/\/api.github.com\/users\/deguif\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/deguif\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/deguif\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/deguif\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/deguif\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/deguif\/repos",
                "events_url": "https:\/\/api.github.com\/users\/deguif\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/deguif\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "11752864eb9f30885d8d47a8d9e9aab49c032f9a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/11752864eb9f30885d8d47a8d9e9aab49c032f9a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/11752864eb9f30885d8d47a8d9e9aab49c032f9a"
                }
            ]
        },
        {
            "sha": "359d1318f2a15ce01404b14f6dad20c63d801ee3",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozNTlkMTMxOGYyYTE1Y2UwMTQwNGIxNGY2ZGFkMjBjNjNkODAxZWUz",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T10:09:10Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-10-31T10:09:10Z"
                },
                "message": "Merge pull request #7703 from glaubinix\/t\/composer-version-cache\n\nVcs Repository: add option to cache\/reuse entire versions",
                "tree": {
                    "sha": "bfb227ce425b6e6ea97a17a74006d0ec4335b327",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/bfb227ce425b6e6ea97a17a74006d0ec4335b327"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/359d1318f2a15ce01404b14f6dad20c63d801ee3",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb2X9GCRBK7hj4Ov3rIwAAdHIIAHMVHMmPGjMAFUpck4fNlq7X\n+mzMKzdaSwBM2eC0tMvv1qw6g2E1ykwAqXENWi56eTPYA4pXtZm+EiNXd9DUByJw\ncIKXjoTLo62Csl7Nk2O0ShwHvXCuyabvJRWl2d8EwXN\/x0PzJSK7cQ+z\/7RGESJ6\niAegCEZrpEwbcV4c1nE41Bwbxch4e+92qG\/3fpFi4MB9jjfh7IgWiW3cPrs7aqzU\nIcMlEXFLjQevBnidTPUgJcz8SLxyW7ueX\/JPQhftMfjHcSW0jrHJIKfWdyFjSIKh\nfQc488DFyEBmu2sZ9naGKz7vM7U+kXd+LDO+8teTFWiFwdqvnfMM2YYL09g9f1w=\n=4BFV\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree bfb227ce425b6e6ea97a17a74006d0ec4335b327\nparent 11752864eb9f30885d8d47a8d9e9aab49c032f9a\nparent 5f2eefb49b3658b50293481b643dc4346670fa3c\nauthor Jordi Boggiano <j.boggiano@seld.be> 1540980550 +0100\ncommitter GitHub <noreply@github.com> 1540980550 +0100\n\nMerge pull request #7703 from glaubinix\/t\/composer-version-cache\n\nVcs Repository: add option to cache\/reuse entire versions"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/359d1318f2a15ce01404b14f6dad20c63d801ee3",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/359d1318f2a15ce01404b14f6dad20c63d801ee3",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/359d1318f2a15ce01404b14f6dad20c63d801ee3\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "11752864eb9f30885d8d47a8d9e9aab49c032f9a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/11752864eb9f30885d8d47a8d9e9aab49c032f9a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/11752864eb9f30885d8d47a8d9e9aab49c032f9a"
                },
                {
                    "sha": "5f2eefb49b3658b50293481b643dc4346670fa3c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5f2eefb49b3658b50293481b643dc4346670fa3c",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5f2eefb49b3658b50293481b643dc4346670fa3c"
                }
            ]
        },
        {
            "sha": "8bead933432a3c0f514a9ee5faa601ace363cc7d",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4YmVhZDkzMzQzMmEzYzBmNTE0YTllZTVmYWE2MDFhY2UzNjNjYzdk",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T14:33:26Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-10-31T14:33:26Z"
                },
                "message": "Merge pull request #7648 from NickWilde1990\/allow-plugin-commands-from-child-folders\n\nAllow plugin commands to be run from child folders like core commands",
                "tree": {
                    "sha": "a4ed3993d52d2fd470e9f29c62e312eec372a4d8",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/a4ed3993d52d2fd470e9f29c62e312eec372a4d8"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/8bead933432a3c0f514a9ee5faa601ace363cc7d",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb2b02CRBK7hj4Ov3rIwAAdHIIAHO2W\/2p9vWzsa4RPkhAuCLG\ntCuZ5qrCstkbwHjQwt\/Zg1wwriYvzSi4ne7Oi3f2S6spkfyUKFo\/n1rcNglS5M76\nbCdXdtZj72cIRglLeo4tJGsbJEU00tnqMKB1ZhZs78cA2IFJ\/8LuAgx2eUxJ0fUu\njYLG24rVL\/Covx8krdNaGbFC1FBWJxInbR55J\/5JDPqis2z7YEWRxeBFmg9lpA8w\n5inxcaVn0PB02Td+bw\/dvriRzCLE\/PrTQddo0OIJKGShUqZ9rDlyDvVgftB+kqPK\n7S+bHe8aX0VU5guMzpI9KuNLUfoI4mWWAsuQRMK6CQb+YOWUtYc1vKCgotOENPY=\n=BuAN\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree a4ed3993d52d2fd470e9f29c62e312eec372a4d8\nparent 2805a69e5836a583c4af0331554a4af12f978b04\nparent 14c6c2c99fcf11e822607d78f813eadbab215140\nauthor Jordi Boggiano <j.boggiano@seld.be> 1540996406 +0100\ncommitter GitHub <noreply@github.com> 1540996406 +0100\n\nMerge pull request #7648 from NickWilde1990\/allow-plugin-commands-from-child-folders\n\nAllow plugin commands to be run from child folders like core commands"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8bead933432a3c0f514a9ee5faa601ace363cc7d",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/8bead933432a3c0f514a9ee5faa601ace363cc7d",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8bead933432a3c0f514a9ee5faa601ace363cc7d\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "2805a69e5836a583c4af0331554a4af12f978b04",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2805a69e5836a583c4af0331554a4af12f978b04",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2805a69e5836a583c4af0331554a4af12f978b04"
                },
                {
                    "sha": "14c6c2c99fcf11e822607d78f813eadbab215140",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/14c6c2c99fcf11e822607d78f813eadbab215140",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/14c6c2c99fcf11e822607d78f813eadbab215140"
                }
            ]
        },
        {
            "sha": "bc3854dcaf782c6be4ff4efe769b22ffcc9c1e01",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiYzM4NTRkY2FmNzgyYzZiZTRmZjRlZmU3NjliMjJmZmNjOWMxZTAx",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T15:09:14Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-10-31T15:09:14Z"
                },
                "message": "Merge pull request #7673 from stof\/patch-1\n\nFix the doc markup",
                "tree": {
                    "sha": "29d547c2d1d0b10e6118546e8a396e4f00ea8b8e",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/29d547c2d1d0b10e6118546e8a396e4f00ea8b8e"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/bc3854dcaf782c6be4ff4efe769b22ffcc9c1e01",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb2cWaCRBK7hj4Ov3rIwAAdHIIAIx1av+8MusdQoeDkimgWMoy\nV79Uo6aAO3DyA9hM+rMHPDhF65ak4CwfZXBr+acXw4IZO0dFmPuUgB3V7jo+dNRJ\nvHVRX7rFaYxu77s9d3R7QEa6bsjdzROwUPpyg\/+1nQ537mkmtqALnxaMgwg7MVZJ\nQBuOMOCLcyjMX6Hd4PNx6SxO0cubRk832fZIhqHvPLluXaWwwyRMpy1GYJ8sE37k\nM9BuvKD0nxOnfq\/zU\/6FOxL8Mgno7mSwMrPPxc5whAldoI6uEZ+m25dVRDN7UP6y\nKcwQVq2hKEKqKC68y9rwtWLcXP5K2lAad9PN2ksj6aa8\/3xDKYs63mHBgiUfpPM=\n=lJkd\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 29d547c2d1d0b10e6118546e8a396e4f00ea8b8e\nparent 359d1318f2a15ce01404b14f6dad20c63d801ee3\nparent 0ca5c6342d95b40ef11dff720d50ad41bddece7f\nauthor Jordi Boggiano <j.boggiano@seld.be> 1540998554 +0100\ncommitter GitHub <noreply@github.com> 1540998554 +0100\n\nMerge pull request #7673 from stof\/patch-1\n\nFix the doc markup"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bc3854dcaf782c6be4ff4efe769b22ffcc9c1e01",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bc3854dcaf782c6be4ff4efe769b22ffcc9c1e01",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bc3854dcaf782c6be4ff4efe769b22ffcc9c1e01\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "359d1318f2a15ce01404b14f6dad20c63d801ee3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/359d1318f2a15ce01404b14f6dad20c63d801ee3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/359d1318f2a15ce01404b14f6dad20c63d801ee3"
                },
                {
                    "sha": "0ca5c6342d95b40ef11dff720d50ad41bddece7f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0ca5c6342d95b40ef11dff720d50ad41bddece7f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0ca5c6342d95b40ef11dff720d50ad41bddece7f"
                }
            ]
        },
        {
            "sha": "9e6a0bff71fc43b58e0d18fcab43d06597199cd9",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo5ZTZhMGJmZjcxZmM0M2I1OGUwZDE4ZmNhYjQzZDA2NTk3MTk5Y2Q5",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T15:12:55Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-10-31T15:12:55Z"
                },
                "message": "Merge pull request #7658 from fooman\/fix-non-zip-file-with-zip-ext\n\nFix regression for artifact repository",
                "tree": {
                    "sha": "ec470456204ed4ee076b7aff71d07146c53f371a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ec470456204ed4ee076b7aff71d07146c53f371a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/9e6a0bff71fc43b58e0d18fcab43d06597199cd9",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb2cZ3CRBK7hj4Ov3rIwAAdHIIAEDmtpB\/d\/6my4ClzGuKtRkL\nz5QMsKNEZjrB3NdrXaSYX4DxZNCfAO3y1Pk0KeDWRuj2Nuh8MlHXaqveBvtBpoTM\nHqq3VYqJBbo8T7Mcp7TL9SKhOXVSS1mAc3bTjcfXjZuoW3tPpFJYJ5Z5Yu+7gqG1\ncSxSxNEwlWKt\/1MmQ+\/mnRp7ItwmRk+Ho\/QlKfiqCsTs77aeQLUDbGYllJnl60Nc\nKAclKSmg952g7yIJiJn2b4Wef\/7HG\/UlyxnlScErnvIXVxAZgsRBPFQ3kf5ELkqE\n2S8JgsWb6ZBoHlBs+\/PZDV7xMgw6xWGeXi1NHWw9ZCJUi5K4OOb\/51mAQ4w\/3yM=\n=BWCJ\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree ec470456204ed4ee076b7aff71d07146c53f371a\nparent bc3854dcaf782c6be4ff4efe769b22ffcc9c1e01\nparent 2ed573b22dc60ab894df430af368332d04c8cafc\nauthor Jordi Boggiano <j.boggiano@seld.be> 1540998775 +0100\ncommitter GitHub <noreply@github.com> 1540998775 +0100\n\nMerge pull request #7658 from fooman\/fix-non-zip-file-with-zip-ext\n\nFix regression for artifact repository"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9e6a0bff71fc43b58e0d18fcab43d06597199cd9",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/9e6a0bff71fc43b58e0d18fcab43d06597199cd9",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9e6a0bff71fc43b58e0d18fcab43d06597199cd9\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "bc3854dcaf782c6be4ff4efe769b22ffcc9c1e01",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/bc3854dcaf782c6be4ff4efe769b22ffcc9c1e01",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/bc3854dcaf782c6be4ff4efe769b22ffcc9c1e01"
                },
                {
                    "sha": "2ed573b22dc60ab894df430af368332d04c8cafc",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2ed573b22dc60ab894df430af368332d04c8cafc",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2ed573b22dc60ab894df430af368332d04c8cafc"
                }
            ]
        },
        {
            "sha": "ac524e9bf3ba05b9878f5c67125869f4beffc238",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphYzUyNGU5YmYzYmEwNWI5ODc4ZjVjNjcxMjU4NjlmNGJlZmZjMjM4",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T15:13:22Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-10-31T15:13:22Z"
                },
                "message": "Merge pull request #7760 from deguif\/1.7\n\nFix ini_get() for boolean values",
                "tree": {
                    "sha": "4b1be11a71cd93601dfbbba590e83ae1fd822ebf",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/4b1be11a71cd93601dfbbba590e83ae1fd822ebf"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/ac524e9bf3ba05b9878f5c67125869f4beffc238",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb2caSCRBK7hj4Ov3rIwAAdHIIALGMcc7tOqJSPF1yCgfuscDj\nxOr2WIIEFwJ\/uMdC2n0IrqJc1WNu7Gdk7eXb8cIkfONcmAWcg28ypa59Ct7yE2Pv\n2zj2zwBf8GmgM0YtMGXvu7TuKp11H0xsXo+9T+SzXg8ur\/Q1n1HDg\/iXKkEv4nOd\ne8ze4Z4Bug0dJDXdfxK1oHmVuWdwhgSdSY\/kv6FAx1nvhhpKSV+IDqQBs8aDr0gr\npU4RgDy36UdRXNSkIsifdES5Br\/V2kxbm2sTA1UnU5s6Vgr89KyBjIlFaDQ0Gm4I\nCbdorta6Q2Wkn9hpB42PII3m8vz1YI9B2\/6AUmtvZ2hX\/N\/jE+EZB5qjuKtdVvQ=\n=TejB\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 4b1be11a71cd93601dfbbba590e83ae1fd822ebf\nparent 9e6a0bff71fc43b58e0d18fcab43d06597199cd9\nparent 114217c6e3b35653923815786221c94b023c36a3\nauthor Jordi Boggiano <j.boggiano@seld.be> 1540998802 +0100\ncommitter GitHub <noreply@github.com> 1540998802 +0100\n\nMerge pull request #7760 from deguif\/1.7\n\nFix ini_get() for boolean values"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ac524e9bf3ba05b9878f5c67125869f4beffc238",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ac524e9bf3ba05b9878f5c67125869f4beffc238",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ac524e9bf3ba05b9878f5c67125869f4beffc238\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "9e6a0bff71fc43b58e0d18fcab43d06597199cd9",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/9e6a0bff71fc43b58e0d18fcab43d06597199cd9",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/9e6a0bff71fc43b58e0d18fcab43d06597199cd9"
                },
                {
                    "sha": "114217c6e3b35653923815786221c94b023c36a3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/114217c6e3b35653923815786221c94b023c36a3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/114217c6e3b35653923815786221c94b023c36a3"
                }
            ]
        },
        {
            "sha": "470d351926228a9f2804ae273b35cedf58846ce6",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0NzBkMzUxOTI2MjI4YTlmMjgwNGFlMjczYjM1Y2VkZjU4ODQ2Y2U2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T11:47:07Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T15:13:37Z"
                },
                "message": "Update ca-bundle",
                "tree": {
                    "sha": "f7c3036b0454511d066fba30213fbdc2389cc93c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/f7c3036b0454511d066fba30213fbdc2389cc93c"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/470d351926228a9f2804ae273b35cedf58846ce6",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/470d351926228a9f2804ae273b35cedf58846ce6",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/470d351926228a9f2804ae273b35cedf58846ce6",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/470d351926228a9f2804ae273b35cedf58846ce6\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "ac524e9bf3ba05b9878f5c67125869f4beffc238",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ac524e9bf3ba05b9878f5c67125869f4beffc238",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ac524e9bf3ba05b9878f5c67125869f4beffc238"
                }
            ]
        },
        {
            "sha": "77457ca4742f46d1e606dcd443a52d3323177541",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3NzQ1N2NhNDc0MmY0NmQxZTYwNmRjZDQ0M2E1MmQzMzIzMTc3NTQx",
            "commit": {
                "author": {
                    "name": "Mariusz Zarzycki",
                    "email": "vallode@hotmail.co.uk",
                    "date": "2018-10-08T19:35:06Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T15:13:37Z"
                },
                "message": "Show command respects --path flag\nPath added to package meta output",
                "tree": {
                    "sha": "48ba38fb38116b4eabeb386fd1097dc3c854f4d1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/48ba38fb38116b4eabeb386fd1097dc3c854f4d1"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/77457ca4742f46d1e606dcd443a52d3323177541",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/77457ca4742f46d1e606dcd443a52d3323177541",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/77457ca4742f46d1e606dcd443a52d3323177541",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/77457ca4742f46d1e606dcd443a52d3323177541\/comments",
            "author": {
                "login": "vallode",
                "id": 18506096,
                "node_id": "MDQ6VXNlcjE4NTA2MDk2",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/18506096?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/vallode",
                "html_url": "https:\/\/github.com\/vallode",
                "followers_url": "https:\/\/api.github.com\/users\/vallode\/followers",
                "following_url": "https:\/\/api.github.com\/users\/vallode\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/vallode\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/vallode\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/vallode\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/vallode\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/vallode\/repos",
                "events_url": "https:\/\/api.github.com\/users\/vallode\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/vallode\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "470d351926228a9f2804ae273b35cedf58846ce6",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/470d351926228a9f2804ae273b35cedf58846ce6",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/470d351926228a9f2804ae273b35cedf58846ce6"
                }
            ]
        },
        {
            "sha": "f72e2312dcda584794dc5bf136b7d6d874c87cf3",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpmNzJlMjMxMmRjZGE1ODQ3OTRkYzViZjEzNmI3ZDZkODc0Yzg3Y2Yz",
            "commit": {
                "author": {
                    "name": "Mariusz Zarzycki",
                    "email": "vallode@hotmail.co.uk",
                    "date": "2018-10-08T19:37:25Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T15:13:37Z"
                },
                "message": "Ran php-cs-fixer",
                "tree": {
                    "sha": "a008b401c46bc2898da8d014012edb14a42d74ef",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/a008b401c46bc2898da8d014012edb14a42d74ef"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/f72e2312dcda584794dc5bf136b7d6d874c87cf3",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f72e2312dcda584794dc5bf136b7d6d874c87cf3",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f72e2312dcda584794dc5bf136b7d6d874c87cf3",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f72e2312dcda584794dc5bf136b7d6d874c87cf3\/comments",
            "author": {
                "login": "vallode",
                "id": 18506096,
                "node_id": "MDQ6VXNlcjE4NTA2MDk2",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/18506096?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/vallode",
                "html_url": "https:\/\/github.com\/vallode",
                "followers_url": "https:\/\/api.github.com\/users\/vallode\/followers",
                "following_url": "https:\/\/api.github.com\/users\/vallode\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/vallode\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/vallode\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/vallode\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/vallode\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/vallode\/repos",
                "events_url": "https:\/\/api.github.com\/users\/vallode\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/vallode\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "77457ca4742f46d1e606dcd443a52d3323177541",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/77457ca4742f46d1e606dcd443a52d3323177541",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/77457ca4742f46d1e606dcd443a52d3323177541"
                }
            ]
        },
        {
            "sha": "38a63ba05a1abce51372ca3a9c12c002f3b3fe63",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozOGE2M2JhMDVhMWFiY2U1MTM3MmNhM2E5YzEyYzAwMmYzYjNmZTYz",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T14:07:07Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T15:13:37Z"
                },
                "message": "Only show path for installed packages, refs #7698",
                "tree": {
                    "sha": "8baae880513c451fd157dd982de14dbc131dda5b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/8baae880513c451fd157dd982de14dbc131dda5b"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/38a63ba05a1abce51372ca3a9c12c002f3b3fe63",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/38a63ba05a1abce51372ca3a9c12c002f3b3fe63",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/38a63ba05a1abce51372ca3a9c12c002f3b3fe63",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/38a63ba05a1abce51372ca3a9c12c002f3b3fe63\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f72e2312dcda584794dc5bf136b7d6d874c87cf3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f72e2312dcda584794dc5bf136b7d6d874c87cf3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f72e2312dcda584794dc5bf136b7d6d874c87cf3"
                }
            ]
        },
        {
            "sha": "41458c75184bde3805d622503b7b5973ef3f1a8b",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0MTQ1OGM3NTE4NGJkZTM4MDVkNjIyNTAzYjdiNTk3M2VmM2YxYThi",
            "commit": {
                "author": {
                    "name": "Michele Locati",
                    "email": "michele@locati.it",
                    "date": "2018-10-12T13:56:26Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T15:13:37Z"
                },
                "message": "Don't call Symfony ProcessUtils::escapeArgument",
                "tree": {
                    "sha": "ce5b48d93ca058101f5cb7d24d81ad929b87b01f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ce5b48d93ca058101f5cb7d24d81ad929b87b01f"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/41458c75184bde3805d622503b7b5973ef3f1a8b",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/41458c75184bde3805d622503b7b5973ef3f1a8b",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/41458c75184bde3805d622503b7b5973ef3f1a8b",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/41458c75184bde3805d622503b7b5973ef3f1a8b\/comments",
            "author": {
                "login": "mlocati",
                "id": 928116,
                "node_id": "MDQ6VXNlcjkyODExNg==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/928116?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/mlocati",
                "html_url": "https:\/\/github.com\/mlocati",
                "followers_url": "https:\/\/api.github.com\/users\/mlocati\/followers",
                "following_url": "https:\/\/api.github.com\/users\/mlocati\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/mlocati\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/mlocati\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/mlocati\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/mlocati\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/mlocati\/repos",
                "events_url": "https:\/\/api.github.com\/users\/mlocati\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/mlocati\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "38a63ba05a1abce51372ca3a9c12c002f3b3fe63",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/38a63ba05a1abce51372ca3a9c12c002f3b3fe63",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/38a63ba05a1abce51372ca3a9c12c002f3b3fe63"
                }
            ]
        },
        {
            "sha": "3c543b275279b27d3e723ffe4363e0aecaf07857",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozYzU0M2IyNzUyNzliMjdkM2U3MjNmZmU0MzYzZTBhZWNhZjA3ODU3",
            "commit": {
                "author": {
                    "name": "Raffael Comi",
                    "email": "raffael.comi@elementare-teilchen.de",
                    "date": "2018-10-15T11:41:59Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T15:50:21Z"
                },
                "message": "Report \"same as actual\" version if override package matches actual",
                "tree": {
                    "sha": "2d1e36f639df6f939d2881eacbac73d6f2933341",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/2d1e36f639df6f939d2881eacbac73d6f2933341"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/3c543b275279b27d3e723ffe4363e0aecaf07857",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3c543b275279b27d3e723ffe4363e0aecaf07857",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3c543b275279b27d3e723ffe4363e0aecaf07857",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3c543b275279b27d3e723ffe4363e0aecaf07857\/comments",
            "author": {
                "login": "ComiR",
                "id": 11410095,
                "node_id": "MDQ6VXNlcjExNDEwMDk1",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/11410095?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/ComiR",
                "html_url": "https:\/\/github.com\/ComiR",
                "followers_url": "https:\/\/api.github.com\/users\/ComiR\/followers",
                "following_url": "https:\/\/api.github.com\/users\/ComiR\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/ComiR\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/ComiR\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/ComiR\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/ComiR\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/ComiR\/repos",
                "events_url": "https:\/\/api.github.com\/users\/ComiR\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/ComiR\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "41458c75184bde3805d622503b7b5973ef3f1a8b",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/41458c75184bde3805d622503b7b5973ef3f1a8b",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/41458c75184bde3805d622503b7b5973ef3f1a8b"
                }
            ]
        },
        {
            "sha": "148e503b31deb2d9b7a444eb29ec502360a9dd2f",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxNDhlNTAzYjMxZGViMmQ5YjdhNDQ0ZWIyOWVjNTAyMzYwYTlkZDJm",
            "commit": {
                "author": {
                    "name": "Seven Du",
                    "email": "shiweidu@outlook.com",
                    "date": "2018-10-31T15:57:44Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T15:57:44Z"
                },
                "message": "Modified comment block (#7700)\n\n* Modified comment block",
                "tree": {
                    "sha": "f375314ca85b6101e085dbbfc0d7135c2fe06f0c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/f375314ca85b6101e085dbbfc0d7135c2fe06f0c"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/148e503b31deb2d9b7a444eb29ec502360a9dd2f",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/148e503b31deb2d9b7a444eb29ec502360a9dd2f",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/148e503b31deb2d9b7a444eb29ec502360a9dd2f",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/148e503b31deb2d9b7a444eb29ec502360a9dd2f\/comments",
            "author": {
                "login": "medz",
                "id": 5564821,
                "node_id": "MDQ6VXNlcjU1NjQ4MjE=",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/5564821?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/medz",
                "html_url": "https:\/\/github.com\/medz",
                "followers_url": "https:\/\/api.github.com\/users\/medz\/followers",
                "following_url": "https:\/\/api.github.com\/users\/medz\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/medz\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/medz\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/medz\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/medz\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/medz\/repos",
                "events_url": "https:\/\/api.github.com\/users\/medz\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/medz\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "8bead933432a3c0f514a9ee5faa601ace363cc7d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8bead933432a3c0f514a9ee5faa601ace363cc7d",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/8bead933432a3c0f514a9ee5faa601ace363cc7d"
                }
            ]
        },
        {
            "sha": "0ee0138bed31aa2c911041bf63f09857eff8da7a",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowZWUwMTM4YmVkMzFhYTJjOTExMDQxYmY2M2YwOTg1N2VmZjhkYTdh",
            "commit": {
                "author": {
                    "name": "Grzegorz Korba",
                    "email": "wirone@gmail.com",
                    "date": "2018-10-31T16:18:54Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T16:18:54Z"
                },
                "message": "Support for ignoring packages in `outdated` command (#7682)\n\n* Support for ignoring packages in `outdated` command. Fixes #7656",
                "tree": {
                    "sha": "b360467b087b2f7c566c7fe7f65f96ea6201f9d2",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/b360467b087b2f7c566c7fe7f65f96ea6201f9d2"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/0ee0138bed31aa2c911041bf63f09857eff8da7a",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0ee0138bed31aa2c911041bf63f09857eff8da7a",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0ee0138bed31aa2c911041bf63f09857eff8da7a",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0ee0138bed31aa2c911041bf63f09857eff8da7a\/comments",
            "author": {
                "login": "Wirone",
                "id": 600668,
                "node_id": "MDQ6VXNlcjYwMDY2OA==",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/600668?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Wirone",
                "html_url": "https:\/\/github.com\/Wirone",
                "followers_url": "https:\/\/api.github.com\/users\/Wirone\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Wirone\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Wirone\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Wirone\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Wirone\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Wirone\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Wirone\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Wirone\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Wirone\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "148e503b31deb2d9b7a444eb29ec502360a9dd2f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/148e503b31deb2d9b7a444eb29ec502360a9dd2f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/148e503b31deb2d9b7a444eb29ec502360a9dd2f"
                }
            ]
        },
        {
            "sha": "da94e4b6199b7511704633f31e2e7bf8410be3d7",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkYTk0ZTRiNjE5OWI3NTExNzA0NjMzZjMxZTJlN2JmODQxMGJlM2Q3",
            "commit": {
                "author": {
                    "name": "Ahammar Yassine",
                    "email": "ahammar.yassine@gmail.com",
                    "date": "2018-10-31T16:32:02Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T16:32:02Z"
                },
                "message": "Skip all network-based checks (#7641)\n\n* Skip all network-based checks\r\n\r\nChange the warnings in diagnose to a friendly messages when allow_url_fopen is disabled.\r\n\r\nIssue: #7622",
                "tree": {
                    "sha": "fb71cc007e84b71f1a1049f48c0de3b2c4cc3368",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/fb71cc007e84b71f1a1049f48c0de3b2c4cc3368"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/da94e4b6199b7511704633f31e2e7bf8410be3d7",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/da94e4b6199b7511704633f31e2e7bf8410be3d7",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/da94e4b6199b7511704633f31e2e7bf8410be3d7",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/da94e4b6199b7511704633f31e2e7bf8410be3d7\/comments",
            "author": {
                "login": "yassine-ah",
                "id": 18461154,
                "node_id": "MDQ6VXNlcjE4NDYxMTU0",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/18461154?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/yassine-ah",
                "html_url": "https:\/\/github.com\/yassine-ah",
                "followers_url": "https:\/\/api.github.com\/users\/yassine-ah\/followers",
                "following_url": "https:\/\/api.github.com\/users\/yassine-ah\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/yassine-ah\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/yassine-ah\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/yassine-ah\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/yassine-ah\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/yassine-ah\/repos",
                "events_url": "https:\/\/api.github.com\/users\/yassine-ah\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/yassine-ah\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "0ee0138bed31aa2c911041bf63f09857eff8da7a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/0ee0138bed31aa2c911041bf63f09857eff8da7a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/0ee0138bed31aa2c911041bf63f09857eff8da7a"
                }
            ]
        },
        {
            "sha": "284da1487c4574352ba54a0d60c23d7ebd9e31b5",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyODRkYTE0ODdjNDU3NDM1MmJhNTRhMGQ2MGMyM2Q3ZWJkOWUzMWI1",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T16:36:38Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T16:36:38Z"
                },
                "message": "Avoid downgrading from error to warning",
                "tree": {
                    "sha": "85f03960fa31b6b1f56912aab1341b0ae202ca14",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/85f03960fa31b6b1f56912aab1341b0ae202ca14"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/284da1487c4574352ba54a0d60c23d7ebd9e31b5",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/284da1487c4574352ba54a0d60c23d7ebd9e31b5",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/284da1487c4574352ba54a0d60c23d7ebd9e31b5",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/284da1487c4574352ba54a0d60c23d7ebd9e31b5\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "da94e4b6199b7511704633f31e2e7bf8410be3d7",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/da94e4b6199b7511704633f31e2e7bf8410be3d7",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/da94e4b6199b7511704633f31e2e7bf8410be3d7"
                }
            ]
        },
        {
            "sha": "a51563300c77e339300d2fbeff796aea95f3d0e1",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphNTE1NjMzMDBjNzdlMzM5MzAwZDJmYmVmZjc5NmFlYTk1ZjNkMGUx",
            "commit": {
                "author": {
                    "name": "J\u00e9r\u00f4me Tanghe",
                    "email": "jerome.tanghe@les-tilleuls.coop",
                    "date": "2018-10-09T08:13:01Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T17:10:36Z"
                },
                "message": "Warning about the UNIX permissions lost if unzip command is not installed.\n\nSome packages provide (such as Symfony Panther or Dusk) executable files, but\nas PHP's unzip extension does not handle UNIX permissions, those files will\nlose their executable ones.",
                "tree": {
                    "sha": "0a7cf0b3caef763ac7bbba79a0293a4a65eca0db",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/0a7cf0b3caef763ac7bbba79a0293a4a65eca0db"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a51563300c77e339300d2fbeff796aea95f3d0e1",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a51563300c77e339300d2fbeff796aea95f3d0e1",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a51563300c77e339300d2fbeff796aea95f3d0e1",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a51563300c77e339300d2fbeff796aea95f3d0e1\/comments",
            "author": {
                "login": "Deuchnord",
                "id": 7600265,
                "node_id": "MDQ6VXNlcjc2MDAyNjU=",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/7600265?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Deuchnord",
                "html_url": "https:\/\/github.com\/Deuchnord",
                "followers_url": "https:\/\/api.github.com\/users\/Deuchnord\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Deuchnord\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Deuchnord\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Deuchnord\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Deuchnord\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Deuchnord\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Deuchnord\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Deuchnord\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Deuchnord\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "3c543b275279b27d3e723ffe4363e0aecaf07857",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/3c543b275279b27d3e723ffe4363e0aecaf07857",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/3c543b275279b27d3e723ffe4363e0aecaf07857"
                }
            ]
        },
        {
            "sha": "900e3b65db0bf70d456137648d2d315916f7949f",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo5MDBlM2I2NWRiMGJmNzBkNDU2MTM3NjQ4ZDJkMzE1OTE2Zjc5NDlm",
            "commit": {
                "author": {
                    "name": "dtranmobil",
                    "email": "39326050+dtranmobil@users.noreply.github.com",
                    "date": "2018-10-31T17:12:21Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T17:12:20Z"
                },
                "message": "Update why-can't-composer-load-repositories-recursively.md (#7690)",
                "tree": {
                    "sha": "f44723298edd9d6433eca89271ac101f209288ca",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/f44723298edd9d6433eca89271ac101f209288ca"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/900e3b65db0bf70d456137648d2d315916f7949f",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/900e3b65db0bf70d456137648d2d315916f7949f",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/900e3b65db0bf70d456137648d2d315916f7949f",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/900e3b65db0bf70d456137648d2d315916f7949f\/comments",
            "author": {
                "login": "dtranmobil",
                "id": 39326050,
                "node_id": "MDQ6VXNlcjM5MzI2MDUw",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/39326050?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/dtranmobil",
                "html_url": "https:\/\/github.com\/dtranmobil",
                "followers_url": "https:\/\/api.github.com\/users\/dtranmobil\/followers",
                "following_url": "https:\/\/api.github.com\/users\/dtranmobil\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/dtranmobil\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/dtranmobil\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/dtranmobil\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/dtranmobil\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/dtranmobil\/repos",
                "events_url": "https:\/\/api.github.com\/users\/dtranmobil\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/dtranmobil\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "284da1487c4574352ba54a0d60c23d7ebd9e31b5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/284da1487c4574352ba54a0d60c23d7ebd9e31b5",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/284da1487c4574352ba54a0d60c23d7ebd9e31b5"
                }
            ]
        },
        {
            "sha": "2528654c53b88b490c3b78e111d068bcbe7fef61",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyNTI4NjU0YzUzYjg4YjQ5MGMzYjc4ZTExMWQwNjhiY2JlN2ZlZjYx",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T17:13:39Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T17:13:39Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "2b3ae2d98b68d8b945aa3aa7a77e28a94a04f146",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/2b3ae2d98b68d8b945aa3aa7a77e28a94a04f146"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/2528654c53b88b490c3b78e111d068bcbe7fef61",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2528654c53b88b490c3b78e111d068bcbe7fef61",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2528654c53b88b490c3b78e111d068bcbe7fef61",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2528654c53b88b490c3b78e111d068bcbe7fef61\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "900e3b65db0bf70d456137648d2d315916f7949f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/900e3b65db0bf70d456137648d2d315916f7949f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/900e3b65db0bf70d456137648d2d315916f7949f"
                },
                {
                    "sha": "a51563300c77e339300d2fbeff796aea95f3d0e1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a51563300c77e339300d2fbeff796aea95f3d0e1",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a51563300c77e339300d2fbeff796aea95f3d0e1"
                }
            ]
        },
        {
            "sha": "1898ad12cefd58234fc83af4e57e46754037f8ab",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxODk4YWQxMmNlZmQ1ODIzNGZjODNhZjRlNTdlNDY3NTQwMzdmOGFi",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T17:23:18Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T17:23:18Z"
                },
                "message": "Make sure we chdir back in case update dir is relative, refs #7519",
                "tree": {
                    "sha": "833003a2d3961871b1a1fcc965b567b6a67b44a5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/833003a2d3961871b1a1fcc965b567b6a67b44a5"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/1898ad12cefd58234fc83af4e57e46754037f8ab",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1898ad12cefd58234fc83af4e57e46754037f8ab",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1898ad12cefd58234fc83af4e57e46754037f8ab",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1898ad12cefd58234fc83af4e57e46754037f8ab\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "a51563300c77e339300d2fbeff796aea95f3d0e1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a51563300c77e339300d2fbeff796aea95f3d0e1",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a51563300c77e339300d2fbeff796aea95f3d0e1"
                }
            ]
        },
        {
            "sha": "42dca2aff5c2c9fef4fbb6e3f296356db8d61811",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0MmRjYTJhZmY1YzJjOWZlZjRmYmI2ZTNmMjk2MzU2ZGI4ZDYxODEx",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T17:29:32Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T17:29:32Z"
                },
                "message": "Remove weird binary file from repo",
                "tree": {
                    "sha": "c17ab711ab66d0562131dc9c03bb3aa0898e1c9a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/c17ab711ab66d0562131dc9c03bb3aa0898e1c9a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/42dca2aff5c2c9fef4fbb6e3f296356db8d61811",
                "comment_count": 3,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42dca2aff5c2c9fef4fbb6e3f296356db8d61811",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/42dca2aff5c2c9fef4fbb6e3f296356db8d61811",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42dca2aff5c2c9fef4fbb6e3f296356db8d61811\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "1898ad12cefd58234fc83af4e57e46754037f8ab",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1898ad12cefd58234fc83af4e57e46754037f8ab",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1898ad12cefd58234fc83af4e57e46754037f8ab"
                }
            ]
        },
        {
            "sha": "ceb3a7a8e8c77d29b5f53841a450090cf8bc1170",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpjZWIzYTdhOGU4Yzc3ZDI5YjVmNTM4NDFhNDUwMDkwY2Y4YmMxMTcw",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T17:32:39Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T17:32:39Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "43d013c0d9319bfb813c3103bf3aab4bdb15a966",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/43d013c0d9319bfb813c3103bf3aab4bdb15a966"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/ceb3a7a8e8c77d29b5f53841a450090cf8bc1170",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ceb3a7a8e8c77d29b5f53841a450090cf8bc1170",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ceb3a7a8e8c77d29b5f53841a450090cf8bc1170",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ceb3a7a8e8c77d29b5f53841a450090cf8bc1170\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "2528654c53b88b490c3b78e111d068bcbe7fef61",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2528654c53b88b490c3b78e111d068bcbe7fef61",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2528654c53b88b490c3b78e111d068bcbe7fef61"
                },
                {
                    "sha": "42dca2aff5c2c9fef4fbb6e3f296356db8d61811",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42dca2aff5c2c9fef4fbb6e3f296356db8d61811",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/42dca2aff5c2c9fef4fbb6e3f296356db8d61811"
                }
            ]
        },
        {
            "sha": "49a6c56a7ccc1d3648dfeb8b3b6f3070509fea55",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0OWE2YzU2YTdjY2MxZDM2NDhkZmViOGIzYjZmMzA3MDUwOWZlYTU1",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T21:19:54Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T21:19:54Z"
                },
                "message": "Update changelog",
                "tree": {
                    "sha": "c8b19d657e6821f203b7bf1e33fbd045e1d11fa8",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/c8b19d657e6821f203b7bf1e33fbd045e1d11fa8"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/49a6c56a7ccc1d3648dfeb8b3b6f3070509fea55",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/49a6c56a7ccc1d3648dfeb8b3b6f3070509fea55",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/49a6c56a7ccc1d3648dfeb8b3b6f3070509fea55",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/49a6c56a7ccc1d3648dfeb8b3b6f3070509fea55\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "42dca2aff5c2c9fef4fbb6e3f296356db8d61811",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42dca2aff5c2c9fef4fbb6e3f296356db8d61811",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/42dca2aff5c2c9fef4fbb6e3f296356db8d61811"
                }
            ]
        },
        {
            "sha": "856df56bdd05f4ce2a5f437796ab6a1a222c5f3a",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4NTZkZjU2YmRkMDVmNGNlMmE1ZjQzNzc5NmFiNmExYTIyMmM1ZjNh",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T21:20:40Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T21:20:40Z"
                },
                "message": "Revert #7755",
                "tree": {
                    "sha": "e4f003697c4881c4c4e5778ca851b151aea70273",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e4f003697c4881c4c4e5778ca851b151aea70273"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/856df56bdd05f4ce2a5f437796ab6a1a222c5f3a",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/856df56bdd05f4ce2a5f437796ab6a1a222c5f3a",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/856df56bdd05f4ce2a5f437796ab6a1a222c5f3a",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/856df56bdd05f4ce2a5f437796ab6a1a222c5f3a\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "ceb3a7a8e8c77d29b5f53841a450090cf8bc1170",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ceb3a7a8e8c77d29b5f53841a450090cf8bc1170",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ceb3a7a8e8c77d29b5f53841a450090cf8bc1170"
                }
            ]
        },
        {
            "sha": "8e817d096b36ab5a771472c006ebd69302cd4a10",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4ZTgxN2QwOTZiMzZhYjVhNzcxNDcyYzAwNmViZDY5MzAyY2Q0YTEw",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T21:20:50Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-10-31T21:20:50Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "f9dc969656232345b7a5ccd45a064b7e155e146d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/f9dc969656232345b7a5ccd45a064b7e155e146d"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/8e817d096b36ab5a771472c006ebd69302cd4a10",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8e817d096b36ab5a771472c006ebd69302cd4a10",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/8e817d096b36ab5a771472c006ebd69302cd4a10",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8e817d096b36ab5a771472c006ebd69302cd4a10\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "856df56bdd05f4ce2a5f437796ab6a1a222c5f3a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/856df56bdd05f4ce2a5f437796ab6a1a222c5f3a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/856df56bdd05f4ce2a5f437796ab6a1a222c5f3a"
                },
                {
                    "sha": "49a6c56a7ccc1d3648dfeb8b3b6f3070509fea55",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/49a6c56a7ccc1d3648dfeb8b3b6f3070509fea55",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/49a6c56a7ccc1d3648dfeb8b3b6f3070509fea55"
                }
            ]
        },
        {
            "sha": "008475dee7a589f1f94f42d434ca29300fe040bf",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowMDg0NzVkZWU3YTU4OWYxZjk0ZjQyZDQzNGNhMjkzMDBmZTA0MGJm",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-06T13:55:46Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-11-06T13:55:46Z"
                },
                "message": "Use lowercase sha in docs",
                "tree": {
                    "sha": "eb371852eb485bfb5125ba40f9869485240fbb03",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/eb371852eb485bfb5125ba40f9869485240fbb03"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/008475dee7a589f1f94f42d434ca29300fe040bf",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb4Z1iCRBK7hj4Ov3rIwAAdHIIADh7fwKa\/7sZkuKVoBZcGj4g\nwc3Bbl+1zxt4kW6BcfFhvrmB++vbfEHyJqR+xSmVE7k1Ha4zP074EB3uJf5Y0lqF\net1zStOMMIdgHA0mb3qpq5zlP2A\/k8i6pIRZGySa1k7S7mpTVCIqu+JSYkjmvUn8\nbzzvK71SL+hnbotox0pVUp\/oTKMhNfvjJ15Go7viFcdr0RhvhaDHjykhmUw5uD3b\ntYidRJakksPVKJgN+Jw1MHfFkiHM5nQGcamQkZTBT2\/vYld1w51GufYWQHm2Y5a1\nKSZT44yfJ9lOUF8rJYboTvXza3\/1SLDR6wvfitKLyFrX3tJv5jK0RA2C3SV8ex4=\n=cGl6\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree eb371852eb485bfb5125ba40f9869485240fbb03\nparent 8e817d096b36ab5a771472c006ebd69302cd4a10\nauthor Jordi Boggiano <j.boggiano@seld.be> 1541512546 +0100\ncommitter GitHub <noreply@github.com> 1541512546 +0100\n\nUse lowercase sha in docs"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/008475dee7a589f1f94f42d434ca29300fe040bf",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/008475dee7a589f1f94f42d434ca29300fe040bf",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/008475dee7a589f1f94f42d434ca29300fe040bf\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "8e817d096b36ab5a771472c006ebd69302cd4a10",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/8e817d096b36ab5a771472c006ebd69302cd4a10",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/8e817d096b36ab5a771472c006ebd69302cd4a10"
                }
            ]
        },
        {
            "sha": "38a34159ef6e2faf49d55fde3b4f571e206ff987",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzozOGEzNDE1OWVmNmUyZmFmNDlkNTVmZGUzYjRmNTcxZTIwNmZmOTg3",
            "commit": {
                "author": {
                    "name": "Mathias Brodala",
                    "email": "mbrodala@pagemachine.de",
                    "date": "2018-11-12T10:32:19Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-12T10:32:19Z"
                },
                "message": "Dispatch \"post-package-update\" event after writing lock (#7766)\n\nFixes #7765",
                "tree": {
                    "sha": "ea2d14d30a0a807a877427b93819371033f4dc57",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/ea2d14d30a0a807a877427b93819371033f4dc57"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/38a34159ef6e2faf49d55fde3b4f571e206ff987",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/38a34159ef6e2faf49d55fde3b4f571e206ff987",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/38a34159ef6e2faf49d55fde3b4f571e206ff987",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/38a34159ef6e2faf49d55fde3b4f571e206ff987\/comments",
            "author": {
                "login": "mbrodala",
                "id": 5037116,
                "node_id": "MDQ6VXNlcjUwMzcxMTY=",
                "avatar_url": "https:\/\/avatars0.githubusercontent.com\/u\/5037116?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/mbrodala",
                "html_url": "https:\/\/github.com\/mbrodala",
                "followers_url": "https:\/\/api.github.com\/users\/mbrodala\/followers",
                "following_url": "https:\/\/api.github.com\/users\/mbrodala\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/mbrodala\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/mbrodala\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/mbrodala\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/mbrodala\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/mbrodala\/repos",
                "events_url": "https:\/\/api.github.com\/users\/mbrodala\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/mbrodala\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "008475dee7a589f1f94f42d434ca29300fe040bf",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/008475dee7a589f1f94f42d434ca29300fe040bf",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/008475dee7a589f1f94f42d434ca29300fe040bf"
                }
            ]
        },
        {
            "sha": "2a13bb2649151932407aae1a37a356179b1f5199",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoyYTEzYmIyNjQ5MTUxOTMyNDA3YWFlMWEzN2EzNTYxNzliMWY1MTk5",
            "commit": {
                "author": {
                    "name": "Gabriel Caruso",
                    "email": "carusogabriel34@gmail.com",
                    "date": "2018-11-12T14:23:32Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-12T14:23:32Z"
                },
                "message": "Fixes from PHPStan (#7687)\n\n* fix docblocks\r\n\r\n* remove redundant conditional\r\n\r\n* fix wrong variable name\r\n\r\n* fix wrong namespaces\r\n\r\n* add missing private members\r\n\r\n* remove unused\/redundant arguments\r\n\r\n* move testcase class\r\n\r\n* exclude TestCase.php\r\n\r\n* Tweak RuleWatchGraph type hints\r\n\r\n* Tweak doc comment",
                "tree": {
                    "sha": "53b2e355afd66037602c16be21431b0200b87fd3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/53b2e355afd66037602c16be21431b0200b87fd3"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/2a13bb2649151932407aae1a37a356179b1f5199",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2a13bb2649151932407aae1a37a356179b1f5199",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2a13bb2649151932407aae1a37a356179b1f5199",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2a13bb2649151932407aae1a37a356179b1f5199\/comments",
            "author": {
                "login": "carusogabriel",
                "id": 16328050,
                "node_id": "MDQ6VXNlcjE2MzI4MDUw",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/16328050?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/carusogabriel",
                "html_url": "https:\/\/github.com\/carusogabriel",
                "followers_url": "https:\/\/api.github.com\/users\/carusogabriel\/followers",
                "following_url": "https:\/\/api.github.com\/users\/carusogabriel\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/carusogabriel\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/carusogabriel\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/carusogabriel\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/carusogabriel\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/carusogabriel\/repos",
                "events_url": "https:\/\/api.github.com\/users\/carusogabriel\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/carusogabriel\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "38a34159ef6e2faf49d55fde3b4f571e206ff987",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/38a34159ef6e2faf49d55fde3b4f571e206ff987",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/38a34159ef6e2faf49d55fde3b4f571e206ff987"
                }
            ]
        },
        {
            "sha": "86f59348f5fa308d3b9a911a8d03c30272c71e64",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4NmY1OTM0OGY1ZmEzMDhkM2I5YTkxMWE4ZDAzYzMwMjcyYzcxZTY0",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-12T14:24:28Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-11-12T14:24:28Z"
                },
                "message": "Fix TestCase import",
                "tree": {
                    "sha": "dc17cded51662db874986b287d9dc4f81a36eac2",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/dc17cded51662db874986b287d9dc4f81a36eac2"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/86f59348f5fa308d3b9a911a8d03c30272c71e64",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb6Y0cCRBK7hj4Ov3rIwAAdHIIAFRBxuvHcLewoUf6pHRY+JOc\nlMSs5rD65kYbItThZZgQzrSk+aEZj1mHiIqadwBQNjn131vsnoJrqvKkk0TTZPny\npbmGuID1d\/UnvDQ+IIU9N4zMPl5\/l\/IdjaQ1DTzx3c2JZ8iS6mDdnFALtxcel7Lw\n2BzzHv6scGWiw6fcnlfArdgeNtLH\/sDjkikOKvOek0VVFEN9cw+T0+B32ICudLlY\nyUSW\/kj54gIKw68w+YH4wYi\/Rvh4Hov4H5hFth9L43d1Ruk173mUcR2gaPAtRW5r\nj9lXdiUbyXJ+lNhGICLTnI4kLiDq80fE9YtTwkWGMMJ7o\/RQTsfDGaBSDAQ6KM8=\n=rfca\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree dc17cded51662db874986b287d9dc4f81a36eac2\nparent 2a13bb2649151932407aae1a37a356179b1f5199\nauthor Jordi Boggiano <j.boggiano@seld.be> 1542032668 +0100\ncommitter GitHub <noreply@github.com> 1542032668 +0100\n\nFix TestCase import"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/86f59348f5fa308d3b9a911a8d03c30272c71e64",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/86f59348f5fa308d3b9a911a8d03c30272c71e64",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/86f59348f5fa308d3b9a911a8d03c30272c71e64\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "2a13bb2649151932407aae1a37a356179b1f5199",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/2a13bb2649151932407aae1a37a356179b1f5199",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/2a13bb2649151932407aae1a37a356179b1f5199"
                }
            ]
        },
        {
            "sha": "04098153c8c4f3c2b2f329aa13f868bb5735032a",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowNDA5ODE1M2M4YzRmM2MyYjJmMzI5YWExM2Y4NjhiYjU3MzUwMzJh",
            "commit": {
                "author": {
                    "name": "Michele Locati",
                    "email": "michele@locati.it",
                    "date": "2018-11-26T11:32:31Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T11:32:31Z"
                },
                "message": "Add support for running composer with phpdbg (#7798)",
                "tree": {
                    "sha": "5036a40bab7da736eb9c86ae5837db14d041c22f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/5036a40bab7da736eb9c86ae5837db14d041c22f"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/04098153c8c4f3c2b2f329aa13f868bb5735032a",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/04098153c8c4f3c2b2f329aa13f868bb5735032a",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/04098153c8c4f3c2b2f329aa13f868bb5735032a",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/04098153c8c4f3c2b2f329aa13f868bb5735032a\/comments",
            "author": {
                "login": "mlocati",
                "id": 928116,
                "node_id": "MDQ6VXNlcjkyODExNg==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/928116?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/mlocati",
                "html_url": "https:\/\/github.com\/mlocati",
                "followers_url": "https:\/\/api.github.com\/users\/mlocati\/followers",
                "following_url": "https:\/\/api.github.com\/users\/mlocati\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/mlocati\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/mlocati\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/mlocati\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/mlocati\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/mlocati\/repos",
                "events_url": "https:\/\/api.github.com\/users\/mlocati\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/mlocati\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "86f59348f5fa308d3b9a911a8d03c30272c71e64",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/86f59348f5fa308d3b9a911a8d03c30272c71e64",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/86f59348f5fa308d3b9a911a8d03c30272c71e64"
                }
            ]
        },
        {
            "sha": "b0b00ad1fa1abe2601774b49f0355dcbf533cf77",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiMGIwMGFkMWZhMWFiZTI2MDE3NzRiNDlmMDM1NWRjYmY1MzNjZjc3",
            "commit": {
                "author": {
                    "name": "J\u00e9r\u00f4me Deuchnord",
                    "email": "deuchnord@users.noreply.github.com",
                    "date": "2018-11-26T11:35:41Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T11:35:41Z"
                },
                "message": "Call a script recursively with extra parameters (#7720)\n\n* Added support for calling scripts recursively (fixes #7562)",
                "tree": {
                    "sha": "596d8ad1b2c04dbab8a5ec9ab13b1d5563724809",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/596d8ad1b2c04dbab8a5ec9ab13b1d5563724809"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b0b00ad1fa1abe2601774b49f0355dcbf533cf77",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b0b00ad1fa1abe2601774b49f0355dcbf533cf77",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b0b00ad1fa1abe2601774b49f0355dcbf533cf77",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b0b00ad1fa1abe2601774b49f0355dcbf533cf77\/comments",
            "author": {
                "login": "Deuchnord",
                "id": 7600265,
                "node_id": "MDQ6VXNlcjc2MDAyNjU=",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/7600265?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Deuchnord",
                "html_url": "https:\/\/github.com\/Deuchnord",
                "followers_url": "https:\/\/api.github.com\/users\/Deuchnord\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Deuchnord\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Deuchnord\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Deuchnord\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Deuchnord\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Deuchnord\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Deuchnord\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Deuchnord\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Deuchnord\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "04098153c8c4f3c2b2f329aa13f868bb5735032a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/04098153c8c4f3c2b2f329aa13f868bb5735032a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/04098153c8c4f3c2b2f329aa13f868bb5735032a"
                }
            ]
        },
        {
            "sha": "f9234222d17bcd9f7a57a30d3c3b38d0c70e60cb",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpmOTIzNDIyMmQxN2JjZDlmN2E1N2EzMGQzYzNiMzhkMGM3MGU2MGNi",
            "commit": {
                "author": {
                    "name": "Elan Ruusam\u00e4e",
                    "email": "glen@pld-linux.org",
                    "date": "2018-11-26T11:37:56Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T11:37:56Z"
                },
                "message": "add lib-imagick to show -p output (#7762)",
                "tree": {
                    "sha": "306e171b19c428cc105ae8f4e942f64779a71c4a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/306e171b19c428cc105ae8f4e942f64779a71c4a"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/f9234222d17bcd9f7a57a30d3c3b38d0c70e60cb",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f9234222d17bcd9f7a57a30d3c3b38d0c70e60cb",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f9234222d17bcd9f7a57a30d3c3b38d0c70e60cb",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f9234222d17bcd9f7a57a30d3c3b38d0c70e60cb\/comments",
            "author": {
                "login": "glensc",
                "id": 199095,
                "node_id": "MDQ6VXNlcjE5OTA5NQ==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/199095?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/glensc",
                "html_url": "https:\/\/github.com\/glensc",
                "followers_url": "https:\/\/api.github.com\/users\/glensc\/followers",
                "following_url": "https:\/\/api.github.com\/users\/glensc\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/glensc\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/glensc\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/glensc\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/glensc\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/glensc\/repos",
                "events_url": "https:\/\/api.github.com\/users\/glensc\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/glensc\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b0b00ad1fa1abe2601774b49f0355dcbf533cf77",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b0b00ad1fa1abe2601774b49f0355dcbf533cf77",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b0b00ad1fa1abe2601774b49f0355dcbf533cf77"
                }
            ]
        },
        {
            "sha": "42e88ac27afd15293c6a7bbfe8406364c32ade03",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0MmU4OGFjMjdhZmQxNTI5M2M2YTdiYmZlODQwNjM2NGMzMmFkZTAz",
            "commit": {
                "author": {
                    "name": "Shalvah",
                    "email": "shalvah@users.noreply.github.com",
                    "date": "2018-11-26T11:57:38Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T11:57:38Z"
                },
                "message": "Add interactive option to install dependencies after running init command (#7521)\n\n* Add interactive option to install dependencies after running init command\r\n\r\n* Only ask to install dependencies when dependencies where defined",
                "tree": {
                    "sha": "a79eceb78dd3b81cfb5634c4291be01826412766",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/a79eceb78dd3b81cfb5634c4291be01826412766"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/42e88ac27afd15293c6a7bbfe8406364c32ade03",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42e88ac27afd15293c6a7bbfe8406364c32ade03",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/42e88ac27afd15293c6a7bbfe8406364c32ade03",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42e88ac27afd15293c6a7bbfe8406364c32ade03\/comments",
            "author": {
                "login": "shalvah",
                "id": 14361073,
                "node_id": "MDQ6VXNlcjE0MzYxMDcz",
                "avatar_url": "https:\/\/avatars2.githubusercontent.com\/u\/14361073?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/shalvah",
                "html_url": "https:\/\/github.com\/shalvah",
                "followers_url": "https:\/\/api.github.com\/users\/shalvah\/followers",
                "following_url": "https:\/\/api.github.com\/users\/shalvah\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/shalvah\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/shalvah\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/shalvah\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/shalvah\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/shalvah\/repos",
                "events_url": "https:\/\/api.github.com\/users\/shalvah\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/shalvah\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "f9234222d17bcd9f7a57a30d3c3b38d0c70e60cb",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/f9234222d17bcd9f7a57a30d3c3b38d0c70e60cb",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/f9234222d17bcd9f7a57a30d3c3b38d0c70e60cb"
                }
            ]
        },
        {
            "sha": "6e6fb844ddb35868f04c6db9d40b6b24cc6ad31a",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo2ZTZmYjg0NGRkYjM1ODY4ZjA0YzZkYjlkNDBiNmIyNGNjNmFkMzFh",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T11:59:54Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T11:59:54Z"
                },
                "message": "Avoid validating package name if it has a newline at the end",
                "tree": {
                    "sha": "eb9c0f16621be1f93049f1149bd3190dabb0fd97",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/eb9c0f16621be1f93049f1149bd3190dabb0fd97"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/6e6fb844ddb35868f04c6db9d40b6b24cc6ad31a",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6e6fb844ddb35868f04c6db9d40b6b24cc6ad31a",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/6e6fb844ddb35868f04c6db9d40b6b24cc6ad31a",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6e6fb844ddb35868f04c6db9d40b6b24cc6ad31a\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "42e88ac27afd15293c6a7bbfe8406364c32ade03",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/42e88ac27afd15293c6a7bbfe8406364c32ade03",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/42e88ac27afd15293c6a7bbfe8406364c32ade03"
                }
            ]
        },
        {
            "sha": "acdf8f83f1c5e0cbdd16be2325206c4b42e43679",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphY2RmOGY4M2YxYzVlMGNiZGQxNmJlMjMyNTIwNmM0YjQyZTQzNjc5",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T12:12:18Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T12:12:18Z"
                },
                "message": "Bypass version check for explicitly versioned packages in require command when --no-update is given, fixes #7800",
                "tree": {
                    "sha": "1eabc6bde80912a2c82f4adc88b4e738fd2edb0d",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/1eabc6bde80912a2c82f4adc88b4e738fd2edb0d"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/acdf8f83f1c5e0cbdd16be2325206c4b42e43679",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/acdf8f83f1c5e0cbdd16be2325206c4b42e43679",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/acdf8f83f1c5e0cbdd16be2325206c4b42e43679",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/acdf8f83f1c5e0cbdd16be2325206c4b42e43679\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "49a6c56a7ccc1d3648dfeb8b3b6f3070509fea55",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/49a6c56a7ccc1d3648dfeb8b3b6f3070509fea55",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/49a6c56a7ccc1d3648dfeb8b3b6f3070509fea55"
                }
            ]
        },
        {
            "sha": "b3cbfea36e9de7e275710475eb15e703c5345fd5",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiM2NiZmVhMzZlOWRlN2UyNzU3MTA0NzVlYjE1ZTcwM2M1MzQ1ZmQ1",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T12:16:44Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T12:16:44Z"
                },
                "message": "Merge branch '1.7'",
                "tree": {
                    "sha": "719bdf134de044424ef7f7ac6561fcb4a9cbd4d4",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/719bdf134de044424ef7f7ac6561fcb4a9cbd4d4"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b3cbfea36e9de7e275710475eb15e703c5345fd5",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b3cbfea36e9de7e275710475eb15e703c5345fd5",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b3cbfea36e9de7e275710475eb15e703c5345fd5",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b3cbfea36e9de7e275710475eb15e703c5345fd5\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "6e6fb844ddb35868f04c6db9d40b6b24cc6ad31a",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6e6fb844ddb35868f04c6db9d40b6b24cc6ad31a",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/6e6fb844ddb35868f04c6db9d40b6b24cc6ad31a"
                },
                {
                    "sha": "acdf8f83f1c5e0cbdd16be2325206c4b42e43679",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/acdf8f83f1c5e0cbdd16be2325206c4b42e43679",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/acdf8f83f1c5e0cbdd16be2325206c4b42e43679"
                }
            ]
        },
        {
            "sha": "55c40e8853038e337364c3205cab9ad1832a2a3f",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo1NWM0MGU4ODUzMDM4ZTMzNzM2NGMzMjA1Y2FiOWFkMTgzMmEyYTNm",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T12:43:24Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-11-26T12:43:24Z"
                },
                "message": "Add note about CS fixes to contribution notes",
                "tree": {
                    "sha": "8a602cac0c14db35150f4cf444e2aeb92370b7b7",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/8a602cac0c14db35150f4cf444e2aeb92370b7b7"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/55c40e8853038e337364c3205cab9ad1832a2a3f",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb++psCRBK7hj4Ov3rIwAAdHIIAJegPPQyL0bu5RXyGT2EHSqy\ncQxMRZbnXqrxY54pmo0FrciytuJ8tHWIBU0Qgq2u65RYUlQMu2Pp73kGlwMHqUG\/\nq0ZKnHJBXevo16pCHP8IMgFSECcjLyGgzCOHkV4p0p0G6gPEmlzddstbKhGnCYNL\nmNGV7GUO9T3ainc4T66hasMt7VrL48+sXG47YY5Gl+kMQiJIRVOtRbGoRpiAt86i\n9pRDgecgYlJ8b4anVS+Nn8lFL2Byx7pCyKP\/cxSskTyhnEmWwD5HotcJLWYqbu\/h\n5DSBPCW7ahvxLzpTDqd4OGstCUR5HHls34JwyVOsIt5itaC8Db3RNM2YjJYKM+8=\n=iV4f\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 8a602cac0c14db35150f4cf444e2aeb92370b7b7\nparent b3cbfea36e9de7e275710475eb15e703c5345fd5\nauthor Jordi Boggiano <j.boggiano@seld.be> 1543236204 +0100\ncommitter GitHub <noreply@github.com> 1543236204 +0100\n\nAdd note about CS fixes to contribution notes"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/55c40e8853038e337364c3205cab9ad1832a2a3f",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/55c40e8853038e337364c3205cab9ad1832a2a3f",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/55c40e8853038e337364c3205cab9ad1832a2a3f\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b3cbfea36e9de7e275710475eb15e703c5345fd5",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b3cbfea36e9de7e275710475eb15e703c5345fd5",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b3cbfea36e9de7e275710475eb15e703c5345fd5"
                }
            ]
        },
        {
            "sha": "736c05f66ba2f84622ddf9067fe88e276eabfd5f",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3MzZjMDVmNjZiYTJmODQ2MjJkZGY5MDY3ZmU4OGUyNzZlYWJmZDVm",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T18:44:30Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T18:44:30Z"
                },
                "message": "Merge remote-tracking branch 'yassine-ah\/patch-1'",
                "tree": {
                    "sha": "06c82d8aa889da137a9cfa17511e5ad024753409",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/06c82d8aa889da137a9cfa17511e5ad024753409"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/736c05f66ba2f84622ddf9067fe88e276eabfd5f",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/736c05f66ba2f84622ddf9067fe88e276eabfd5f",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/736c05f66ba2f84622ddf9067fe88e276eabfd5f",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/736c05f66ba2f84622ddf9067fe88e276eabfd5f\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "55c40e8853038e337364c3205cab9ad1832a2a3f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/55c40e8853038e337364c3205cab9ad1832a2a3f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/55c40e8853038e337364c3205cab9ad1832a2a3f"
                },
                {
                    "sha": "4a8c416a024785eaa4094edf3a2eafec515972c3",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/4a8c416a024785eaa4094edf3a2eafec515972c3",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/4a8c416a024785eaa4094edf3a2eafec515972c3"
                }
            ]
        },
        {
            "sha": "85ec111dee7832b50cac8dd06cc525fd8b3b2ecd",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo4NWVjMTExZGVlNzgzMmI1MGNhYzhkZDA2Y2M1MjVmZDhiM2IyZWNk",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T18:47:13Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T18:47:13Z"
                },
                "message": "Merge remote-tracking branch 'dmanners\/add-chat-option-for-support'",
                "tree": {
                    "sha": "020888eeb846cfb6f251813489c043c5f9dfa171",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/020888eeb846cfb6f251813489c043c5f9dfa171"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/85ec111dee7832b50cac8dd06cc525fd8b3b2ecd",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/85ec111dee7832b50cac8dd06cc525fd8b3b2ecd",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/85ec111dee7832b50cac8dd06cc525fd8b3b2ecd",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/85ec111dee7832b50cac8dd06cc525fd8b3b2ecd\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "736c05f66ba2f84622ddf9067fe88e276eabfd5f",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/736c05f66ba2f84622ddf9067fe88e276eabfd5f",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/736c05f66ba2f84622ddf9067fe88e276eabfd5f"
                },
                {
                    "sha": "e92eda56786844c6e30c97b91a0cf4706e0b3085",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/e92eda56786844c6e30c97b91a0cf4706e0b3085",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/e92eda56786844c6e30c97b91a0cf4706e0b3085"
                }
            ]
        },
        {
            "sha": "b89daf5322711ac154d5583ce4443588e43c1716",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpiODlkYWY1MzIyNzExYWMxNTRkNTU4M2NlNDQ0MzU4OGU0M2MxNzE2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T18:52:05Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T18:52:05Z"
                },
                "message": "Add support.chat to schema, refs #7714",
                "tree": {
                    "sha": "06da413bf70eddfb46d520e43fb5fc372ab0e710",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/06da413bf70eddfb46d520e43fb5fc372ab0e710"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/b89daf5322711ac154d5583ce4443588e43c1716",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b89daf5322711ac154d5583ce4443588e43c1716",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b89daf5322711ac154d5583ce4443588e43c1716",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b89daf5322711ac154d5583ce4443588e43c1716\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "85ec111dee7832b50cac8dd06cc525fd8b3b2ecd",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/85ec111dee7832b50cac8dd06cc525fd8b3b2ecd",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/85ec111dee7832b50cac8dd06cc525fd8b3b2ecd"
                }
            ]
        },
        {
            "sha": "dc6027a0adb87820bc6ed5bb8155d2d244e56098",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkYzYwMjdhMGFkYjg3ODIwYmM2ZWQ1YmI4MTU1ZDJkMjQ0ZTU2MDk4",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T18:55:42Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T18:55:42Z"
                },
                "message": "Merge remote-tracking branch 'dmanners\/remove-all-from-one-vendor'",
                "tree": {
                    "sha": "0bb45fb2f4b43486500fabd0426dff6b5cda6036",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/0bb45fb2f4b43486500fabd0426dff6b5cda6036"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/dc6027a0adb87820bc6ed5bb8155d2d244e56098",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/dc6027a0adb87820bc6ed5bb8155d2d244e56098",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/dc6027a0adb87820bc6ed5bb8155d2d244e56098",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/dc6027a0adb87820bc6ed5bb8155d2d244e56098\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "b89daf5322711ac154d5583ce4443588e43c1716",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/b89daf5322711ac154d5583ce4443588e43c1716",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/b89daf5322711ac154d5583ce4443588e43c1716"
                },
                {
                    "sha": "a1ab75a703c666e96cb753872e8cd1427725f1cb",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a1ab75a703c666e96cb753872e8cd1427725f1cb",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a1ab75a703c666e96cb753872e8cd1427725f1cb"
                }
            ]
        },
        {
            "sha": "66d84f60c6e6c869ba739db239f23366c66cb144",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo2NmQ4NGY2MGM2ZTZjODY5YmE3MzlkYjIzOWYyMzM2NmM2NmNiMTQ0",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T19:09:26Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-26T19:09:26Z"
                },
                "message": "Fix pattern matching for remove wildcard, refs #7715",
                "tree": {
                    "sha": "c076ac42ad309178d644d33f5c4b5f3620c9cf04",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/c076ac42ad309178d644d33f5c4b5f3620c9cf04"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/66d84f60c6e6c869ba739db239f23366c66cb144",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/66d84f60c6e6c869ba739db239f23366c66cb144",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/66d84f60c6e6c869ba739db239f23366c66cb144",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/66d84f60c6e6c869ba739db239f23366c66cb144\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "dc6027a0adb87820bc6ed5bb8155d2d244e56098",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/dc6027a0adb87820bc6ed5bb8155d2d244e56098",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/dc6027a0adb87820bc6ed5bb8155d2d244e56098"
                }
            ]
        },
        {
            "sha": "17fd933fd59fc5c8dad6fffb77f795739293b9ec",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxN2ZkOTMzZmQ1OWZjNWM4ZGFkNmZmZmI3N2Y3OTU3MzkyOTNiOWVj",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-27T11:22:32Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-27T11:22:32Z"
                },
                "message": "Update dependencies",
                "tree": {
                    "sha": "e10625e9bdf28319fe9c3dae6ed7a7ad268b9fed",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e10625e9bdf28319fe9c3dae6ed7a7ad268b9fed"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/17fd933fd59fc5c8dad6fffb77f795739293b9ec",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/17fd933fd59fc5c8dad6fffb77f795739293b9ec",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/17fd933fd59fc5c8dad6fffb77f795739293b9ec",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/17fd933fd59fc5c8dad6fffb77f795739293b9ec\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "66d84f60c6e6c869ba739db239f23366c66cb144",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/66d84f60c6e6c869ba739db239f23366c66cb144",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/66d84f60c6e6c869ba739db239f23366c66cb144"
                }
            ]
        },
        {
            "sha": "489e0d4b124905a26310c9026d83eb82eb0e57ce",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo0ODllMGQ0YjEyNDkwNWEyNjMxMGM5MDI2ZDgzZWI4MmViMGU1N2Nl",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-27T13:26:03Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-27T13:26:03Z"
                },
                "message": "Add support for imagemagick <3.3, refs #7762",
                "tree": {
                    "sha": "f8d6f72a827c7e244fdac483152f44a15be95977",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/f8d6f72a827c7e244fdac483152f44a15be95977"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/489e0d4b124905a26310c9026d83eb82eb0e57ce",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/489e0d4b124905a26310c9026d83eb82eb0e57ce",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/489e0d4b124905a26310c9026d83eb82eb0e57ce",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/489e0d4b124905a26310c9026d83eb82eb0e57ce\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "17fd933fd59fc5c8dad6fffb77f795739293b9ec",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/17fd933fd59fc5c8dad6fffb77f795739293b9ec",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/17fd933fd59fc5c8dad6fffb77f795739293b9ec"
                }
            ]
        },
        {
            "sha": "5ce5560040052bcb6a23bb5de2eb5e7c9ead10e4",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo1Y2U1NTYwMDQwMDUyYmNiNmEyM2JiNWRlMmViNWU3YzllYWQxMGU0",
            "commit": {
                "author": {
                    "name": "meyerbaptiste",
                    "email": "baptiste@les-tilleuls.coop",
                    "date": "2018-11-27T15:27:01Z"
                },
                "committer": {
                    "name": "meyerbaptiste",
                    "email": "baptiste@les-tilleuls.coop",
                    "date": "2018-11-27T15:32:26Z"
                },
                "message": "Fix support for imagemagick <3.3, refs #7762",
                "tree": {
                    "sha": "0aca4c53a90b5b459530f62c1c4d3676a15bbb86",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/0aca4c53a90b5b459530f62c1c4d3676a15bbb86"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/5ce5560040052bcb6a23bb5de2eb5e7c9ead10e4",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEtW1xk8Ku8+alkI7SX2IW3BiQ5uwFAlv9Y4oACgkQX2IW3BiQ\n5uyisRAAiEWArBM\/tROH03wSZJcfR6yuROmFZtMm9RtuBQsmzYyOaZQgQmPrPEvv\nslbwtxM8LjbDXdtuQ599haEG\/fw5LZ9q9l4sfjFB8YLr4A\/lhTJJhrHxz2t5cb2c\nWRvK+z37dFMDXJtILLsMzadLkWXdfVgd\/VASiQL\/1+t++Hiy1MrWKf4KkUKokgkK\nZJINT9dw2flabcbckILJc+eZnP6TsUtQN57wjOgCmF2y8KtnQPbOXUep0jiVEgdu\nG40o6Jcb5t\/aLycCjiOM3dqXVaRC7hoyP1h59J5VFS8irYRFSUR2B\/\/tXhkaXdNe\nvLPSl8oRjSj0L8ORGNdLiHeAso9AxloqS80JFtM91i\/Yi5aH0z8Eo48OX3I5LhDp\nVyTgFtMP5+bvBwpt7gUE550pt8q4lV38lLaz6jxnWBcmcLEGJzXaY0h4\/CCFnLJZ\nzlbLAyojIrI2gt9CAJkyTtSjJ\/1RF+Se5UqSsOB8d5mY0LUaJ+3770aDkrGaWTTP\nxjXDMvSb3fik5r3XYAtf\/LuRdudaBrwUDftXj+gK7Xa8XPgTqzDVzyrQX3jF7zCM\n6VlL5go5b8F\/rKEQhVno4lHLyM42Ttu8CS8NE1TuiIpLqlEr6V8\/NJpwsyac\/x63\nAYkaThi0+S+ovYIjg+tNg8cV59uW2lVEqsauz7zLXxlcCbCZ860=\n=1ib3\n-----END PGP SIGNATURE-----",
                    "payload": "tree 0aca4c53a90b5b459530f62c1c4d3676a15bbb86\nparent 489e0d4b124905a26310c9026d83eb82eb0e57ce\nauthor meyerbaptiste <baptiste@les-tilleuls.coop> 1543332421 +0100\ncommitter meyerbaptiste <baptiste@les-tilleuls.coop> 1543332746 +0100\n\nFix support for imagemagick <3.3, refs #7762\n"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5ce5560040052bcb6a23bb5de2eb5e7c9ead10e4",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5ce5560040052bcb6a23bb5de2eb5e7c9ead10e4",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5ce5560040052bcb6a23bb5de2eb5e7c9ead10e4\/comments",
            "author": {
                "login": "meyerbaptiste",
                "id": 4034907,
                "node_id": "MDQ6VXNlcjQwMzQ5MDc=",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/4034907?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/meyerbaptiste",
                "html_url": "https:\/\/github.com\/meyerbaptiste",
                "followers_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/followers",
                "following_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/repos",
                "events_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "meyerbaptiste",
                "id": 4034907,
                "node_id": "MDQ6VXNlcjQwMzQ5MDc=",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/4034907?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/meyerbaptiste",
                "html_url": "https:\/\/github.com\/meyerbaptiste",
                "followers_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/followers",
                "following_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/repos",
                "events_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/meyerbaptiste\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "489e0d4b124905a26310c9026d83eb82eb0e57ce",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/489e0d4b124905a26310c9026d83eb82eb0e57ce",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/489e0d4b124905a26310c9026d83eb82eb0e57ce"
                }
            ]
        },
        {
            "sha": "1970e97b4792855abaf43d8041abf59db878c3a1",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzoxOTcwZTk3YjQ3OTI4NTVhYmFmNDNkODA0MWFiZjU5ZGI4NzhjM2Ex",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-27T15:52:09Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-11-27T15:52:09Z"
                },
                "message": "Merge pull request #7806 from meyerbaptiste\/fix\/lib-imagick\n\nFix support for imagemagick <3.3",
                "tree": {
                    "sha": "0aca4c53a90b5b459530f62c1c4d3676a15bbb86",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/0aca4c53a90b5b459530f62c1c4d3676a15bbb86"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/1970e97b4792855abaf43d8041abf59db878c3a1",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb\/WgpCRBK7hj4Ov3rIwAAdHIIADKWS3IAKdf8x9Lzi4w7sXT1\nc6aSuWAhkYD4RlIuxMKJ3DHFcEK3+sEgAhbcJYgCn\/tAZK947fflspXTciYo1p2F\nTO0i6hn8EjQeAKCtr+1pUrSK6ha+Mw0EeCCtoa3P0skqS1oobabxuyu8X\/4YmcEW\n797dpLj6JG9iQtUzGaFCA9pDZ6G4o8lKZTIkwxAaU+T7G+yIAKQv8bU8LMQ1UeX0\nQZQ69JDtE0IWA8rFRa4Iwo5WHsNt1wMzkQUA3z6YTiN6vc3YmJMTvGNqKbh6Xo5R\nmFFH2HxxWJ4EdeR9PSiYbMWniWAEzsZj3NzXE736J0NTX+Gn1I2zq7PXyhjSSKE=\n=Hath\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 0aca4c53a90b5b459530f62c1c4d3676a15bbb86\nparent 489e0d4b124905a26310c9026d83eb82eb0e57ce\nparent 5ce5560040052bcb6a23bb5de2eb5e7c9ead10e4\nauthor Jordi Boggiano <j.boggiano@seld.be> 1543333929 +0100\ncommitter GitHub <noreply@github.com> 1543333929 +0100\n\nMerge pull request #7806 from meyerbaptiste\/fix\/lib-imagick\n\nFix support for imagemagick <3.3"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1970e97b4792855abaf43d8041abf59db878c3a1",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1970e97b4792855abaf43d8041abf59db878c3a1",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1970e97b4792855abaf43d8041abf59db878c3a1\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "489e0d4b124905a26310c9026d83eb82eb0e57ce",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/489e0d4b124905a26310c9026d83eb82eb0e57ce",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/489e0d4b124905a26310c9026d83eb82eb0e57ce"
                },
                {
                    "sha": "5ce5560040052bcb6a23bb5de2eb5e7c9ead10e4",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/5ce5560040052bcb6a23bb5de2eb5e7c9ead10e4",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/5ce5560040052bcb6a23bb5de2eb5e7c9ead10e4"
                }
            ]
        },
        {
            "sha": "7ab633a2af81ba12c5200c98d172f6467b9c1669",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo3YWI2MzNhMmFmODFiYTEyYzUyMDBjOThkMTcyZjY0NjdiOWMxNjY5",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-28T07:44:45Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-28T07:44:45Z"
                },
                "message": "Prepare 1.8.0 changelog",
                "tree": {
                    "sha": "bf7cf7074df09bab22e176af77aeece4787d4ddc",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/bf7cf7074df09bab22e176af77aeece4787d4ddc"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/7ab633a2af81ba12c5200c98d172f6467b9c1669",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7ab633a2af81ba12c5200c98d172f6467b9c1669",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7ab633a2af81ba12c5200c98d172f6467b9c1669",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7ab633a2af81ba12c5200c98d172f6467b9c1669\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "1970e97b4792855abaf43d8041abf59db878c3a1",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/1970e97b4792855abaf43d8041abf59db878c3a1",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/1970e97b4792855abaf43d8041abf59db878c3a1"
                }
            ]
        },
        {
            "sha": "ab165cfcd6c00a46dbfb712807086fcec786f166",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphYjE2NWNmY2Q2YzAwYTQ2ZGJmYjcxMjgwNzA4NmZjZWM3ODZmMTY2",
            "commit": {
                "author": {
                    "name": "johnstevenson",
                    "email": "john-stevenson@blueyonder.co.uk",
                    "date": "2018-11-29T14:25:01Z"
                },
                "committer": {
                    "name": "johnstevenson",
                    "email": "john-stevenson@blueyonder.co.uk",
                    "date": "2018-11-29T14:25:01Z"
                },
                "message": "Update xdebug-handler, fixes #7807",
                "tree": {
                    "sha": "27e2dff5102af724311e6a3079c1bce2357ccca2",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/27e2dff5102af724311e6a3079c1bce2357ccca2"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/ab165cfcd6c00a46dbfb712807086fcec786f166",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ab165cfcd6c00a46dbfb712807086fcec786f166",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ab165cfcd6c00a46dbfb712807086fcec786f166",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ab165cfcd6c00a46dbfb712807086fcec786f166\/comments",
            "author": {
                "login": "johnstevenson",
                "id": 881777,
                "node_id": "MDQ6VXNlcjg4MTc3Nw==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/881777?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/johnstevenson",
                "html_url": "https:\/\/github.com\/johnstevenson",
                "followers_url": "https:\/\/api.github.com\/users\/johnstevenson\/followers",
                "following_url": "https:\/\/api.github.com\/users\/johnstevenson\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/johnstevenson\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/johnstevenson\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/johnstevenson\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/johnstevenson\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/johnstevenson\/repos",
                "events_url": "https:\/\/api.github.com\/users\/johnstevenson\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/johnstevenson\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "johnstevenson",
                "id": 881777,
                "node_id": "MDQ6VXNlcjg4MTc3Nw==",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/881777?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/johnstevenson",
                "html_url": "https:\/\/github.com\/johnstevenson",
                "followers_url": "https:\/\/api.github.com\/users\/johnstevenson\/followers",
                "following_url": "https:\/\/api.github.com\/users\/johnstevenson\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/johnstevenson\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/johnstevenson\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/johnstevenson\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/johnstevenson\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/johnstevenson\/repos",
                "events_url": "https:\/\/api.github.com\/users\/johnstevenson\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/johnstevenson\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "acdf8f83f1c5e0cbdd16be2325206c4b42e43679",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/acdf8f83f1c5e0cbdd16be2325206c4b42e43679",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/acdf8f83f1c5e0cbdd16be2325206c4b42e43679"
                }
            ]
        },
        {
            "sha": "a6d1cdd6d765f982d45ee161c14aa30b3bd1ed76",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzphNmQxY2RkNmQ3NjVmOTgyZDQ1ZWUxNjFjMTRhYTMwYjNiZDFlZDc2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-30T07:21:46Z"
                },
                "committer": {
                    "name": "GitHub",
                    "email": "noreply@github.com",
                    "date": "2018-11-30T07:21:46Z"
                },
                "message": "Merge pull request #7811 from johnstevenson\/update-xdebug-handler\n\nUpdate xdebug-handler, fixes #7807",
                "tree": {
                    "sha": "27e2dff5102af724311e6a3079c1bce2357ccca2",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/27e2dff5102af724311e6a3079c1bce2357ccca2"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/a6d1cdd6d765f982d45ee161c14aa30b3bd1ed76",
                "comment_count": 0,
                "verification": {
                    "verified": true,
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcAOUKCRBK7hj4Ov3rIwAAdHIIAHWocs9oB\/2WxIe3jHE7NKhk\ngSUH7vVdCaFlvAJ\/wUdfZ9dtbZm0lmphLffpemE5ao6KmsAh+J258mZz9DlLRjDO\nmhM27hAjrCoRC3wAPdhTHTtRM6hcWK6QzF1P5obPAEe6IB8GLQdB9fyIEnWQVzMI\n6rtD30Lq3gmPqTKTnmT9J0WozM1bwwsDANFOH9Dny4C00OkliIlIzROmmhdUbASE\nUP+oo+lrHtXt9ZUbVXZxCW8qVDVvDJuPwCdQTbmOMn5OMu3tOz\/ulpCFwvYRxahO\nqrE9eOK6gjHa4y37fJYDsIK6vJnvv\/FYptN4mQGhB946QVr\/BUnPnAqax7L0CZk=\n=goCq\n-----END PGP SIGNATURE-----\n",
                    "payload": "tree 27e2dff5102af724311e6a3079c1bce2357ccca2\nparent acdf8f83f1c5e0cbdd16be2325206c4b42e43679\nparent ab165cfcd6c00a46dbfb712807086fcec786f166\nauthor Jordi Boggiano <j.boggiano@seld.be> 1543562506 +0100\ncommitter GitHub <noreply@github.com> 1543562506 +0100\n\nMerge pull request #7811 from johnstevenson\/update-xdebug-handler\n\nUpdate xdebug-handler, fixes #7807"
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a6d1cdd6d765f982d45ee161c14aa30b3bd1ed76",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a6d1cdd6d765f982d45ee161c14aa30b3bd1ed76",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a6d1cdd6d765f982d45ee161c14aa30b3bd1ed76\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "web-flow",
                "id": 19864447,
                "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                "avatar_url": "https:\/\/avatars3.githubusercontent.com\/u\/19864447?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/web-flow",
                "html_url": "https:\/\/github.com\/web-flow",
                "followers_url": "https:\/\/api.github.com\/users\/web-flow\/followers",
                "following_url": "https:\/\/api.github.com\/users\/web-flow\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/web-flow\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/web-flow\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/web-flow\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/web-flow\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/web-flow\/repos",
                "events_url": "https:\/\/api.github.com\/users\/web-flow\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/web-flow\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "acdf8f83f1c5e0cbdd16be2325206c4b42e43679",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/acdf8f83f1c5e0cbdd16be2325206c4b42e43679",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/acdf8f83f1c5e0cbdd16be2325206c4b42e43679"
                },
                {
                    "sha": "ab165cfcd6c00a46dbfb712807086fcec786f166",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/ab165cfcd6c00a46dbfb712807086fcec786f166",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/ab165cfcd6c00a46dbfb712807086fcec786f166"
                }
            ]
        },
        {
            "sha": "6ed7215fedf4e1a63315ffd342fc37b61770e816",
            "node_id": "MDY6Q29tbWl0MTg2NDM2Mzo2ZWQ3MjE1ZmVkZjRlMWE2MzMxNWZmZDM0MmZjMzdiNjE3NzBlODE2",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-30T07:53:44Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-11-30T07:53:44Z"
                },
                "message": "Merge remote-tracking branch 'origin\/1.7'",
                "tree": {
                    "sha": "81af0f5e6da4991f36355485f5524bbfcf390660",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/81af0f5e6da4991f36355485f5524bbfcf390660"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/6ed7215fedf4e1a63315ffd342fc37b61770e816",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6ed7215fedf4e1a63315ffd342fc37b61770e816",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/6ed7215fedf4e1a63315ffd342fc37b61770e816",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6ed7215fedf4e1a63315ffd342fc37b61770e816\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "7ab633a2af81ba12c5200c98d172f6467b9c1669",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/7ab633a2af81ba12c5200c98d172f6467b9c1669",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/7ab633a2af81ba12c5200c98d172f6467b9c1669"
                },
                {
                    "sha": "a6d1cdd6d765f982d45ee161c14aa30b3bd1ed76",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/a6d1cdd6d765f982d45ee161c14aa30b3bd1ed76",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/a6d1cdd6d765f982d45ee161c14aa30b3bd1ed76"
                }
            ]
        },
        {
            "sha": "02ee50ac1d240dbbb3507734ef20dacb8094b000",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzowMmVlNTBhYzFkMjQwZGJiYjM1MDc3MzRlZjIwZGFjYjgwOTRiMDAw",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-12-03T09:21:52Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-12-03T09:21:52Z"
                },
                "message": "Prepare 1.8.0",
                "tree": {
                    "sha": "e523b3f47a43ec6311e7eaccf91b88d3a66b7197",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/e523b3f47a43ec6311e7eaccf91b88d3a66b7197"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/02ee50ac1d240dbbb3507734ef20dacb8094b000",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/02ee50ac1d240dbbb3507734ef20dacb8094b000",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/02ee50ac1d240dbbb3507734ef20dacb8094b000",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/02ee50ac1d240dbbb3507734ef20dacb8094b000\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "6ed7215fedf4e1a63315ffd342fc37b61770e816",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/6ed7215fedf4e1a63315ffd342fc37b61770e816",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/6ed7215fedf4e1a63315ffd342fc37b61770e816"
                }
            ]
        },
        {
            "sha": "d8aef3af866b28786ce9b8647e52c42496436669",
            "node_id": "MDY6Q29tbWl0MTg2NDM2MzpkOGFlZjNhZjg2NmIyODc4NmNlOWI4NjQ3ZTUyYzQyNDk2NDM2NjY5",
            "commit": {
                "author": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-12-03T09:31:16Z"
                },
                "committer": {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "date": "2018-12-03T09:31:16Z"
                },
                "message": "Release 1.8.0",
                "tree": {
                    "sha": "2bc4ed5d0eb44df6dccad1a4b5fe013f893d1f1c",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/trees\/2bc4ed5d0eb44df6dccad1a4b5fe013f893d1f1c"
                },
                "url": "https:\/\/api.github.com\/repos\/composer\/composer\/git\/commits\/d8aef3af866b28786ce9b8647e52c42496436669",
                "comment_count": 0,
                "verification": {
                    "verified": false,
                    "reason": "unsigned",
                    "signature": null,
                    "payload": null
                }
            },
            "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d8aef3af866b28786ce9b8647e52c42496436669",
            "html_url": "https:\/\/github.com\/composer\/composer\/commit\/d8aef3af866b28786ce9b8647e52c42496436669",
            "comments_url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/d8aef3af866b28786ce9b8647e52c42496436669\/comments",
            "author": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "committer": {
                "login": "Seldaek",
                "id": 183678,
                "node_id": "MDQ6VXNlcjE4MzY3OA==",
                "avatar_url": "https:\/\/avatars1.githubusercontent.com\/u\/183678?v=4",
                "gravatar_id": "",
                "url": "https:\/\/api.github.com\/users\/Seldaek",
                "html_url": "https:\/\/github.com\/Seldaek",
                "followers_url": "https:\/\/api.github.com\/users\/Seldaek\/followers",
                "following_url": "https:\/\/api.github.com\/users\/Seldaek\/following{\/other_user}",
                "gists_url": "https:\/\/api.github.com\/users\/Seldaek\/gists{\/gist_id}",
                "starred_url": "https:\/\/api.github.com\/users\/Seldaek\/starred{\/owner}{\/repo}",
                "subscriptions_url": "https:\/\/api.github.com\/users\/Seldaek\/subscriptions",
                "organizations_url": "https:\/\/api.github.com\/users\/Seldaek\/orgs",
                "repos_url": "https:\/\/api.github.com\/users\/Seldaek\/repos",
                "events_url": "https:\/\/api.github.com\/users\/Seldaek\/events{\/privacy}",
                "received_events_url": "https:\/\/api.github.com\/users\/Seldaek\/received_events",
                "type": "User",
                "site_admin": false
            },
            "parents": [
                {
                    "sha": "02ee50ac1d240dbbb3507734ef20dacb8094b000",
                    "url": "https:\/\/api.github.com\/repos\/composer\/composer\/commits\/02ee50ac1d240dbbb3507734ef20dacb8094b000",
                    "html_url": "https:\/\/github.com\/composer\/composer\/commit\/02ee50ac1d240dbbb3507734ef20dacb8094b000"
                }
            ]
        }
    ],
    "files": [
        {
            "sha": "32378b23eaee61746dfc15cfac030ce452e28c12",
            "filename": ".gitattributes",
            "status": "modified",
            "additions": 3,
            "deletions": 0,
            "changes": 3,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/.gitattributes",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/.gitattributes",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/.gitattributes?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -7,3 +7,6 @@\n *.json  text eol=lf whitespace=blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent,tabwidth=4\n *.test  text eol=lf whitespace=blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent,tabwidth=4\n *.yml   text eol=lf whitespace=blank-at-eol,blank-at-eof,space-before-tab,tab-in-indent,tabwidth=2\n+\n+# Exclude non-essential files from dist\n+\/tests export-ignore"
        },
        {
            "sha": "a0fd0ce5495f6b24839a81e5c18c3e0e3f881b5a",
            "filename": ".github\/CONTRIBUTING.md",
            "status": "modified",
            "additions": 5,
            "deletions": 0,
            "changes": 5,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/.github\/CONTRIBUTING.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/.github\/CONTRIBUTING.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/.github\/CONTRIBUTING.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -21,6 +21,11 @@ If your issue involves installing, updating or resolving dependencies, the\n chance of us being able to reproduce your issue will be much higher if you\n share your `composer.json` with us.\n \n+Coding Style Fixes\n+------------------\n+\n+We do not accept CS fixes pull requests. Fixes are done by the project maintainers when appropriate to avoid causing too many unnecessary conflicts between branches and pull requests.\n+\n Security Reports\n ----------------\n "
        },
        {
            "sha": "ac954ab5e3118d930f57dc677e510c4bc09dea24",
            "filename": ".php_cs",
            "status": "modified",
            "additions": 10,
            "deletions": 12,
            "changes": 22,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/.php_cs",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/.php_cs",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/.php_cs?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,35 +12,33 @@ EOF;\n \n $finder = PhpCsFixer\\Finder::create()\n     ->files()\n-    ->name('*.php')\n-    ->exclude('Fixtures')\n     ->in(__DIR__.'\/src')\n     ->in(__DIR__.'\/tests')\n+    ->name('*.php')\n+    ->notPath('Fixtures')\n ;\n \n return PhpCsFixer\\Config::create()\n     ->setUsingCache(true)\n-    \/\/->setUsingLinter(false)\n     ->setRiskyAllowed(true)\n     ->setRules(array(\n         '@PSR2' => true,\n+        'array_syntax' => array('syntax' => 'long'),\n         'binary_operator_spaces' => true,\n-        'blank_line_before_return' => true,\n-        'cast_spaces' => true,\n+        'blank_line_before_statement' => array('statements' => array('declare', 'return')),\n+        'cast_spaces' => array('space' => 'single'),\n         'header_comment' => array('header' => $header),\n         'include' => true,\n-        'long_array_syntax' => true,\n-        'method_separation' => true,\n+        'class_attributes_separation' => array('elements' => array('method')),\n         'no_blank_lines_after_class_opening' => true,\n         'no_blank_lines_after_phpdoc' => true,\n-        'no_blank_lines_between_uses' => true,\n-        'no_duplicate_semicolons' => true,\n+        'no_empty_statement' => true,\n         'no_extra_consecutive_blank_lines' => true,\n         'no_leading_import_slash' => true,\n         'no_leading_namespace_whitespace' => true,\n         'no_trailing_comma_in_singleline_array' => true,\n         'no_unused_imports' => true,\n-        'no_whitespace_in_blank_lines' => true,\n+        'no_whitespace_in_blank_line' => true,\n         'object_operator_without_whitespace' => true,\n         'phpdoc_align' => true,\n         'phpdoc_indent' => true,\n@@ -49,12 +47,12 @@ return PhpCsFixer\\Config::create()\n         'phpdoc_order' => true,\n         'phpdoc_scalar' => true,\n         'phpdoc_trim' => true,\n-        'phpdoc_type_to_var' => true,\n+        'phpdoc_types' => true,\n         'psr0' => true,\n         'single_blank_line_before_namespace' => true,\n         'standardize_not_equals' => true,\n         'ternary_operator_spaces' => true,\n         'trailing_comma_in_multiline_array' => true,\n     ))\n-    ->finder($finder)\n+    ->setFinder($finder)\n ;"
        },
        {
            "sha": "c1511b6c3e0a36bc93ba11abde38a870b389a455",
            "filename": ".travis.yml",
            "status": "modified",
            "additions": 43,
            "deletions": 8,
            "changes": 51,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/.travis.yml",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/.travis.yml",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/.travis.yml?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -2,6 +2,11 @@ language: php\n \n sudo: false\n \n+dist: trusty\n+\n+git:\n+  depth: 5\n+\n cache:\n   directories:\n     - $HOME\/.composer\/cache\n@@ -12,30 +17,60 @@ addons:\n       - parallel\n \n php:\n-  - 5.3\n   - 5.4\n   - 5.5\n   - 5.6\n   - 7.0\n   - 7.1\n-  - hhvm\n+  - 7.2\n+  - 7.3\n   - nightly\n \n matrix:\n+  include:\n+    - php: 5.3\n+      dist: precise\n+    - php: 7.3\n+      env: deps=high\n   fast_finish: true\n   allow_failures:\n     - php: nightly\n \n-before_script:\n-    - rm -f ~\/.phpenv\/versions\/$(phpenv version-name)\/etc\/conf.d\/xdebug.ini\n-    - flags=\"--prefer-dist\"\n+before_install:\n+    # disable xdebug if available\n+    - phpenv config-rm xdebug.ini || echo \"xdebug not available\"\n+    # disable default memory limit\n+    - export INI=~\/.phpenv\/versions\/$(phpenv version-name)\/etc\/conf.d\/travis.ini\n+    - echo memory_limit = -1 >> $INI\n+\n+install:\n+    # flags to pass to install\n+    - flags=\"--ansi --prefer-dist --no-interaction --optimize-autoloader --no-suggest --no-progress\"\n+    # update deps to latest in case of high deps build\n+    - if [ \"$deps\" == \"high\" ]; then composer config platform.php 7.2.4; composer update $flags; fi\n+    # install dependencies using system provided composer binary\n     - composer install $flags\n+    # install dependencies using composer from source\n     - bin\/composer install $flags\n+\n+before_script:\n+    # make sure git tests do not complain about user\/email not being set\n     - git config --global user.name travis-ci\n     - git config --global user.email travis@example.com\n \n script:\n-    - ls -d tests\/Composer\/Test\/* | parallel --gnu --keep-order 'echo \"Running {} tests\"; .\/vendor\/bin\/phpunit -c tests\/complete.phpunit.xml --colors=always {} || (echo -e \"\\e[41mFAILED\\e[0m {}\" && $(exit 1));'\n+    # run test suite directories in parallel using GNU parallel\n+    - ls -d tests\/Composer\/Test\/* | grep -v TestCase.php | parallel --gnu --keep-order 'echo \"Running {} tests\"; .\/vendor\/bin\/phpunit -c tests\/complete.phpunit.xml --colors=always {} || (echo -e \"\\e[41mFAILED\\e[0m {}\" && exit 1);'\n \n-git:\n-  depth: 5\n+before_deploy:\n+    - php -d phar.readonly=0 bin\/compile\n+\n+deploy:\n+  provider: releases\n+  api_key: $GITHUB_TOKEN\n+  file: composer.phar\n+  skip_cleanup: true\n+  on:\n+    tags: true\n+    repo: composer\/composer\n+    php:  '7.2'"
        },
        {
            "sha": "cf06a0fd4c788116e92637a6d48f5e659bafd8f8",
            "filename": "CHANGELOG.md",
            "status": "modified",
            "additions": 253,
            "deletions": 2,
            "changes": 255,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/CHANGELOG.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/CHANGELOG.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/CHANGELOG.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,3 +1,228 @@\n+### [1.8.0] 2018-12-03\n+\n+  * Changed `post-package-install` \/ `post-package-update` event to be fired *after* the lock file has been updated as opposed to before\n+  * Added support for removing packages using a wildcard with the `remove` command, e.g. `composer remove foo\/*`\n+  * Added `chat` to the list of `support` channels you can list in composer.json\n+  * Added signal handling on require command to restore the composer.json in case of abort\n+  * Added `--ignore` to `outdated` command to pass one or more packages that you do not want to be listed\n+  * Added `--no-dev` to `check-platform-reqs` command to skip dev requirements even if they are installed\n+  * Added support for running plugin commands from sub-directories within a project much like other Composer commands\n+  * Added support for running Composer via phpdbg\n+  * Added `lib-imagick` platform package\n+  * Fixed validate command always checking for disabled checks when used with `--strict`\n+\n+### [1.7.3] 2018-11-01\n+\n+  * Fixed handling of replace\/conflict rules. This may affect dependency resolution in some edge cases.\n+  * Fixed Bitbucket API support and migrated all calls to API v2 as v1 is deprecated\n+  * Fixed support for lib-openssl 1.1.1 having only lowercase algorithm names\n+  * Fixed escaping of URLs in Perforce and Svn drivers\n+  * Fixed `show` command not respecting `--path` when a single package name was given\n+  * Fixed regression in 1.7.2's handling of metapackages\n+\n+### [1.7.2] 2018-08-16\n+\n+  * Fixed reporting of authentication\/rate limiting issues for GitHub API access\n+  * Fixed `create-project` not checking the checking the latest commit out when a cache was already present\n+  * Fixed reporting of errors when `global` command can not switch the working directory\n+  * Fixed PHP 5.3 JSON encoding issues with complex unicode character sequences\n+  * Updated to latest ca-bundle and xdebug-handler projects, see related changelogs\n+\n+### [1.7.1] 2018-08-07\n+\n+  * Fixed issue autoloading plugins in require-dev in some conditions\n+  * Fixed handling of SSL to repo.packagist.org on very old PHP versions\n+\n+### [1.7.0] 2018-08-03\n+\n+  * Added the overridden platform config's PHP version in the `diagnose` command output\n+  * Fixed --no-plugins not being respected in a few commands\n+  * Fixed 1.7.0-RC regression in output showing <warn> instead of proper colors\n+  * Fixed 1.7.0-RC regression in output missing \"Loading from cache\" output on package install\n+\n+### [1.7.0-RC] 2018-07-24\n+\n+  * Changed default repository URL from packagist.org to repo.packagist.org, this might affect people with strict firewall rules\n+  * Changed output from Updating to Downgrading when performing package downgrades, this might affect anything parsing output\n+  * Several minor performance improvements\n+  * Added basic authentication support for mercurial repos\n+  * Added explicit `i` and `u` aliases for the `install` and `update` commands\n+  * Added support for `show` command to output json format with --tree\n+  * Added support for {glob,braces} support in the path repository's path argument\n+  * Added support in `status` command for showing diffs in vendor dir even for packages installed as dist\/zip archives\n+  * Added `--remove-vcs` flag to `create-project` command to avoid prompting for keeping VCS files\n+  * Added `--no-secure-http` flag to `create-project` command to bypass https (use at your own risk)\n+  * Added `pre-command-run` event that lets plugins modify arguments\n+  * Added RemoteFilesystem::getRemoteContents extension point\n+  * Fixed setting scripts via `config` command\n+\n+### [1.6.5] 2018-05-04\n+\n+  * Fixed regression in 1.6.4 causing strange update behaviors with dev packages\n+  * Fixed regression in 1.6.4 color support detection for Windows\n+  * Fixed issues dealing with broken symlinks when switching branches and using path repositories\n+  * Fixed JSON schema for package repositories\n+  * Fixed issues on computers set to Turkish locale\n+  * Fixed classmap parsing of files using short-open-tags when they are disabled in php\n+\n+### [1.6.4] 2018-04-13\n+\n+  * Security fixes in some edge case scenarios, recommended update for all users\n+  * Fixed regression in version guessing of path repositories\n+  * Fixed removing aliased packages from the repository, which might resolve some odd update bugs\n+  * Fixed updating of package URLs for GitLab\n+  * Fixed run-script --list failing when script handlers were defined\n+  * Fixed init command not respecting the current php version when selecting package versions\n+  * Fixed handling of uppercase package names in why\/why-not commands\n+  * Fixed exclude-from-classmap symlink handling\n+  * Fixed filesystem permissions of PEAR binaries\n+  * Improved performance of subversion repos\n+  * Other minor fixes\n+\n+### [1.6.3] 2018-01-31\n+\n+  * Fixed GitLab downloads failing in some edge cases\n+  * Fixed ctrl-C handling during create-project\n+  * Fixed GitHub VCS repositories not prompting for a token in some conditions\n+  * Fixed SPDX license identifiers being case sensitive\n+  * Fixed and clarified a few dependency resolution error reporting strings\n+  * Fixed SVN commit log fetching in verbose mode when using private repositories\n+\n+### [1.6.2] 2018-01-05\n+\n+  * Fixed more autoloader regressions\n+  * Fixed support for updating dist refs in gitlab URLs\n+\n+### [1.6.1] 2018-01-04\n+\n+  * Fixed upgrade regression due to some autoloader cleanups\n+  * Fixed some overly loose version constraints\n+\n+### [1.6.0] 2018-01-04\n+\n+  * Added support for SPDX license identifiers v3.0, deprecates GPL\/LGPL\/AGPL identifiers, which should now have a `-only` or `-or-later` suffix added.\n+  * Added support for COMPOSER_MEMORY_LIMIT env var to make Composer set the PHP memory limit explicitly\n+  * Added support for simple strings for the `bin`\n+  * Fixed `check-platform-reqs` bug in version checking\n+\n+### [1.6.0-RC] 2017-12-19\n+\n+  * Improved performance of installs and updates from git clones when checking out known commits\n+  * Added `check-platform-reqs` command that checks that your PHP and extensions versions match the platform requirements of the installed packages\n+  * Added `--with-all-dependencies` to the `update` and `require` commands which updates all dependencies of the listed packages, including those that are direct root requirements\n+  * Added `scripts-descriptions` key to composer.json to customize the description and document your custom commands\n+  * Added support for the uppercase NO_PROXY env var\n+  * Added support for COMPOSER_DEFAULT_{AUTHOR,LICENSE,EMAIL,VENDOR} env vars to pre-populate init command values\n+  * Added support for local fossil repositories\n+  * Added suggestions for alternative spellings when entering packages in `init` and `require` commands and nothing can be found\n+  * Fixed installed.json data to be sorted alphabetically by package name\n+  * Fixed compatibility with Symfony 4.x components that Composer uses\n+\n+### [1.5.6] - 2017-12-18\n+\n+  * Fixed root package version guessed when a tag is checked out\n+  * Fixed support for GitLab repos hosted on non-standard ports\n+  * Fixed regression in require command when requiring unstable packages, part 3\n+\n+### [1.5.5] - 2017-12-01\n+\n+  * Fixed regression in require command when requiring unstable packages, part 2\n+\n+### [1.5.4] - 2017-12-01\n+\n+  * Fixed regression in require command when requiring unstable packages\n+\n+### [1.5.3] - 2017-11-30\n+\n+  * Fixed require\/remove commands reverting the composer.json change when a non-solver-related error occurs\n+  * Fixed GitLabDriver to support installations of GitLab not at the root of the domain\n+  * Fixed create-project not following the optimize-autoloader flag of the root package\n+  * Fixed Authorization header being forwarded across domains after a redirect\n+  * Improved some error messages for clarity\n+\n+### [1.5.2] - 2017-09-11\n+\n+  * Fixed GitLabDriver looping endlessly in some conditions\n+  * Fixed GitLabDriver support for unauthenticated requests\n+  * Fixed GitLab zip downloads not triggering credentials prompt if unauthenticated\n+  * Fixed path repository support of COMPOSER_ROOT_VERSION, it now applies to all path repos within the same git repository\n+  * Fixed path repository handling of copies to avoid copying VCS files and others\n+  * Fixed sub-directory call to ignore list and create-project commands as well as calls to Composer using --working-dir\n+  * Fixed invalid warning appearing when calling `remove` on an non-stable package\n+\n+### [1.5.1] - 2017-08-09\n+\n+  * Fixed regression in GitLabDriver with repos containing >100 branches or tags\n+  * Fixed sub-directory call support to respect the COMPOSER env var\n+\n+### [1.5.0] - 2017-08-08\n+\n+  * Changed the package install order to ensure that plugins are always installed as soon as possible\n+  * Added ability to call composer from within sub-directories of a project\n+  * Added support for GitLab API v4\n+  * Added support for GitLab sub-groups\n+  * Added some more rules to composer validate\n+  * Added support for reading the `USER` env when guessing the username in `composer init`\n+  * Added warning when uncompressing files with the same name but difference cases on case insensitive filesystems\n+  * Added `htaccess-protect` option \/ `COMPOSER_HTACCESS_PROTECT` env var to disable the .htaccess creation in home dir (defaults to true)\n+  * Improved `clear-cache` command\n+  * Minor improvements\/fixes and many documentation updates\n+\n+### [1.4.3] - 2017-08-06\n+\n+  * Fixed GitLab URLs\n+  * Fixed root package version detection using latest git versions\n+  * Fixed inconsistencies in date format in composer.lock when installing from source\n+  * Fixed Mercurial support regression\n+  * Fixed exclude-from-classmap not being applied when autoloading files for Composer plugins\n+  * Fixed exclude-from-classmap being ignored when cwd has the wrong case on case insensitive filesystems\n+  * Fixed several other minor issues\n+\n+### [1.4.2] - 2017-05-17\n+\n+  * Fixed Bitbucket API handler parsing old deleted branches in hg repos\n+  * Fixed regression in gitlab downloads\n+  * Fixed output inconsistencies\n+  * Fixed unicode handling in `init` command for author names\n+  * Fixed useless warning when doing partial updates\/removes on packages that are not currently installed\n+  * Fixed xdebug disabling issue when combined with disable_functions and allow_url_fopen CLI overrides\n+\n+### [1.4.1] - 2017-03-10\n+\n+  * Fixed `apcu-autoloader` config option being ignored in `dump-autoload` command\n+  * Fixed json validation not allowing boolean for trunk-path, branches-path and tags-path in svn repos\n+  * Fixed json validation not allowing repository URLs without scheme\n+\n+### [1.4.0] - 2017-03-08\n+\n+  * Improved memory usage of dependency solver\n+  * Added `--format json` option to the `outdated` and `show` command to get machine readable package listings\n+  * Added `--ignore-filters` flag to `archive` command to bypass the .gitignore and co\n+  * Added support for `outdated` output without ansi colors\n+  * Added support for Bitbucket API v2\n+  * Changed the require command to follow minimum-stability \/ prefer-stable values when picking a version\n+  * Fixed regression when using composer in a Mercurial repository\n+\n+### [1.3.3] - 2017-03-08\n+\n+  * **Capifony users beware**: This release has output format tweaks that mess up capifony interactive mode, see #6233\n+  * Improved baseline psr-4 autoloader performance for projects with many nested namespaces configured\n+  * Fixed issues with gitlab API access when the token had insufficient permissions\n+  * Fixed some HHVM strict type issues\n+  * Fixed version guessing of headless git checkouts in some conditions\n+  * Fixed compatibility with subversion 1.8\n+  * Fixed version guessing not working with svn\/hg\n+  * Fixed script\/exec errors not being output correctly\n+  * Fixed PEAR repository bug with pear.php.net\n+\n+### [1.3.2] - 2017-01-27\n+\n+  * Added `COMPOSER_BINARY` env var that is defined within the scope of a Composer run automatically with the path to the phar file\n+  * Fixed create-project ending in a detached HEAD when installing aliased packages\n+  * Fixed composer show not returning non-zero exit code when the package does not exist\n+  * Fixed `@composer` handling in scripts when --working-dir is used together with it\n+  * Fixed private-GitLab handling of repos with dashes in them\n+\n ### [1.3.1] - 2017-01-07\n \n   * Fixed dist downloads from Bitbucket\n@@ -25,7 +250,7 @@\n   * Added `COMPOSER_MIRROR_PATH_REPOS` env var to force mirroring of path repositories vs symlinking\n   * Added `COMPOSER_DEV_MODE` env var that is set by Composer to forward the dev mode to script handlers\n   * Fixed support for git 2.11\n-  * Fixed output from zip and rar leaking out when an error occured\n+  * Fixed output from zip and rar leaking out when an error occurred\n   * Removed `hash` from composer.lock, only `content-hash` is now used which should reduce conflicts\n   * Minor fixes and performance improvements\n \n@@ -460,7 +685,7 @@\n   * Added autoloading support for root packages that use target-dir\n   * Added awareness of the root package presence and support for it's provide\/replace\/conflict keys\n   * Added IOInterface::isDecorated to test for colored output support\n-  * Added validation of licenses based on the [SPDX registry](http:\/\/www.spdx.org\/licenses\/)\n+  * Added validation of licenses based on the [SPDX registry](https:\/\/spdx.org\/licenses\/)\n   * Improved repository protocol to have large cacheable parts\n   * Fixed various bugs relating to package aliasing, proxy configuration, binaries\n   * Various bug fixes and docs improvements\n@@ -484,6 +709,32 @@\n \n   * Initial release\n \n+[1.8.0]: https:\/\/github.com\/composer\/composer\/compare\/1.7.3...1.8.0\n+[1.7.3]: https:\/\/github.com\/composer\/composer\/compare\/1.7.2...1.7.3\n+[1.7.2]: https:\/\/github.com\/composer\/composer\/compare\/1.7.1...1.7.2\n+[1.7.1]: https:\/\/github.com\/composer\/composer\/compare\/1.7.0...1.7.1\n+[1.7.0]: https:\/\/github.com\/composer\/composer\/compare\/1.7.0-RC...1.7.0\n+[1.7.0-RC]: https:\/\/github.com\/composer\/composer\/compare\/1.6.5...1.7.0-RC\n+[1.6.5]: https:\/\/github.com\/composer\/composer\/compare\/1.6.4...1.6.5\n+[1.6.4]: https:\/\/github.com\/composer\/composer\/compare\/1.6.3...1.6.4\n+[1.6.3]: https:\/\/github.com\/composer\/composer\/compare\/1.6.2...1.6.3\n+[1.6.2]: https:\/\/github.com\/composer\/composer\/compare\/1.6.1...1.6.2\n+[1.6.1]: https:\/\/github.com\/composer\/composer\/compare\/1.6.0...1.6.1\n+[1.6.0]: https:\/\/github.com\/composer\/composer\/compare\/1.6.0-RC...1.6.0\n+[1.6.0-RC]: https:\/\/github.com\/composer\/composer\/compare\/1.5.6...1.6.0-RC\n+[1.5.6]: https:\/\/github.com\/composer\/composer\/compare\/1.5.5...1.5.6\n+[1.5.5]: https:\/\/github.com\/composer\/composer\/compare\/1.5.4...1.5.5\n+[1.5.4]: https:\/\/github.com\/composer\/composer\/compare\/1.5.3...1.5.4\n+[1.5.3]: https:\/\/github.com\/composer\/composer\/compare\/1.5.2...1.5.3\n+[1.5.2]: https:\/\/github.com\/composer\/composer\/compare\/1.5.1...1.5.2\n+[1.5.1]: https:\/\/github.com\/composer\/composer\/compare\/1.5.0...1.5.1\n+[1.5.0]: https:\/\/github.com\/composer\/composer\/compare\/1.4.3...1.5.0\n+[1.4.3]: https:\/\/github.com\/composer\/composer\/compare\/1.4.2...1.4.3\n+[1.4.2]: https:\/\/github.com\/composer\/composer\/compare\/1.4.1...1.4.2\n+[1.4.1]: https:\/\/github.com\/composer\/composer\/compare\/1.4.0...1.4.1\n+[1.4.0]: https:\/\/github.com\/composer\/composer\/compare\/1.3.3...1.4.0\n+[1.3.3]: https:\/\/github.com\/composer\/composer\/compare\/1.3.2...1.3.3\n+[1.3.2]: https:\/\/github.com\/composer\/composer\/compare\/1.3.1...1.3.2\n [1.3.1]: https:\/\/github.com\/composer\/composer\/compare\/1.3.0...1.3.1\n [1.3.0]: https:\/\/github.com\/composer\/composer\/compare\/1.3.0-RC...1.3.0\n [1.3.0-RC]: https:\/\/github.com\/composer\/composer\/compare\/1.2.4...1.3.0-RC"
        },
        {
            "sha": "c538df803c272a7bda030791f7f256a280732733",
            "filename": "README.md",
            "status": "modified",
            "additions": 1,
            "deletions": 5,
            "changes": 6,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/README.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/README.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/README.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,13 +1,11 @@\n Composer - Dependency Management for PHP\n ========================================\n \n-Composer helps you declare, manage and install dependencies of PHP projects.\n+Composer helps you declare, manage, and install dependencies of PHP projects.\n \n See [https:\/\/getcomposer.org\/](https:\/\/getcomposer.org\/) for more information and documentation.\n \n [![Build Status](https:\/\/travis-ci.org\/composer\/composer.svg?branch=master)](https:\/\/travis-ci.org\/composer\/composer)\n-[![Dependency Status](https:\/\/www.versioneye.com\/php\/composer:composer\/dev-master\/badge.svg)](https:\/\/www.versioneye.com\/php\/composer:composer\/dev-master)\n-[![Reference Status](https:\/\/www.versioneye.com\/php\/composer:composer\/reference_badge.svg?style=flat)](https:\/\/www.versioneye.com\/php\/composer:composer\/references)\n \n Installation \/ Usage\n --------------------\n@@ -62,5 +60,3 @@ Acknowledgments\n \n - This project's Solver started out as a PHP port of openSUSE's\n   [Libzypp satsolver](https:\/\/en.opensuse.org\/openSUSE:Libzypp_satsolver).\n-- This project uses hiddeninput.exe to prompt for passwords on windows, sources\n-  and details can be found on the [github page of the project](https:\/\/github.com\/Seldaek\/hidden-input)."
        },
        {
            "sha": "e7c20c9e624d1393271dc20c6341d8f972560659",
            "filename": "appveyor.yml",
            "status": "modified",
            "additions": 21,
            "deletions": 23,
            "changes": 44,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/appveyor.yml",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/appveyor.yml",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/appveyor.yml?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,35 +1,33 @@\n build: false\n-shallow_clone: true\n-platform:\n-  - x86\n-  - x64\n-clone_folder: c:\\projects\\composer\n+clone_depth: 5\n+\n+environment:\n+  # This sets the PHP version (from Chocolatey)\n+  PHPCI_CHOCO_VERSION: 7.2.9\n+  PHPCI_CACHE: C:\\tools\\phpci\n+  PHPCI_PHP: C:\\tools\\phpci\\php\n+  PHPCI_COMPOSER: C:\\tools\\phpci\\composer\n \n cache:\n-  - c:\\tools\\php -> appveyor.yml\n+  - '%PHPCI_CACHE% -> appveyor.yml'\n \n init:\n-  - SET PATH=C:\\Program Files\\OpenSSL;c:\\tools\\php;%PATH%\n+  - SET PATH=%PHPCI_PHP%;%PHPCI_COMPOSER%;%PATH%\n+  - SET COMPOSER_HOME=%PHPCI_COMPOSER%\\home\n+  - SET COMPOSER_CACHE_DIR=%PHPCI_COMPOSER%\\cache\n   - SET COMPOSER_NO_INTERACTION=1\n-  - SET PHP=1\n+  - SET PHP=0\n   - SET ANSICON=121x90 (121x90)\n \n install:\n-  - IF EXIST c:\\tools\\php (SET PHP=0)\n-  - IF %PHP%==1 cinst -y OpenSSL.Light\n-  - IF %PHP%==1 cinst -y php\n-  - cd c:\\tools\\php\n-  - IF %PHP%==1 copy php.ini-production php.ini \/Y\n-  - IF %PHP%==1 echo date.timezone=\"UTC\" >> php.ini\n-  - IF %PHP%==1 echo extension_dir=ext >> php.ini\n-  - IF %PHP%==1 echo extension=php_openssl.dll >> php.ini\n-  - IF %PHP%==1 echo extension=php_mbstring.dll >> php.ini\n-  - IF %PHP%==1 echo extension=php_fileinfo.dll >> php.ini\n-  - IF %PHP%==1 echo @php %%~dp0composer.phar %%* > composer.bat\n-  - appveyor DownloadFile https:\/\/getcomposer.org\/composer.phar\n-  - cd c:\\projects\\composer\n+  - IF EXIST %PHPCI_CACHE% (SET PHP=1)\n+  - IF %PHP%==0 cinst php -i -y --version %PHPCI_CHOCO_VERSION%  --params \"\/InstallDir:%PHPCI_PHP%\"\n+  - IF %PHP%==0 cinst composer -i -y --ia \"\/DEV=%PHPCI_COMPOSER%\"\n+  - php -v\n+  - IF %PHP%==0 (composer --version) ELSE (composer self-update)\n+  - cd %APPVEYOR_BUILD_FOLDER%\n   - composer install --prefer-dist --no-progress\n \n test_script:\n-  - cd c:\\projects\\composer\n-  - vendor\/bin\/phpunit --colors=always\n+  - cd %APPVEYOR_BUILD_FOLDER%\n+  - vendor\\bin\\phpunit --colors=always"
        },
        {
            "sha": "5e142662cbfcff92dbc3e6e3137d5e911f537dad",
            "filename": "bin\/composer",
            "status": "modified",
            "additions": 12,
            "deletions": 8,
            "changes": 20,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/bin\/composer",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/bin\/composer",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/bin\/composer?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,22 +1,20 @@\n #!\/usr\/bin\/env php\n <?php\n \n-if (PHP_SAPI !== 'cli') {\n+if (PHP_SAPI !== 'cli' && PHP_SAPI !== 'phpdbg') {\n     echo 'Warning: Composer should be invoked via the CLI version of PHP, not the '.PHP_SAPI.' SAPI'.PHP_EOL;\n }\n \n+setlocale(LC_ALL, 'C');\n require __DIR__.'\/..\/src\/bootstrap.php';\n \n-use Composer\\Factory;\n-use Composer\\XdebugHandler;\n use Composer\\Console\\Application;\n+use Composer\\XdebugHandler\\XdebugHandler;\n \n error_reporting(-1);\n \n-\/\/ Create output for XdebugHandler and Application\n-$output = Factory::createOutput();\n-\n-$xdebug = new XdebugHandler($output);\n+\/\/ Restart without xdebug\n+$xdebug = new XdebugHandler('Composer', '--ansi');\n $xdebug->check();\n unset($xdebug);\n \n@@ -45,9 +43,15 @@ if (function_exists('ini_set')) {\n     if ($memoryLimit != -1 && $memoryInBytes($memoryLimit) < 1024 * 1024 * 1536) {\n         @ini_set('memory_limit', '1536M');\n     }\n+    \/\/ Set user defined memory limit\n+    if ($memoryLimit = getenv('COMPOSER_MEMORY_LIMIT')) {\n+        @ini_set('memory_limit', $memoryLimit);\n+    }\n     unset($memoryInBytes, $memoryLimit);\n }\n \n+putenv('COMPOSER_BINARY='.realpath($_SERVER['argv'][0]));\n+\n \/\/ run the command application\n $application = new Application();\n-$application->run(null, $output);\n+$application->run();"
        },
        {
            "sha": "3a1efaa17b70a1c74ee972f0e1034c1ed64f7487",
            "filename": "composer.json",
            "status": "modified",
            "additions": 39,
            "deletions": 26,
            "changes": 65,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/composer.json",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/composer.json",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/composer.json?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,9 +1,13 @@\n {\n     \"name\": \"composer\/composer\",\n+    \"type\": \"library\",\n     \"description\": \"Composer helps you declare, manage and install dependencies of PHP projects, ensuring you have the right stack everywhere.\",\n-    \"keywords\": [\"package\", \"dependency\", \"autoload\"],\n+    \"keywords\": [\n+        \"package\",\n+        \"dependency\",\n+        \"autoload\"\n+    ],\n     \"homepage\": \"https:\/\/getcomposer.org\/\",\n-    \"type\": \"library\",\n     \"license\": \"MIT\",\n     \"authors\": [\n         {\n@@ -17,52 +21,61 @@\n             \"homepage\": \"http:\/\/seld.be\"\n         }\n     ],\n-    \"support\": {\n-        \"irc\": \"irc:\/\/irc.freenode.org\/composer\",\n-        \"issues\": \"https:\/\/github.com\/composer\/composer\/issues\"\n-    },\n     \"require\": {\n         \"php\": \"^5.3.2 || ^7.0\",\n-        \"justinrainbow\/json-schema\": \"^3.0 || ^4.0\",\n         \"composer\/ca-bundle\": \"^1.0\",\n         \"composer\/semver\": \"^1.0\",\n-        \"composer\/spdx-licenses\": \"^1.0\",\n+        \"composer\/spdx-licenses\": \"^1.2\",\n+        \"composer\/xdebug-handler\": \"^1.1\",\n+        \"justinrainbow\/json-schema\": \"^3.0 || ^4.0 || ^5.0\",\n+        \"psr\/log\": \"^1.0\",\n         \"seld\/jsonlint\": \"^1.4\",\n-        \"symfony\/console\": \"^2.7 || ^3.0\",\n-        \"symfony\/finder\": \"^2.7 || ^3.0\",\n-        \"symfony\/process\": \"^2.7 || ^3.0\",\n-        \"symfony\/filesystem\": \"^2.7 || ^3.0\",\n         \"seld\/phar-utils\": \"^1.0\",\n-        \"seld\/cli-prompt\": \"^1.0\",\n-        \"psr\/log\": \"^1.0\"\n+        \"symfony\/console\": \"^2.7 || ^3.0 || ^4.0\",\n+        \"symfony\/filesystem\": \"^2.7 || ^3.0 || ^4.0\",\n+        \"symfony\/finder\": \"^2.7 || ^3.0 || ^4.0\",\n+        \"symfony\/process\": \"^2.7 || ^3.0 || ^4.0\"\n+    },\n+    \"conflict\": {\n+        \"symfony\/console\": \"2.8.38\"\n     },\n     \"require-dev\": {\n-        \"phpunit\/phpunit\": \"^4.5 || ^5.0.5\",\n+        \"phpunit\/phpunit\": \"^4.8.35 || ^5.7\",\n         \"phpunit\/phpunit-mock-objects\": \"^2.3 || ^3.0\"\n     },\n+    \"suggest\": {\n+        \"ext-openssl\": \"Enabling the openssl extension allows you to access https URLs for repositories and packages\",\n+        \"ext-zip\": \"Enabling the zip extension allows you to unzip archives\",\n+        \"ext-zlib\": \"Allow gzip compression of HTTP requests\"\n+    },\n     \"config\": {\n         \"platform\": {\n             \"php\": \"5.3.9\"\n         }\n     },\n-    \"suggest\": {\n-        \"ext-zip\": \"Enabling the zip extension allows you to unzip archives\",\n-        \"ext-zlib\": \"Allow gzip compression of HTTP requests\",\n-        \"ext-openssl\": \"Enabling the openssl extension allows you to access https URLs for repositories and packages\"\n+    \"extra\": {\n+        \"branch-alias\": {\n+            \"dev-master\": \"1.8-dev\"\n+        }\n     },\n     \"autoload\": {\n-        \"psr-4\": { \"Composer\\\\\": \"src\/Composer\" }\n+        \"psr-4\": {\n+            \"Composer\\\\\": \"src\/Composer\"\n+        }\n     },\n     \"autoload-dev\": {\n-        \"psr-4\": { \"Composer\\\\Test\\\\\": \"tests\/Composer\/Test\" }\n-    },\n-    \"bin\": [\"bin\/composer\"],\n-    \"extra\": {\n-        \"branch-alias\": {\n-            \"dev-master\": \"1.4-dev\"\n+        \"psr-4\": {\n+            \"Composer\\\\Test\\\\\": \"tests\/Composer\/Test\"\n         }\n     },\n+    \"bin\": [\n+        \"bin\/composer\"\n+    ],\n     \"scripts\": {\n         \"test\": \"phpunit\"\n+    },\n+    \"support\": {\n+        \"issues\": \"https:\/\/github.com\/composer\/composer\/issues\",\n+        \"irc\": \"irc:\/\/irc.freenode.org\/composer\"\n     }\n }"
        },
        {
            "sha": "957382bc6476b84cdd0b866ecd9c26321ab4441d",
            "filename": "composer.lock",
            "status": "modified",
            "additions": 241,
            "deletions": 179,
            "changes": 420,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/composer.lock",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/composer.lock",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/composer.lock?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,23 +1,23 @@\n {\n     \"_readme\": [\n         \"This file locks the dependencies of your project to a known state\",\n-        \"Read more about it at https:\/\/getcomposer.org\/doc\/01-basic-usage.md#composer-lock-the-lock-file\",\n+        \"Read more about it at https:\/\/getcomposer.org\/doc\/01-basic-usage.md#installing-dependencies\",\n         \"This file is @generated automatically\"\n     ],\n-    \"content-hash\": \"e18501d127e13e3619f80abbcf372c81\",\n+    \"content-hash\": \"e46280c4cfd37bf3ec8be36095feb20e\",\n     \"packages\": [\n         {\n             \"name\": \"composer\/ca-bundle\",\n-            \"version\": \"1.0.6\",\n+            \"version\": \"1.1.3\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/composer\/ca-bundle.git\",\n-                \"reference\": \"a795611394b3c05164fd0eb291b492b39339cba4\"\n+                \"reference\": \"8afa52cd417f4ec417b4bfe86b68106538a87660\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/composer\/ca-bundle\/zipball\/a795611394b3c05164fd0eb291b492b39339cba4\",\n-                \"reference\": \"a795611394b3c05164fd0eb291b492b39339cba4\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/composer\/ca-bundle\/zipball\/8afa52cd417f4ec417b4bfe86b68106538a87660\",\n+                \"reference\": \"8afa52cd417f4ec417b4bfe86b68106538a87660\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n@@ -26,11 +26,9 @@\n                 \"php\": \"^5.3.2 || ^7.0\"\n             },\n             \"require-dev\": {\n+                \"phpunit\/phpunit\": \"^4.8.35 || ^5.7 || ^6.5\",\n                 \"psr\/log\": \"^1.0\",\n-                \"symfony\/process\": \"^2.5 || ^3.0\"\n-            },\n-            \"suggest\": {\n-                \"symfony\/process\": \"This is necessary to reliably check whether openssl_x509_parse is vulnerable on older php versions, but can be ignored on PHP 5.5.6+\"\n+                \"symfony\/process\": \"^2.5 || ^3.0 || ^4.0\"\n             },\n             \"type\": \"library\",\n             \"extra\": {\n@@ -62,7 +60,7 @@\n                 \"ssl\",\n                 \"tls\"\n             ],\n-            \"time\": \"2016-11-02T18:11:27+00:00\"\n+            \"time\": \"2018-10-18T06:09:13+00:00\"\n         },\n         {\n             \"name\": \"composer\/semver\",\n@@ -128,23 +126,23 @@\n         },\n         {\n             \"name\": \"composer\/spdx-licenses\",\n-            \"version\": \"1.1.5\",\n+            \"version\": \"1.5.0\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/composer\/spdx-licenses.git\",\n-                \"reference\": \"96c6a07b05b716e89a44529d060bc7f5c263cb13\"\n+                \"reference\": \"7a9556b22bd9d4df7cad89876b00af58ef20d3a2\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/composer\/spdx-licenses\/zipball\/96c6a07b05b716e89a44529d060bc7f5c263cb13\",\n-                \"reference\": \"96c6a07b05b716e89a44529d060bc7f5c263cb13\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/composer\/spdx-licenses\/zipball\/7a9556b22bd9d4df7cad89876b00af58ef20d3a2\",\n+                \"reference\": \"7a9556b22bd9d4df7cad89876b00af58ef20d3a2\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n                 \"php\": \"^5.3.2 || ^7.0\"\n             },\n             \"require-dev\": {\n-                \"phpunit\/phpunit\": \"^4.5 || ^5.0.5\",\n+                \"phpunit\/phpunit\": \"^4.8.35 || ^5.7 || ^6.5\",\n                 \"phpunit\/phpunit-mock-objects\": \"2.3.0 || ^3.0\"\n             },\n             \"type\": \"library\",\n@@ -185,37 +183,81 @@\n                 \"spdx\",\n                 \"validator\"\n             ],\n-            \"time\": \"2016-09-28T07:17:45+00:00\"\n+            \"time\": \"2018-11-01T09:45:54+00:00\"\n+        },\n+        {\n+            \"name\": \"composer\/xdebug-handler\",\n+            \"version\": \"1.3.1\",\n+            \"source\": {\n+                \"type\": \"git\",\n+                \"url\": \"https:\/\/github.com\/composer\/xdebug-handler.git\",\n+                \"reference\": \"dc523135366eb68f22268d069ea7749486458562\"\n+            },\n+            \"dist\": {\n+                \"type\": \"zip\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/composer\/xdebug-handler\/zipball\/dc523135366eb68f22268d069ea7749486458562\",\n+                \"reference\": \"dc523135366eb68f22268d069ea7749486458562\",\n+                \"shasum\": \"\"\n+            },\n+            \"require\": {\n+                \"php\": \"^5.3.2 || ^7.0\",\n+                \"psr\/log\": \"^1.0\"\n+            },\n+            \"require-dev\": {\n+                \"phpunit\/phpunit\": \"^4.8.35 || ^5.7 || ^6.5\"\n+            },\n+            \"type\": \"library\",\n+            \"autoload\": {\n+                \"psr-4\": {\n+                    \"Composer\\\\XdebugHandler\\\\\": \"src\"\n+                }\n+            },\n+            \"notification-url\": \"https:\/\/packagist.org\/downloads\/\",\n+            \"license\": [\n+                \"MIT\"\n+            ],\n+            \"authors\": [\n+                {\n+                    \"name\": \"John Stevenson\",\n+                    \"email\": \"john-stevenson@blueyonder.co.uk\"\n+                }\n+            ],\n+            \"description\": \"Restarts a process without xdebug.\",\n+            \"keywords\": [\n+                \"Xdebug\",\n+                \"performance\"\n+            ],\n+            \"time\": \"2018-11-29T10:59:02+00:00\"\n         },\n         {\n             \"name\": \"justinrainbow\/json-schema\",\n-            \"version\": \"4.1.0\",\n+            \"version\": \"5.2.7\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/justinrainbow\/json-schema.git\",\n-                \"reference\": \"d39c56a46b3ebe1f3696479966cd2b9f50aaa24f\"\n+                \"reference\": \"8560d4314577199ba51bf2032f02cd1315587c23\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/justinrainbow\/json-schema\/zipball\/d39c56a46b3ebe1f3696479966cd2b9f50aaa24f\",\n-                \"reference\": \"d39c56a46b3ebe1f3696479966cd2b9f50aaa24f\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/justinrainbow\/json-schema\/zipball\/8560d4314577199ba51bf2032f02cd1315587c23\",\n+                \"reference\": \"8560d4314577199ba51bf2032f02cd1315587c23\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n                 \"php\": \">=5.3.3\"\n             },\n             \"require-dev\": {\n+                \"friendsofphp\/php-cs-fixer\": \"^2.1\",\n                 \"json-schema\/json-schema-test-suite\": \"1.2.0\",\n-                \"phpdocumentor\/phpdocumentor\": \"~2\",\n-                \"phpunit\/phpunit\": \"^4.8.22\"\n+                \"phpunit\/phpunit\": \"^4.8.35\"\n             },\n             \"bin\": [\n                 \"bin\/validate-json\"\n             ],\n             \"type\": \"library\",\n             \"extra\": {\n                 \"branch-alias\": {\n-                    \"dev-master\": \"4.0.x-dev\"\n+                    \"dev-master\": \"5.0.x-dev\"\n                 }\n             },\n             \"autoload\": {\n@@ -251,20 +293,20 @@\n                 \"json\",\n                 \"schema\"\n             ],\n-            \"time\": \"2016-12-22T16:43:46+00:00\"\n+            \"time\": \"2018-02-14T22:26:30+00:00\"\n         },\n         {\n             \"name\": \"psr\/log\",\n-            \"version\": \"1.0.2\",\n+            \"version\": \"1.1.0\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/php-fig\/log.git\",\n-                \"reference\": \"4ebe3a8bf773a19edfe0a84b6585ba3d401b724d\"\n+                \"reference\": \"6c001f1daafa3a3ac1d8ff69ee4db8e799a654dd\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/php-fig\/log\/zipball\/4ebe3a8bf773a19edfe0a84b6585ba3d401b724d\",\n-                \"reference\": \"4ebe3a8bf773a19edfe0a84b6585ba3d401b724d\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/php-fig\/log\/zipball\/6c001f1daafa3a3ac1d8ff69ee4db8e799a654dd\",\n+                \"reference\": \"6c001f1daafa3a3ac1d8ff69ee4db8e799a654dd\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n@@ -298,73 +340,28 @@\n                 \"psr\",\n                 \"psr-3\"\n             ],\n-            \"time\": \"2016-10-10T12:19:37+00:00\"\n-        },\n-        {\n-            \"name\": \"seld\/cli-prompt\",\n-            \"version\": \"1.0.2\",\n-            \"source\": {\n-                \"type\": \"git\",\n-                \"url\": \"https:\/\/github.com\/Seldaek\/cli-prompt.git\",\n-                \"reference\": \"8cbe10923cae5bcd7c5a713f6703fc4727c8c1b4\"\n-            },\n-            \"dist\": {\n-                \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/Seldaek\/cli-prompt\/zipball\/8cbe10923cae5bcd7c5a713f6703fc4727c8c1b4\",\n-                \"reference\": \"8cbe10923cae5bcd7c5a713f6703fc4727c8c1b4\",\n-                \"shasum\": \"\"\n-            },\n-            \"require\": {\n-                \"php\": \">=5.3\"\n-            },\n-            \"type\": \"library\",\n-            \"extra\": {\n-                \"branch-alias\": {\n-                    \"dev-master\": \"1.x-dev\"\n-                }\n-            },\n-            \"autoload\": {\n-                \"psr-4\": {\n-                    \"Seld\\\\CliPrompt\\\\\": \"src\/\"\n-                }\n-            },\n-            \"notification-url\": \"https:\/\/packagist.org\/downloads\/\",\n-            \"license\": [\n-                \"MIT\"\n-            ],\n-            \"authors\": [\n-                {\n-                    \"name\": \"Jordi Boggiano\",\n-                    \"email\": \"j.boggiano@seld.be\"\n-                }\n-            ],\n-            \"description\": \"Allows you to prompt for user input on the command line, and optionally hide the characters they type\",\n-            \"keywords\": [\n-                \"cli\",\n-                \"console\",\n-                \"hidden\",\n-                \"input\",\n-                \"prompt\"\n-            ],\n-            \"time\": \"2016-04-18T09:31:41+00:00\"\n+            \"time\": \"2018-11-20T15:27:04+00:00\"\n         },\n         {\n             \"name\": \"seld\/jsonlint\",\n-            \"version\": \"1.5.0\",\n+            \"version\": \"1.7.1\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/Seldaek\/jsonlint.git\",\n-                \"reference\": \"19495c181d6d53a0a13414154e52817e3b504189\"\n+                \"reference\": \"d15f59a67ff805a44c50ea0516d2341740f81a38\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/Seldaek\/jsonlint\/zipball\/19495c181d6d53a0a13414154e52817e3b504189\",\n-                \"reference\": \"19495c181d6d53a0a13414154e52817e3b504189\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/Seldaek\/jsonlint\/zipball\/d15f59a67ff805a44c50ea0516d2341740f81a38\",\n+                \"reference\": \"d15f59a67ff805a44c50ea0516d2341740f81a38\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n                 \"php\": \"^5.3 || ^7.0\"\n             },\n+            \"require-dev\": {\n+                \"phpunit\/phpunit\": \"^4.8.35 || ^5.7 || ^6.0\"\n+            },\n             \"bin\": [\n                 \"bin\/jsonlint\"\n             ],\n@@ -392,7 +389,7 @@\n                 \"parser\",\n                 \"validator\"\n             ],\n-            \"time\": \"2016-11-14T17:59:58+00:00\"\n+            \"time\": \"2018-01-24T12:46:19+00:00\"\n         },\n         {\n             \"name\": \"seld\/phar-utils\",\n@@ -440,21 +437,21 @@\n         },\n         {\n             \"name\": \"symfony\/console\",\n-            \"version\": \"v2.8.15\",\n+            \"version\": \"v2.8.48\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/symfony\/console.git\",\n-                \"reference\": \"d5643cd095e5e37d31e004bb2606b5dd7e96602f\"\n+                \"reference\": \"cbcf4b5e233af15cd2bbd50dee1ccc9b7927dc12\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/console\/zipball\/d5643cd095e5e37d31e004bb2606b5dd7e96602f\",\n-                \"reference\": \"d5643cd095e5e37d31e004bb2606b5dd7e96602f\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/console\/zipball\/cbcf4b5e233af15cd2bbd50dee1ccc9b7927dc12\",\n+                \"reference\": \"cbcf4b5e233af15cd2bbd50dee1ccc9b7927dc12\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n                 \"php\": \">=5.3.9\",\n-                \"symfony\/debug\": \"~2.7,>=2.7.2|~3.0.0\",\n+                \"symfony\/debug\": \"^2.7.2|~3.0.0\",\n                 \"symfony\/polyfill-mbstring\": \"~1.0\"\n             },\n             \"require-dev\": {\n@@ -463,7 +460,7 @@\n                 \"symfony\/process\": \"~2.1|~3.0.0\"\n             },\n             \"suggest\": {\n-                \"psr\/log\": \"For using the console logger\",\n+                \"psr\/log-implementation\": \"For using the console logger\",\n                 \"symfony\/event-dispatcher\": \"\",\n                 \"symfony\/process\": \"\"\n             },\n@@ -497,20 +494,20 @@\n             ],\n             \"description\": \"Symfony Console Component\",\n             \"homepage\": \"https:\/\/symfony.com\",\n-            \"time\": \"2016-12-06T11:59:35+00:00\"\n+            \"time\": \"2018-11-20T15:55:20+00:00\"\n         },\n         {\n             \"name\": \"symfony\/debug\",\n-            \"version\": \"v2.8.15\",\n+            \"version\": \"v2.8.48\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/symfony\/debug.git\",\n-                \"reference\": \"62a68f640456f6761d752c62d81631428ef0d8a1\"\n+                \"reference\": \"74251c8d50dd3be7c4ce0c7b862497cdc641a5d0\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/debug\/zipball\/62a68f640456f6761d752c62d81631428ef0d8a1\",\n-                \"reference\": \"62a68f640456f6761d752c62d81631428ef0d8a1\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/debug\/zipball\/74251c8d50dd3be7c4ce0c7b862497cdc641a5d0\",\n+                \"reference\": \"74251c8d50dd3be7c4ce0c7b862497cdc641a5d0\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n@@ -522,7 +519,7 @@\n             },\n             \"require-dev\": {\n                 \"symfony\/class-loader\": \"~2.2|~3.0.0\",\n-                \"symfony\/http-kernel\": \"~2.3.24|~2.5.9|~2.6,>=2.6.2|~3.0.0\"\n+                \"symfony\/http-kernel\": \"~2.3.24|~2.5.9|^2.6.2|~3.0.0\"\n             },\n             \"type\": \"library\",\n             \"extra\": {\n@@ -554,24 +551,25 @@\n             ],\n             \"description\": \"Symfony Debug Component\",\n             \"homepage\": \"https:\/\/symfony.com\",\n-            \"time\": \"2016-11-15T12:53:17+00:00\"\n+            \"time\": \"2018-11-11T11:18:13+00:00\"\n         },\n         {\n             \"name\": \"symfony\/filesystem\",\n-            \"version\": \"v2.8.15\",\n+            \"version\": \"v2.8.48\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/symfony\/filesystem.git\",\n-                \"reference\": \"a3784111af9f95f102b6411548376e1ae7c93898\"\n+                \"reference\": \"7ae46872dad09dffb7fe1e93a0937097339d0080\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/filesystem\/zipball\/a3784111af9f95f102b6411548376e1ae7c93898\",\n-                \"reference\": \"a3784111af9f95f102b6411548376e1ae7c93898\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/filesystem\/zipball\/7ae46872dad09dffb7fe1e93a0937097339d0080\",\n+                \"reference\": \"7ae46872dad09dffb7fe1e93a0937097339d0080\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n-                \"php\": \">=5.3.9\"\n+                \"php\": \">=5.3.9\",\n+                \"symfony\/polyfill-ctype\": \"~1.8\"\n             },\n             \"type\": \"library\",\n             \"extra\": {\n@@ -603,20 +601,20 @@\n             ],\n             \"description\": \"Symfony Filesystem Component\",\n             \"homepage\": \"https:\/\/symfony.com\",\n-            \"time\": \"2016-10-18T04:28:30+00:00\"\n+            \"time\": \"2018-11-11T11:18:13+00:00\"\n         },\n         {\n             \"name\": \"symfony\/finder\",\n-            \"version\": \"v2.8.15\",\n+            \"version\": \"v2.8.48\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/symfony\/finder.git\",\n-                \"reference\": \"c0f10576335743b881ac1ed39d18c0fa66048775\"\n+                \"reference\": \"1444eac52273e345d9b95129bf914639305a9ba4\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/finder\/zipball\/c0f10576335743b881ac1ed39d18c0fa66048775\",\n-                \"reference\": \"c0f10576335743b881ac1ed39d18c0fa66048775\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/finder\/zipball\/1444eac52273e345d9b95129bf914639305a9ba4\",\n+                \"reference\": \"1444eac52273e345d9b95129bf914639305a9ba4\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n@@ -652,20 +650,78 @@\n             ],\n             \"description\": \"Symfony Finder Component\",\n             \"homepage\": \"https:\/\/symfony.com\",\n-            \"time\": \"2016-12-13T09:38:12+00:00\"\n+            \"time\": \"2018-11-11T11:18:13+00:00\"\n+        },\n+        {\n+            \"name\": \"symfony\/polyfill-ctype\",\n+            \"version\": \"v1.10.0\",\n+            \"source\": {\n+                \"type\": \"git\",\n+                \"url\": \"https:\/\/github.com\/symfony\/polyfill-ctype.git\",\n+                \"reference\": \"e3d826245268269cd66f8326bd8bc066687b4a19\"\n+            },\n+            \"dist\": {\n+                \"type\": \"zip\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/polyfill-ctype\/zipball\/e3d826245268269cd66f8326bd8bc066687b4a19\",\n+                \"reference\": \"e3d826245268269cd66f8326bd8bc066687b4a19\",\n+                \"shasum\": \"\"\n+            },\n+            \"require\": {\n+                \"php\": \">=5.3.3\"\n+            },\n+            \"suggest\": {\n+                \"ext-ctype\": \"For best performance\"\n+            },\n+            \"type\": \"library\",\n+            \"extra\": {\n+                \"branch-alias\": {\n+                    \"dev-master\": \"1.9-dev\"\n+                }\n+            },\n+            \"autoload\": {\n+                \"psr-4\": {\n+                    \"Symfony\\\\Polyfill\\\\Ctype\\\\\": \"\"\n+                },\n+                \"files\": [\n+                    \"bootstrap.php\"\n+                ]\n+            },\n+            \"notification-url\": \"https:\/\/packagist.org\/downloads\/\",\n+            \"license\": [\n+                \"MIT\"\n+            ],\n+            \"authors\": [\n+                {\n+                    \"name\": \"Symfony Community\",\n+                    \"homepage\": \"https:\/\/symfony.com\/contributors\"\n+                },\n+                {\n+                    \"name\": \"Gert de Pagter\",\n+                    \"email\": \"BackEndTea@gmail.com\"\n+                }\n+            ],\n+            \"description\": \"Symfony polyfill for ctype functions\",\n+            \"homepage\": \"https:\/\/symfony.com\",\n+            \"keywords\": [\n+                \"compatibility\",\n+                \"ctype\",\n+                \"polyfill\",\n+                \"portable\"\n+            ],\n+            \"time\": \"2018-08-06T14:22:27+00:00\"\n         },\n         {\n             \"name\": \"symfony\/polyfill-mbstring\",\n-            \"version\": \"v1.3.0\",\n+            \"version\": \"v1.10.0\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/symfony\/polyfill-mbstring.git\",\n-                \"reference\": \"e79d363049d1c2128f133a2667e4f4190904f7f4\"\n+                \"reference\": \"c79c051f5b3a46be09205c73b80b346e4153e494\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/polyfill-mbstring\/zipball\/e79d363049d1c2128f133a2667e4f4190904f7f4\",\n-                \"reference\": \"e79d363049d1c2128f133a2667e4f4190904f7f4\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/polyfill-mbstring\/zipball\/c79c051f5b3a46be09205c73b80b346e4153e494\",\n+                \"reference\": \"c79c051f5b3a46be09205c73b80b346e4153e494\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n@@ -677,7 +733,7 @@\n             \"type\": \"library\",\n             \"extra\": {\n                 \"branch-alias\": {\n-                    \"dev-master\": \"1.3-dev\"\n+                    \"dev-master\": \"1.9-dev\"\n                 }\n             },\n             \"autoload\": {\n@@ -711,20 +767,20 @@\n                 \"portable\",\n                 \"shim\"\n             ],\n-            \"time\": \"2016-11-14T01:06:16+00:00\"\n+            \"time\": \"2018-09-21T13:07:52+00:00\"\n         },\n         {\n             \"name\": \"symfony\/process\",\n-            \"version\": \"v2.8.15\",\n+            \"version\": \"v2.8.48\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/symfony\/process.git\",\n-                \"reference\": \"1a1bd056395540d0bc549d39818316513565d278\"\n+                \"reference\": \"c3591a09c78639822b0b290d44edb69bf9f05dc8\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/process\/zipball\/1a1bd056395540d0bc549d39818316513565d278\",\n-                \"reference\": \"1a1bd056395540d0bc549d39818316513565d278\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/process\/zipball\/c3591a09c78639822b0b290d44edb69bf9f05dc8\",\n+                \"reference\": \"c3591a09c78639822b0b290d44edb69bf9f05dc8\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n@@ -760,7 +816,7 @@\n             ],\n             \"description\": \"Symfony Process Component\",\n             \"homepage\": \"https:\/\/symfony.com\",\n-            \"time\": \"2016-11-24T00:43:03+00:00\"\n+            \"time\": \"2018-11-11T11:18:13+00:00\"\n         }\n     ],\n     \"packages-dev\": [\n@@ -820,16 +876,16 @@\n         },\n         {\n             \"name\": \"phpdocumentor\/reflection-docblock\",\n-            \"version\": \"2.0.4\",\n+            \"version\": \"2.0.5\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/phpDocumentor\/ReflectionDocBlock.git\",\n-                \"reference\": \"d68dbdc53dc358a816f00b300704702b2eaff7b8\"\n+                \"reference\": \"e6a969a640b00d8daa3c66518b0405fb41ae0c4b\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/phpDocumentor\/ReflectionDocBlock\/zipball\/d68dbdc53dc358a816f00b300704702b2eaff7b8\",\n-                \"reference\": \"d68dbdc53dc358a816f00b300704702b2eaff7b8\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/phpDocumentor\/ReflectionDocBlock\/zipball\/e6a969a640b00d8daa3c66518b0405fb41ae0c4b\",\n+                \"reference\": \"e6a969a640b00d8daa3c66518b0405fb41ae0c4b\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n@@ -865,37 +921,37 @@\n                     \"email\": \"mike.vanriel@naenius.com\"\n                 }\n             ],\n-            \"time\": \"2015-02-03T12:10:50+00:00\"\n+            \"time\": \"2016-01-25T08:17:30+00:00\"\n         },\n         {\n             \"name\": \"phpspec\/prophecy\",\n-            \"version\": \"v1.6.2\",\n+            \"version\": \"1.8.0\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/phpspec\/prophecy.git\",\n-                \"reference\": \"6c52c2722f8460122f96f86346600e1077ce22cb\"\n+                \"reference\": \"4ba436b55987b4bf311cb7c6ba82aa528aac0a06\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/phpspec\/prophecy\/zipball\/6c52c2722f8460122f96f86346600e1077ce22cb\",\n-                \"reference\": \"6c52c2722f8460122f96f86346600e1077ce22cb\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/phpspec\/prophecy\/zipball\/4ba436b55987b4bf311cb7c6ba82aa528aac0a06\",\n+                \"reference\": \"4ba436b55987b4bf311cb7c6ba82aa528aac0a06\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n                 \"doctrine\/instantiator\": \"^1.0.2\",\n                 \"php\": \"^5.3|^7.0\",\n-                \"phpdocumentor\/reflection-docblock\": \"^2.0|^3.0.2\",\n-                \"sebastian\/comparator\": \"^1.1\",\n-                \"sebastian\/recursion-context\": \"^1.0|^2.0\"\n+                \"phpdocumentor\/reflection-docblock\": \"^2.0|^3.0.2|^4.0\",\n+                \"sebastian\/comparator\": \"^1.1|^2.0|^3.0\",\n+                \"sebastian\/recursion-context\": \"^1.0|^2.0|^3.0\"\n             },\n             \"require-dev\": {\n-                \"phpspec\/phpspec\": \"^2.0\",\n-                \"phpunit\/phpunit\": \"^4.8 || ^5.6.5\"\n+                \"phpspec\/phpspec\": \"^2.5|^3.2\",\n+                \"phpunit\/phpunit\": \"^4.8.35 || ^5.7 || ^6.5 || ^7.1\"\n             },\n             \"type\": \"library\",\n             \"extra\": {\n                 \"branch-alias\": {\n-                    \"dev-master\": \"1.6.x-dev\"\n+                    \"dev-master\": \"1.8.x-dev\"\n                 }\n             },\n             \"autoload\": {\n@@ -928,7 +984,7 @@\n                 \"spy\",\n                 \"stub\"\n             ],\n-            \"time\": \"2016-11-21T14:58:47+00:00\"\n+            \"time\": \"2018-08-05T17:53:17+00:00\"\n         },\n         {\n             \"name\": \"phpunit\/php-code-coverage\",\n@@ -994,16 +1050,16 @@\n         },\n         {\n             \"name\": \"phpunit\/php-file-iterator\",\n-            \"version\": \"1.4.2\",\n+            \"version\": \"1.4.5\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/sebastianbergmann\/php-file-iterator.git\",\n-                \"reference\": \"3cc8f69b3028d0f96a9078e6295d86e9bf019be5\"\n+                \"reference\": \"730b01bc3e867237eaac355e06a36b85dd93a8b4\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/php-file-iterator\/zipball\/3cc8f69b3028d0f96a9078e6295d86e9bf019be5\",\n-                \"reference\": \"3cc8f69b3028d0f96a9078e6295d86e9bf019be5\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/php-file-iterator\/zipball\/730b01bc3e867237eaac355e06a36b85dd93a8b4\",\n+                \"reference\": \"730b01bc3e867237eaac355e06a36b85dd93a8b4\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n@@ -1037,7 +1093,7 @@\n                 \"filesystem\",\n                 \"iterator\"\n             ],\n-            \"time\": \"2016-10-03T07:40:28+00:00\"\n+            \"time\": \"2017-11-27T13:52:08+00:00\"\n         },\n         {\n             \"name\": \"phpunit\/php-text-template\",\n@@ -1082,25 +1138,30 @@\n         },\n         {\n             \"name\": \"phpunit\/php-timer\",\n-            \"version\": \"1.0.8\",\n+            \"version\": \"1.0.9\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/sebastianbergmann\/php-timer.git\",\n-                \"reference\": \"38e9124049cf1a164f1e4537caf19c99bf1eb260\"\n+                \"reference\": \"3dcf38ca72b158baf0bc245e9184d3fdffa9c46f\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/php-timer\/zipball\/38e9124049cf1a164f1e4537caf19c99bf1eb260\",\n-                \"reference\": \"38e9124049cf1a164f1e4537caf19c99bf1eb260\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/php-timer\/zipball\/3dcf38ca72b158baf0bc245e9184d3fdffa9c46f\",\n+                \"reference\": \"3dcf38ca72b158baf0bc245e9184d3fdffa9c46f\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n-                \"php\": \">=5.3.3\"\n+                \"php\": \"^5.3.3 || ^7.0\"\n             },\n             \"require-dev\": {\n-                \"phpunit\/phpunit\": \"~4|~5\"\n+                \"phpunit\/phpunit\": \"^4.8.35 || ^5.7 || ^6.0\"\n             },\n             \"type\": \"library\",\n+            \"extra\": {\n+                \"branch-alias\": {\n+                    \"dev-master\": \"1.0-dev\"\n+                }\n+            },\n             \"autoload\": {\n                 \"classmap\": [\n                     \"src\/\"\n@@ -1122,20 +1183,20 @@\n             \"keywords\": [\n                 \"timer\"\n             ],\n-            \"time\": \"2016-05-12T18:03:57+00:00\"\n+            \"time\": \"2017-02-26T11:10:40+00:00\"\n         },\n         {\n             \"name\": \"phpunit\/php-token-stream\",\n-            \"version\": \"1.4.9\",\n+            \"version\": \"1.4.12\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/sebastianbergmann\/php-token-stream.git\",\n-                \"reference\": \"3b402f65a4cc90abf6e1104e388b896ce209631b\"\n+                \"reference\": \"1ce90ba27c42e4e44e6d8458241466380b51fa16\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/php-token-stream\/zipball\/3b402f65a4cc90abf6e1104e388b896ce209631b\",\n-                \"reference\": \"3b402f65a4cc90abf6e1104e388b896ce209631b\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/php-token-stream\/zipball\/1ce90ba27c42e4e44e6d8458241466380b51fa16\",\n+                \"reference\": \"1ce90ba27c42e4e44e6d8458241466380b51fa16\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n@@ -1171,20 +1232,20 @@\n             \"keywords\": [\n                 \"tokenizer\"\n             ],\n-            \"time\": \"2016-11-15T14:06:22+00:00\"\n+            \"time\": \"2017-12-04T08:55:13+00:00\"\n         },\n         {\n             \"name\": \"phpunit\/phpunit\",\n-            \"version\": \"4.8.31\",\n+            \"version\": \"4.8.36\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/sebastianbergmann\/phpunit.git\",\n-                \"reference\": \"98b2b39a520766bec663ff5b7ff1b729db9dbfe3\"\n+                \"reference\": \"46023de9a91eec7dfb06cc56cb4e260017298517\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/phpunit\/zipball\/98b2b39a520766bec663ff5b7ff1b729db9dbfe3\",\n-                \"reference\": \"98b2b39a520766bec663ff5b7ff1b729db9dbfe3\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/phpunit\/zipball\/46023de9a91eec7dfb06cc56cb4e260017298517\",\n+                \"reference\": \"46023de9a91eec7dfb06cc56cb4e260017298517\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n@@ -1243,7 +1304,7 @@\n                 \"testing\",\n                 \"xunit\"\n             ],\n-            \"time\": \"2016-12-09T02:45:31+00:00\"\n+            \"time\": \"2017-06-21T08:07:12+00:00\"\n         },\n         {\n             \"name\": \"phpunit\/phpunit-mock-objects\",\n@@ -1303,16 +1364,16 @@\n         },\n         {\n             \"name\": \"sebastian\/comparator\",\n-            \"version\": \"1.2.2\",\n+            \"version\": \"1.2.4\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/sebastianbergmann\/comparator.git\",\n-                \"reference\": \"6a1ed12e8b2409076ab22e3897126211ff8b1f7f\"\n+                \"reference\": \"2b7424b55f5047b47ac6e5ccb20b2aea4011d9be\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/comparator\/zipball\/6a1ed12e8b2409076ab22e3897126211ff8b1f7f\",\n-                \"reference\": \"6a1ed12e8b2409076ab22e3897126211ff8b1f7f\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/comparator\/zipball\/2b7424b55f5047b47ac6e5ccb20b2aea4011d9be\",\n+                \"reference\": \"2b7424b55f5047b47ac6e5ccb20b2aea4011d9be\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n@@ -1363,27 +1424,27 @@\n                 \"compare\",\n                 \"equality\"\n             ],\n-            \"time\": \"2016-11-19T09:18:40+00:00\"\n+            \"time\": \"2017-01-29T09:50:25+00:00\"\n         },\n         {\n             \"name\": \"sebastian\/diff\",\n-            \"version\": \"1.4.1\",\n+            \"version\": \"1.4.3\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/sebastianbergmann\/diff.git\",\n-                \"reference\": \"13edfd8706462032c2f52b4b862974dd46b71c9e\"\n+                \"reference\": \"7f066a26a962dbe58ddea9f72a4e82874a3975a4\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/diff\/zipball\/13edfd8706462032c2f52b4b862974dd46b71c9e\",\n-                \"reference\": \"13edfd8706462032c2f52b4b862974dd46b71c9e\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/diff\/zipball\/7f066a26a962dbe58ddea9f72a4e82874a3975a4\",\n+                \"reference\": \"7f066a26a962dbe58ddea9f72a4e82874a3975a4\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n-                \"php\": \">=5.3.3\"\n+                \"php\": \"^5.3.3 || ^7.0\"\n             },\n             \"require-dev\": {\n-                \"phpunit\/phpunit\": \"~4.8\"\n+                \"phpunit\/phpunit\": \"^4.8.35 || ^5.7 || ^6.0\"\n             },\n             \"type\": \"library\",\n             \"extra\": {\n@@ -1415,7 +1476,7 @@\n             \"keywords\": [\n                 \"diff\"\n             ],\n-            \"time\": \"2015-12-08T07:14:41+00:00\"\n+            \"time\": \"2017-05-22T07:24:03+00:00\"\n         },\n         {\n             \"name\": \"sebastian\/environment\",\n@@ -1587,16 +1648,16 @@\n         },\n         {\n             \"name\": \"sebastian\/recursion-context\",\n-            \"version\": \"1.0.2\",\n+            \"version\": \"1.0.5\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/sebastianbergmann\/recursion-context.git\",\n-                \"reference\": \"913401df809e99e4f47b27cdd781f4a258d58791\"\n+                \"reference\": \"b19cc3298482a335a95f3016d2f8a6950f0fbcd7\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/recursion-context\/zipball\/913401df809e99e4f47b27cdd781f4a258d58791\",\n-                \"reference\": \"913401df809e99e4f47b27cdd781f4a258d58791\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/sebastianbergmann\/recursion-context\/zipball\/b19cc3298482a335a95f3016d2f8a6950f0fbcd7\",\n+                \"reference\": \"b19cc3298482a335a95f3016d2f8a6950f0fbcd7\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n@@ -1636,7 +1697,7 @@\n             ],\n             \"description\": \"Provides functionality to recursively process PHP variables\",\n             \"homepage\": \"http:\/\/www.github.com\/sebastianbergmann\/recursion-context\",\n-            \"time\": \"2015-11-11T19:50:13+00:00\"\n+            \"time\": \"2016-10-03T07:41:43+00:00\"\n         },\n         {\n             \"name\": \"sebastian\/version\",\n@@ -1675,20 +1736,21 @@\n         },\n         {\n             \"name\": \"symfony\/yaml\",\n-            \"version\": \"v2.8.15\",\n+            \"version\": \"v2.8.48\",\n             \"source\": {\n                 \"type\": \"git\",\n                 \"url\": \"https:\/\/github.com\/symfony\/yaml.git\",\n-                \"reference\": \"befb26a3713c97af90d25dd12e75621ef14d91ff\"\n+                \"reference\": \"02c1859112aa779d9ab394ae4f3381911d84052b\"\n             },\n             \"dist\": {\n                 \"type\": \"zip\",\n-                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/yaml\/zipball\/befb26a3713c97af90d25dd12e75621ef14d91ff\",\n-                \"reference\": \"befb26a3713c97af90d25dd12e75621ef14d91ff\",\n+                \"url\": \"https:\/\/api.github.com\/repos\/symfony\/yaml\/zipball\/02c1859112aa779d9ab394ae4f3381911d84052b\",\n+                \"reference\": \"02c1859112aa779d9ab394ae4f3381911d84052b\",\n                 \"shasum\": \"\"\n             },\n             \"require\": {\n-                \"php\": \">=5.3.9\"\n+                \"php\": \">=5.3.9\",\n+                \"symfony\/polyfill-ctype\": \"~1.8\"\n             },\n             \"type\": \"library\",\n             \"extra\": {\n@@ -1720,7 +1782,7 @@\n             ],\n             \"description\": \"Symfony Yaml Component\",\n             \"homepage\": \"https:\/\/symfony.com\",\n-            \"time\": \"2016-11-14T16:15:57+00:00\"\n+            \"time\": \"2018-11-11T11:18:13+00:00\"\n         }\n     ],\n     \"aliases\": [],"
        },
        {
            "sha": "e4af54c2c470ddce8f738fee1f3c95dd20538ace",
            "filename": "doc\/00-intro.md",
            "status": "modified",
            "additions": 18,
            "deletions": 15,
            "changes": 33,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/00-intro.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/00-intro.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/00-intro.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -14,7 +14,7 @@ manager. It does however support a \"global\" project for convenience via the\n [global](03-cli.md#global) command.\n \n This idea is not new and Composer is strongly inspired by node's\n-[npm](https:\/\/npmjs.org\/) and ruby's [bundler](http:\/\/bundler.io\/).\n+[npm](https:\/\/www.npmjs.com\/) and ruby's [bundler](https:\/\/bundler.io\/).\n \n Suppose:\n \n@@ -40,9 +40,9 @@ To install packages from sources instead of simple zip archives, you will need\n git, svn, fossil or hg depending on how the package is version-controlled.\n \n Composer is multi-platform and we strive to make it run equally well on Windows,\n-Linux and OSX.\n+Linux and macOS.\n \n-## Installation - Linux \/ Unix \/ OSX\n+## Installation - Linux \/ Unix \/ macOS\n \n ### Downloading the Composer Executable\n \n@@ -57,16 +57,15 @@ project, or globally as a system wide executable.\n \n #### Locally\n \n-Installing Composer locally is a matter of just running the installer in your\n-project directory. See [the Download page](https:\/\/getcomposer.org\/download\/)\n-for instructions.\n+To install Composer locally, run the installer in your project directory. See \n+[the Download page](https:\/\/getcomposer.org\/download\/) for instructions.\n \n-The installer will just check a few PHP settings and then download\n-`composer.phar` to your working directory. This file is the Composer binary. It\n-is a PHAR (PHP archive), which is an archive format for PHP which can be run on\n+The installer will check a few PHP settings and then download `composer.phar`\n+to your working directory. This file is the Composer binary. It is a PHAR\n+(PHP archive), which is an archive format for PHP which can be run on\n the command line, amongst other things.\n \n-Now just run `php composer.phar` in order to run Composer.\n+Now run `php composer.phar` in order to run Composer.\n \n You can install Composer to a specific directory by using the `--install-dir`\n option and additionally (re)name it as well using the `--filename` option. When\n@@ -78,7 +77,7 @@ following parameters:\n php composer-setup.php --install-dir=bin --filename=composer\n ```\n \n-Now just run `php bin\/composer` in order to run Composer.\n+Now run `php bin\/composer` in order to run Composer.\n \n #### Globally\n \n@@ -94,18 +93,22 @@ you can run this to move composer.phar to a directory that is in your path:\n mv composer.phar \/usr\/local\/bin\/composer\n ```\n \n+If you like to install it only for your user and avoid requiring root permissions,\n+you can use `~\/.local\/bin` instead which is available by default on some\n+Linux distributions.\n+\n > **Note:** If the above fails due to permissions, you may need to run it again\n > with sudo.\n \n-> **Note:** On some versions of OSX the `\/usr` directory does not exist by\n+> **Note:** On some versions of macOS the `\/usr` directory does not exist by\n > default. If you receive the error \"\/usr\/local\/bin\/composer: No such file or\n > directory\" then you must create the directory manually before proceeding:\n > `mkdir -p \/usr\/local\/bin`.\n \n > **Note:** For information on changing your PATH, please read the\n > [Wikipedia article](https:\/\/en.wikipedia.org\/wiki\/PATH_(variable)) and\/or use Google.\n \n-Now just run `composer` in order to run Composer instead of `php composer.phar`.\n+Now run `composer` in order to run Composer instead of `php composer.phar`.\n \n ## Installation - Windows\n \n@@ -115,7 +118,7 @@ This is the easiest way to get Composer set up on your machine.\n \n Download and run\n [Composer-Setup.exe](https:\/\/getcomposer.org\/Composer-Setup.exe). It will\n-install the latest Composer version and set up your PATH so that you can just\n+install the latest Composer version and set up your PATH so that you can\n call `composer` from any directory in your command line.\n \n > **Note:** Close your current terminal. Test usage with a new terminal: This is\n@@ -135,7 +138,7 @@ C:\\bin>echo @php \"%~dp0composer.phar\" %*>composer.bat\n \n Add the directory to your PATH environment variable if it isn't already.\n For information on changing your PATH variable, please see\n-[this article](http:\/\/www.computerhope.com\/issues\/ch000549.htm) and\/or\n+[this article](https:\/\/www.computerhope.com\/issues\/ch000549.htm) and\/or\n use Google.\n \n Close your current terminal. Test usage with a new terminal:"
        },
        {
            "sha": "ffcb1589eec275aec7c284ced7cc927921615645",
            "filename": "doc\/01-basic-usage.md",
            "status": "modified",
            "additions": 139,
            "deletions": 80,
            "changes": 219,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/01-basic-usage.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/01-basic-usage.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/01-basic-usage.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -18,7 +18,7 @@ other metadata as well.\n ### The `require` Key\n \n The first (and often only) thing you specify in `composer.json` is the\n-[`require`](04-schema.md#require) key. You're simply telling Composer which\n+[`require`](04-schema.md#require) key. You are simply telling Composer which\n packages your project depends on.\n \n ```json\n@@ -33,94 +33,131 @@ As you can see, [`require`](04-schema.md#require) takes an object that maps\n **package names** (e.g. `monolog\/monolog`) to **version constraints** (e.g.\n `1.0.*`).\n \n+Composer uses this information to search for the right set of files in package\n+\"repositories\" that you register using the [`repositories`](04-schema.md#repositories)\n+key, or in Packagist, the default package repository. In the above example,\n+since no other repository has been registered in the `composer.json` file, it is\n+assumed that the `monolog\/monolog` package is registered on Packagist. (See more\n+about Packagist [below](#packagist), or read more about repositories\n+[here](05-repositories.md)).\n+\n ### Package Names\n \n The package name consists of a vendor name and the project's name. Often these\n-will be identical - the vendor name just exists to prevent naming clashes. It\n-allows two different people to create a library named `json`, which would then\n-just be named `igorw\/json` and `seldaek\/json`.\n-\n-Here we are requiring `monolog\/monolog`, so the vendor name is the same as the\n-project's name. For projects with a unique name this is recommended. It also\n-allows adding more related projects under the same namespace later on. If you\n-are maintaining a library, this would make it really easy to split it up into\n-smaller decoupled parts.\n-\n-### Package Versions\n-\n-In the previous example we were requiring version\n-[`1.0.*`](http:\/\/semver.mwl.be\/#?package=monolog%2Fmonolog&version=1.0.*) of\n-Monolog. This means any version in the `1.0` development branch. It is the\n-equivalent of saying versions that match `>=1.0 <1.1`.\n-\n-Version constraints can be specified in several ways, read\n-[versions](articles\/versions.md) for more in-depth information on this topic.\n-\n-### Stability\n-\n-By default only stable releases are taken into consideration. If you would\n-like to also get RC, beta, alpha or dev versions of your dependencies you can\n-do so using [stability flags](04-schema.md#package-links). To change that for\n-all packages instead of doing per dependency you can also use the\n-[minimum-stability](04-schema.md#minimum-stability) setting.\n+will be identical - the vendor name only exists to prevent naming clashes. For\n+example, it would allow two different people to create a library named `json`.\n+One might be named `igorw\/json` while the other might be `seldaek\/json`.\n+\n+Read more about publishing packages and package naming [here](02-libraries.md).\n+(Note that you can also specify \"platform packages\" as dependencies, allowing\n+you to require certain versions of server software. See\n+[platform packages](#platform-packages) below.)\n+\n+### Package Version Constraints\n+\n+In our example, we are requesting the Monolog package with the version constraint\n+[`1.0.*`](https:\/\/semver.mwl.be\/#?package=monolog%2Fmonolog&version=1.0.*).\n+This means any version in the `1.0` development branch, or any version that is\n+greater than or equal to 1.0 and less than 1.1 (`>=1.0 <1.1`).\n+\n+Please read [versions](articles\/versions.md) for more in-depth information on\n+versions, how versions relate to each other, and on version constraints.\n+\n+> **How does Composer download the right files?** When you specify a dependency in\n+> `composer.json`, Composer first takes the name of the package that you have requested\n+> and searches for it in any repositories that you have registered using the\n+> [`repositories`](04-schema.md#repositories) key. If you have not registered\n+> any extra repositories, or it does not find a package with that name in the\n+> repositories you have specified, it falls back to Packagist (more [below](#packagist)).\n+>\n+> When Composer finds the right package, either in Packagist or in a repo you have specified,\n+> it then uses the versioning features of the package's VCS (i.e., branches and tags)\n+> to attempt to find the best match for the version constraint you have specified. Be sure to read\n+> about versions and package resolution in the [versions article](articles\/versions.md).\n+\n+> **Note:** If you are trying to require a package but Composer throws an error\n+> regarding package stability, the version you have specified may not meet your\n+> default minimum stability requirements. By default only stable releases are taken\n+> into consideration when searching for valid package versions in your VCS.\n+>\n+> You might run into this if you are trying to require dev, alpha, beta, or RC\n+> versions of a package. Read more about stability flags and the `minimum-stability`\n+> key on the [schema page](04-schema.md).\n \n ## Installing Dependencies\n \n-To install the defined dependencies for your project, just run the\n+To install the defined dependencies for your project, run the\n [`install`](03-cli.md#install) command.\n \n ```sh\n php composer.phar install\n ```\n \n-This will find the latest version of `monolog\/monolog` that matches the\n-supplied version constraint and download it into the `vendor` directory.\n-It's a convention to put third party code into a directory named `vendor`.\n-In case of Monolog it will put it into `vendor\/monolog\/monolog`.\n-\n-> **Tip:** If you are using git for your project, you probably want to add\n-> `vendor` in your `.gitignore`. You really don't want to add all of that\n-> code to your repository.\n-\n-You will notice the [`install`](03-cli.md#install) command also created a\n-`composer.lock` file.\n-\n-## `composer.lock` - The Lock File\n-\n-After installing the dependencies, Composer writes the list of the exact\n-versions it installed into a `composer.lock` file. This locks the project\n-to those specific versions.\n-\n-**Commit your application's `composer.lock` (along with `composer.json`)\n-into version control.**\n-\n-This is important because the [`install`](03-cli.md#install) command checks\n-if a lock file is present, and if it is, it downloads the versions specified\n-there (regardless of what `composer.json` says).\n+When you run this command, one of two things may happen:\n \n-This means that anyone who sets up the project will download the exact same\n-version of the dependencies. Your CI server, production machines, other\n-developers in your team, everything and everyone runs on the same dependencies,\n-which mitigates the potential for bugs affecting only some parts of the\n-deployments. Even if you develop alone, in six months when reinstalling the\n-project you can feel confident the dependencies installed are still working even\n-if your dependencies released many new versions since then.\n+### Installing Without `composer.lock`\n \n-If no `composer.lock` file exists, Composer will read the dependencies and\n-versions from `composer.json` and  create the lock file after executing the\n-[`update`](03-cli.md#update) or the [`install`](03-cli.md#install) command.\n+If you have never run the command before and there is also no `composer.lock` file present,\n+Composer simply resolves all dependencies listed in your `composer.json` file and downloads\n+the latest version of their files into the `vendor` directory in your project. (The `vendor`\n+directory is the conventional location for all third-party code in a project). In our\n+example from above, you would end up with the Monolog source files in\n+`vendor\/monolog\/monolog\/`. If Monolog listed any dependencies, those would also be in\n+folders under `vendor\/`.\n \n-This means that if any of the dependencies get a new version, you won't get the\n-updates automatically. To update to the new version, use the\n+> **Tip:** If you are using git for your project, you probably want to add\n+> `vendor` in your `.gitignore`. You really don't want to add all of that\n+> third-party code to your versioned repository.\n+\n+When Composer has finished installing, it writes all of the packages and the exact versions\n+of them that it downloaded to the `composer.lock` file, locking the project to those specific\n+versions. You should commit the `composer.lock` file to your project repo so that all people\n+working on the project are locked to the same versions of dependencies (more below).\n+\n+### Installing With `composer.lock`\n+\n+This brings us to the second scenario. If there is already a `composer.lock` file as well as a\n+`composer.json` file when you run `composer install`, it means either you ran the\n+`install` command before, or someone else on the project ran the `install` command and\n+committed the `composer.lock` file to the project (which is good).\n+\n+Either way, running `install` when a `composer.lock` file is present resolves and installs\n+all dependencies that you listed in `composer.json`, but Composer uses the exact versions listed\n+in `composer.lock` to ensure that the package versions are consistent for everyone\n+working on your project. As a result you will have all dependencies requested by your\n+`composer.json` file, but they may not all be at the very latest available versions\n+(some of the dependencies listed in the `composer.lock` file may have released newer versions since\n+the file was created). This is by design, it ensures that your project does not break because of\n+unexpected changes in dependencies.\n+\n+### Commit Your `composer.lock` File to Version Control\n+\n+Committing this file to VC is important because it will cause anyone who sets\n+up the project to use the exact same\n+versions of the dependencies that you are using. Your CI server, production\n+machines, other developers in your team, everything and everyone runs on the\n+same dependencies, which mitigates the potential for bugs affecting only some\n+parts of the deployments. Even if you develop alone, in six months when\n+reinstalling the project you can feel confident the dependencies installed are\n+still working even if your dependencies released many new versions since then.\n+(See note below about using the `update` command.)\n+\n+## Updating Dependencies to their Latest Versions\n+\n+As mentioned above, the `composer.lock` file prevents you from automatically getting\n+the latest versions of your dependencies. To update to the latest versions, use the\n [`update`](03-cli.md#update) command. This will fetch the latest matching\n-versions (according to your `composer.json` file) and also update the lock file\n-with the new version.\n+versions (according to your `composer.json` file) and update the lock file\n+with the new versions. (This is equivalent to deleting the `composer.lock` file\n+and running `install` again.)\n \n ```sh\n php composer.phar update\n ```\n+\n > **Note:** Composer will display a Warning when executing an `install` command\n-> if `composer.lock` and `composer.json` are not synchronized.\n+> if the `composer.lock` has not been updated since changes were made to the\n+> `composer.json` that might affect dependency resolution.\n \n If you only want to install or update one dependency, you can whitelist them:\n \n@@ -136,30 +173,50 @@ php composer.phar update monolog\/monolog [...]\n [Packagist](https:\/\/packagist.org\/) is the main Composer repository. A Composer\n repository is basically a package source: a place where you can get packages\n from. Packagist aims to be the central repository that everybody uses. This\n-means that you can automatically `require` any package that is available there.\n+means that you can automatically `require` any package that is available there,\n+without further specifying where Composer should look for the package.\n \n If you go to the [Packagist website](https:\/\/packagist.org\/) (packagist.org),\n you can browse and search for packages.\n \n Any open source project using Composer is recommended to publish their packages\n-on Packagist. A library doesn't need to be on Packagist to be used by Composer,\n+on Packagist. A library does not need to be on Packagist to be used by Composer,\n but it enables discovery and adoption by other developers more quickly.\n \n+## Platform packages\n+\n+Composer has platform packages, which are virtual packages for things that are\n+installed on the system but are not actually installable by Composer. This\n+includes PHP itself, PHP extensions and some system libraries.\n+\n+* `php` represents the PHP version of the user, allowing you to apply\n+  constraints, e.g. `^7.1`. To require a 64bit version of php, you can\n+  require the `php-64bit` package.\n+\n+* `hhvm` represents the version of the HHVM runtime and allows you to apply\n+  a constraint, e.g., `^2.3`.\n+\n+* `ext-<name>` allows you to require PHP extensions (includes core\n+  extensions). Versioning can be quite inconsistent here, so it's often\n+  a good idea to set the constraint to `*`.  An example of an extension\n+  package name is `ext-gd`.\n+\n+* `lib-<name>` allows constraints to be made on versions of libraries used by\n+  PHP. The following are available: `curl`, `iconv`, `icu`, `libxml`,\n+  `openssl`, `pcre`, `uuid`, `xsl`.\n+\n+You can use [`show --platform`](03-cli.md#show) to get a list of your locally\n+available platform packages.\n+\n ## Autoloading\n \n For libraries that specify autoload information, Composer generates a\n-`vendor\/autoload.php` file. You can simply include this file and you will get\n-autoloading for free.\n+`vendor\/autoload.php` file. You can simply include this file and start\n+using the classes that those libraries provide without any extra work:\n \n ```php\n require __DIR__ . '\/vendor\/autoload.php';\n-```\n \n-This makes it really easy to use third party code. For example: If your project\n-depends on Monolog, you can just start using classes from it, and they will be\n-autoloaded.\n-\n-```php\n $log = new Monolog\\Logger('name');\n $log->pushHandler(new Monolog\\Handler\\StreamHandler('app.log', Monolog\\Logger::WARNING));\n $log->addWarning('Foo');\n@@ -193,15 +250,17 @@ This can be useful for autoloading classes in a test suite, for example.\n \n ```php\n $loader = require __DIR__ . '\/vendor\/autoload.php';\n-$loader->add('Acme\\\\Test\\\\', __DIR__);\n+$loader->addPsr4('Acme\\\\Test\\\\', __DIR__);\n ```\n \n In addition to PSR-4 autoloading, Composer also supports PSR-0, classmap and\n files autoloading. See the [`autoload`](04-schema.md#autoload) reference for\n more information.\n \n+See also the docs on [optimizing the autoloader](articles\/autoloader-optimization.md).\n+\n > **Note:** Composer provides its own autoloader. If you don't want to use that\n-> one, you can just include `vendor\/composer\/autoload_*.php` files, which return\n+> one, you can include `vendor\/composer\/autoload_*.php` files, which return\n > associative arrays allowing you to configure your own autoloader.\n \n &larr; [Intro](00-intro.md)  |  [Libraries](02-libraries.md) &rarr;"
        },
        {
            "sha": "e59f505dd341df3dea98364df12aa76ff2322812",
            "filename": "doc\/02-libraries.md",
            "status": "modified",
            "additions": 21,
            "deletions": 81,
            "changes": 102,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/02-libraries.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/02-libraries.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/02-libraries.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -8,7 +8,7 @@ Composer.\n As soon as you have a `composer.json` in a directory, that directory is a\n package. When you add a [`require`](04-schema.md#require) to a project, you are\n making a package that depends on other packages. The only difference between\n-your project and libraries is that your project is a package without a name.\n+your project and a library is that your project is a package without a name.\n \n In order to make that package installable you need to give it a name. You do\n this by adding the [`name`](04-schema.md#name) property in `composer.json`:\n@@ -29,98 +29,38 @@ name. Supplying a vendor name is mandatory.\n > username is usually a good bet. While package names are case insensitive, the\n > convention is all lowercase and dashes for word separation.\n \n-## Platform packages\n+## Library Versioning\n \n-Composer has platform packages, which are virtual packages for things that are\n-installed on the system but are not actually installable by Composer. This\n-includes PHP itself, PHP extensions and some system libraries.\n+In the vast majority of cases, you will be maintaining your library using some\n+sort of version control system like git, svn, hg or fossil. In these cases,\n+Composer infers versions from your VCS and you **should not** specify a version\n+in your `composer.json` file. (See the [Versions article](articles\/versions.md)\n+to learn about how Composer uses VCS branches and tags to resolve version\n+constraints.)\n \n-* `php` represents the PHP version of the user, allowing you to apply\n-  constraints, e.g. `>=5.4.0`. To require a 64bit version of php, you can\n-  require the `php-64bit` package.\n-\n-* `hhvm` represents the version of the HHVM runtime (aka HipHop Virtual\n-  Machine) and allows you to apply a constraint, e.g., '>=2.3.3'.\n-\n-* `ext-<name>` allows you to require PHP extensions (includes core\n-  extensions). Versioning can be quite inconsistent here, so it's often\n-  a good idea to just set the constraint to `*`.  An example of an extension\n-  package name is `ext-gd`.\n-\n-* `lib-<name>` allows constraints to be made on versions of libraries used by\n-  PHP. The following are available: `curl`, `iconv`, `icu`, `libxml`,\n-  `openssl`, `pcre`, `uuid`, `xsl`.\n-\n-You can use [`show --platform`](03-cli.md#show) to get a list of your locally\n-available platform packages.\n-\n-## Specifying the version\n-\n-When you publish your package on Packagist, it is able to infer the version\n-from the VCS (git, svn, hg, fossil) information. This means you don't have to\n-explicitly declare it. Read [tags](#tags) and [branches](#branches) to see how\n-version numbers are extracted from these.\n-\n-If you are creating packages by hand and really have to specify it explicitly,\n-you can just add a `version` field:\n+If you are maintaining packages by hand (i.e., without a VCS), you'll need to\n+specify the version explicitly by adding a `version` value in your `composer.json`\n+file:\n \n ```json\n {\n     \"version\": \"1.0.0\"\n }\n ```\n \n-> **Note:** You should avoid specifying the version field explicitly, because\n-> for tags the value must match the tag name.\n-\n-### Tags\n-\n-For every tag that looks like a version, a package version of that tag will be\n-created. It should match 'X.Y.Z' or 'vX.Y.Z', with an optional suffix of\n-`-patch` (`-p`), `-alpha` (`-a`), `-beta` (`-b`) or `-RC`. The suffix can also\n-be followed by a number.\n-\n-Here are a few examples of valid tag names:\n-\n-- 1.0.0\n-- v1.0.0\n-- 1.10.5-RC1\n-- v4.4.4-beta2\n-- v2.0.0-alpha\n-- v2.0.4-p1\n-\n-> **Note:** Even if your tag is prefixed with `v`, a\n-> [version constraint](01-basic-usage.md#package-versions) in a `require`\n-> statement has to be specified without prefix (e.g. tag `v1.0.0` will result\n-> in version `1.0.0`).\n-\n-### Branches\n-\n-For every branch, a package development version will be created. If the branch\n-name looks like a version, the version will be `{branchname}-dev`. For example,\n-the branch `2.0` will get the `2.0.x-dev` version (the `.x` is added for\n-technical reasons, to make sure it is recognized as a branch). The `2.0.x`\n-branch would also be valid and be turned into `2.0.x-dev` as well. If the\n-branch does not look like a version, it will be `dev-{branchname}`. `master`\n-results in a `dev-master` version.\n-\n-Here are some examples of version branch names:\n-\n-- 1.x\n-- 1.0 (equals 1.0.x)\n-- 1.1.x\n-\n-> **Note:** When you install a development version, it will be automatically\n-> pulled from its `source`. See the [`install`](03-cli.md#install) command\n-> for more details.\n+> **Note:** When you add a hardcoded version to a VCS, the version will conflict\n+> with tag names. Composer will not be able to determine the version number.\n \n-### Aliases\n+### VCS Versioning\n \n-It is possible to alias branch names to versions. For example, you could alias\n-`dev-master` to `1.0.x-dev`, which would allow you to require `1.0.x-dev` in\n-all the packages.\n+Composer uses your VCS's branch and tag features to resolve the version\n+constraints you specify in your `require` field to specific sets of files.\n+When determining valid available versions, Composer looks at all of your tags\n+and branches and translates their names into an internal list of options that\n+it then matches against the version constraint you provided.\n \n-See [Aliases](articles\/aliases.md) for more information.\n+For more on how Composer treats tags and branches and how it resolves package\n+version constraints, read the [versions](articles\/versions.md) article.\n \n ## Lock file\n "
        },
        {
            "sha": "74374ec6bcbfa600192905a9a2f14c4d2f7e3993",
            "filename": "doc\/03-cli.md",
            "status": "modified",
            "additions": 121,
            "deletions": 68,
            "changes": 189,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/03-cli.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/03-cli.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/03-cli.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -7,6 +7,12 @@ To get help from the command-line, simply call `composer` or `composer list`\n to see the complete list of commands, then `--help` combined with any of those\n can give you more information.\n \n+As Composer uses [symfony\/console](https:\/\/github.com\/symfony\/console) you can call commands by short name if it's not ambiguous.\n+```sh\n+composer dump\n+```\n+calls `composer dump-autoload`.\n+\n ## Global Options\n \n The following options are available with every command:\n@@ -46,18 +52,20 @@ php composer.phar init\n * **--name:** Name of the package.\n * **--description:** Description of the package.\n * **--author:** Author name of the package.\n+* **--type:** Type of package.\n * **--homepage:** Homepage of the package.\n * **--require:** Package to require with a version constraint. Should be\n   in format `foo\/bar:1.0.0`.\n * **--require-dev:** Development requirements, see **--require**.\n * **--stability (-s):** Value for the `minimum-stability` field.\n+* **--license (-l):** License of package.\n * **--repository:** Provide one (or more) custom repositories. They will be stored\n   in the generated composer.json, and used for auto-completion when prompting for\n   the list of requires. Every repository can be either an HTTP URL pointing\n   to a `composer` repository or a JSON string which similar to what the\n   [repositories](04-schema.md#repositories) key accepts.\n \n-## install\n+## install \/ i\n \n The `install` command reads the `composer.json` file from the current\n directory, resolves the dependencies, and installs them into `vendor`.\n@@ -86,9 +94,6 @@ resolution.\n   servers and other use cases where you typically do not run updates of the\n   vendors. It is also a way to circumvent problems with git if you do not\n   have a proper setup.\n-* **--ignore-platform-reqs:** ignore `php`, `hhvm`, `lib-*` and `ext-*`\n-  requirements and force the installation even if the local machine does not\n-  fulfill these. See also the [`platform`](06-config.md#platform) config option.\n * **--dry-run:** If you want to run through an installation without actually\n   installing a package, you can use `--dry-run`. This will simulate the\n   installation and show you what would happen.\n@@ -106,11 +111,16 @@ resolution.\n * **--classmap-authoritative (-a):** Autoload classes from the classmap only.\n   Implicitly enables `--optimize-autoloader`.\n * **--apcu-autoloader:** Use APCu to cache found\/not-found classes.\n+* **--ignore-platform-reqs:** ignore `php`, `hhvm`, `lib-*` and `ext-*`\n+  requirements and force the installation even if the local machine does not\n+  fulfill these. See also the [`platform`](06-config.md#platform) config option.\n \n-## update\n+## update \/ u\n \n In order to get the latest versions of the dependencies and to update the\n-`composer.lock` file, you should use the `update` command.\n+`composer.lock` file, you should use the `update` command. This command is also\n+aliased as `upgrade` as it does the same as `upgrade` does if you are thinking\n+of `apt-get` or similar package managers.\n \n ```sh\n php composer.phar update\n@@ -119,7 +129,7 @@ php composer.phar update\n This will resolve all dependencies of the project and write the exact versions\n into `composer.lock`.\n \n-If you just want to update a few packages and not all, you can list them as such:\n+If you only want to update a few packages and not all, you can list them as such:\n \n ```sh\n php composer.phar update vendor\/package vendor\/package2\n@@ -135,30 +145,32 @@ php composer.phar update vendor\/*\n \n * **--prefer-source:** Install packages from `source` when available.\n * **--prefer-dist:** Install packages from `dist` when available.\n-* **--ignore-platform-reqs:** ignore `php`, `hhvm`, `lib-*` and `ext-*`\n-  requirements and force the installation even if the local machine does not\n-  fulfill these. See also the [`platform`](06-config.md#platform) config option.\n * **--dry-run:** Simulate the command without actually doing anything.\n * **--dev:** Install packages listed in `require-dev` (this is the default behavior).\n * **--no-dev:** Skip installing packages listed in `require-dev`. The autoloader generation skips the `autoload-dev` rules.\n+* **--lock:** Only updates the lock file hash to suppress warning about the\n+  lock file being out of date.\n * **--no-autoloader:** Skips autoloader generation.\n * **--no-scripts:** Skips execution of scripts defined in `composer.json`.\n * **--no-progress:** Removes the progress display that can mess with some\n   terminals or scripts which don't handle backspace characters.\n * **--no-suggest:** Skips suggested packages in the output.\n+* **--with-dependencies:** Add also dependencies of whitelisted packages to the whitelist, except those that are root requirements.\n+* **--with-all-dependencies:** Add also all dependencies of whitelisted packages to the whitelist, including those that are root requirements.\n * **--optimize-autoloader (-o):** Convert PSR-0\/4 autoloading to classmap to get a faster\n   autoloader. This is recommended especially for production, but can take\n   a bit of time to run so it is currently not done by default.\n * **--classmap-authoritative (-a):** Autoload classes from the classmap only.\n   Implicitly enables `--optimize-autoloader`.\n * **--apcu-autoloader:** Use APCu to cache found\/not-found classes.\n-* **--lock:** Only updates the lock file hash to suppress warning about the\n-  lock file being out of date.\n-* **--with-dependencies:** Add also all dependencies of whitelisted packages to the whitelist.\n-* **--root-reqs:** Restricts the update to your first degree dependencies.\n+* **--ignore-platform-reqs:** ignore `php`, `hhvm`, `lib-*` and `ext-*`\n+  requirements and force the installation even if the local machine does not\n+  fulfill these. See also the [`platform`](06-config.md#platform) config option.\n * **--prefer-stable:** Prefer stable versions of dependencies.\n * **--prefer-lowest:** Prefer lowest versions of dependencies. Useful for testing minimal\n   versions of requirements, generally used with `--prefer-stable`.\n+* **--interactive:** Interactive interface with autocompletion to select the packages to update.\n+* **--root-reqs:** Restricts the update to your first degree dependencies.\n \n ## require\n \n@@ -172,39 +184,41 @@ php composer.phar require\n After adding\/changing the requirements, the modified requirements will be\n installed or updated.\n \n-If you do not want to choose requirements interactively, you can just pass them\n+If you do not want to choose requirements interactively, you can pass them\n to the command.\n \n ```sh\n php composer.phar require vendor\/package:2.* vendor\/package2:dev-master\n ```\n \n+If you do not specify a package, composer will prompt you to search for a package, and given results, provide a list of  matches to require.\n+\n ### Options\n \n+* **--dev:** Add packages to `require-dev`.\n * **--prefer-source:** Install packages from `source` when available.\n * **--prefer-dist:** Install packages from `dist` when available.\n-* **--ignore-platform-reqs:** ignore `php`, `hhvm`, `lib-*` and `ext-*`\n-  requirements and force the installation even if the local machine does not\n-  fulfill these. See also the [`platform`](06-config.md#platform) config option.\n-* **--dev:** Add packages to `require-dev`.\n-* **--no-update:** Disables the automatic update of the dependencies.\n * **--no-progress:** Removes the progress display that can mess with some\n   terminals or scripts which don't handle backspace characters.\n * **--no-suggest:** Skips suggested packages in the output.\n+* **--no-update:** Disables the automatic update of the dependencies.\n * **--no-scripts:** Skips execution of scripts defined in `composer.json`.\n * **--update-no-dev:** Run the dependency update with the `--no-dev` option.\n-* **--update-with-dependencies:** Also update dependencies of the newly\n-  required packages.\n+* **--update-with-dependencies:** Also update dependencies of the newly required packages, except those that are root requirements.\n+* **--update-with-all-dependencies:** Also update dependencies of the newly required packages, including those that are root requirements.\n+* **--ignore-platform-reqs:** ignore `php`, `hhvm`, `lib-*` and `ext-*`\n+  requirements and force the installation even if the local machine does not\n+  fulfill these. See also the [`platform`](06-config.md#platform) config option.\n+* **--prefer-stable:** Prefer stable versions of dependencies.\n+* **--prefer-lowest:** Prefer lowest versions of dependencies. Useful for testing minimal\n+  versions of requirements, generally used with `--prefer-stable`.\n * **--sort-packages:** Keep packages sorted in `composer.json`.\n * **--optimize-autoloader (-o):** Convert PSR-0\/4 autoloading to classmap to\n   get a faster autoloader. This is recommended especially for production, but\n   can take a bit of time to run so it is currently not done by default.\n * **--classmap-authoritative (-a):** Autoload classes from the classmap only.\n   Implicitly enables `--optimize-autoloader`.\n * **--apcu-autoloader:** Use APCu to cache found\/not-found classes.\n-* **--prefer-stable:** Prefer stable versions of dependencies.\n-* **--prefer-lowest:** Prefer lowest versions of dependencies. Useful for testing minimal\n-  versions of requirements, generally used with `--prefer-stable`.\n \n ## remove\n \n@@ -219,26 +233,33 @@ After removing the requirements, the modified requirements will be\n uninstalled.\n \n ### Options\n-* **--ignore-platform-reqs:** ignore `php`, `hhvm`, `lib-*` and `ext-*`\n-  requirements and force the installation even if the local machine does not\n-  fulfill these. See also the [`platform`](06-config.md#platform) config option.\n * **--dev:** Remove packages from `require-dev`.\n-* **--no-update:** Disables the automatic update of the dependencies.\n * **--no-progress:** Removes the progress display that can mess with some\n   terminals or scripts which don't handle backspace characters.\n+* **--no-update:** Disables the automatic update of the dependencies.\n * **--no-scripts:** Skips execution of scripts defined in `composer.json`.\n * **--update-no-dev:** Run the dependency update with the --no-dev option.\n * **--update-with-dependencies:** Also update dependencies of the removed packages.\n+* **--ignore-platform-reqs:** ignore `php`, `hhvm`, `lib-*` and `ext-*`\n+  requirements and force the installation even if the local machine does not\n+  fulfill these. See also the [`platform`](06-config.md#platform) config option.\n * **--optimize-autoloader (-o):** Convert PSR-0\/4 autoloading to classmap to\n   get a faster autoloader. This is recommended especially for production, but\n   can take a bit of time to run so it is currently not done by default.\n * **--classmap-authoritative (-a):** Autoload classes from the classmap only.\n   Implicitly enables `--optimize-autoloader`.\n * **--apcu-autoloader:** Use APCu to cache found\/not-found classes.\n \n+## check-platform-reqs\n+\n+The check-platform-reqs command checks that your PHP and extensions versions\n+match the platform requirements of the installed packages. This can be used\n+to verify that a production server has all the extensions needed to run a\n+project after installing it for example.\n+\n ## global\n \n-The global command allows you to run other commands like `install`, `require`\n+The global command allows you to run other commands like `install`, `remove`, `require`\n or `update` as if you were running them from the [COMPOSER_HOME](#composer-home)\n directory.\n \n@@ -248,18 +269,18 @@ can hold CLI tools or Composer plugins that you want to have available everywher\n This can be used to install CLI utilities globally. Here is an example:\n \n ```sh\n-php composer.phar global require fabpot\/php-cs-fixer\n+php composer.phar global require friendsofphp\/php-cs-fixer\n ```\n \n-Now the `php-cs-fixer` binary is available globally. Just make sure your global\n+Now the `php-cs-fixer` binary is available globally. Make sure your global\n [vendor binaries](articles\/vendor-binaries.md) directory is in your `$PATH`\n environment variable, you can get its location with the following command :\n \n ```sh\n php composer.phar global config bin-dir --absolute\n ```\n \n-If you wish to update the binary later on you can just run a global update:\n+If you wish to update the binary later on you can run a global update:\n \n ```sh\n php composer.phar global update\n@@ -268,7 +289,7 @@ php composer.phar global update\n ## search\n \n The search command allows you to search through the current project's package\n-repositories. Usually this will be just packagist. You simply pass it the\n+repositories. Usually this will be packagist. You simply pass it the\n terms you want to search for.\n \n ```sh\n@@ -280,6 +301,7 @@ You can also search for more than one term by passing multiple arguments.\n ### Options\n \n * **--only-name (-N):** Search only in name.\n+* **--type (-t):** Search for a specific package type.\n \n ## show\n \n@@ -328,17 +350,20 @@ php composer.phar show monolog\/monolog 1.0.2\n \n ### Options\n \n-* **--latest (-l):** List all installed packages including their latest version.\n-* **--all (-a):** List all packages available in all your repositories.\n+* **--all :** List all packages available in all your repositories.\n * **--installed (-i):** List the packages that are installed (this is enabled by default, and deprecated).\n * **--platform (-p):** List only platform packages (php & extensions).\n+* **--available (-a):** List available packages only.\n * **--self (-s):** List the root package info.\n-* **--tree (-t):** List your dependencies as a tree. If you pass a package name it will show the dependency tree for that package.\n * **--name-only (-N):** List package names only.\n * **--path (-P):** List package paths.\n+* **--tree (-t):** List your dependencies as a tree. If you pass a package name it will show the dependency tree for that package.\n+* **--latest (-l):** List all installed packages including their latest version.\n * **--outdated (-o):** Implies --latest, but this lists *only* packages that have a newer version available.\n * **--minor-only (-m):** Use with --latest. Only shows packages that have minor SemVer-compatible updates.\n * **--direct (-D):** Restricts the list of packages to your direct dependencies.\n+* **--strict:** Return a non-zero exit code when there are outdated packages.\n+* **--format (-f):** Lets you pick between text (default) or json output format.\n \n ## outdated\n \n@@ -348,16 +373,18 @@ including their current and latest versions. This is basically an alias for\n \n The color coding is as such:\n \n-- **green**: Dependency is in the latest version and is up to date.\n-- **yellow**: Dependency has a new version available that includes backwards compatibility breaks according to semver, so upgrade when\n+- **green (=)**: Dependency is in the latest version and is up to date.\n+- **yellow (~)**: Dependency has a new version available that includes backwards compatibility breaks according to semver, so upgrade when\n   you can but it may involve work.\n-- **red**: Dependency has a new version that is semver-compatible and you should upgrade it.\n+- **red (!)**: Dependency has a new version that is semver-compatible and you should upgrade it.\n \n ### Options\n \n * **--all (-a):** Show all packages, not just outdated (alias for `composer show -l`).\n * **--direct (-D):** Restricts the list of packages to your direct dependencies.\n+* **--strict:** Returns non-zero exit code if any package is outdated.\n * **--minor-only (-m):** Only shows packages that have minor SemVer-compatible updates.\n+* **--format (-f):** Lets you pick between text (default) or json output format.\n \n ## browse \/ home\n \n@@ -367,6 +394,7 @@ in your browser.\n ### Options\n \n * **--homepage (-H):** Open the homepage instead of the repository URL.\n+* **--show (-s):** Only show the homepage or repository URL.\n \n ## suggests\n \n@@ -377,15 +405,16 @@ to limit output to suggestions made by those packages only.\n Use the `--by-package` or `--by-suggestion` flags to group the output by\n the package offering the suggestions or the suggested packages respectively.\n \n+Use the `--verbose (-v)` flag to display the suggesting package and the suggestion reason.\n+This implies `--by-package --by-suggestion`, showing both lists.\n+\n ### Options\n \n * **--by-package:** Groups output by suggesting package.\n * **--by-suggestion:** Groups output by suggested package.\n * **--no-dev:** Excludes suggestions from `require-dev` packages.\n-* **--verbose (-v):** Increased verbosity adds suggesting package name and\n-  reason for suggestion.\n \n-## depends\n+## depends (why)\n \n The `depends` command tells you which other packages depend on a certain\n package. As with installation `require-dev` relationships are only considered\n@@ -420,7 +449,7 @@ psr\/log 1.0.0 Common interface for logging libraries\n * **--recursive (-r):** Recursively resolves up to the root package.\n * **--tree (-t):** Prints the results as a nested tree, implies -r.\n \n-## prohibits\n+## prohibits (why-not)\n \n The `prohibits` command tells you which packages are blocking a given package\n from being installed. Specify a version constraint to verify whether upgrades\n@@ -465,6 +494,8 @@ php composer.phar validate\n * **--no-check-all:** Do not emit a warning if requirements in `composer.json` use unbound version constraints.\n * **--no-check-lock:** Do not emit an error if `composer.lock` exists and is not up to date.\n * **--no-check-publish:** Do not emit an error if `composer.json` is unsuitable for publishing as a package on Packagist but is otherwise valid.\n+* **--with-dependencies:** Also validate the composer.json of all installed dependencies.\n+* **--strict:** Return a non-zero exit code for warnings as well as errors.\n \n ## status\n \n@@ -487,9 +518,9 @@ vendor\/seld\/jsonlint:\n     M README.mdown\n ```\n \n-## self-update\n+## self-update (selfupdate)\n \n-To update Composer itself to the latest version, just run the `self-update`\n+To update Composer itself to the latest version, run the `self-update`\n command. It will replace your `composer.phar` with the latest version.\n \n ```sh\n@@ -514,6 +545,11 @@ sudo -H composer self-update\n * **--rollback (-r):** Rollback to the last version you had installed.\n * **--clean-backups:** Delete old backups during an update. This makes the\n   current version of Composer the only backup available after the update.\n+* **--no-progress:** Do not output download progress.\n+* **--update-keys:** Prompt user for a key update.\n+* **--stable:** Force an update to the stable channel.\n+* **--preview:** Force an update to the preview channel.\n+* **--snapshot:** Force an update to the snapshot channel.\n \n ## config\n \n@@ -549,6 +585,7 @@ See the [Config](06-config.md) chapter for valid configuration options.\n * **--editor (-e):** Open the local composer.json file using in a text editor as\n   defined by the `EDITOR` env variable.  With the `--global` option, this opens\n   the global config file.\n+* **--auth (-a):** Affect auth config file (only used for --editor).\n * **--unset:** Remove the configuration element named by `setting-key`.\n * **--list (-l):** Show the list of current config variables.  With the `--global`\n   option this lists the global configuration only.\n@@ -587,7 +624,7 @@ would set `\"extra\": { \"foo\": { \"bar\": \"value\" } }`.\n ## create-project\n \n You can use Composer to create new projects from an existing package. This is\n-the equivalent of doing a git clone\/svn checkout followed by a \"composer install\"\n+the equivalent of doing a git clone\/svn checkout followed by a `composer install`\n of the vendors.\n \n There are several applications for this:\n@@ -597,7 +634,7 @@ There are several applications for this:\n 3. Projects with multiple developers can use this feature to bootstrap the\n    initial application for development.\n \n-To create a new project using Composer you can use the \"create-project\" command.\n+To create a new project using Composer you can use the `create-project` command.\n Pass it a package name, and the directory to create the project in. You can also\n provide a version as third argument, otherwise the latest version is used.\n \n@@ -614,31 +651,36 @@ By default the command checks for the packages on packagist.org.\n \n ### Options\n \n+* **--stability (-s):** Minimum stability of package. Defaults to `stable`.\n+* **--prefer-source:** Install packages from `source` when available.\n+* **--prefer-dist:** Install packages from `dist` when available.\n * **--repository:** Provide a custom repository to search for the package,\n   which will be used instead of packagist. Can be either an HTTP URL pointing\n   to a `composer` repository, a path to a local `packages.json` file, or a\n   JSON string which similar to what the [repositories](04-schema.md#repositories)\n   key accepts.\n-* **--stability (-s):** Minimum stability of package. Defaults to `stable`.\n-* **--prefer-source:** Install packages from `source` when available.\n-* **--prefer-dist:** Install packages from `dist` when available.\n * **--dev:** Install packages listed in `require-dev`.\n-* **--no-install:** Disables installation of the vendors.\n+* **--no-dev:** Disables installation of require-dev packages.\n * **--no-scripts:** Disables the execution of the scripts defined in the root\n   package.\n * **--no-progress:** Removes the progress display that can mess with some\n   terminals or scripts which don't handle backspace characters.\n+* **--no-secure-http:** Disable the secure-http config option temporarily while\n+  installing the root package. Use at your own risk. Using this flag is a bad\n+  idea.\n * **--keep-vcs:** Skip the deletion of the VCS metadata for the created\n   project. This is mostly useful if you run the command in non-interactive\n   mode.\n+* **--remove-vcs:** Force-remove the VCS metadata without prompting.\n+* **--no-install:** Disables installation of the vendors.\n * **--ignore-platform-reqs:** ignore `php`, `hhvm`, `lib-*` and `ext-*`\n   requirements and force the installation even if the local machine does not\n   fulfill these.\n \n-## dump-autoload\n+## dump-autoload (dumpautoload)\n \n If you need to update the autoloader because of new classes in a classmap\n-package for example, you can use \"dump-autoload\" to do that without having to\n+package for example, you can use `dump-autoload` to do that without having to\n go through an install or update.\n \n Additionally, it can dump an optimized autoloader that converts PSR-0\/4 packages\n@@ -649,7 +691,7 @@ using this option you can still use PSR-0\/4 for convenience and classmaps for\n performance.\n \n ### Options\n-\n+* **--no-scripts:** Skips the execution of all scripts defined in `composer.json` file.\n * **--optimize (-o):** Convert PSR-0\/4 autoloading to classmap to get a faster\n   autoloader. This is recommended especially for production, but can take\n   a bit of time to run so it is currently not done by default.\n@@ -658,7 +700,7 @@ performance.\n * **--apcu:** Use APCu to cache found\/not-found classes.\n * **--no-dev:** Disables autoload-dev rules.\n \n-## clear-cache\n+## clear-cache (clearcache)\n \n Deletes all content from Composer's cache directories.\n \n@@ -669,19 +711,20 @@ Lists the name, version and license of every package installed. Use\n \n ### Options\n \n-* **--no-dev:** Remove dev dependencies from the output\n * **--format:** Format of the output: text or json (default: \"text\")\n+* **--no-dev:** Remove dev dependencies from the output\n \n ## run-script\n \n ### Options\n \n * **--timeout:** Set the script timeout in seconds, or 0 for no timeout.\n-* **--no-dev:** Disable dev mode\n-* **--list:** List user defined scripts\n+* **--dev:** Sets the dev mode.\n+* **--no-dev:** Disable dev mode.\n+* **--list (-l):** List user defined scripts.\n \n To run [scripts](articles\/scripts.md) manually you can use this command,\n-just give it the script name and optionally any required arguments.\n+give it the script name and optionally any required arguments.\n \n ## exec\n \n@@ -691,7 +734,7 @@ runs.\n \n ### Options\n \n-* **--list:** List the available composer binaries\n+* **--list (-l):** List the available composer binaries.\n \n ## diagnose\n \n@@ -718,10 +761,11 @@ php composer.phar archive vendor\/package 2.0.21 --format=zip\n * **--format (-f):** Format of the resulting archive: tar or zip (default:\n   \"tar\")\n * **--dir:** Write the archive to this directory (default: \".\")\n+* **--file:** Write the archive with the given file name.\n \n ## help\n \n-To get more information about a certain command, just use `help`.\n+To get more information about a certain command, you can use `help`.\n \n ```sh\n php composer.phar help install\n@@ -783,10 +827,10 @@ similar use case), and need to support proxies, please provide the `CGI_HTTP_PRO\n environment variable instead. See [httpoxy.org](https:\/\/httpoxy.org\/) for further\n details.\n \n-### no_proxy\n+### no_proxy or NO_PROXY\n \n If you are behind a proxy and would like to disable it for certain domains, you\n-can use the `no_proxy` env var. Simply set it to a comma separated list of\n+can use the `no_proxy` or `NO_PROXY` env var. Simply set it to a comma separated list of\n domains the proxy should *not* be used for.\n \n The env var accepts domains, IP addresses, and IP address blocks in CIDR\n@@ -812,9 +856,9 @@ is a hidden, global (per-user on the machine) directory that is shared between\n all projects.\n \n By default it points to `C:\\Users\\<user>\\AppData\\Roaming\\Composer` on Windows\n-and `\/Users\/<user>\/.composer` on OSX. On *nix systems that follow the [XDG Base\n-Directory Specifications](http:\/\/standards.freedesktop.org\/basedir-spec\/basedir-spec-latest.html),\n-it points to `$XDG_CONFIG_HOME\/composer`. On other *nix systems, it points to\n+and `\/Users\/<user>\/.composer` on macOS. On \\*nix systems that follow the [XDG Base\n+Directory Specifications](https:\/\/specifications.freedesktop.org\/basedir-spec\/basedir-spec-latest.html),\n+it points to `$XDG_CONFIG_HOME\/composer`. On other \\*nix systems, it points to\n `\/home\/<user>\/.composer`.\n \n #### COMPOSER_HOME\/config.json\n@@ -834,7 +878,7 @@ configuration in the project's `composer.json` always wins.\n The `COMPOSER_CACHE_DIR` var allows you to change the Composer cache directory,\n which is also configurable via the [`cache-dir`](06-config.md#cache-dir) option.\n \n-By default it points to $COMPOSER_HOME\/cache on \\*nix and OSX, and\n+By default it points to `$COMPOSER_HOME\/cache` on \\*nix and macOS, and\n `C:\\Users\\<user>\\AppData\\Local\\Composer` (or `%LOCALAPPDATA%\/Composer`) on Windows.\n \n ### COMPOSER_PROCESS_TIMEOUT\n@@ -869,10 +913,19 @@ If set to 1, this env disables the warning about running commands as root\/super\n It also disables automatic clearing of sudo sessions, so you should really only set this\n if you use Composer as super user at all times like in docker containers.\n \n+### COMPOSER_MEMORY_LIMIT\n+\n+If set, the value is used as php's memory_limit.\n+\n ### COMPOSER_MIRROR_PATH_REPOS\n \n If set to 1, this env changes the default path repository strategy to `mirror` instead\n of `symlink`. As it is the default strategy being set it can still be overwritten by\n repository options.\n \n+### COMPOSER_HTACCESS_PROTECT\n+\n+Defaults to `1`. If set to `0`, Composer will not create `.htaccess` files in the\n+composer home, cache, and data directories.\n+\n &larr; [Libraries](02-libraries.md)  |  [Schema](04-schema.md) &rarr;"
        },
        {
            "sha": "7c66813af37e99c470ebfc0a296b7296ea354025",
            "filename": "doc\/04-schema.md",
            "status": "modified",
            "additions": 75,
            "deletions": 39,
            "changes": 114,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/04-schema.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/04-schema.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/04-schema.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -29,18 +29,21 @@ The config of dependencies is ignored. This makes the `config` field\n ### name\n \n The name of the package. It consists of vendor name and project name,\n-separated by `\/`.\n-\n-Examples:\n+separated by `\/`. Examples:\n \n * monolog\/monolog\n * igorw\/event-source\n \n+The name can contain any character, including white spaces, and it's case\n+insensitive (`foo\/bar` and `Foo\/Bar` are considered the same package). In order\n+to simplify its installation, it's recommended to define a short and lowercase\n+name that doesn't include non-alphanumeric characters or white spaces.\n+\n Required for published packages (libraries).\n \n ### description\n \n-A short description of the package. Usually this is just one line long.\n+A short description of the package. Usually this is one line long.\n \n Required for published packages (libraries).\n \n@@ -101,7 +104,7 @@ Out of the box, Composer supports four types:\n   [dedicated article](articles\/custom-installers.md).\n \n Only use a custom type if you need custom logic during installation. It is\n-recommended to omit this field and have it just default to `library`.\n+recommended to omit this field and have it default to `library`.\n \n ### keywords\n \n@@ -124,6 +127,12 @@ An URL to the website of the project.\n \n Optional.\n \n+### readme\n+\n+A relative path to the readme document.\n+\n+Optional.\n+\n ### time\n \n Release date of the version.\n@@ -142,18 +151,14 @@ The recommended notation for the most common licenses is (alphabetical):\n - BSD-2-Clause\n - BSD-3-Clause\n - BSD-4-Clause\n-- GPL-2.0\n-- GPL-2.0+\n-- GPL-3.0\n-- GPL-3.0+\n-- LGPL-2.1\n-- LGPL-2.1+\n-- LGPL-3.0\n-- LGPL-3.0+\n+- GPL-2.0-only \/ GPL-2.0-or-later\n+- GPL-3.0-only \/ GPL-3.0-or-later\n+- LGPL-2.1-only \/ LGPL-2.1-or-later\n+- LGPL-3.0-only \/ LGPL-3.0-or-later\n - MIT\n \n Optional, but it is highly recommended to supply this. More identifiers are\n-listed at the [SPDX Open Source License Registry](https:\/\/www.spdx.org\/licenses\/).\n+listed at the [SPDX Open Source License Registry](https:\/\/spdx.org\/licenses\/).\n \n For closed-source software, you may use `\"proprietary\"` as the license identifier.\n \n@@ -173,8 +178,8 @@ An Example for disjunctive licenses:\n ```json\n {\n     \"license\": [\n-       \"LGPL-2.1\",\n-       \"GPL-3.0+\"\n+       \"LGPL-2.1-only\",\n+       \"GPL-3.0-or-later\"\n     ]\n }\n ```\n@@ -183,7 +188,7 @@ Alternatively they can be separated with \"or\" and enclosed in parenthesis;\n \n ```json\n {\n-    \"license\": \"(LGPL-2.1 or GPL-3.0+)\"\n+    \"license\": \"(LGPL-2.1-only or GPL-3.0-or-later)\"\n }\n ```\n \n@@ -215,7 +220,7 @@ An example:\n         {\n             \"name\": \"Jordi Boggiano\",\n             \"email\": \"j.boggiano@seld.be\",\n-            \"homepage\": \"http:\/\/seld.be\",\n+            \"homepage\": \"https:\/\/seld.be\",\n             \"role\": \"Developer\"\n         }\n     ]\n@@ -238,6 +243,7 @@ Support information includes the following:\n * **source:** URL to browse or download the sources.\n * **docs:** URL to the documentation.\n * **rss:** URL to the RSS feed.\n+* **chat:** URL to the chat channel.\n \n An example:\n \n@@ -255,7 +261,8 @@ Optional.\n ### Package links\n \n All of the following take an object which maps package names to\n-[version constraints](01-basic-usage.md#package-versions).\n+versions of the package via version constraints. Read more about\n+versions [here](articles\/versions.md).\n \n Example:\n \n@@ -272,7 +279,7 @@ All links are optional fields.\n `require` and `require-dev` additionally support stability flags ([root-only](04-schema.md#root-package)).\n These allow you to further restrict or expand the stability of a package beyond\n the scope of the [minimum-stability](#minimum-stability) setting. You can apply\n-them to a constraint, or just apply them to an empty constraint if you want to\n+them to a constraint, or apply them to an empty constraint if you want to\n allow unstable packages of a dependency for example.\n \n Example:\n@@ -291,6 +298,10 @@ explicitly require it as well, along with its sufficient stability flag.\n \n Example:\n \n+Assuming `doctrine\/doctrine-fixtures-bundle` requires `\"doctrine\/data-fixtures\": \"dev-master\"`\n+then inside the root composer.json you need to add the second line below to allow dev\n+releases for the `doctrine\/data-fixtures` package :\n+\n ```json\n {\n     \"require\": {\n@@ -303,7 +314,9 @@ Example:\n `require` and `require-dev` additionally support explicit references (i.e.\n commit) for dev versions to make sure they are locked to a given state, even\n when you run update. These only work if you explicitly require a dev version\n-and append the reference with `#<ref>`.\n+and append the reference with `#<ref>`. This is also a\n+[root-only](04-schema.md#root-package) feature and will be ignored in\n+dependencies.\n \n Example:\n \n@@ -316,12 +329,12 @@ Example:\n }\n ```\n \n-> **Note:** This feature has severe technical limitations, as the \n+> **Note:** This feature has severe technical limitations, as the\n > composer.json metadata will still be read from the branch name you specify\n > before the hash. You should therefore only use this as a temporary solution\n > during development to remediate transient issues, until you can switch to\n > tagged releases. The Composer team does not actively support this feature\n-> and will not accept bug reports related to it. \n+> and will not accept bug reports related to it.\n \n It is also possible to inline-alias a package constraint so that it matches\n a constraint that it otherwise would not. For more information [see the\n@@ -352,7 +365,6 @@ Example:\n > use and require. Alternatively you may use third party tools to analyze\n > your project for the list of extensions used.\n \n-\n #### require\n \n Lists packages required by this package. The package will not be installed\n@@ -403,7 +415,7 @@ simply list it in `provide`.\n #### suggest\n \n Suggested packages that can enhance or work well with this package. These are\n-just informational and are displayed after the package is installed, to give\n+informational and are displayed after the package is installed, to give\n your users a hint that they could add more packages, even though they are not\n strictly required.\n \n@@ -425,10 +437,11 @@ Example:\n \n Autoload mapping for a PHP autoloader.\n \n-Currently [`PSR-0`](http:\/\/www.php-fig.org\/psr\/psr-0\/) autoloading,\n-[`PSR-4`](http:\/\/www.php-fig.org\/psr\/psr-4\/) autoloading, `classmap` generation and\n-`files` includes are supported. PSR-4 is the recommended way though since it offers\n-greater ease of use (no need to regenerate the autoloader when you add classes).\n+[`PSR-4`](http:\/\/www.php-fig.org\/psr\/psr-4\/) and [`PSR-0`](http:\/\/www.php-fig.org\/psr\/psr-0\/)\n+autoloading, `classmap` generation and `files` includes are supported.\n+\n+PSR-4 is the recommended way since it offers greater ease of use (no need\n+to regenerate the autoloader when you add classes).\n \n #### PSR-4\n \n@@ -566,7 +579,7 @@ Example:\n #### Files\n \n If you want to require certain files explicitly on every request then you can use\n-the 'files' autoloading mechanism. This is useful if your package includes PHP functions\n+the `files` autoloading mechanism. This is useful if your package includes PHP functions\n that cannot be autoloaded by PHP.\n \n Example:\n@@ -581,7 +594,7 @@ Example:\n \n #### Exclude files from classmaps\n \n-If you want to exclude some files or folders from the classmap you can use the 'exclude-from-classmap' property.\n+If you want to exclude some files or folders from the classmap you can use the `exclude-from-classmap` property.\n This might be useful to exclude test classes in your live environment, for example, as those will be skipped\n from the classmap even when building an optimized autoloader.\n \n@@ -599,6 +612,13 @@ Example:\n }\n ```\n \n+#### Optimizing the autoloader\n+\n+The autoloader can have quite a substantial impact on your request time\n+(50-100ms per request in large frameworks using a lot of classes). See the\n+[article about optimizing the autoloader](articles\/autoloader-optimization.md)\n+for more details on how to reduce this impact.\n+\n ### autoload-dev <span>([root-only](04-schema.md#root-package))<\/span>\n \n This section allows to define autoload rules for development purposes.\n@@ -680,9 +700,9 @@ it in your file to avoid surprises.\n \n All versions of each package are checked for stability, and those that are less\n stable than the `minimum-stability` setting will be ignored when resolving\n-your project dependencies. Specific changes to the stability requirements of\n-a given package can be done in `require` or `require-dev` (see\n-[package links](#package-links)).\n+your project dependencies. (Note that you can also specify stability requirements\n+on a per-package basis using stability flags in the version constraints that you\n+specify in a `require` block (see [package links](#package-links) for more details).\n \n Available options (in order of stability) are `dev`, `alpha`, `beta`, `RC`,\n and `stable`.\n@@ -700,7 +720,7 @@ Use `\"prefer-stable\": true` to enable.\n \n Custom package repositories to use.\n \n-By default Composer just uses the packagist repository. By specifying\n+By default Composer only uses the packagist repository. By specifying\n repositories you can get packages from elsewhere.\n \n Repositories are not resolved recursively. You can only add them to your main\n@@ -720,7 +740,7 @@ The following repository types are supported:\n   project.\n * **package:** If you depend on a project that does not have any support for\n   composer whatsoever you can define the package inline using a `package`\n-  repository. You basically just inline the `composer.json` object.\n+  repository. You basically inline the `composer.json` object.\n \n For more information on any of these, see [Repositories](05-repositories.md).\n \n@@ -756,7 +776,7 @@ Example:\n                 \"name\": \"smarty\/smarty\",\n                 \"version\": \"3.1.7\",\n                 \"dist\": {\n-                    \"url\": \"http:\/\/www.smarty.net\/files\/Smarty-3.1.7.zip\",\n+                    \"url\": \"https:\/\/www.smarty.net\/files\/Smarty-3.1.7.zip\",\n                     \"type\": \"zip\"\n                 },\n                 \"source\": {\n@@ -850,6 +870,22 @@ The example will include `\/dir\/foo\/bar\/file`, `\/foo\/bar\/baz`, `\/file.php`,\n \n Optional.\n \n+### abandoned\n+\n+Indicates whether this package has been abandoned.\n+\n+It can be boolean or a package name\/URL pointing to a recommended alternative.\n+\n+Examples:\n+\n+Use `\"abandoned\": true` to indicates this package is abandoned.\n+Use `\"abandoned\": \"monolog\/monolog\"` to indicates this package is abandoned and the\n+recommended alternative is  `monolog\/monolog`.\n+\n+Defaults to false.\n+\n+Optional.\n+\n ### non-feature-branches\n \n A list of regex patterns of branch names that are non-numeric (e.g. \"latest\" or something),\n@@ -871,7 +907,7 @@ but the same branch is installed (in the example: latest-testing).\n An example:\n \n If you have a testing branch, that is heavily maintained during a testing phase and is\n-deployed to your staging environment, normally \"composer show -s\" will give you `versions : * dev-master`.\n+deployed to your staging environment, normally `composer show -s` will give you `versions : * dev-master`.\n \n If you configure `latest-.*` as a pattern for non-feature-branches like this:\n \n@@ -881,7 +917,7 @@ If you configure `latest-.*` as a pattern for non-feature-branches like this:\n }\n ```\n \n-Then \"composer show -s\" will give you `versions : * dev-latest-testing`.\n+Then `composer show -s` will give you `versions : * dev-latest-testing`.\n \n Optional.\n "
        },
        {
            "sha": "9cd1dbf281875d70bf242dd745910c0dcd57bdb9",
            "filename": "doc\/05-repositories.md",
            "status": "modified",
            "additions": 69,
            "deletions": 14,
            "changes": 83,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/05-repositories.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/05-repositories.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/05-repositories.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -11,7 +11,7 @@ understand some of the basic concepts that Composer is built on.\n ### Package\n \n Composer is a dependency manager. It installs packages locally. A package is\n-essentially just a directory containing something. In this case it is PHP\n+essentially a directory containing something. In this case it is PHP\n code, but in theory it could be anything. And it contains a package\n description which has a name and a version. The name and the version are used\n to identify the package.\n@@ -57,9 +57,9 @@ The main repository type is the `composer` repository. It uses a single\n `packages.json` file that contains all of the package metadata.\n \n This is also the repository type that packagist uses. To reference a\n-`composer` repository, just supply the path before the `packages.json` file.\n-In case of packagist, that file is located at `\/packages.json`, so the URL of\n-the repository would be `packagist.org`. For `example.org\/packages.json` the\n+`composer` repository, supply the path before the `packages.json` file.\n+In the case of packagist, that file is located at `\/packages.json`, so the URL of\n+the repository would be `repo.packagist.org`. For `example.org\/packages.json` the\n repository URL would be `example.org`.\n \n #### packages\n@@ -93,7 +93,7 @@ Here is a minimal package definition:\n     \"name\": \"smarty\/smarty\",\n     \"version\": \"3.1.7\",\n     \"dist\": {\n-        \"url\": \"http:\/\/www.smarty.net\/files\/Smarty-3.1.7.zip\",\n+        \"url\": \"https:\/\/www.smarty.net\/files\/Smarty-3.1.7.zip\",\n         \"type\": \"zip\"\n     }\n }\n@@ -177,7 +177,7 @@ integrity, for example:\n The file above declares that acme\/foo and acme\/bar can be found in this\n repository, by loading the file referenced by `providers-url`, replacing\n `%package%` by the vendor namespaced package name and `%hash%` by the\n-sha256 field. Those files themselves just contain package definitions as\n+sha256 field. Those files themselves contain package definitions as\n described [above](#packages).\n \n These fields are optional. You probably don't need them for your own custom\n@@ -205,8 +205,8 @@ project to use the patched version. If the library is on GitHub (this is the\n case most of the time), you can simply fork it there and push your changes to\n your fork. After that you update the project's `composer.json`. All you have\n to do is add your fork as a repository and update the version constraint to\n-point to your custom branch. Your custom branch name must be prefixed with\n-`\"dev-\"`. For version constraint naming conventions see\n+point to your custom branch. In `composer.json`, you should prefix your custom\n+branch name with `\"dev-\"`. For version constraint naming conventions see\n [Libraries](02-libraries.md) for more information.\n \n Example assuming you patched monolog to fix a bug in the `bugfix` branch:\n@@ -271,7 +271,7 @@ The following are supported:\n \n * **Git:** [git-scm.com](https:\/\/git-scm.com)\n * **Subversion:** [subversion.apache.org](https:\/\/subversion.apache.org)\n-* **Mercurial:** [mercurial.selenic.com](http:\/\/mercurial.selenic.com)\n+* **Mercurial:** [mercurial-scm.org](https:\/\/www.mercurial-scm.org)\n * **Fossil**: [fossil-scm.org](https:\/\/www.fossil-scm.org\/)\n \n To get packages from these systems you need to have their respective clients\n@@ -284,14 +284,39 @@ VCS repository provides `dist`s for them that fetch the packages as zips.\n * **BitBucket:** [bitbucket.org](https:\/\/bitbucket.org) (Git and Mercurial)\n \n The VCS driver to be used is detected automatically based on the URL. However,\n-should you need to specify one for whatever reason, you can use `fossil`, `git`,\n-`svn` or `hg` as the repository type instead of `vcs`.\n+should you need to specify one for whatever reason, you can use `git-bitbucket`,\n+`hg-bitbucket`, `github`, `gitlab`, `perforce`, `fossil`, `git`, `svn` or `hg`\n+as the repository type instead of `vcs`.\n \n If you set the `no-api` key to `true` on a github repository it will clone the\n repository as it would with any other git repository instead of using the\n GitHub API. But unlike using the `git` driver directly, Composer will still\n attempt to use github's zip files.\n \n+Please note:\n+* **To let Composer choose which driver to use** the repository type needs to be defined as \"vcs\"\n+* **If you already used a private repository**, this means Composer should have cloned it in cache. If you want to install the same package with drivers, remember to launch the command `composer clearcache` followed by the command `composer update` to update composer cache and install the package from dist.\n+\n+#### BitBucket Driver Configuration\n+\n+The BitBucket driver uses OAuth to access your private repositories via the BitBucket REST APIs and you will need to create an OAuth consumer to use the driver, please refer to [Atlassian's Documentation](https:\/\/confluence.atlassian.com\/bitbucket\/oauth-on-bitbucket-cloud-238027431.html). You will need to fill the callback url with something to satisfy BitBucket, but the address does not need to go anywhere and is not used by Composer.\n+\n+After creating an OAuth consumer in the BitBucket control panel, you need to setup your auth.json file with\n+the credentials like this (more info [here](https:\/\/getcomposer.org\/doc\/06-config.md#bitbucket-oauth)):\n+```json\n+{\n+    \"bitbucket-oauth\": {\n+        \"bitbucket.org\": {\n+            \"consumer-key\": \"myKey\",\n+            \"consumer-secret\": \"mySecret\"\n+        }\n+    }\n+}\n+```\n+**Note that the repository endpoint needs to be https rather than git.**\n+\n+Alternatively if you prefer not to have your OAuth credentials on your filesystem you may export the ```bitbucket-oauth``` block above to the [COMPOSER_AUTH](https:\/\/getcomposer.org\/doc\/03-cli.md#composer-auth) environment variable instead.\n+\n #### Subversion Options\n \n Since Subversion has no native concept of branches and tags, Composer assumes\n@@ -461,7 +486,7 @@ Here is an example for the smarty template engine:\n                 \"name\": \"smarty\/smarty\",\n                 \"version\": \"3.1.7\",\n                 \"dist\": {\n-                    \"url\": \"http:\/\/www.smarty.net\/files\/Smarty-3.1.7.zip\",\n+                    \"url\": \"https:\/\/www.smarty.net\/files\/Smarty-3.1.7.zip\",\n                     \"type\": \"zip\"\n                 },\n                 \"source\": {\n@@ -491,6 +516,30 @@ Typically you would leave the source part off, as you don't really need it.\n >   reference you will have to delete the package to force an update, and will\n >   have to deal with an unstable lock file.\n \n+The `\"package\"` key in a `package` repository may be set to an array to define multiple versions of a package:\n+\n+```json\n+{\n+    \"repositories\": [\n+        {\n+            \"type\": \"package\",\n+            \"package\": [\n+                {\n+                    \"name\": \"foo\/bar\",\n+                    \"version\": \"1.0.0\",\n+                    ...\n+                },\n+                {\n+                    \"name\": \"foo\/bar\",\n+                    \"version\": \"2.0.0\",\n+                    ...\n+                }\n+            ]\n+        }\n+    ]\n+}\n+```\n+\n ## Hosting your own\n \n While you will probably want to put your packages on packagist most of the\n@@ -555,7 +604,7 @@ private packages:\n }\n ```\n \n-Each zip artifact is just a ZIP archive with `composer.json` in root folder:\n+Each zip artifact is a ZIP archive with `composer.json` in root folder:\n \n ```sh\n unzip -l acme-corp-parser-10.3.5.zip\n@@ -608,7 +657,7 @@ be explicitly defined in the package's `composer.json` file. If the version\n cannot be resolved by these means, it is assumed to be `dev-master`.\n \n The local package will be symlinked if possible, in which case the output in\n-the console will read `Symlinked from ..\/..\/packages\/my-package`. If symlinking\n+the console will read `Symlinking from ..\/..\/packages\/my-package`. If symlinking\n is _not_ possible the package will be copied. In that case, the console will\n output `Mirrored from ..\/..\/packages\/my-package`.\n \n@@ -655,4 +704,10 @@ You can disable the default Packagist.org repository by adding this to your\n }\n ```\n \n+You can disable Packagist.org globally by using the global config flag:\n+\n+```bash\n+composer config -g repo.packagist false\n+```\n+\n &larr; [Schema](04-schema.md)  |  [Config](06-config.md) &rarr;"
        },
        {
            "sha": "87ffb02a01a8cf2a26da4e62681343193f5a60c3",
            "filename": "doc\/06-config.md",
            "status": "modified",
            "additions": 12,
            "deletions": 3,
            "changes": 15,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/06-config.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/06-config.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/06-config.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -65,13 +65,17 @@ an OAuth token for GitHub.\n \n A list of domain names and oauth keys. For example using `{\"gitlab.com\":\n \"oauthtoken\"}` as the value of this option will use `oauthtoken` to access\n-private repositories on gitlab.\n+private repositories on gitlab. Please note: If the package is not hosted at \n+gitlab.com the domain names must be also specified with the \n+[`gitlab-domains`](06-config.md#gitlab-domains) option.\n \n ## gitlab-token\n \n A list of domain names and private tokens. For example using `{\"gitlab.com\":\n \"privatetoken\"}` as the value of this option will use `privatetoken` to access\n-private repositories on gitlab.\n+private repositories on gitlab. Please note: If the package is not hosted at \n+gitlab.com the domain names must be also specified with the \n+[`gitlab-domains`](06-config.md#gitlab-domains) option.\n \n ## disable-tls\n \n@@ -120,7 +124,7 @@ value of this option will let Composer authenticate against example.org.\n \n Lets you fake platform packages (PHP and extensions) so that you can emulate a\n production env or define your target platform in the config. Example: `{\"php\":\n-\"5.4\", \"ext-something\": \"4.0\"}`.\n+\"7.0.3\", \"ext-something\": \"4.0.3\"}`.\n \n ## vendor-dir\n \n@@ -265,4 +269,9 @@ Example:\n }\n ```\n \n+## htaccess-protect\n+\n+Defaults to `true`. If set to `false`, Composer will not create `.htaccess` files\n+in the composer home, cache, and data directories.\n+\n &larr; [Repositories](05-repositories.md)  |  [Community](07-community.md) &rarr;"
        },
        {
            "sha": "4296f90cdff6ebb13b699b772b4b367f5aaa00f4",
            "filename": "doc\/07-community.md",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/07-community.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/07-community.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/07-community.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -7,7 +7,7 @@ contributing.\n \n If you would like to contribute to Composer, please read the\n [README](https:\/\/github.com\/composer\/composer) and\n-[CONTRIBUTING](https:\/\/github.com\/\/composer\/composer\/blob\/master\/.github\/CONTRIBUTING.md)\n+[CONTRIBUTING](https:\/\/github.com\/composer\/composer\/blob\/master\/.github\/CONTRIBUTING.md)\n documents.\n \n The most important guidelines are described as follows:"
        },
        {
            "sha": "98a6d13357dbffaa33a53d3b5713ac9123e7e10b",
            "filename": "doc\/articles\/aliases.md",
            "status": "modified",
            "additions": 13,
            "deletions": 12,
            "changes": 25,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/aliases.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/aliases.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/articles\/aliases.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -60,19 +60,19 @@ Branch aliases are great for aliasing main development lines. But in order to\n use them you need to have control over the source repository, and you need to\n commit changes to version control.\n \n-This is not really fun when you just want to try a bugfix of some library that\n+This is not really fun when you want to try a bugfix of some library that\n is a dependency of your local project.\n \n For this reason, you can alias packages in your `require` and `require-dev`\n fields. Let's say you found a bug in the `monolog\/monolog` package. You cloned\n-[Monolog](https:\/\/github.com\/Seldaek\/monolog) on GitHub and fixed the issue in \n-a branch named `bugfix`. Now you want to install that version of monolog in your \n+[Monolog](https:\/\/github.com\/Seldaek\/monolog) on GitHub and fixed the issue in\n+a branch named `bugfix`. Now you want to install that version of monolog in your\n local project.\n \n You are using `symfony\/monolog-bundle` which requires `monolog\/monolog` version\n `1.*`. So you need your `dev-bugfix` to match that constraint.\n \n-Just add this to your project's root `composer.json`:\n+Add this to your project's root `composer.json`:\n \n ```json\n {\n@@ -92,13 +92,14 @@ Just add this to your project's root `composer.json`:\n That will fetch the `dev-bugfix` version of `monolog\/monolog` from your GitHub\n and alias it to `1.0.x-dev`.\n \n-> **Note:** If a package with inline aliases is required, the alias (right of\n-> the `as`) is used as the version constraint. The part left of the `as` is\n-> discarded. As a consequence, if A requires B and B requires `monolog\/monolog`\n-> version `dev-bugfix as 1.0.x-dev`, installing A will make B require\n-> `1.0.x-dev`, which may exist as a branch alias or an actual `1.0` branch. If\n-> it does not, it must be re-inline-aliased in A's `composer.json`.\n+> **Note:** Inline aliasing is a root-only feature. If a package with inline\n+> aliases is required, the alias (right of the `as`) is used as the version\n+> constraint. The part left of the `as` is discarded. As a consequence, if\n+> A requires B and B requires `monolog\/monolog` version `dev-bugfix as 1.0.x-dev`,\n+> installing A will make B require `1.0.x-dev`, which may exist as a branch\n+> alias or an actual `1.0` branch. If it does not, it must be\n+> inline-aliased again in A's `composer.json`.\n \n > **Note:** Inline aliasing should be avoided, especially for published\n-> packages. If you found a bug, try and get your fix merged upstream. This\n-> helps to avoid issues for users of your package.\n+> packages\/libraries. If you found a bug, try and get your fix merged upstream.\n+> This helps to avoid issues for users of your package."
        },
        {
            "sha": "41bd4a6cb06a578226495e86bc1bb064818b5a47",
            "filename": "doc\/articles\/autoloader-optimization.md",
            "status": "added",
            "additions": 111,
            "deletions": 0,
            "changes": 111,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/autoloader-optimization.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/autoloader-optimization.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/articles\/autoloader-optimization.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -0,0 +1,111 @@\n+<!--\n+    tagline: How to reduce the performance impact of the autoloader\n+-->\n+\n+# Autoloader Optimization\n+\n+By default, the Composer autoloader runs relatively fast. However, due to the way\n+PSR-4 and PSR-0 autoloading rules are set up, it needs to check the filesystem\n+before resolving a classname conclusively. This slows things down quite a bit,\n+but it is convenient in development environments because when you add a new class\n+it can immediately be discovered\/used without having to rebuild the autoloader\n+configuration.\n+\n+The problem however is in production you generally want things to happen as fast\n+as possible, as you can simply rebuild the configuration every time you deploy and\n+new classes do not appear at random between deploys.\n+\n+For this reason, Composer offers a few strategies to optimize the autoloader.\n+\n+> **Note:** You **should not** enable any of these optimizations in **development** as\n+> they all will cause various problems when adding\/removing classes. The performance\n+> gains are not worth the trouble in a development setting.\n+\n+## Optimization Level 1: Class map generation\n+\n+### How to run it?\n+\n+There are a few options to enable this:\n+\n+- Set `\"optimize-autoloader\": true` inside the config key of composer.json\n+- Call `install` or `update` with `-o` \/ `--optimize-autoloader`\n+- Call `dump-autoload` with `-o` \/ `--optimize`\n+\n+### What does it do?\n+\n+Class map generation essentially converts PSR-4\/PSR-0 rules into classmap rules.\n+This makes everything quite a bit faster as for known classes the class map\n+returns instantly the path, and Composer can guarantee the class is in there so\n+there is no filesystem check needed.\n+\n+On PHP 5.6+, the class map is also cached in opcache which improves the initialization\n+time greatly. If you make sure opcache is enabled, then the class map should load\n+almost instantly and then class loading is fast.\n+\n+### Trade-offs\n+\n+There are no real trade-offs with this method. It should always be enabled in\n+production.\n+\n+The only issue is it does not keep track of autoload misses (i.e. when\n+it can not find a given class), so those fallback to PSR-4 rules and can still\n+result in slow filesystem checks. To solve this issue two Level 2 optimization\n+options exist, and you can decide to enable either if you have a lot of\n+class_exists checks that are done for classes that do not exist in your project.\n+\n+## Optimization Level 2\/A: Authoritative class maps\n+\n+### How to run it?\n+\n+There are a few options to enable this:\n+\n+- Set `\"classmap-authoritative\": true` inside the config key of composer.json\n+- Call `install` or `update` with `-a` \/ `--classmap-authoritative`\n+- Call `dump-autoload` with `-a` \/ `--classmap-authoritative`\n+\n+### What does it do?\n+\n+Enabling this automatically enables Level 1 class map optimizations.\n+\n+This option is very simple, it says that if something is not found in the classmap,\n+then it does not exist and the autoloader should not attempt to look on the\n+filesystem according to PSR-4 rules.\n+\n+### Trade-offs\n+\n+This option makes the autoloader always return very quickly. On the flipside it\n+also means that in case a class is generated at runtime for some reason, it will\n+not be allowed to be autoloaded. If your project or any of your dependencies does that\n+then you might experience \"class not found\" issues in production. Enable this with care.\n+\n+> Note: This can not be combined with Level 2\/B optimizations. You have to choose one as\n+> they address the same issue in different ways.\n+\n+## Optimization Level 2\/B: APCu cache\n+\n+### How to run it?\n+\n+There are a few options to enable this:\n+\n+- Set `\"apcu-autoloader\": true` inside the config key of composer.json\n+- Call `install` or `update` with `--apcu-autoloader`\n+- Call `dump-autoload` with `--apcu`\n+\n+### What does it do?\n+\n+This option adds an APCu cache as a fallback for the class map. It will not\n+automatically generate the class map though, so you should still enable Level 1\n+optimizations manually if you so desire.\n+\n+Whether a class is found or not, that fact is always cached in APCu so it can be\n+returned quickly on the next request.\n+\n+### Trade-offs\n+\n+This option requires APCu which may or may not be available to you. It also\n+uses APCu memory for autoloading purposes, but it is safe to use and can not\n+result in classes not being found like the authoritative class map\n+optimization above.\n+\n+> Note: This can not be combined with Level 2\/A optimizations. You have to choose one as\n+> they address the same issue in different ways."
        },
        {
            "sha": "791c04956c83258773dcc6b13ce94bde5ffc7039",
            "filename": "doc\/articles\/custom-installers.md",
            "status": "modified",
            "additions": 6,
            "deletions": 0,
            "changes": 6,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/custom-installers.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/custom-installers.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/articles\/custom-installers.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -85,10 +85,16 @@ Example:\n     },\n     \"require\": {\n         \"composer-plugin-api\": \"^1.0\"\n+    },\n+    \"require-dev\": {\n+        \"composer\/composer\": \"^1.3\"\n     }\n }\n ```\n \n+The example above has Composer itself in its require-dev, which allows you to use\n+the Composer classes in your test suite for example.\n+\n ### The Plugin class\n \n The class defining the Composer plugin must implement the"
        },
        {
            "sha": "cdf31f6e443a533e257037d2027cbeba31057615",
            "filename": "doc\/articles\/handling-private-packages-with-satis.md",
            "status": "modified",
            "additions": 6,
            "deletions": 7,
            "changes": 13,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/handling-private-packages-with-satis.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/handling-private-packages-with-satis.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/articles\/handling-private-packages-with-satis.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -16,7 +16,7 @@ Private Packagist is available as a hosted SaaS solution or as an on-premise sel\n package, providing an easy interactive set up experience.\n \n Some of Private Packagist's revenue is used to pay for Composer and Packagist.org\n-development and hosting so using it is a good way to support the maitenance of\n+development and hosting so using it is a good way to support the maintenance of\n these open source projects financially. You can find more information about how to\n set up your own package archive on [Packagist.com](https:\/\/packagist.com).\n \n@@ -77,7 +77,7 @@ or another constraint if you want really specific versions.\n }\n ```\n \n-Once you've done this, you just run:\n+Once you've done this, you run:\n \n     php bin\/satis build <configuration file> <build dir>\n \n@@ -162,7 +162,7 @@ Example using a custom repository using SSH (requires the SSH2 PECL extension):\n \n > **Tip:** See [ssh2 context options] for more information.\n \n-Example using HTTP over SSL using a client certificate:\n+Example using SSL\/TLS (HTTPS) using a client certificate:\n \n ```json\n {\n@@ -220,7 +220,7 @@ available globally you can use the `--global` (`-g`) flag.\n \n ### Downloads\n \n-When GitHub or BitBucket repositories are mirrored on your local satis, the\n+When GitHub, GitLab or BitBucket repositories are mirrored on your local satis, the\n build process will include the location of the downloads these platforms make\n available. This means that the repository and your setup depend on the\n availability of these services.\n@@ -306,7 +306,7 @@ be marked abandoned as well.\n \n It is possible to make satis automatically resolve and add all dependencies for\n your projects. This can be used with the Downloads functionality to have a\n-complete local mirror of packages. Just add the following to your `satis.json`:\n+complete local mirror of packages. Add the following to your `satis.json`:\n \n ```json\n {\n@@ -336,9 +336,8 @@ is set to true.\n  * `notify-batch`: optional, specify a URL that will be called every time a\n    user installs a package. See [notify-batch].\n \n-\n [ssh2 context options]: https:\/\/secure.php.net\/manual\/en\/wrappers.ssh2.php#refsect1-wrappers.ssh2-options\n [ssl context options]: https:\/\/secure.php.net\/manual\/en\/context.ssl.php\n-[Twig]: http:\/\/twig.sensiolabs.org\/\n+[Twig]: https:\/\/twig.sensiolabs.org\/\n [config schema]: https:\/\/getcomposer.org\/doc\/04-schema.md#config\n [notify-batch]: https:\/\/getcomposer.org\/doc\/05-repositories.md#notify-batch"
        },
        {
            "sha": "228cbac9e059ed3430c337ff3b3d3699c017ac92",
            "filename": "doc\/articles\/plugins.md",
            "status": "modified",
            "additions": 5,
            "deletions": 5,
            "changes": 10,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/plugins.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/plugins.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/articles\/plugins.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -34,7 +34,7 @@ requirements:\n The required version of the `composer-plugin-api` follows the same [rules][7]\n as a normal package's.\n \n-The current composer plugin API version is 1.0.0.\n+The current composer plugin API version is 1.1.0.\n \n An example of a valid plugin `composer.json` file (with the autoloading\n part omitted):\n@@ -44,7 +44,7 @@ part omitted):\n     \"name\": \"my\/plugin-package\",\n     \"type\": \"composer-plugin\",\n     \"require\": {\n-        \"composer-plugin-api\": \"^1.0\"\n+        \"composer-plugin-api\": \"^1.1\"\n     },\n     \"extra\": {\n         \"class\": \"My\\\\Plugin\"\n@@ -191,8 +191,8 @@ with [`Composer\\Composer`][4]'s internal state, by providing explicit extension\n for common plugin requirements.\n \n Capable Plugins classes must implement the [`Composer\\Plugin\\Capable`][8] interface\n-and declare their capabilities in the `getCapabilities()` method. \n-This method must return an array, with the _key_ as a Composer Capability class name, \n+and declare their capabilities in the `getCapabilities()` method.\n+This method must return an array, with the _key_ as a Composer Capability class name,\n and the _value_ as the Plugin's own implementation class name of said Capability:\n \n ```php\n@@ -282,4 +282,4 @@ local project plugins are loaded.\n [7]: ..\/01-basic-usage.md#package-versions\n [8]: https:\/\/github.com\/composer\/composer\/blob\/master\/src\/Composer\/Plugin\/Capable.php\n [9]: https:\/\/github.com\/composer\/composer\/blob\/master\/src\/Composer\/Plugin\/Capability\/CommandProvider.php\n-[10]: http:\/\/symfony.com\/doc\/current\/components\/console\/introduction.html\n+[10]: https:\/\/symfony.com\/doc\/current\/components\/console.html"
        },
        {
            "sha": "e0c27b10f98e13de6be9782bf5983931dcc51c6e",
            "filename": "doc\/articles\/scripts.md",
            "status": "modified",
            "additions": 32,
            "deletions": 1,
            "changes": 33,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/scripts.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/scripts.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/articles\/scripts.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -15,7 +15,6 @@ the Composer execution process.\n > executed. If a dependency of the root package specifies its own scripts,\n > Composer does not execute those additional scripts.\n \n-\n ## Event names\n \n Composer fires the following named events during its execution process:\n@@ -64,6 +63,9 @@ Composer fires the following named events during its execution process:\n - **pre-file-download**: occurs before files are downloaded and allows\n   you to manipulate the `RemoteFilesystem` object prior to downloading files\n   based on the URL to be downloaded.\n+- **pre-command-run**: occurs before a command is executed and allows you to\n+  manipulate the `InputInterface` object's options and arguments to tweak\n+  a command's behavior.\n \n > **Note:** Composer makes no assumptions about the state of your dependencies\n > prior to `install` or `update`. Therefore, you should not specify scripts\n@@ -210,6 +212,10 @@ simply running `composer test`:\n }\n ```\n \n+Similar to the `run-script` command you can give additional arguments to scripts,\n+e.g. `composer test -- --filter <pattern>` will pass `--filter <pattern>` along\n+to the `phpunit` script.\n+\n > **Note:** Before executing scripts, Composer's bin-dir is temporarily pushed\n > on top of the PATH environment variable so that binaries of dependencies\n > are easily accessible. In this example no matter if the `phpunit` binary is\n@@ -232,6 +238,17 @@ one by prefixing the command name with `@`:\n }\n ```\n \n+You can also refer a script and pass it new arguments:\n+\n+```json\n+{\n+  \"scripts\": {\n+    \"tests\": \"phpunit\",\n+    \"testsVerbose\": \"@tests -vvv\"\n+  }\n+}\n+```\n+\n ## Calling Composer commands\n \n To call Composer commands, you can use `@composer` which will automatically\n@@ -271,3 +288,17 @@ resolve to whatever php process is currently being used:\n One limitation of this is that you can not call multiple commands in\n a row like `@php install && @php foo`. You must split them up in a\n JSON array of commands.\n+\n+## Custom descriptions.\n+\n+You can set custom script descriptions with the following in your `composer.json`:\n+\n+```json\n+{\n+    \"scripts-descriptions\": {\n+        \"test\": \"Run all tests!\"\n+    }\n+}\n+```\n+\n+> **Note:** You can only set custom descriptions of custom commands."
        },
        {
            "sha": "d0a64506f75ffa9b9fed39772566774a74ebc7ec",
            "filename": "doc\/articles\/troubleshooting.md",
            "status": "modified",
            "additions": 15,
            "deletions": 10,
            "changes": 25,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/troubleshooting.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/troubleshooting.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/articles\/troubleshooting.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -76,8 +76,7 @@ This is a list of common pitfalls on using Composer, and how to avoid them.\n \n ## I have a dependency which contains a \"repositories\" definition in its composer.json, but it seems to be ignored.\n \n-The [`repositories`](..\/04-schema.md#repositories) configuration property is defined as [root-only]\n-(..\/04-schema.md#root-package). It is not inherited. You can read more about the reasons behind this in the \"[why can't\n+The [`repositories`](..\/04-schema.md#repositories) configuration property is defined as [root-only](..\/04-schema.md#root-package). It is not inherited. You can read more about the reasons behind this in the \"[why can't\n composer load repositories recursively?](..\/faqs\/why-can't-composer-load-repositories-recursively.md)\" article.\n The simplest work-around to this limitation, is moving or duplicating the `repositories` definition into your root\n composer.json.\n@@ -141,13 +140,19 @@ Debian-like systems):\n memory_limit = -1\n ```\n \n+Composer also respects a memory limit defined by the `COMPOSER_MEMORY_LIMIT` environment variable:\n+\n+```sh\n+COMPOSER_MEMORY_LIMIT=-1 composer.phar <...>\n+```\n+\n Or, you can increase the limit with a command-line argument:\n \n ```sh\n php -d memory_limit=-1 composer.phar <...>\n ```\n \n-This issue can also happen on cPanel instances, when the shell fork bomb protection is activated. For more information, see the [documentation](https:\/\/documentation.cpanel.net\/display\/ALD\/Shell+Fork+Bomb+Protection) of the fork bomb feature on the cPanel site.\n+This issue can also happen on cPanel instances, when the shell fork bomb protection is activated. For more information, see the [documentation](https:\/\/documentation.cpanel.net\/display\/68Docs\/Shell+Fork+Bomb+Protection) of the fork bomb feature on the cPanel site.\n \n ## Xdebug impact on Composer\n \n@@ -164,7 +169,7 @@ please report this [issue](https:\/\/github.com\/composer\/composer\/issues).\n 2. Search for an `AutoRun` key inside `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Command Processor`,\n    `HKEY_CURRENT_USER\\Software\\Microsoft\\Command Processor`\n    or `HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Command Processor`.\n-3. Check if it contains any path to non-existent file, if it's the case, just remove them.\n+3. Check if it contains any path to non-existent file, if it's the case, remove them.\n \n ## API rate limit and OAuth tokens\n \n@@ -245,7 +250,7 @@ following workarounds:\n On linux, it seems that running this command helps to make ipv4 traffic have a\n higher prio than ipv6, which is a better alternative than disabling ipv6 entirely:\n \n-```Bash\n+```bash\n sudo sh -c \"echo 'precedence ::ffff:0:0\/96 100' >> \/etc\/gai.conf\"\n ```\n \n@@ -257,21 +262,21 @@ On windows the only way is to disable ipv6 entirely I am afraid (either in windo\n \n Get name of your network device:\n \n-```\n+```bash\n networksetup -listallnetworkservices\n ```\n \n Disable IPv6 on that device (in this case \"Wi-Fi\"):\n \n-```\n+```bash\n networksetup -setv6off Wi-Fi\n ```\n \n Run composer ...\n \n You can enable IPv6 again with:\n \n-```\n+```bash\n networksetup -setv6automatic Wi-Fi\n ```\n \n@@ -282,14 +287,14 @@ for everyone.\n ## Composer hangs with SSH ControlMaster\n \n When you try to install packages from a Git repository and you use the `ControlMaster`\n-setting for your SSH connection, Composer might just hang endlessly and you see a `sh`\n+setting for your SSH connection, Composer might hang endlessly and you see a `sh`\n process in the `defunct` state in your process list.\n \n The reason for this is a SSH Bug: https:\/\/bugzilla.mindrot.org\/show_bug.cgi?id=1988\n \n As a workaround, open a SSH connection to your Git host before running Composer:\n \n-```\n+```bash\n ssh -t git@mygitserver.tld\n composer update\n ```"
        },
        {
            "sha": "0022b90b9cce073338a93677cfb1b98b4a44475a",
            "filename": "doc\/articles\/vendor-binaries.md",
            "status": "modified",
            "additions": 1,
            "deletions": 6,
            "changes": 7,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/vendor-binaries.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/vendor-binaries.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/articles\/vendor-binaries.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,7 +13,6 @@ If a package contains other scripts that are not needed by the package\n users (like build or compile scripts) that code should not be listed\n as a vendor binary.\n \n-\n ## How is it defined?\n \n It is defined by adding the `bin` key to a project's `composer.json`.\n@@ -34,12 +33,10 @@ for any project that **depends** on that project.\n This is a convenient way to expose useful scripts that would\n otherwise be hidden deep in the `vendor\/` directory.\n \n-\n ## What happens when Composer is run on a composer.json that defines vendor binaries?\n \n For the binaries that a package defines directly, nothing happens.\n \n-\n ## What happens when Composer is run on a composer.json that has dependencies with vendor binaries listed?\n \n Composer looks for the binaries defined in all of the dependencies. A\n@@ -69,13 +66,12 @@ Say project `my-vendor\/project-b` has requirements setup like this:\n ```\n \n Running `composer install` for this `composer.json` will look at\n-all of project-b's dependencies and install them to `vendor\/bin`.\n+all of project-a's binaries and install them to `vendor\/bin`.\n \n In this case, Composer will make `vendor\/my-vendor\/project-a\/bin\/project-a-bin`\n available as `vendor\/bin\/project-a-bin`. On a Unix-like platform\n this is accomplished by creating a symlink.\n \n-\n ## What about Windows and .bat files?\n \n Packages managed entirely by Composer do not *need* to contain any\n@@ -90,7 +86,6 @@ Packages that need to support workflows that may not include Composer\n are welcome to maintain custom `.bat` files. In this case, the package\n should **not** list the `.bat` file as a binary as it is not needed.\n \n-\n ## Can vendor binaries be installed somewhere other than vendor\/bin?\n \n Yes, there are two ways an alternate vendor binary location can be specified:"
        },
        {
            "sha": "c1fb255513908ed471d8ef468aafb0a8d7286215",
            "filename": "doc\/articles\/versions.md",
            "status": "modified",
            "additions": 123,
            "deletions": 17,
            "changes": 140,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/versions.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/articles\/versions.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/articles\/versions.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,12 +1,95 @@\n <!--\n-    tagline: Version constraints explained.\n+    tagline: Versions explained.\n -->\n \n-# Versions\n-\n-## Basic Constraints\n-\n-### Exact\n+# Versions and constraints\n+\n+## Composer Versions vs VCS Versions\n+\n+Because Composer is heavily geared toward utilizing version control systems\n+like git, the term \"version\" can be a little ambiguous. In the sense of a\n+version control system, a \"version\" is a specific set of files that contain\n+specific data. In git terminology, this is a \"ref\", or a specific commit,\n+which may be represented by a branch HEAD or a tag. When you check out that\n+version in your VCS -- for example, tag `v1.1` or commit `e35fa0d` --, you're\n+asking for a single, known set of files, and you always get the same files back.\n+\n+In Composer, what's often referred to casually as a version -- that is,\n+the string that follows the package name in a require line (e.g., `~1.1` or\n+`1.2.*`) -- is actually more specifically a version constraint. Composer\n+uses version constraints to figure out which refs in a VCS it should be\n+checking out (or simply to verify that a given library is acceptable in\n+the case of a statically-maintained library with a `version` specification\n+in `composer.json`).\n+\n+## VCS Tags and Branches\n+\n+*For the following discussion, let's assume the following sample library\n+repository:*\n+\n+```sh\n+~\/my-library$ git branch\n+v1\n+v2\n+my-feature\n+nother-feature\n+\n+~\/my-library$ git tag\n+v1.0\n+v1.0.1\n+v1.0.2\n+v1.1-BETA\n+v1.1-RC1\n+v1.1-RC2\n+v1.1\n+v1.1.1\n+v2.0-BETA\n+v2.0-RC1\n+v2.0\n+v2.0.1\n+v2.0.2\n+```\n+\n+### Tags\n+\n+Normally, Composer deals with tags (as opposed to branches -- if you don't\n+know what this means, read up on\n+[version control systems](https:\/\/en.wikipedia.org\/wiki\/Version_control#Common_vocabulary)).\n+When you write a version constraint, it may reference a specific tag (e.g.,\n+`1.1`) or it may reference a valid range of tags (e.g., `>=1.1 <2.0`, or\n+`~4.0`). To resolve these constraints, Composer first asks the VCS to list\n+all available tags, then creates an internal list of available versions based\n+on these tags. In the above example, composer's internal list includes versions\n+`1.0`, `1.0.1`, `1.0.2`, the beta release of `1.1`, the first and second\n+release candidates of `1.1`, the final release version `1.1`, etc.... (Note\n+that Composer automatically removes the 'v' prefix in the actual tagname to\n+get a valid final version number.)\n+\n+When Composer has a complete list of available versions from your VCS, it then\n+finds the highest version that matches all version constraints in your project\n+(it's possible that other packages require more specific versions of the\n+library than you do, so the version it chooses may not always be the highest\n+available version) and it downloads a zip archive of that tag to unpack in the\n+correct location in your `vendor` directory.\n+\n+### Branches\n+\n+If you want Composer to check out a branch instead of a tag, you need to point it to the branch using the special `dev-*` prefix (or sometimes suffix; see below). If you're checking out a branch, it's assumed that you want to *work* on the branch and Composer actually clones the repo into the correct place in your `vendor` directory. For tags, it copies the right files without actually cloning the repo. (You can modify this behavior with --prefer-source and --prefer-dist, see [install options](..\/03-cli.md#install).)\n+\n+In the above example, if you wanted to check out the `my-feature` branch, you would specify `dev-my-feature` as the version constraint in your `require` clause. This would result in Composer cloning the `my-library` repository into my `vendor` directory and checking out the `my-feature` branch.\n+\n+When branch names look like versions, we have to clarify for composer that we're trying to check out a branch and not a tag. In the above example, we have two version branches: `v1` and `v2`. To get Composer to check out one of these branches, you must specify a version constraint that looks like this: `v1.x-dev`. The `.x` is an arbitrary string that Composer requires to tell it that we're talking about the `v1` branch and not a `v1` tag (alternatively, you can name the branch `v1.x` instead of `v1`). In the case of a branch with a version-like name (`v1`, in this case), you append `-dev` as a suffix, rather than using `dev-` as a prefix.\n+\n+### Minimum Stability\n+\n+There's one more thing that will affect which files are checked out of a library's VCS and added to your project: Composer allows you to specify stability constraints to limit which tags are considered valid. In the above example, note that the library released a beta and two release candidates for version `1.1` before the final official release. To receive these versions when running `composer install` or `composer update`, we have to explicitly tell Composer that we are ok with release candidates and beta releases (and alpha releases, if we want those). This can be done using either a project-wide `minimum-stability` value in `composer.json` or using \"stability flags\" in version constraints. Read more on the [schema page](..\/04-schema.md#minimum-stability).\n+\n+## Writing Version Constraints\n+\n+Now that you have an idea of how Composer sees versions, let's talk about how\n+to specify version constraints for your project dependencies.\n+\n+### Exact Version Constraint\n \n You can specify the exact version of a package. This will tell Composer to\n install this version and this version only. If other dependencies require\n@@ -15,7 +98,7 @@ or update procedures.\n \n Example: `1.0.2`\n \n-### Range\n+### Version Range\n \n By using comparison operators you can specify ranges of valid versions. Valid\n operators are `>`, `>=`, `<`, `<=`, `!=`.\n@@ -26,15 +109,15 @@ will be treated as a **logical OR**. AND has higher precedence than OR.\n \n > **Note:** Be careful when using unbounded ranges as you might end up\n > unexpectedly installing versions that break backwards compatibility.\n-> Consider using the [caret](#caret) operator instead for safety.\n+> Consider using the [caret](#caret-version-range-) operator instead for safety.\n \n Examples:\n \n * `>=1.0`\n * `>=1.0 <2.0`\n * `>=1.0 <1.1 || >=1.2`\n \n-### Range (Hyphen)\n+### Hyphenated Version Range ( - )\n \n Inclusive set of versions. Partial versions on the right include are completed\n with a wildcard. For example `1.0 - 2.0` is equivalent to `>=1.0.0 <2.1` as the\n@@ -43,7 +126,7 @@ with a wildcard. For example `1.0 - 2.0` is equivalent to `>=1.0.0 <2.1` as the\n \n Example: `1.0 - 2.0`\n \n-### Wildcard\n+### Wildcard Version Range (.*)\n \n You can specify a pattern with a `*` wildcard. `1.0.*` is the equivalent of\n `>=1.0 <1.1`.\n@@ -52,12 +135,12 @@ Example: `1.0.*`\n \n ## Next Significant Release Operators\n \n-### Tilde\n+### Tilde Version Range (~)\n \n The `~` operator is best explained by example: `~1.2` is equivalent to\n `>=1.2 <2.0.0`, while `~1.2.3` is equivalent to `>=1.2.3 <1.3.0`. As you can see\n it is mostly useful for projects respecting [semantic\n-versioning](http:\/\/semver.org\/). A common usage would be to mark the minimum\n+versioning](https:\/\/semver.org\/). A common usage would be to mark the minimum\n minor version you depend on, like `~1.2` (which allows anything up to, but not\n including, 2.0). Since in theory there should be no backwards compatibility\n breaks until 2.0, that works well. Another way of looking at it is that using\n@@ -74,7 +157,7 @@ Example: `~1.2`\n > it will not allow the major number to increase trying to keep backwards\n > compatibility.\n \n-### Caret\n+### Caret Version Range (^)\n \n The `^` operator behaves very similarly but it sticks closer to semantic\n versioning, and will always allow non-breaking updates. For example `^1.2.3`\n@@ -87,7 +170,7 @@ library code.\n \n Example: `^1.2.3`\n \n-## Stability\n+## Stability Constraints\n \n If you are using a constraint that does not explicitly define a stability,\n Composer will default internally to `-dev` or `-stable`, depending on the\n@@ -113,10 +196,33 @@ Examples:\n To allow various stabilities without enforcing them at the constraint level\n however, you may use [stability-flags](..\/04-schema.md#package-links) like\n `@<stability>` (e.g. `@dev`) to let composer know that a given package\n-can be installed in a different stability than your default\n-[minimum-stability](..\/04-schema.md#minimum-stability) setting.\n+can be installed in a different stability than your default minimum-stability\n+setting. All available stability flags are listed on the minimum-stability\n+section of the [schema page](..\/04-schema.md#minimum-stability).\n+\n+## Summary\n+```json\n+\"require\": {\n+    \"vendor\/package\": \"1.3.2\", \/\/ exactly 1.3.2\n+\n+    \/\/ >, <, >=, <= | specify upper \/ lower bounds\n+    \"vendor\/package\": \">=1.3.2\", \/\/ anything above or equal to 1.3.2\n+    \"vendor\/package\": \"<1.3.2\", \/\/ anything below 1.3.2\n+\n+    \/\/ * | wildcard\n+    \"vendor\/package\": \"1.3.*\", \/\/ >=1.3.0 <1.4.0\n+\n+    \/\/ ~ | allows last digit specified to go up\n+    \"vendor\/package\": \"~1.3.2\", \/\/ >=1.3.2 <1.4.0\n+    \"vendor\/package\": \"~1.3\", \/\/ >=1.3.0 <2.0.0\n+\n+    \/\/ ^ | doesn't allow breaking changes (major version fixed - following semver)\n+    \"vendor\/package\": \"^1.3.2\", \/\/ >=1.3.2 <2.0.0\n+    \"vendor\/package\": \"^0.3.2\", \/\/ >=0.3.2 <0.4.0 \/\/ except if major version is 0\n+}\n+```\n \n-## Test version constraints\n+## Testing Version Constraints\n \n You can test version constraints using [semver.mwl.be](https:\/\/semver.mwl.be).\n Fill in a package name and it will autofill the default version constraint"
        },
        {
            "sha": "20a2e83ae5fe8a4b044339790cbd96ecb0d15de1",
            "filename": "doc\/faqs\/how-do-i-install-a-package-to-a-custom-path-for-my-framework.md",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/how-do-i-install-a-package-to-a-custom-path-for-my-framework.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/how-do-i-install-a-package-to-a-custom-path-for-my-framework.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/faqs\/how-do-i-install-a-package-to-a-custom-path-for-my-framework.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -23,7 +23,7 @@ WordPress theme:\n \n Now when your theme is installed with Composer it will be placed into\n `wp-content\/themes\/themename\/` folder. Check the\n-[current supported types](https:\/\/github.com\/composer\/installers#current-supported-types)\n+[current supported types](https:\/\/github.com\/composer\/installers#current-supported-package-types)\n for your package.\n \n As a **package consumer** you can set or override the install path for a package"
        },
        {
            "sha": "8a35e34d7774de048e07b1093c073765711422cb",
            "filename": "doc\/faqs\/how-to-install-composer-programmatically.md",
            "status": "modified",
            "additions": 7,
            "deletions": 7,
            "changes": 14,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/how-to-install-composer-programmatically.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/how-to-install-composer-programmatically.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/faqs\/how-to-install-composer-programmatically.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,17 +1,17 @@\n-# How to install Composer programmatically?\n+# How do I install Composer programmatically?\n \n As noted on the download page, the installer script contains a\n signature which changes when the installer code changes and as such\n-it should not be relied upon long term.\n+it should not be relied upon in the long term.\n \n-An alternative is to use this script which only works with unix utils:\n+An alternative is to use this script which only works with UNIX utilities:\n \n ```bash\n #!\/bin\/sh\n \n-EXPECTED_SIGNATURE=$(wget -q -O - https:\/\/composer.github.io\/installer.sig)\n+EXPECTED_SIGNATURE=\"$(wget -q -O - https:\/\/composer.github.io\/installer.sig)\"\n php -r \"copy('https:\/\/getcomposer.org\/installer', 'composer-setup.php');\"\n-ACTUAL_SIGNATURE=$(php -r \"echo hash_file('SHA384', 'composer-setup.php');\")\n+ACTUAL_SIGNATURE=\"$(php -r \"echo hash_file('sha384', 'composer-setup.php');\")\"\n \n if [ \"$EXPECTED_SIGNATURE\" != \"$ACTUAL_SIGNATURE\" ]\n then\n@@ -29,8 +29,8 @@ exit $RESULT\n The script will exit with 1 in case of failure, or 0 on success, and is quiet\n if no error occurs.\n \n-Alternatively if you want to rely on an exact copy of the installer you can fetch\n-a specific version from github's history. The commit hash should be enough to\n+Alternatively, if you want to rely on an exact copy of the installer, you can fetch\n+a specific version from GitHub's history. The commit hash should be enough to\n give it uniqueness and authenticity as long as you can trust the GitHub servers.\n For example:\n "
        },
        {
            "sha": "1b3e9d3832f0bde16f87d9c3062b52811d28ecb4",
            "filename": "doc\/faqs\/how-to-install-untrusted-packages-safely.md",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/how-to-install-untrusted-packages-safely.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/how-to-install-untrusted-packages-safely.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/faqs\/how-to-install-untrusted-packages-safely.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,6 +1,6 @@\n # How do I install untrusted packages safely? Is it safe to run Composer as superuser or root?\n \n-Certain Composer commands, including `exec`, `install`, and `update` allow third party code to \n+Certain Composer commands, including `exec`, `install`, and `update` allow third party code to\n execute on your system. This is from its \"plugins\" and \"scripts\" features. Plugins and scripts have\n full access to the user account which runs Composer. For this reason, it is strongly advised to\n **avoid running Composer as super-user\/root**."
        },
        {
            "sha": "20095bb011feea7414cd14f4daaa150dc8d74804",
            "filename": "doc\/faqs\/which-version-numbering-system-does-composer-itself-use.md",
            "status": "added",
            "additions": 4,
            "deletions": 0,
            "changes": 4,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/which-version-numbering-system-does-composer-itself-use.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/which-version-numbering-system-does-composer-itself-use.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/faqs\/which-version-numbering-system-does-composer-itself-use.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -0,0 +1,4 @@\n+# Which version numbering system does Composer itself use?\n+\n+Composer uses [Semantic Versioning (aka SemVer)\n+2.0.0](https:\/\/semver.org\/spec\/v2.0.0.html)."
        },
        {
            "sha": "9aef970f96696a6bc01f52ca816655f0bd2e3923",
            "filename": "doc\/faqs\/why-are-unbound-version-constraints-a-bad-idea.md",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/why-are-unbound-version-constraints-a-bad-idea.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/why-are-unbound-version-constraints-a-bad-idea.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/faqs\/why-are-unbound-version-constraints-a-bad-idea.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -14,7 +14,7 @@ compatible with the new major version of your dependency.\n \n For example instead of using `>=3.4` you should use `~3.4` which allows all\n versions up to `3.999` but does not include `4.0` and above. The `^` operator\n-works very well with libraries following [semantic versioning](http:\/\/semver.org).\n+works very well with libraries following [semantic versioning](https:\/\/semver.org).\n \n **Note:** As a package maintainer, you can make the life of your users easier\n by providing an [alias version](..\/articles\/aliases.md) for your development"
        },
        {
            "sha": "f4aa5b157ebca94ece92848e24b06e07639210c9",
            "filename": "doc\/faqs\/why-are-version-constraints-combining-comparisons-and-wildcards-a-bad-idea.md",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/why-are-version-constraints-combining-comparisons-and-wildcards-a-bad-idea.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/why-are-version-constraints-combining-comparisons-and-wildcards-a-bad-idea.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/faqs\/why-are-version-constraints-combining-comparisons-and-wildcards-a-bad-idea.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -16,6 +16,6 @@ but it is not possible to determine if when you wrote that you were thinking\n of a package in version 3.0.0 or not. Should it match because you asked for\n `>=2` or should it not match because you asked for a `2.*`?\n \n-For this reason, Composer just throws an error and says that this is invalid.\n+For this reason, Composer throws an error and says that this is invalid.\n The easy way to fix it is to think about what you really mean, and use only\n one of those rules.\n\\ No newline at end of file"
        },
        {
            "sha": "a39aff6fb6674adbb0c36092fa811d23d56e4263",
            "filename": "doc\/faqs\/why-can't-composer-load-repositories-recursively.md",
            "status": "modified",
            "additions": 5,
            "deletions": 4,
            "changes": 9,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/why-can't-composer-load-repositories-recursively.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/faqs\/why-can't-composer-load-repositories-recursively.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/faqs\/why-can't-composer-load-repositories-recursively.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -8,13 +8,14 @@ Before going into details as to why this is like that, you have to understand\n that the main use of custom VCS & package repositories is to temporarily try\n some things, or use a fork of a project until your pull request is merged, etc.\n You should not use them to keep track of private packages. For that you should\n-look into [setting up Satis](..\/articles\/handling-private-packages-with-satis.md)\n-or getting a [Toran Proxy](https:\/\/toranproxy.com) license for your company.\n+rather look into [Private Packagist](https:\/\/packagist.com) which lets you\n+configure all your private packages in one place, and avoids the slow-downs\n+associated with inline VCS repositories.\n \n There are three ways the dependency solver could work with custom repositories:\n \n - Fetch the repositories of root package, get all the packages from the defined\n-repositories, resolve requirements. This is the current state and it works well\n+repositories, then resolve requirements. This is the current state and it works well\n except for the limitation of not loading repositories recursively.\n \n - Fetch the repositories of root package, while initializing packages from the\n@@ -28,7 +29,7 @@ dist\/source. There are many many ways this could go wrong.\n - Fetch the repositories of root package, then fetch the repositories of the\n first level dependencies, then fetch the repositories of their dependencies, etc,\n then resolve requirements. This sounds more efficient, but it suffers from the\n-same problems than the second solution, because loading the repositories of the\n+same problems as the second solution, because loading the repositories of the\n dependencies is not as easy as it sounds. You need to load all the repos of all\n the potential matches for a requirement, which again might have conflicting\n package definitions."
        },
        {
            "sha": "d67edb220ba01457e978c55b6a18d6c4955f721d",
            "filename": "doc\/fixtures\/fixtures.md",
            "status": "modified",
            "additions": 0,
            "deletions": 1,
            "changes": 1,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/fixtures\/fixtures.md",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/doc\/fixtures\/fixtures.md",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/doc\/fixtures\/fixtures.md?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -20,4 +20,3 @@ All these repositories contain the following packages.\n * `bar\/baz` has a 1.0.0 version and 1.0.x-dev as well as dev-default branches.\n    Additionally, 1.1.x-dev is a branch alias for dev-default.\n \n-"
        },
        {
            "sha": "ce80c209be6f09310cf19b6de64ecf7813e0fa39",
            "filename": "res\/composer-schema.json",
            "status": "modified",
            "additions": 36,
            "deletions": 13,
            "changes": 49,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/res\/composer-schema.json",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/res\/composer-schema.json",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/res\/composer-schema.json?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -33,6 +33,10 @@\n             \"description\": \"Homepage URL for the project.\",\n             \"format\": \"uri\"\n         },\n+        \"readme\": {\n+            \"type\": \"string\",\n+            \"description\": \"Relative path to the readme document.\"\n+        },\n         \"version\": {\n             \"type\": \"string\",\n             \"description\": \"Package version, see https:\/\/getcomposer.org\/doc\/04-schema.md#version for more info on valid schemes.\"\n@@ -274,6 +278,14 @@\n                 \"archive-dir\": {\n                     \"type\": \"string\",\n                     \"description\": \"The default archive path when not provided on cli, defaults to \\\".\\\".\"\n+                },\n+                \"htaccess-protect\": {\n+                    \"type\": \"boolean\",\n+                    \"description\": \"Defaults to true. If set to false, Composer will not create .htaccess files in the composer home, cache, and data directories.\"\n+                },\n+                \"sort-packages\": {\n+                    \"type\": \"boolean\",\n+                    \"description\": \"Defaults to false. If set to true, Composer will sort packages when adding\/updating a new dependency.\"\n                 }\n             }\n         },\n@@ -360,8 +372,8 @@\n             \"description\": \"If set to true, stable packages will be preferred to dev packages when possible, even if the minimum-stability allows unstable packages.\"\n         },\n         \"bin\": {\n-            \"type\": [\"array\"],\n-            \"description\": \"A set of files that should be treated as binaries and symlinked into bin-dir (from config).\",\n+            \"type\": [\"string\", \"array\"],\n+            \"description\": \"A set of files, or a single file, that should be treated as binaries and symlinked into bin-dir (from config).\",\n             \"items\": {\n                 \"type\": \"string\"\n             }\n@@ -375,7 +387,7 @@\n         },\n         \"scripts\": {\n             \"type\": [\"object\"],\n-            \"description\": \"Scripts listeners that will be executed before\/after some events.\",\n+            \"description\": \"Script listeners that will be executed before\/after some events.\",\n             \"properties\": {\n                 \"pre-install-cmd\": {\n                     \"type\": [\"array\", \"string\"],\n@@ -443,6 +455,13 @@\n                 }\n             }\n         },\n+        \"scripts-descriptions\": {\n+            \"type\": [\"object\"],\n+            \"description\": \"Descriptions for custom commands, shown in console help.\",\n+            \"additionalProperties\": {\n+                \"type\": \"string\"\n+            }\n+        },\n         \"support\": {\n             \"type\": \"object\",\n             \"properties\": {\n@@ -471,6 +490,11 @@\n                     \"description\": \"IRC channel for support, as irc:\/\/server\/channel.\",\n                     \"format\": \"uri\"\n                 },\n+                \"chat\": {\n+                    \"type\": \"string\",\n+                    \"description\": \"URL to the support chat.\",\n+                    \"format\": \"uri\"\n+                },\n                 \"source\": {\n                     \"type\": \"string\",\n                     \"description\": \"URL to browse or download the sources.\",\n@@ -588,7 +612,7 @@\n             \"required\": [\"type\", \"url\"],\n             \"properties\": {\n                 \"type\": { \"type\": \"string\", \"enum\": [\"composer\"] },\n-                \"url\": { \"type\": \"string\", \"format\": \"uri\" },\n+                \"url\": { \"type\": \"string\" },\n                 \"options\": {\n                     \"type\": \"object\",\n                     \"additionalProperties\": true\n@@ -606,9 +630,9 @@\n                 \"no-api\": { \"type\": \"boolean\" },\n                 \"secure-http\": { \"type\": \"boolean\" },\n                 \"svn-cache-credentials\": { \"type\": \"boolean\" },\n-                \"trunk-path\": { \"type\": \"string\" },\n-                \"branches-path\": { \"type\": \"string\" },\n-                \"tags-path\": { \"type\": \"string\" },\n+                \"trunk-path\": { \"type\": [\"string\", \"boolean\"] },\n+                \"branches-path\": { \"type\": [\"string\", \"boolean\"] },\n+                \"tags-path\": { \"type\": [\"string\", \"boolean\"] },\n                 \"package-path\": { \"type\": \"string\" },\n                 \"depot\": { \"type\": \"string\" },\n                 \"branch\": { \"type\": \"string\" },\n@@ -645,7 +669,7 @@\n             \"required\": [\"type\", \"url\"],\n             \"properties\": {\n                 \"type\": { \"type\": \"string\", \"enum\": [\"pear\"] },\n-                \"url\": { \"type\": \"string\", \"format\": \"uri\" },\n+                \"url\": { \"type\": \"string\" },\n                 \"vendor-alias\": { \"type\": \"string\" }\n             }\n         },\n@@ -659,15 +683,14 @@\n                         { \"$ref\": \"#\/definitions\/inline-package\" },\n                         {\n                             \"type\": \"array\",\n-                            \"items\": {\n-                                \"type\": { \"$ref\": \"#\/definitions\/inline-package\" }\n-                            }\n+                            \"items\": { \"$ref\": \"#\/definitions\/inline-package\" }\n                         }\n                     ]\n                 }\n             }\n         },\n         \"inline-package\": {\n+            \"type\": \"object\",\n             \"required\": [\"name\", \"version\"],\n             \"properties\": {\n                 \"name\": {\n@@ -761,8 +784,8 @@\n                     }\n                 },\n                 \"bin\": {\n-                    \"type\": [\"array\"],\n-                    \"description\": \"A set of files that should be treated as binaries and symlinked into bin-dir (from config).\",\n+                    \"type\": [\"string\", \"array\"],\n+                    \"description\": \"A set of files, or a single file, that should be treated as binaries and symlinked into bin-dir (from config).\",\n                     \"items\": {\n                         \"type\": \"string\"\n                     }"
        },
        {
            "sha": "0db4015c3ea941aa42bb8f8eaeed0e33ed8bfc7f",
            "filename": "src\/Composer\/Autoload\/AutoloadGenerator.php",
            "status": "modified",
            "additions": 64,
            "deletions": 11,
            "changes": 75,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Autoload\/AutoloadGenerator.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Autoload\/AutoloadGenerator.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Autoload\/AutoloadGenerator.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -66,7 +66,7 @@ public function __construct(EventDispatcher $eventDispatcher, IOInterface $io =\n \n     public function setDevMode($devMode = true)\n     {\n-        $this->devMode = (boolean) $devMode;\n+        $this->devMode = (bool) $devMode;\n     }\n \n     \/**\n@@ -77,7 +77,7 @@ public function setDevMode($devMode = true)\n      *\/\n     public function setClassMapAuthoritative($classMapAuthoritative)\n     {\n-        $this->classMapAuthoritative = (boolean) $classMapAuthoritative;\n+        $this->classMapAuthoritative = (bool) $classMapAuthoritative;\n     }\n \n     \/**\n@@ -87,7 +87,7 @@ public function setClassMapAuthoritative($classMapAuthoritative)\n      *\/\n     public function setApcu($apcu)\n     {\n-        $this->apcu = (boolean) $apcu;\n+        $this->apcu = (bool) $apcu;\n     }\n \n     \/**\n@@ -97,7 +97,7 @@ public function setApcu($apcu)\n      *\/\n     public function setRunScripts($runScripts = true)\n     {\n-        $this->runScripts = (boolean) $runScripts;\n+        $this->runScripts = (bool) $runScripts;\n     }\n \n     public function dump(Config $config, InstalledRepositoryInterface $localRepo, PackageInterface $mainPackage, InstallationManager $installationManager, $targetDir, $scanPsr0Packages = false, $suffix = '')\n@@ -157,7 +157,7 @@ public function dump(Config $config, InstalledRepositoryInterface $localRepo, Pa\n \n         \/\/ Collect information from all packages.\n         $packageMap = $this->buildPackageMap($installationManager, $mainPackage, $localRepo->getCanonicalPackages());\n-        $autoloads = $this->parseAutoloads($packageMap, $mainPackage);\n+        $autoloads = $this->parseAutoloads($packageMap, $mainPackage, $this->devMode === false);\n \n         \/\/ Process the 'psr-0' base directories.\n         foreach ($autoloads['psr-0'] as $namespace => $paths) {\n@@ -199,7 +199,7 @@ public function dump(Config $config, InstalledRepositoryInterface $localRepo, Pa\n         $targetDirLoader = null;\n         $mainAutoload = $mainPackage->getAutoload();\n         if ($mainPackage->getTargetDir() && !empty($mainAutoload['psr-0'])) {\n-            $levels = count(explode('\/', $filesystem->normalizePath($mainPackage->getTargetDir())));\n+            $levels = substr_count($filesystem->normalizePath($mainPackage->getTargetDir()), '\/') + 1;\n             $prefixes = implode(', ', array_map(function ($prefix) {\n                 return var_export($prefix, true);\n             }, array_keys($mainAutoload['psr-0'])));\n@@ -312,6 +312,8 @@ public static function autoload(\\$class)\n                 'optimize' => (bool) $scanPsr0Packages,\n             ));\n         }\n+\n+        return count($classMap);\n     }\n \n     private function addClassMapCode($filesystem, $basePath, $vendorPath, $dir, $blacklist = null, $namespaceFilter = null, array $classMap = array())\n@@ -383,11 +385,15 @@ protected function validatePackage(PackageInterface $package)\n      *\n      * @param  array            $packageMap  array of array(package, installDir-relative-to-composer.json)\n      * @param  PackageInterface $mainPackage root package instance\n+     * @param  bool             $filterOutRequireDevPackages whether to filter out require-dev packages\n      * @return array            array('psr-0' => array('Ns\\\\Foo' => array('installDir')))\n      *\/\n-    public function parseAutoloads(array $packageMap, PackageInterface $mainPackage)\n+    public function parseAutoloads(array $packageMap, PackageInterface $mainPackage, $filterOutRequireDevPackages = false)\n     {\n         $mainPackageMap = array_shift($packageMap);\n+        if ($filterOutRequireDevPackages) {\n+            $packageMap = $this->filterPackageMap($packageMap, $mainPackage);\n+        }\n         $sortedPackageMap = $this->sortPackageMap($packageMap);\n         $sortedPackageMap[] = $mainPackageMap;\n         array_unshift($packageMap, $mainPackageMap);\n@@ -433,9 +439,14 @@ public function createLoader(array $autoloads)\n         }\n \n         if (isset($autoloads['classmap'])) {\n+            $blacklist = null;\n+            if (!empty($autoloads['exclude-from-classmap'])) {\n+                $blacklist = '{(' . implode('|', $autoloads['exclude-from-classmap']) . ')}';\n+            }\n+\n             foreach ($autoloads['classmap'] as $dir) {\n                 try {\n-                    $loader->addClassMap($this->generateClassMap($dir, null, null, false));\n+                    $loader->addClassMap($this->generateClassMap($dir, $blacklist, null, false));\n                 } catch (\\RuntimeException $e) {\n                     $this->io->writeError('<warning>'.$e->getMessage().'<\/warning>');\n                 }\n@@ -534,7 +545,7 @@ protected function getPathCode(Filesystem $filesystem, $basePath, $vendorPath, $\n             }\n         }\n \n-        if (preg_match('\/\\.phar$\/', $path)) {\n+        if (preg_match('\/\\.phar.+$\/', $path)) {\n             $baseDir = \"'phar:\/\/' . \" . $baseDir;\n         }\n \n@@ -543,7 +554,7 @@ protected function getPathCode(Filesystem $filesystem, $basePath, $vendorPath, $\n \n     protected function getAutoloadFile($vendorPathToTargetDirCode, $suffix)\n     {\n-        $lastChar = $vendorPathToTargetDirCode[strlen($vendorPathToTargetDirCode)-1];\n+        $lastChar = $vendorPathToTargetDirCode[strlen($vendorPathToTargetDirCode) - 1];\n         if (\"'\" === $lastChar || '\"' === $lastChar) {\n             $vendorPathToTargetDirCode = substr($vendorPathToTargetDirCode, 0, -1).'\/autoload_real.php'.$lastChar;\n         } else {\n@@ -596,7 +607,7 @@ public static function getLoader()\n         if ($useIncludePath) {\n             $file .= <<<'INCLUDE_PATH'\n         $includePaths = require __DIR__ . '\/include_paths.php';\n-        array_push($includePaths, get_include_path());\n+        $includePaths[] = get_include_path();\n         set_include_path(implode(PATH_SEPARATOR, $includePaths));\n \n \n@@ -894,6 +905,48 @@ protected function getFileIdentifier(PackageInterface $package, $path)\n         return md5($package->getName() . ':' . $path);\n     }\n \n+    \/**\n+     * Filters out dev-dependencies\n+     *\n+     * @param  array            $packageMap\n+     * @param  PackageInterface $mainPackage\n+     * @return array\n+     *\/\n+    protected function filterPackageMap(array $packageMap, PackageInterface $mainPackage)\n+    {\n+        $packages = array();\n+        $include = array();\n+\n+        foreach ($packageMap as $item) {\n+            $package = $item[0];\n+            $name = $package->getName();\n+            $packages[$name] = $package;\n+        }\n+\n+        $add = function (PackageInterface $package) use (&$add, $packages, &$include) {\n+            foreach ($package->getRequires() as $link) {\n+                $target = $link->getTarget();\n+                if (!isset($include[$target])) {\n+                    $include[$target] = true;\n+                    if (isset($packages[$target])) {\n+                        $add($packages[$target]);\n+                    }\n+                }\n+            }\n+        };\n+        $add($mainPackage);\n+\n+        return array_filter(\n+            $packageMap,\n+            function ($item) use ($include) {\n+                $package = $item[0];\n+                $name = $package->getName();\n+\n+                return isset($include[$name]);\n+            }\n+        );\n+    }\n+\n     \/**\n      * Sorts packages by dependency weight\n      *"
        },
        {
            "sha": "fce8549f0781bafdc7da2301b84d048286757445",
            "filename": "src\/Composer\/Autoload\/ClassLoader.php",
            "status": "modified",
            "additions": 9,
            "deletions": 5,
            "changes": 14,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Autoload\/ClassLoader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Autoload\/ClassLoader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Autoload\/ClassLoader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -279,7 +279,7 @@ public function isClassMapAuthoritative()\n      *\/\n     public function setApcuPrefix($apcuPrefix)\n     {\n-        $this->apcuPrefix = function_exists('apcu_fetch') && ini_get('apc.enabled') ? $apcuPrefix : null;\n+        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;\n     }\n \n     \/**\n@@ -374,10 +374,14 @@ private function findFileWithExtension($class, $ext)\n \n         $first = $class[0];\n         if (isset($this->prefixLengthsPsr4[$first])) {\n-            foreach ($this->prefixLengthsPsr4[$first] as $prefix => $length) {\n-                if (0 === strpos($class, $prefix)) {\n-                    foreach ($this->prefixDirsPsr4[$prefix] as $dir) {\n-                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $length))) {\n+            $subPath = $class;\n+            while (false !== $lastPos = strrpos($subPath, '\\\\')) {\n+                $subPath = substr($subPath, 0, $lastPos);\n+                $search = $subPath . '\\\\';\n+                if (isset($this->prefixDirsPsr4[$search])) {\n+                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);\n+                    foreach ($this->prefixDirsPsr4[$search] as $dir) {\n+                        if (file_exists($file = $dir . $pathEnd)) {\n                             return $file;\n                         }\n                     }"
        },
        {
            "sha": "5d937433b0209e1c97b5359c1bb3b934288ad4c6",
            "filename": "src\/Composer\/Autoload\/ClassMapGenerator.php",
            "status": "modified",
            "additions": 10,
            "deletions": 1,
            "changes": 11,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Autoload\/ClassMapGenerator.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Autoload\/ClassMapGenerator.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Autoload\/ClassMapGenerator.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -75,7 +75,7 @@ public static function createMap($path, $blacklist = null, IOInterface $io = nul\n \n         $map = array();\n         $filesystem = new Filesystem();\n-        $cwd = getcwd();\n+        $cwd = realpath(getcwd());\n \n         foreach ($path as $file) {\n             $filePath = $file->getPathname();\n@@ -90,6 +90,11 @@ public static function createMap($path, $blacklist = null, IOInterface $io = nul\n                 $filePath = preg_replace('{[\\\\\\\\\/]{2,}}', '\/', $filePath);\n             }\n \n+            \/\/ check the realpath of the file against the blacklist as the path might be a symlink and the blacklist is realpath'd so symlink are resolved\n+            if ($blacklist && preg_match($blacklist, strtr(realpath($filePath), '\\\\', '\/'))) {\n+                continue;\n+            }\n+            \/\/ check non-realpath of file for directories symlink in project dir\n             if ($blacklist && preg_match($blacklist, strtr($filePath, '\\\\', '\/'))) {\n                 continue;\n             }\n@@ -174,6 +179,10 @@ private static function findClasses($path)\n         if (false !== $pos && false === strpos(substr($contents, $pos), '<?')) {\n             $contents = substr($contents, 0, $pos);\n         }\n+        \/\/ strip comments if short open tags are in the file\n+        if (preg_match('{(<\\?)(?!(php|hh))}i', $contents)) {\n+            $contents = preg_replace('{\/\/.* | \/\\*(?:[^*]++|\\*(?!\/))*\\*\/}x', '', $contents);\n+        }\n \n         preg_match_all('{\n             (?:"
        },
        {
            "sha": "44395c3a240555b80c4da45dc933fe90161680c6",
            "filename": "src\/Composer\/Cache.php",
            "status": "modified",
            "additions": 44,
            "deletions": 24,
            "changes": 68,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Cache.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Cache.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Cache.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -46,6 +46,7 @@ public function __construct(IOInterface $io, $cacheDir, $whitelist = 'a-z0-9.',\n \n         if (preg_match('{(^|[\\\\\\\\\/])(\\$null|NUL|\/dev\/null)([\\\\\\\\\/]|$)}', $cacheDir)) {\n             $this->enabled = false;\n+\n             return;\n         }\n \n@@ -70,11 +71,13 @@ public function getRoot()\n \n     public function read($file)\n     {\n-        $file = preg_replace('{[^'.$this->whitelist.']}i', '-', $file);\n-        if ($this->enabled && file_exists($this->root . $file)) {\n-            $this->io->writeError('Reading '.$this->root . $file.' from cache', true, IOInterface::DEBUG);\n+        if ($this->enabled) {\n+            $file = preg_replace('{[^'.$this->whitelist.']}i', '-', $file);\n+            if (file_exists($this->root . $file)) {\n+                $this->io->writeError('Reading '.$this->root . $file.' from cache', true, IOInterface::DEBUG);\n \n-            return file_get_contents($this->root . $file);\n+                return file_get_contents($this->root . $file);\n+            }\n         }\n \n         return false;\n@@ -141,19 +144,21 @@ public function copyFrom($file, $source)\n      *\/\n     public function copyTo($file, $target)\n     {\n-        $file = preg_replace('{[^'.$this->whitelist.']}i', '-', $file);\n-        if ($this->enabled && file_exists($this->root . $file)) {\n-            try {\n-                touch($this->root . $file, filemtime($this->root . $file), time());\n-            } catch (\\ErrorException $e) {\n-                \/\/ fallback in case the above failed due to incorrect ownership\n-                \/\/ see https:\/\/github.com\/composer\/composer\/issues\/4070\n-                Silencer::call('touch', $this->root . $file);\n-            }\n+        if ($this->enabled) {\n+            $file = preg_replace('{[^'.$this->whitelist.']}i', '-', $file);\n+            if (file_exists($this->root . $file)) {\n+                try {\n+                    touch($this->root . $file, filemtime($this->root . $file), time());\n+                } catch (\\ErrorException $e) {\n+                    \/\/ fallback in case the above failed due to incorrect ownership\n+                    \/\/ see https:\/\/github.com\/composer\/composer\/issues\/4070\n+                    Silencer::call('touch', $this->root . $file);\n+                }\n \n-            $this->io->writeError('Reading '.$this->root . $file.' from cache', true, IOInterface::DEBUG);\n+                $this->io->writeError('Reading '.$this->root . $file.' from cache', true, IOInterface::DEBUG);\n \n-            return copy($this->root . $file, $target);\n+                return copy($this->root . $file, $target);\n+            }\n         }\n \n         return false;\n@@ -166,9 +171,20 @@ public function gcIsNecessary()\n \n     public function remove($file)\n     {\n-        $file = preg_replace('{[^'.$this->whitelist.']}i', '-', $file);\n-        if ($this->enabled && file_exists($this->root . $file)) {\n-            return $this->filesystem->unlink($this->root . $file);\n+        if ($this->enabled) {\n+            $file = preg_replace('{[^'.$this->whitelist.']}i', '-', $file);\n+            if (file_exists($this->root . $file)) {\n+                return $this->filesystem->unlink($this->root . $file);\n+            }\n+        }\n+\n+        return false;\n+    }\n+\n+    public function clear()\n+    {\n+        if ($this->enabled) {\n+            return $this->filesystem->removeDirectory($this->root);\n         }\n \n         return false;\n@@ -206,19 +222,23 @@ public function gc($ttl, $maxSize)\n \n     public function sha1($file)\n     {\n-        $file = preg_replace('{[^'.$this->whitelist.']}i', '-', $file);\n-        if ($this->enabled && file_exists($this->root . $file)) {\n-            return sha1_file($this->root . $file);\n+        if ($this->enabled) {\n+            $file = preg_replace('{[^'.$this->whitelist.']}i', '-', $file);\n+            if (file_exists($this->root . $file)) {\n+                return sha1_file($this->root . $file);\n+            }\n         }\n \n         return false;\n     }\n \n     public function sha256($file)\n     {\n-        $file = preg_replace('{[^'.$this->whitelist.']}i', '-', $file);\n-        if ($this->enabled && file_exists($this->root . $file)) {\n-            return hash_file('sha256', $this->root . $file);\n+        if ($this->enabled) {\n+            $file = preg_replace('{[^'.$this->whitelist.']}i', '-', $file);\n+            if (file_exists($this->root . $file)) {\n+                return hash_file('sha256', $this->root . $file);\n+            }\n         }\n \n         return false;"
        },
        {
            "sha": "d1472ba179513d63c6b691076cad4fe648309c15",
            "filename": "src\/Composer\/Command\/AboutCommand.php",
            "status": "modified",
            "additions": 6,
            "deletions": 4,
            "changes": 10,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/AboutCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/AboutCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/AboutCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -24,8 +24,9 @@ protected function configure()\n     {\n         $this\n             ->setName('about')\n-            ->setDescription('Short information about Composer.')\n-            ->setHelp(<<<EOT\n+            ->setDescription('Shows the short information about Composer.')\n+            ->setHelp(\n+                <<<EOT\n <info>php composer.phar about<\/info>\n EOT\n             )\n@@ -34,8 +35,9 @@ protected function configure()\n \n     protected function execute(InputInterface $input, OutputInterface $output)\n     {\n-        $this->getIO()->write(<<<EOT\n-<info>Composer - Package Management for PHP<\/info>\n+        $this->getIO()->write(\n+            <<<EOT\n+<info>Composer - Dependency Manager for PHP<\/info>\n <comment>Composer is a dependency manager tracking local dependencies of your projects and libraries.\n See https:\/\/getcomposer.org\/ for more information.<\/comment>\n EOT"
        },
        {
            "sha": "29858c6fc75df8b0ae20ec0d93f21804ce2f8896",
            "filename": "src\/Composer\/Command\/ArchiveCommand.php",
            "status": "modified",
            "additions": 23,
            "deletions": 11,
            "changes": 34,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ArchiveCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ArchiveCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/ArchiveCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -15,6 +15,7 @@\n use Composer\\Factory;\n use Composer\\IO\\IOInterface;\n use Composer\\Config;\n+use Composer\\Composer;\n use Composer\\Repository\\CompositeRepository;\n use Composer\\Repository\\RepositoryFactory;\n use Composer\\Script\\ScriptEvents;\n@@ -37,16 +38,18 @@ protected function configure()\n     {\n         $this\n             ->setName('archive')\n-            ->setDescription('Create an archive of this composer package.')\n+            ->setDescription('Creates an archive of this composer package.')\n             ->setDefinition(array(\n                 new InputArgument('package', InputArgument::OPTIONAL, 'The package to archive instead of the current project'),\n                 new InputArgument('version', InputArgument::OPTIONAL, 'A version constraint to find the package to archive'),\n                 new InputOption('format', 'f', InputOption::VALUE_REQUIRED, 'Format of the resulting archive: tar or zip'),\n                 new InputOption('dir', null, InputOption::VALUE_REQUIRED, 'Write the archive to this directory'),\n                 new InputOption('file', null, InputOption::VALUE_REQUIRED, 'Write the archive with the given file name.'\n                     .' Note that the format will be appended.'),\n+                new InputOption('ignore-filters', false, InputOption::VALUE_NONE, 'Ignore filters when saving package'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The <info>archive<\/info> command creates an archive of the specified format\n containing the files and directories of the Composer project or the specified\n package in the specified version and writes it to the specified directory.\n@@ -64,8 +67,9 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         $composer = $this->getComposer(false);\n         if ($composer) {\n             $commandEvent = new CommandEvent(PluginEvents::COMMAND, 'archive', $input, $output);\n-            $composer->getEventDispatcher()->dispatch($commandEvent->getName(), $commandEvent);\n-            $composer->getEventDispatcher()->dispatchScript(ScriptEvents::PRE_ARCHIVE_CMD);\n+            $eventDispatcher = $composer->getEventDispatcher();\n+            $eventDispatcher->dispatch($commandEvent->getName(), $commandEvent);\n+            $eventDispatcher->dispatchScript(ScriptEvents::PRE_ARCHIVE_CMD);\n         }\n \n         if (null === $input->getOption('format')) {\n@@ -82,7 +86,9 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             $input->getArgument('version'),\n             $input->getOption('format'),\n             $input->getOption('dir'),\n-            $input->getOption('file')\n+            $input->getOption('file'),\n+            $input->getOption('ignore-filters'),\n+            $composer\n         );\n \n         if (0 === $returnCode && $composer) {\n@@ -92,11 +98,15 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         return $returnCode;\n     }\n \n-    protected function archive(IOInterface $io, Config $config, $packageName = null, $version = null, $format = 'tar', $dest = '.', $fileName = null)\n+    protected function archive(IOInterface $io, Config $config, $packageName = null, $version = null, $format = 'tar', $dest = '.', $fileName = null, $ignoreFilters = false, Composer $composer = null)\n     {\n-        $factory = new Factory;\n-        $downloadManager = $factory->createDownloadManager($io, $config);\n-        $archiveManager = $factory->createArchiveManager($config, $downloadManager);\n+        if ($composer) {\n+            $archiveManager = $composer->getArchiveManager();\n+        } else {\n+            $factory = new Factory;\n+            $downloadManager = $factory->createDownloadManager($io, $config);\n+            $archiveManager = $factory->createArchiveManager($config, $downloadManager);\n+        }\n \n         if ($packageName) {\n             $package = $this->selectPackage($io, $packageName, $version);\n@@ -109,7 +119,7 @@ protected function archive(IOInterface $io, Config $config, $packageName = null,\n         }\n \n         $io->writeError('<info>Creating the archive into \"'.$dest.'\".<\/info>');\n-        $packagePath = $archiveManager->archive($package, $format, $dest, $fileName);\n+        $packagePath = $archiveManager->archive($package, $format, $dest, $fileName, $ignoreFilters);\n         $fs = new Filesystem;\n         $shortPath = $fs->findShortestPath(getcwd(), $packagePath, true);\n \n@@ -137,7 +147,9 @@ protected function selectPackage(IOInterface $io, $packageName, $version = null)\n         if (count($packages) > 1) {\n             $package = reset($packages);\n             $io->writeError('<info>Found multiple matches, selected '.$package->getPrettyString().'.<\/info>');\n-            $io->writeError('Alternatives were '.implode(', ', array_map(function ($p) { return $p->getPrettyString(); }, $packages)).'.');\n+            $io->writeError('Alternatives were '.implode(', ', array_map(function ($p) {\n+                return $p->getPrettyString();\n+            }, $packages)).'.');\n             $io->writeError('<comment>Please use a more specific constraint to pick a different package.<\/comment>');\n         } elseif ($packages) {\n             $package = reset($packages);"
        },
        {
            "sha": "888b2a7f2855899fb709da0e317f4fab02812247",
            "filename": "src\/Composer\/Command\/BaseCommand.php",
            "status": "modified",
            "additions": 15,
            "deletions": 1,
            "changes": 16,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/BaseCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/BaseCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/BaseCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -15,8 +15,11 @@\n use Composer\\Composer;\n use Composer\\Config;\n use Composer\\Console\\Application;\n+use Composer\\Factory;\n use Composer\\IO\\IOInterface;\n use Composer\\IO\\NullIO;\n+use Composer\\Plugin\\PreCommandRunEvent;\n+use Composer\\Plugin\\PluginEvents;\n use Symfony\\Component\\Console\\Input\\InputInterface;\n use Symfony\\Component\\Console\\Output\\OutputInterface;\n use Symfony\\Component\\Console\\Command\\Command;\n@@ -30,7 +33,7 @@\n abstract class BaseCommand extends Command\n {\n     \/**\n-     * @var Composer\n+     * @var Composer|null\n      *\/\n     private $composer;\n \n@@ -123,6 +126,17 @@ public function setIO(IOInterface $io)\n      *\/\n     protected function initialize(InputInterface $input, OutputInterface $output)\n     {\n+        \/\/ initialize a plugin-enabled Composer instance, either local or global\n+        $disablePlugins = $input->hasParameterOption('--no-plugins');\n+        $composer = $this->getComposer(false, $disablePlugins);\n+        if (null === $composer) {\n+            $composer = Factory::createGlobal($this->getIO(), $disablePlugins);\n+        }\n+        if ($composer) {\n+            $preCommandRunEvent = new PreCommandRunEvent(PluginEvents::PRE_COMMAND_RUN, $input, $this->getName());\n+            $composer->getEventDispatcher()->dispatch($preCommandRunEvent->getName(), $preCommandRunEvent);\n+        }\n+\n         if (true === $input->hasParameterOption(array('--no-ansi')) && $input->hasOption('no-progress')) {\n             $input->setOption('no-progress', true);\n         }"
        },
        {
            "sha": "4c8766ba3ef76624494098d0fa16beff436ff6f1",
            "filename": "src\/Composer\/Command\/BaseDependencyCommand.php",
            "status": "modified",
            "additions": 9,
            "deletions": 5,
            "changes": 14,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/BaseDependencyCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/BaseDependencyCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/BaseDependencyCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -89,7 +89,7 @@ protected function doExecute(InputInterface $input, OutputInterface $output, $in\n         );\n \n         \/\/ Find packages that are or provide the requested package first\n-        $packages = $pool->whatProvides($needle);\n+        $packages = $pool->whatProvides(strtolower($needle));\n         if (empty($packages)) {\n             throw new \\InvalidArgumentException(sprintf('Could not find package \"%s\" in your project', $needle));\n         }\n@@ -129,8 +129,11 @@ protected function doExecute(InputInterface $input, OutputInterface $output, $in\n         $results = $repository->getDependents($needles, $constraint, $inverted, $recursive);\n         if (empty($results)) {\n             $extra = (null !== $constraint) ? sprintf(' in versions %smatching %s', $inverted ? 'not ' : '', $textConstraint) : '';\n-            $this->getIO()->writeError(sprintf('<info>There is no installed package depending on \"%s\"%s<\/info>',\n-                $needle, $extra));\n+            $this->getIO()->writeError(sprintf(\n+                '<info>There is no installed package depending on \"%s\"%s<\/info>',\n+                $needle,\n+                $extra\n+            ));\n         } elseif ($renderTree) {\n             $this->initStyles($output);\n             $root = $packages[0];\n@@ -180,8 +183,9 @@ protected function printTable(OutputInterface $output, $results)\n         \/\/ Render table\n         $renderer = new Table($output);\n         $renderer->setStyle('compact');\n-        $renderer->getStyle()->setVerticalBorderChar('');\n-        $renderer->getStyle()->setCellRowContentFormat('%s  ');\n+        $rendererStyle = $renderer->getStyle();\n+        $rendererStyle->setVerticalBorderChar('');\n+        $rendererStyle->setCellRowContentFormat('%s  ');\n         $renderer->setRows($table)->render();\n     }\n "
        },
        {
            "sha": "de7f4b4d3857bd522920dd945458ed88f883ca44",
            "filename": "src\/Composer\/Command\/CheckPlatformReqsCommand.php",
            "status": "added",
            "additions": 156,
            "deletions": 0,
            "changes": 156,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/CheckPlatformReqsCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/CheckPlatformReqsCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/CheckPlatformReqsCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -0,0 +1,156 @@\n+<?php\n+\n+\/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ *\/\n+\n+namespace Composer\\Command;\n+\n+use Composer\\Package\\Link;\n+use Composer\\Package\\PackageInterface;\n+use Composer\\Semver\\Constraint\\Constraint;\n+use Symfony\\Component\\Console\\Helper\\Table;\n+use Symfony\\Component\\Console\\Input\\InputInterface;\n+use Symfony\\Component\\Console\\Input\\InputOption;\n+use Symfony\\Component\\Console\\Output\\OutputInterface;\n+use Composer\\Repository\\PlatformRepository;\n+\n+class CheckPlatformReqsCommand extends BaseCommand\n+{\n+    protected function configure()\n+    {\n+        $this->setName('check-platform-reqs')\n+            ->setDescription('Check that platform requirements are satisfied.')\n+            ->setDefinition(array(\n+                new InputOption('no-dev', null, InputOption::VALUE_NONE, 'Disables checking of require-dev packages requirements.'),\n+            ))\n+            ->setHelp(\n+                <<<EOT\n+Checks that your PHP and extensions versions match the platform requirements of the installed packages.\n+\n+<info>php composer.phar check-platform-reqs<\/info>\n+\n+EOT\n+            );\n+    }\n+\n+    protected function execute(InputInterface $input, OutputInterface $output)\n+    {\n+        $composer = $this->getComposer();\n+\n+        $requires = $composer->getPackage()->getRequires();\n+        if ($input->getOption('no-dev')) {\n+            $dependencies = $composer->getLocker()->getLockedRepository(!$input->getOption('no-dev'))->getPackages();\n+        } else {\n+            $dependencies = $composer->getRepositoryManager()->getLocalRepository()->getPackages();\n+            $requires += $composer->getPackage()->getDevRequires();\n+        }\n+        foreach ($requires as $require => $link) {\n+            $requires[$require] = array($link);\n+        }\n+\n+        foreach ($dependencies as $package) {\n+            foreach ($package->getRequires() as $require => $link) {\n+                $requires[$require][] = $link;\n+            }\n+        }\n+\n+        ksort($requires);\n+\n+        $platformRepo = new PlatformRepository(array(), array());\n+        $currentPlatformPackages = $platformRepo->getPackages();\n+        $currentPlatformPackageMap = array();\n+\n+        \/**\n+         * @var PackageInterface $currentPlatformPackage\n+         *\/\n+        foreach ($currentPlatformPackages as $currentPlatformPackage) {\n+            $currentPlatformPackageMap[$currentPlatformPackage->getName()] = $currentPlatformPackage;\n+        }\n+\n+        $results = array();\n+\n+        $exitCode = 0;\n+\n+        \/**\n+         * @var Link[] $links\n+         *\/\n+        foreach ($requires as $require => $links) {\n+            if (preg_match(PlatformRepository::PLATFORM_PACKAGE_REGEX, $require)) {\n+                if (isset($currentPlatformPackageMap[$require])) {\n+                    $pass = true;\n+                    $version = $currentPlatformPackageMap[$require]->getVersion();\n+\n+                    foreach ($links as $link) {\n+                        if (!$link->getConstraint()->matches(new Constraint('=', $version))) {\n+                            $results[] = array(\n+                                $currentPlatformPackageMap[$require]->getPrettyName(),\n+                                $currentPlatformPackageMap[$require]->getPrettyVersion(),\n+                                $link,\n+                                '<error>failed<\/error>',\n+                            );\n+                            $pass = false;\n+\n+                            $exitCode = max($exitCode, 1);\n+                        }\n+                    }\n+\n+                    if ($pass) {\n+                        $results[] = array(\n+                            $currentPlatformPackageMap[$require]->getPrettyName(),\n+                            $currentPlatformPackageMap[$require]->getPrettyVersion(),\n+                            null,\n+                            '<info>success<\/info>',\n+                        );\n+                    }\n+                } else {\n+                    $results[] = array(\n+                        $require,\n+                        'n\/a',\n+                        $links[0],\n+                        '<error>missing<\/error>',\n+                    );\n+\n+                    $exitCode = max($exitCode, 2);\n+                }\n+            }\n+        }\n+\n+        $this->printTable($output, $results);\n+\n+        return $exitCode;\n+    }\n+\n+    protected function printTable(OutputInterface $output, $results)\n+    {\n+        $table = array();\n+        $rows = array();\n+        foreach ($results as $result) {\n+            \/**\n+             * @var Link|null $link\n+             *\/\n+            list($platformPackage, $version, $link, $status) = $result;\n+            $rows[] = array(\n+                $platformPackage,\n+                $version,\n+                $link ? sprintf('%s %s %s (%s)', $link->getSource(), $link->getDescription(), $link->getTarget(), $link->getPrettyConstraint()) : '',\n+                $status,\n+            );\n+        }\n+        $table = array_merge($rows, $table);\n+\n+        \/\/ Render table\n+        $renderer = new Table($output);\n+        $renderer->setStyle('compact');\n+        $rendererStyle = $renderer->getStyle();\n+        $rendererStyle->setVerticalBorderChar('');\n+        $rendererStyle->setCellRowContentFormat('%s  ');\n+        $renderer->setRows($table)->render();\n+    }\n+}"
        },
        {
            "sha": "2514f633094b96a843f5ee085736bb8eeade6255",
            "filename": "src\/Composer\/Command\/ClearCacheCommand.php",
            "status": "modified",
            "additions": 6,
            "deletions": 5,
            "changes": 11,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ClearCacheCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ClearCacheCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/ClearCacheCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -28,7 +28,8 @@ protected function configure()\n             ->setName('clear-cache')\n             ->setAliases(array('clearcache'))\n             ->setDescription('Clears composer\\'s internal package cache.')\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The <info>clear-cache<\/info> deletes all cached packages from composer's\n cache directory.\n EOT\n@@ -42,10 +43,10 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         $io = $this->getIO();\n \n         $cachePaths = array(\n-            'cache-dir' => $config->get('cache-dir'),\n-            'cache-files-dir' => $config->get('cache-files-dir'),\n-            'cache-repo-dir' => $config->get('cache-repo-dir'),\n             'cache-vcs-dir' => $config->get('cache-vcs-dir'),\n+            'cache-repo-dir' => $config->get('cache-repo-dir'),\n+            'cache-files-dir' => $config->get('cache-files-dir'),\n+            'cache-dir' => $config->get('cache-dir'),\n         );\n \n         foreach ($cachePaths as $key => $cachePath) {\n@@ -63,7 +64,7 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             }\n \n             $io->writeError(\"<info>Clearing cache ($key): $cachePath<\/info>\");\n-            $cache->gc(0, 0);\n+            $cache->clear();\n         }\n \n         $io->writeError('<info>All caches cleared.<\/info>');"
        },
        {
            "sha": "b002fd3a77d5f7be180d197638bb8c0fcdccce94",
            "filename": "src\/Composer\/Command\/ConfigCommand.php",
            "status": "modified",
            "additions": 116,
            "deletions": 36,
            "changes": 152,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ConfigCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ConfigCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/ConfigCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -63,7 +63,7 @@ protected function configure()\n     {\n         $this\n             ->setName('config')\n-            ->setDescription('Set config options.')\n+            ->setDescription('Sets config options.')\n             ->setDefinition(array(\n                 new InputOption('global', 'g', InputOption::VALUE_NONE, 'Apply command to the global config file'),\n                 new InputOption('editor', 'e', InputOption::VALUE_NONE, 'Open editor'),\n@@ -75,7 +75,8 @@ protected function configure()\n                 new InputArgument('setting-key', null, 'Setting key'),\n                 new InputArgument('setting-value', InputArgument::IS_ARRAY, 'Setting value'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n This command allows you to edit composer config settings and repositories\n in either the local composer.json file or the global config.json file.\n \n@@ -146,10 +147,14 @@ protected function initialize(InputInterface $input, OutputInterface $output)\n         \/\/ passed in a file to use\n         $configFile = $input->getOption('global')\n             ? ($this->config->get('home') . '\/config.json')\n-            : ($input->getOption('file') ?: trim(getenv('COMPOSER')) ?: 'composer.json');\n+            : ($input->getOption('file') ?: Factory::getComposerFile());\n \n         \/\/ Create global composer.json if this was invoked using `composer global config`\n-        if ($configFile === 'composer.json' && !file_exists($configFile) && realpath(getcwd()) === realpath($this->config->get('home'))) {\n+        if (\n+            ($configFile === 'composer.json' || $configFile === '.\/composer.json')\n+            && !file_exists($configFile)\n+            && realpath(getcwd()) === realpath($this->config->get('home'))\n+        ) {\n             file_put_contents($configFile, \"{\\n}\\n\");\n         }\n \n@@ -286,19 +291,29 @@ protected function execute(InputInterface $input, OutputInterface $output)\n \n         $values = $input->getArgument('setting-value'); \/\/ what the user is trying to add\/change\n \n-        $booleanValidator = function ($val) { return in_array($val, array('true', 'false', '1', '0'), true); };\n-        $booleanNormalizer = function ($val) { return $val !== 'false' && (bool) $val; };\n+        $booleanValidator = function ($val) {\n+            return in_array($val, array('true', 'false', '1', '0'), true);\n+        };\n+        $booleanNormalizer = function ($val) {\n+            return $val !== 'false' && (bool) $val;\n+        };\n \n         \/\/ handle config values\n         $uniqueConfigValues = array(\n             'process-timeout' => array('is_numeric', 'intval'),\n             'use-include-path' => array($booleanValidator, $booleanNormalizer),\n             'preferred-install' => array(\n-                function ($val) { return in_array($val, array('auto', 'source', 'dist'), true); },\n-                function ($val) { return $val; },\n+                function ($val) {\n+                    return in_array($val, array('auto', 'source', 'dist'), true);\n+                },\n+                function ($val) {\n+                    return $val;\n+                },\n             ),\n             'store-auths' => array(\n-                function ($val) { return in_array($val, array('true', 'false', 'prompt'), true); },\n+                function ($val) {\n+                    return in_array($val, array('true', 'false', 'prompt'), true);\n+                },\n                 function ($val) {\n                     if ('prompt' === $val) {\n                         return 'prompt';\n@@ -308,27 +323,55 @@ function ($val) {\n                 },\n             ),\n             'notify-on-install' => array($booleanValidator, $booleanNormalizer),\n-            'vendor-dir' => array('is_string', function ($val) { return $val; }),\n-            'bin-dir' => array('is_string', function ($val) { return $val; }),\n-            'archive-dir' => array('is_string', function ($val) { return $val; }),\n-            'archive-format' => array('is_string', function ($val) { return $val; }),\n-            'data-dir' => array('is_string', function ($val) { return $val; }),\n-            'cache-dir' => array('is_string', function ($val) { return $val; }),\n-            'cache-files-dir' => array('is_string', function ($val) { return $val; }),\n-            'cache-repo-dir' => array('is_string', function ($val) { return $val; }),\n-            'cache-vcs-dir' => array('is_string', function ($val) { return $val; }),\n+            'vendor-dir' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n+            'bin-dir' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n+            'archive-dir' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n+            'archive-format' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n+            'data-dir' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n+            'cache-dir' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n+            'cache-files-dir' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n+            'cache-repo-dir' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n+            'cache-vcs-dir' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n             'cache-ttl' => array('is_numeric', 'intval'),\n             'cache-files-ttl' => array('is_numeric', 'intval'),\n             'cache-files-maxsize' => array(\n-                function ($val) { return preg_match('\/^\\s*([0-9.]+)\\s*(?:([kmg])(?:i?b)?)?\\s*$\/i', $val) > 0; },\n-                function ($val) { return $val; },\n+                function ($val) {\n+                    return preg_match('\/^\\s*([0-9.]+)\\s*(?:([kmg])(?:i?b)?)?\\s*$\/i', $val) > 0;\n+                },\n+                function ($val) {\n+                    return $val;\n+                },\n             ),\n             'bin-compat' => array(\n-                function ($val) { return in_array($val, array('auto', 'full')); },\n-                function ($val) { return $val; },\n+                function ($val) {\n+                    return in_array($val, array('auto', 'full'));\n+                },\n+                function ($val) {\n+                    return $val;\n+                },\n             ),\n             'discard-changes' => array(\n-                function ($val) { return in_array($val, array('stash', 'true', 'false', '1', '0'), true); },\n+                function ($val) {\n+                    return in_array($val, array('stash', 'true', 'false', '1', '0'), true);\n+                },\n                 function ($val) {\n                     if ('stash' === $val) {\n                         return 'stash';\n@@ -337,7 +380,9 @@ function ($val) {\n                     return $val !== 'false' && (bool) $val;\n                 },\n             ),\n-            'autoloader-suffix' => array('is_string', function ($val) { return $val === 'null' ? null : $val; }),\n+            'autoloader-suffix' => array('is_string', function ($val) {\n+                return $val === 'null' ? null : $val;\n+            }),\n             'sort-packages' => array($booleanValidator, $booleanNormalizer),\n             'optimize-autoloader' => array($booleanValidator, $booleanNormalizer),\n             'classmap-authoritative' => array($booleanValidator, $booleanNormalizer),\n@@ -346,14 +391,23 @@ function ($val) {\n             'disable-tls' => array($booleanValidator, $booleanNormalizer),\n             'secure-http' => array($booleanValidator, $booleanNormalizer),\n             'cafile' => array(\n-                function ($val) { return file_exists($val) && is_readable($val); },\n-                function ($val) { return $val === 'null' ? null : $val; },\n+                function ($val) {\n+                    return file_exists($val) && is_readable($val);\n+                },\n+                function ($val) {\n+                    return $val === 'null' ? null : $val;\n+                },\n             ),\n             'capath' => array(\n-                function ($val) { return is_dir($val) && is_readable($val); },\n-                function ($val) { return $val === 'null' ? null : $val; },\n+                function ($val) {\n+                    return is_dir($val) && is_readable($val);\n+                },\n+                function ($val) {\n+                    return $val === 'null' ? null : $val;\n+                },\n             ),\n             'github-expose-hostname' => array($booleanValidator, $booleanNormalizer),\n+            'htaccess-protect' => array($booleanValidator, $booleanNormalizer),\n         );\n         $multiConfigValues = array(\n             'github-protocols' => array(\n@@ -412,14 +466,28 @@ function ($vals) {\n \n         \/\/ handle properties\n         $uniqueProps = array(\n-            'name' => array('is_string', function ($val) { return $val; }),\n-            'type' => array('is_string', function ($val) { return $val; }),\n-            'description' => array('is_string', function ($val) { return $val; }),\n-            'homepage' => array('is_string', function ($val) { return $val; }),\n-            'version' => array('is_string', function ($val) { return $val; }),\n+            'name' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n+            'type' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n+            'description' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n+            'homepage' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n+            'version' => array('is_string', function ($val) {\n+                return $val;\n+            }),\n             'minimum-stability' => array(\n-                function ($val) { return isset(BasePackage::$stabilities[VersionParser::normalizeStability($val)]); },\n-                function ($val) { return VersionParser::normalizeStability($val); }\n+                function ($val) {\n+                    return isset(BasePackage::$stabilities[VersionParser::normalizeStability($val)]);\n+                },\n+                function ($val) {\n+                    return VersionParser::normalizeStability($val);\n+                },\n             ),\n             'prefer-stable' => array($booleanValidator, $booleanNormalizer),\n         );\n@@ -472,7 +540,7 @@ function ($vals) {\n             if (2 === count($values)) {\n                 return $this->configSource->addRepository($matches[1], array(\n                     'type' => $values[0],\n-                    'url'  => $values[1],\n+                    'url' => $values[1],\n                 ));\n             }\n \n@@ -509,6 +577,9 @@ function ($vals) {\n \n             return $this->configSource->addConfigSetting($settingKey, $values[0]);\n         }\n+        if ($settingKey === 'platform' && $input->getOption('unset')) {\n+            return $this->configSource->removeConfigSetting($settingKey);\n+        }\n \n         \/\/ handle auth\n         if (preg_match('\/^(bitbucket-oauth|github-oauth|gitlab-oauth|gitlab-token|http-basic)\\.(.+)\/', $settingKey, $matches)) {\n@@ -542,6 +613,15 @@ function ($vals) {\n             return;\n         }\n \n+        \/\/ handle script\n+        if (preg_match('\/^scripts\\.(.+)\/', $settingKey, $matches)) {\n+            if ($input->getOption('unset')) {\n+                return $this->configSource->removeProperty($settingKey);\n+            }\n+\n+            return $this->configSource->addProperty($settingKey, count($values) > 1 ? $values : $values[0]);\n+        }\n+\n         throw new \\InvalidArgumentException('Setting '.$settingKey.' does not exist or is not supported by this command');\n     }\n "
        },
        {
            "sha": "cca5f18711c5014fd348feb6a861e97c80b42ece",
            "filename": "src\/Composer\/Command\/CreateProjectCommand.php",
            "status": "modified",
            "additions": 33,
            "deletions": 22,
            "changes": 55,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/CreateProjectCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/CreateProjectCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/CreateProjectCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -23,6 +23,7 @@\n use Composer\\DependencyResolver\\Pool;\n use Composer\\DependencyResolver\\Operation\\InstallOperation;\n use Composer\\Package\\Version\\VersionSelector;\n+use Composer\\Package\\AliasPackage;\n use Composer\\Repository\\RepositoryFactory;\n use Composer\\Repository\\CompositeRepository;\n use Composer\\Repository\\PlatformRepository;\n@@ -58,7 +59,7 @@ protected function configure()\n     {\n         $this\n             ->setName('create-project')\n-            ->setDescription('Create new project from a package into given directory.')\n+            ->setDescription('Creates new project from a package into given directory.')\n             ->setDefinition(array(\n                 new InputArgument('package', InputArgument::OPTIONAL, 'Package name to be installed'),\n                 new InputArgument('directory', InputArgument::OPTIONAL, 'Directory where the files should be created'),\n@@ -74,11 +75,13 @@ protected function configure()\n                 new InputOption('no-scripts', null, InputOption::VALUE_NONE, 'Whether to prevent execution of all defined scripts in the root package.'),\n                 new InputOption('no-progress', null, InputOption::VALUE_NONE, 'Do not output download progress.'),\n                 new InputOption('no-secure-http', null, InputOption::VALUE_NONE, 'Disable the secure-http config option temporarily while installing the root package. Use at your own risk. Using this flag is a bad idea.'),\n-                new InputOption('keep-vcs', null, InputOption::VALUE_NONE, 'Whether to prevent deletion vcs folder.'),\n+                new InputOption('keep-vcs', null, InputOption::VALUE_NONE, 'Whether to prevent deleting the vcs folder.'),\n+                new InputOption('remove-vcs', null, InputOption::VALUE_NONE, 'Whether to force deletion of the vcs folder without prompting.'),\n                 new InputOption('no-install', null, InputOption::VALUE_NONE, 'Whether to skip installation of the package dependencies.'),\n                 new InputOption('ignore-platform-reqs', null, InputOption::VALUE_NONE, 'Ignore platform requirements (php & ext- packages).'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The <info>create-project<\/info> command creates a new project from a given\n package into a new directory. If executed without params and in a directory\n with a composer.json file it installs the packages for the current project.\n@@ -135,15 +138,14 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             $input->getOption('repository') ?: $input->getOption('repository-url'),\n             $input->getOption('no-plugins'),\n             $input->getOption('no-scripts'),\n-            $input->getOption('keep-vcs'),\n             $input->getOption('no-progress'),\n             $input->getOption('no-install'),\n             $input->getOption('ignore-platform-reqs'),\n             !$input->getOption('no-secure-http')\n         );\n     }\n \n-    public function installProject(IOInterface $io, Config $config, InputInterface $input, $packageName, $directory = null, $packageVersion = null, $stability = 'stable', $preferSource = false, $preferDist = false, $installDevPackages = false, $repository = null, $disablePlugins = false, $noScripts = false, $keepVcs = false, $noProgress = false, $noInstall = false, $ignorePlatformReqs = false, $secureHttp = true)\n+    public function installProject(IOInterface $io, Config $config, InputInterface $input, $packageName, $directory = null, $packageVersion = null, $stability = 'stable', $preferSource = false, $preferDist = false, $installDevPackages = false, $repository = null, $disablePlugins = false, $noScripts = false, $noProgress = false, $noInstall = false, $ignorePlatformReqs = false, $secureHttp = true)\n     {\n         $oldCwd = getcwd();\n \n@@ -153,7 +155,7 @@ public function installProject(IOInterface $io, Config $config, InputInterface $\n         $this->suggestedPackagesReporter = new SuggestedPackagesReporter($io);\n \n         if ($packageName !== null) {\n-            $installedFromVcs = $this->installRootPackage($io, $config, $packageName, $directory, $packageVersion, $stability, $preferSource, $preferDist, $installDevPackages, $repository, $disablePlugins, $noScripts, $keepVcs, $noProgress, $ignorePlatformReqs, $secureHttp);\n+            $installedFromVcs = $this->installRootPackage($io, $config, $packageName, $directory, $packageVersion, $stability, $preferSource, $preferDist, $installDevPackages, $repository, $disablePlugins, $noScripts, $noProgress, $ignorePlatformReqs, $secureHttp);\n         } else {\n             $installedFromVcs = false;\n         }\n@@ -168,7 +170,9 @@ public function installProject(IOInterface $io, Config $config, InputInterface $\n             $composer->getEventDispatcher()->dispatchScript(ScriptEvents::POST_ROOT_PACKAGE_INSTALL, $installDevPackages);\n         }\n \n-        list($preferSource, $preferDist) = $this->getPreferredInstallOptions($composer->getConfig(), $input);\n+        \/\/ use the new config including the newly installed project\n+        $config = $composer->getConfig();\n+        list($preferSource, $preferDist) = $this->getPreferredInstallOptions($config, $input);\n \n         \/\/ install dependencies of the created project\n         if ($noInstall === false) {\n@@ -178,7 +182,8 @@ public function installProject(IOInterface $io, Config $config, InputInterface $\n                 ->setDevMode($installDevPackages)\n                 ->setRunScripts(!$noScripts)\n                 ->setIgnorePlatformRequirements($ignorePlatformReqs)\n-                ->setSuggestedPackagesReporter($this->suggestedPackagesReporter);\n+                ->setSuggestedPackagesReporter($this->suggestedPackagesReporter)\n+                ->setOptimizeAutoloader($config->get('optimize-autoloader'));\n \n             if ($disablePlugins) {\n                 $installer->disablePlugins();\n@@ -191,9 +196,12 @@ public function installProject(IOInterface $io, Config $config, InputInterface $\n         }\n \n         $hasVcs = $installedFromVcs;\n-        if (!$keepVcs && $installedFromVcs\n+        if (\n+            !$input->getOption('keep-vcs')\n+            && $installedFromVcs\n             && (\n-                !$io->isInteractive()\n+                $input->getOption('remove-vcs')\n+                || !$io->isInteractive()\n                 || $io->askConfirmation('<info>Do you want to remove the existing VCS (.git, .svn..) history?<\/info> [<comment>Y,n<\/comment>]? ', true)\n             )\n         ) {\n@@ -237,10 +245,10 @@ public function installProject(IOInterface $io, Config $config, InputInterface $\n         }\n \n         chdir($oldCwd);\n-        $vendorComposerDir = $composer->getConfig()->get('vendor-dir').'\/composer';\n+        $vendorComposerDir = $config->get('vendor-dir').'\/composer';\n         if (is_dir($vendorComposerDir) && $fs->isDirEmpty($vendorComposerDir)) {\n             Silencer::call('rmdir', $vendorComposerDir);\n-            $vendorDir = $composer->getConfig()->get('vendor-dir');\n+            $vendorDir = $config->get('vendor-dir');\n             if (is_dir($vendorDir) && $fs->isDirEmpty($vendorDir)) {\n                 Silencer::call('rmdir', $vendorDir);\n             }\n@@ -249,7 +257,7 @@ public function installProject(IOInterface $io, Config $config, InputInterface $\n         return 0;\n     }\n \n-    protected function installRootPackage(IOInterface $io, Config $config, $packageName, $directory = null, $packageVersion = null, $stability = 'stable', $preferSource = false, $preferDist = false, $installDevPackages = false, $repository = null, $disablePlugins = false, $noScripts = false, $keepVcs = false, $noProgress = false, $ignorePlatformReqs = false, $secureHttp = true)\n+    protected function installRootPackage(IOInterface $io, Config $config, $packageName, $directory = null, $packageVersion = null, $stability = 'stable', $preferSource = false, $preferDist = false, $installDevPackages = false, $repository = null, $disablePlugins = false, $noScripts = false, $noProgress = false, $ignorePlatformReqs = false, $secureHttp = true)\n     {\n         if (!$secureHttp) {\n             $config->merge(array('config' => array('secure-http' => false)));\n@@ -315,13 +323,16 @@ protected function installRootPackage(IOInterface $io, Config $config, $packageN\n         }\n \n         \/\/ handler Ctrl+C for unix-like systems\n-        if (function_exists('pcntl_signal')) {\n-            declare(ticks=100);\n-            pcntl_signal(SIGINT, function () use ($directory) {\n-                $fs = new Filesystem();\n-                $fs->removeDirectory($directory);\n-                exit(130);\n-            });\n+        if (function_exists('pcntl_async_signals')) {\n+            @mkdir($directory, 0777, true);\n+            if ($realDir = realpath($directory)) {\n+                pcntl_async_signals(true);\n+                pcntl_signal(SIGINT, function () use ($realDir) {\n+                    $fs = new Filesystem();\n+                    $fs->removeDirectory($realDir);\n+                    exit(130);\n+                });\n+            }\n         }\n \n         $io->writeError('<info>Installing ' . $package->getName() . ' (' . $package->getFullPrettyVersion(false) . ')<\/info>');\n@@ -330,8 +341,8 @@ protected function installRootPackage(IOInterface $io, Config $config, $packageN\n             $io->writeError('<info>Plugins have been disabled.<\/info>');\n         }\n \n-        if (0 === strpos($package->getPrettyVersion(), 'dev-') && in_array($package->getSourceType(), array('git', 'hg'))) {\n-            $package->setSourceReference(substr($package->getPrettyVersion(), 4));\n+        if ($package instanceof AliasPackage) {\n+            $package = $package->getAliasOf();\n         }\n \n         $dm = $this->createDownloadManager($io, $config);"
        },
        {
            "sha": "acbc89a705705244bc1597cf097d8d8ae424cb46",
            "filename": "src\/Composer\/Command\/DependsCommand.php",
            "status": "modified",
            "additions": 2,
            "deletions": 1,
            "changes": 3,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/DependsCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/DependsCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/DependsCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -31,7 +31,8 @@ protected function configure()\n             ->setName('depends')\n             ->setAliases(array('why'))\n             ->setDescription('Shows which packages cause the given package to be installed.')\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n Displays detailed information about where a package is referenced.\n \n <info>php composer.phar depends composer\/composer<\/info>"
        },
        {
            "sha": "3c4c3bb3214902d073928d915f0dfdd66a44a448",
            "filename": "src\/Composer\/Command\/DiagnoseCommand.php",
            "status": "modified",
            "additions": 100,
            "deletions": 24,
            "changes": 124,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/DiagnoseCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/DiagnoseCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/DiagnoseCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -16,6 +16,7 @@\n use Composer\\Factory;\n use Composer\\Config;\n use Composer\\Downloader\\TransportException;\n+use Composer\\Repository\\PlatformRepository;\n use Composer\\Plugin\\CommandEvent;\n use Composer\\Plugin\\PluginEvents;\n use Composer\\Util\\ConfigValidator;\n@@ -34,7 +35,7 @@\n  *\/\n class DiagnoseCommand extends BaseCommand\n {\n-    \/** @var RemoteFileSystem *\/\n+    \/** @var RemoteFilesystem *\/\n     protected $rfs;\n \n     \/** @var ProcessExecutor *\/\n@@ -48,7 +49,8 @@ protected function configure()\n         $this\n             ->setName('diagnose')\n             ->setDescription('Diagnoses the system to identify common errors.')\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The <info>diagnose<\/info> command checks common errors to help debugging problems.\n \n The process exit code will be 1 in case of warnings and 2 for errors.\n@@ -81,7 +83,7 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         }\n \n         $config->merge(array('config' => array('secure-http' => false)));\n-        $config->prohibitUrlByConfig('http:\/\/packagist.org', new NullIO);\n+        $config->prohibitUrlByConfig('http:\/\/repo.packagist.org', new NullIO);\n \n         $this->rfs = Factory::createRemoteFilesystem($io, $config);\n         $this->process = new ProcessExecutor($io);\n@@ -117,8 +119,9 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             $io->write('Checking github.com rate limit: ', false);\n             try {\n                 $rate = $this->getGithubRateLimit('github.com');\n-                $this->outputResult(true);\n-                if (10 > $rate['remaining']) {\n+                if (!is_array($rate)) {\n+                    $this->outputResult($rate);\n+                } elseif (10 > $rate['remaining']) {\n                     $io->write('<warning>WARNING<\/warning>');\n                     $io->write(sprintf(\n                         '<comment>Github has a rate limit on their API. '\n@@ -129,6 +132,8 @@ protected function execute(InputInterface $input, OutputInterface $output)\n                         $rate['remaining'],\n                         $rate['limit']\n                     ));\n+                } else {\n+                    $this->outputResult(true);\n                 }\n             } catch (\\Exception $e) {\n                 if ($e instanceof TransportException && $e->getCode() === 401) {\n@@ -150,6 +155,22 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             $this->outputResult($this->checkVersion($config));\n         }\n \n+        $io->write(sprintf('Composer version: <comment>%s<\/comment>', Composer::VERSION));\n+\n+        $platformOverrides = $config->get('platform') ?: array();\n+        $platformRepo = new PlatformRepository(array(), $platformOverrides);\n+        $phpPkg = $platformRepo->findPackage('php', '*');\n+        $phpVersion = $phpPkg->getPrettyVersion();\n+        if (false !== strpos($phpPkg->getDescription(), 'overridden')) {\n+            $phpVersion .= ' - ' . $phpPkg->getDescription();\n+        }\n+\n+        $io->write(sprintf('PHP version: <comment>%s<\/comment>', $phpVersion));\n+\n+        if (defined('PHP_BINARY')) {\n+            $io->write(sprintf('PHP binary path: <comment>%s<\/comment>', PHP_BINARY));\n+        }\n+\n         return $this->exitCode;\n     }\n \n@@ -167,7 +188,7 @@ private function checkComposerSchema()\n             $output = '';\n             foreach ($messages as $style => $msgs) {\n                 foreach ($msgs as $msg) {\n-                    $output .=  '<' . $style . '>' . $msg . '<\/' . $style . '>' . PHP_EOL;\n+                    $output .= '<' . $style . '>' . $msg . '<\/' . $style . '>' . PHP_EOL;\n                 }\n             }\n \n@@ -189,6 +210,11 @@ private function checkGit()\n \n     private function checkHttp($proto, Config $config)\n     {\n+        $result = $this->checkConnectivity();\n+        if ($result !== true) {\n+            return $result;\n+        }\n+\n         $disableTls = false;\n         $result = array();\n         if ($proto === 'https' && $config->get('disable-tls') === true) {\n@@ -200,7 +226,7 @@ private function checkHttp($proto, Config $config)\n         }\n \n         try {\n-            $this->rfs->getContents('packagist.org', $proto . ':\/\/packagist.org\/packages.json', false);\n+            $this->rfs->getContents('packagist.org', $proto . ':\/\/repo.packagist.org\/packages.json', false);\n         } catch (TransportException $e) {\n             if (false !== strpos($e->getMessage(), 'cafile')) {\n                 $result[] = '<error>[' . get_class($e) . '] ' . $e->getMessage() . '<\/error>';\n@@ -220,13 +246,18 @@ private function checkHttp($proto, Config $config)\n \n     private function checkHttpProxy()\n     {\n+        $result = $this->checkConnectivity();\n+        if ($result !== true) {\n+            return $result;\n+        }\n+\n         $protocol = extension_loaded('openssl') ? 'https' : 'http';\n         try {\n-            $json = json_decode($this->rfs->getContents('packagist.org', $protocol . ':\/\/packagist.org\/packages.json', false), true);\n+            $json = json_decode($this->rfs->getContents('packagist.org', $protocol . ':\/\/repo.packagist.org\/packages.json', false), true);\n             $hash = reset($json['provider-includes']);\n             $hash = $hash['sha256'];\n             $path = str_replace('%hash%', $hash, key($json['provider-includes']));\n-            $provider = $this->rfs->getContents('packagist.org', $protocol . ':\/\/packagist.org\/'.$path, false);\n+            $provider = $this->rfs->getContents('packagist.org', $protocol . ':\/\/repo.packagist.org\/'.$path, false);\n \n             if (hash('sha256', $provider) !== $hash) {\n                 return 'It seems that your proxy is modifying http traffic on the fly';\n@@ -247,7 +278,12 @@ private function checkHttpProxy()\n      *\/\n     private function checkHttpProxyFullUriRequestParam()\n     {\n-        $url = 'http:\/\/packagist.org\/packages.json';\n+        $result = $this->checkConnectivity();\n+        if ($result !== true) {\n+            return $result;\n+        }\n+\n+        $url = 'http:\/\/repo.packagist.org\/packages.json';\n         try {\n             $this->rfs->getContents('packagist.org', $url, false);\n         } catch (TransportException $e) {\n@@ -272,6 +308,11 @@ private function checkHttpProxyFullUriRequestParam()\n      *\/\n     private function checkHttpsProxyFullUriRequestParam()\n     {\n+        $result = $this->checkConnectivity();\n+        if ($result !== true) {\n+            return $result;\n+        }\n+\n         if (!extension_loaded('openssl')) {\n             return 'You need the openssl extension installed for this check';\n         }\n@@ -294,6 +335,11 @@ private function checkHttpsProxyFullUriRequestParam()\n \n     private function checkGithubOauth($domain, $token)\n     {\n+        $result = $this->checkConnectivity();\n+        if ($result !== true) {\n+            return $result;\n+        }\n+\n         $this->getIO()->setAuthentication($domain, $token, 'x-oauth-basic');\n         try {\n             $url = $domain === 'github.com' ? 'https:\/\/api.'.$domain.'\/' : 'https:\/\/'.$domain.'\/api\/v3\/';\n@@ -314,10 +360,15 @@ private function checkGithubOauth($domain, $token)\n      * @param  string             $domain\n      * @param  string             $token\n      * @throws TransportException\n-     * @return array\n+     * @return array|string\n      *\/\n     private function getGithubRateLimit($domain, $token = null)\n     {\n+        $result = $this->checkConnectivity();\n+        if ($result !== true) {\n+            return $result;\n+        }\n+\n         if ($token) {\n             $this->getIO()->setAuthentication($domain, $token, 'x-oauth-basic');\n         }\n@@ -372,6 +423,11 @@ private function checkPubKeys($config)\n \n     private function checkVersion($config)\n     {\n+        $result = $this->checkConnectivity();\n+        if ($result !== true) {\n+            return $result;\n+        }\n+\n         $versionsUtil = new Versions($config, $this->rfs);\n         $latest = $versionsUtil->getLatest();\n \n@@ -390,10 +446,12 @@ private function outputResult($result)\n         $io = $this->getIO();\n         if (true === $result) {\n             $io->write('<info>OK<\/info>');\n+\n             return;\n         }\n \n         $hadError = false;\n+        $hadWarning = false;\n         if ($result instanceof \\Exception) {\n             $result = '<error>['.get_class($result).'] '.$result->getMessage().'<\/error>';\n         }\n@@ -408,16 +466,18 @@ private function outputResult($result)\n             foreach ($result as $message) {\n                 if (false !== strpos($message, '<error>')) {\n                     $hadError = true;\n+                } elseif (false !== strpos($message, '<warning>')) {\n+                    $hadWarning = true;\n                 }\n             }\n         }\n \n         if ($hadError) {\n             $io->write('<error>FAIL<\/error>');\n-            $this->exitCode = 2;\n-        } else {\n+            $this->exitCode = max($this->exitCode, 2);\n+        } elseif ($hadWarning) {\n             $io->write('<warning>WARNING<\/warning>');\n-            $this->exitCode = 1;\n+            $this->exitCode = max($this->exitCode, 1);\n         }\n \n         if ($result) {\n@@ -462,7 +522,7 @@ private function checkPlatform()\n             $errors['iconv_mbstring'] = true;\n         }\n \n-        if (!ini_get('allow_url_fopen')) {\n+        if (!filter_var(ini_get('allow_url_fopen'), FILTER_VALIDATE_BOOLEAN)) {\n             $errors['allow_url_fopen'] = true;\n         }\n \n@@ -486,7 +546,7 @@ private function checkPlatform()\n             $warnings['openssl_version'] = true;\n         }\n \n-        if (!defined('HHVM_VERSION') && !extension_loaded('apcu') && ini_get('apc.enable_cli')) {\n+        if (!defined('HHVM_VERSION') && !extension_loaded('apcu') && filter_var(ini_get('apc.enable_cli'), FILTER_VALIDATE_BOOLEAN)) {\n             $warnings['apc_cli'] = true;\n         }\n \n@@ -509,7 +569,7 @@ private function checkPlatform()\n             }\n         }\n \n-        if (ini_get('xdebug.profiler_enabled')) {\n+        if (filter_var(ini_get('xdebug.profiler_enabled'), FILTER_VALIDATE_BOOLEAN)) {\n             $warnings['xdebug_profile'] = true;\n         } elseif (extension_loaded('xdebug')) {\n             $warnings['xdebug_loaded'] = true;\n@@ -590,31 +650,31 @@ private function checkPlatform()\n             foreach ($warnings as $warning => $current) {\n                 switch ($warning) {\n                     case 'apc_cli':\n-                        $text  = \"The apc.enable_cli setting is incorrect.\".PHP_EOL;\n+                        $text = \"The apc.enable_cli setting is incorrect.\".PHP_EOL;\n                         $text .= \"Add the following to the end of your `php.ini`:\".PHP_EOL;\n                         $text .= \"  apc.enable_cli = Off\";\n                         $displayIniMessage = true;\n                         break;\n \n                     case 'zlib':\n-                        $text  = 'The zlib extension is not loaded, this can slow down Composer a lot.'.PHP_EOL;\n+                        $text = 'The zlib extension is not loaded, this can slow down Composer a lot.'.PHP_EOL;\n                         $text .= 'If possible, enable it or recompile php with --with-zlib'.PHP_EOL;\n                         $displayIniMessage = true;\n                         break;\n \n                     case 'sigchild':\n-                        $text  = \"PHP was compiled with --enable-sigchild which can cause issues on some platforms.\".PHP_EOL;\n+                        $text = \"PHP was compiled with --enable-sigchild which can cause issues on some platforms.\".PHP_EOL;\n                         $text .= \"Recompile it without this flag if possible, see also:\".PHP_EOL;\n                         $text .= \"  https:\/\/bugs.php.net\/bug.php?id=22999\";\n                         break;\n \n                     case 'curlwrappers':\n-                        $text  = \"PHP was compiled with --with-curlwrappers which will cause issues with HTTP authentication and GitHub.\".PHP_EOL;\n+                        $text = \"PHP was compiled with --with-curlwrappers which will cause issues with HTTP authentication and GitHub.\".PHP_EOL;\n                         $text .= \" Recompile it without this flag if possible\";\n                         break;\n \n                     case 'php':\n-                        $text  = \"Your PHP ({$current}) is quite old, upgrading to PHP 5.3.4 or higher is recommended.\".PHP_EOL;\n+                        $text = \"Your PHP ({$current}) is quite old, upgrading to PHP 5.3.4 or higher is recommended.\".PHP_EOL;\n                         $text .= \" Composer works with 5.3.2+ for most people, but there might be edge case issues.\";\n                         break;\n \n@@ -628,12 +688,12 @@ private function checkPlatform()\n                         break;\n \n                     case 'xdebug_loaded':\n-                        $text  = \"The xdebug extension is loaded, this can slow down Composer a little.\".PHP_EOL;\n+                        $text = \"The xdebug extension is loaded, this can slow down Composer a little.\".PHP_EOL;\n                         $text .= \" Disabling it when using Composer is recommended.\";\n                         break;\n \n                     case 'xdebug_profile':\n-                        $text  = \"The xdebug.profiler_enabled setting is enabled, this can slow down Composer a lot.\".PHP_EOL;\n+                        $text = \"The xdebug.profiler_enabled setting is enabled, this can slow down Composer a lot.\".PHP_EOL;\n                         $text .= \"Add the following to the end of your `php.ini` to disable it:\".PHP_EOL;\n                         $text .= \"  xdebug.profiler_enabled = 0\";\n                         $displayIniMessage = true;\n@@ -649,4 +709,20 @@ private function checkPlatform()\n \n         return !$warnings && !$errors ? true : $output;\n     }\n+\n+\n+    \/**\n+     * Check if allow_url_fopen is ON\n+     *\n+     * @return bool|string\n+     *\/\n+    private function checkConnectivity()\n+    {\n+        if (!ini_get('allow_url_fopen')) {\n+            $result = '<info>Skipped because allow_url_fopen is missing.<\/info>';\n+            return $result;\n+        }\n+\n+        return true;\n+    }\n }"
        },
        {
            "sha": "55a2c5f16db0a632d4bc146490d614e84c5093f4",
            "filename": "src\/Composer\/Command\/DumpAutoloadCommand.php",
            "status": "modified",
            "additions": 17,
            "deletions": 6,
            "changes": 23,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/DumpAutoloadCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/DumpAutoloadCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/DumpAutoloadCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -36,7 +36,8 @@ protected function configure()\n                 new InputOption('apcu', null, InputOption::VALUE_NONE, 'Use APCu to cache found\/not-found classes.'),\n                 new InputOption('no-dev', null, InputOption::VALUE_NONE, 'Disables autoload-dev rules.'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n <info>php composer.phar dump-autoload<\/info>\n EOT\n             )\n@@ -57,19 +58,29 @@ protected function execute(InputInterface $input, OutputInterface $output)\n \n         $optimize = $input->getOption('optimize') || $config->get('optimize-autoloader');\n         $authoritative = $input->getOption('classmap-authoritative') || $config->get('classmap-authoritative');\n-        $apcu = $input->getOption('apcu') || $config->get('apcu');\n+        $apcu = $input->getOption('apcu') || $config->get('apcu-autoloader');\n \n-        if ($optimize || $authoritative) {\n-            $this->getIO()->writeError('<info>Generating optimized autoload files<\/info>');\n+        if ($authoritative) {\n+            $this->getIO()->writeError('<info>Generating optimized autoload files (authoritative)<\/info>', false);\n+        } elseif ($optimize) {\n+            $this->getIO()->writeError('<info>Generating optimized autoload files<\/info>', false);\n         } else {\n-            $this->getIO()->writeError('<info>Generating autoload files<\/info>');\n+            $this->getIO()->writeError('<info>Generating autoload files<\/info>', false);\n         }\n \n         $generator = $composer->getAutoloadGenerator();\n         $generator->setDevMode(!$input->getOption('no-dev'));\n         $generator->setClassMapAuthoritative($authoritative);\n         $generator->setApcu($apcu);\n         $generator->setRunScripts(!$input->getOption('no-scripts'));\n-        $generator->dump($config, $localRepo, $package, $installationManager, 'composer', $optimize);\n+        $numberOfClasses = $generator->dump($config, $localRepo, $package, $installationManager, 'composer', $optimize);\n+\n+        if ($authoritative) {\n+            $this->getIO()->overwriteError('<info>Generated optimized autoload files (authoritative) containing '. $numberOfClasses .' classes<\/info>');\n+        } elseif ($optimize) {\n+            $this->getIO()->overwriteError('<info>Generated optimized autoload files containing '. $numberOfClasses .' classes<\/info>');\n+        } else {\n+            $this->getIO()->overwriteError('<info>Generated autoload files containing '. $numberOfClasses .' classes<\/info>');\n+        }\n     }\n }"
        },
        {
            "sha": "f07bc9d288bc107bf7cbdd46c992a8595c9181bd",
            "filename": "src\/Composer\/Command\/ExecCommand.php",
            "status": "modified",
            "additions": 8,
            "deletions": 4,
            "changes": 12,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ExecCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ExecCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/ExecCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -26,7 +26,7 @@ protected function configure()\n     {\n         $this\n             ->setName('exec')\n-            ->setDescription('Execute a vendored binary\/script.')\n+            ->setDescription('Executes a vendored binary\/script.')\n             ->setDefinition(array(\n                 new InputOption('list', 'l', InputOption::VALUE_NONE),\n                 new InputArgument('binary', InputArgument::OPTIONAL, 'The binary to run, e.g. phpunit'),\n@@ -45,13 +45,16 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         $binDir = $composer->getConfig()->get('bin-dir');\n         if ($input->getOption('list') || !$input->getArgument('binary')) {\n             $bins = glob($binDir . '\/*');\n-            $bins = array_merge($bins, array_map(function($e) { return \"$e (local)\"; }, $composer->getPackage()->getBinaries()));\n+            $bins = array_merge($bins, array_map(function ($e) {\n+                return \"$e (local)\";\n+            }, $composer->getPackage()->getBinaries()));\n \n             if (!$bins) {\n                 throw new \\RuntimeException(\"No binaries found in composer.json or in bin-dir ($binDir)\");\n             }\n \n-            $this->getIO()->write(<<<EOT\n+            $this->getIO()->write(\n+                <<<EOT\n <comment>Available binaries:<\/comment>\n EOT\n             );\n@@ -64,7 +67,8 @@ protected function execute(InputInterface $input, OutputInterface $output)\n \n                 $previousBin = $bin;\n                 $bin = basename($bin);\n-                $this->getIO()->write(<<<EOT\n+                $this->getIO()->write(\n+                    <<<EOT\n <info>- $bin<\/info>\n EOT\n                 );"
        },
        {
            "sha": "e13b8aaf2e72432bc624e10811c0b90d654915ba",
            "filename": "src\/Composer\/Command\/GlobalCommand.php",
            "status": "modified",
            "additions": 19,
            "deletions": 3,
            "changes": 22,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/GlobalCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/GlobalCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/GlobalCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,6 +13,7 @@\n namespace Composer\\Command;\n \n use Composer\\Factory;\n+use Composer\\Util\\Filesystem;\n use Symfony\\Component\\Console\\Input\\InputInterface;\n use Symfony\\Component\\Console\\Input\\InputArgument;\n use Symfony\\Component\\Console\\Input\\StringInput;\n@@ -32,7 +33,8 @@ protected function configure()\n                 new InputArgument('command-name', InputArgument::REQUIRED, ''),\n                 new InputArgument('args', InputArgument::IS_ARRAY | InputArgument::OPTIONAL, ''),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n Use this command as a wrapper to run other Composer commands\n within the global context of COMPOSER_HOME.\n \n@@ -74,8 +76,22 @@ public function run(InputInterface $input, OutputInterface $output)\n \n         \/\/ change to global dir\n         $config = Factory::createConfig();\n-        chdir($config->get('home'));\n-        $this->getIO()->writeError('<info>Changed current directory to '.$config->get('home').'<\/info>');\n+        $home = $config->get('home');\n+\n+        if (!is_dir($home)) {\n+            $fs = new Filesystem();\n+            $fs->ensureDirectoryExists($home);\n+            if (!is_dir($home)) {\n+                throw new \\RuntimeException('Could not create home directory');\n+            }\n+        }\n+\n+        try {\n+            chdir($home);\n+        } catch (\\Exception $e) {\n+            throw new \\RuntimeException('Could not switch to home directory \"'.$home.'\"', 0, $e);\n+        }\n+        $this->getIO()->writeError('<info>Changed current directory to '.$home.'<\/info>');\n \n         \/\/ create new input without \"global\" command prefix\n         $input = new StringInput(preg_replace('{\\bg(?:l(?:o(?:b(?:a(?:l)?)?)?)?)?\\b}', '', $input->__toString(), 1));"
        },
        {
            "sha": "a2f0756a1d32bf0d9f68fa46c8d7f729dedf0a4a",
            "filename": "src\/Composer\/Command\/HomeCommand.php",
            "status": "modified",
            "additions": 10,
            "deletions": 3,
            "changes": 13,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/HomeCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/HomeCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/HomeCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -38,11 +38,12 @@ protected function configure()\n             ->setAliases(array('home'))\n             ->setDescription('Opens the package\\'s repository URL or homepage in your browser.')\n             ->setDefinition(array(\n-                new InputArgument('packages', InputArgument::IS_ARRAY | InputArgument::REQUIRED, 'Package(s) to browse to.'),\n+                new InputArgument('packages', InputArgument::IS_ARRAY, 'Package(s) to browse to.'),\n                 new InputOption('homepage', 'H', InputOption::VALUE_NONE, 'Open the homepage instead of the repository URL.'),\n                 new InputOption('show', 's', InputOption::VALUE_NONE, 'Only show the homepage or repository URL.'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The home command opens or shows a package's repository URL or\n homepage in your default browser.\n \n@@ -61,7 +62,13 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         $io = $this->getIO();\n         $return = 0;\n \n-        foreach ($input->getArgument('packages') as $packageName) {\n+        $packages = $input->getArgument('packages');\n+        if (!$packages) {\n+            $io->writeError('No package specified, opening homepage for the root package');\n+            $packages = array($this->getComposer()->getPackage()->getName());\n+        }\n+\n+        foreach ($packages as $packageName) {\n             $handled = false;\n             $packageExists = false;\n             foreach ($repos as $repo) {"
        },
        {
            "sha": "02efbf686ce23f224c9bf26fd157212eb3dd1396",
            "filename": "src\/Composer\/Command\/InitCommand.php",
            "status": "modified",
            "additions": 182,
            "deletions": 38,
            "changes": 220,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/InitCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/InitCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/InitCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,20 +13,21 @@\n namespace Composer\\Command;\n \n use Composer\\DependencyResolver\\Pool;\n-use Composer\\Json\\JsonFile;\n use Composer\\Factory;\n-use Composer\\Repository\\RepositoryFactory;\n+use Composer\\Json\\JsonFile;\n use Composer\\Package\\BasePackage;\n use Composer\\Package\\Version\\VersionParser;\n use Composer\\Package\\Version\\VersionSelector;\n use Composer\\Repository\\CompositeRepository;\n use Composer\\Repository\\PlatformRepository;\n+use Composer\\Repository\\RepositoryFactory;\n use Composer\\Util\\ProcessExecutor;\n+use Symfony\\Component\\Console\\Input\\ArrayInput;\n use Symfony\\Component\\Console\\Input\\InputInterface;\n use Symfony\\Component\\Console\\Input\\InputOption;\n use Symfony\\Component\\Console\\Output\\OutputInterface;\n-use Symfony\\Component\\Process\\Process;\n use Symfony\\Component\\Process\\ExecutableFinder;\n+use Symfony\\Component\\Process\\Process;\n \n \/**\n  * @author Justin Rainbow <justin.rainbow@gmail.com>\n@@ -40,8 +41,8 @@ class InitCommand extends BaseCommand\n     \/** @var array *\/\n     private $gitConfig;\n \n-    \/** @var Pool *\/\n-    private $pool;\n+    \/** @var Pool[] *\/\n+    private $pools;\n \n     \/**\n      * {@inheritdoc}\n@@ -64,7 +65,8 @@ protected function configure()\n                 new InputOption('license', 'l', InputOption::VALUE_REQUIRED, 'License of package'),\n                 new InputOption('repository', null, InputOption::VALUE_REQUIRED | InputOption::VALUE_IS_ARRAY, 'Add custom repositories, either by URL or using JSON arrays'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The <info>init<\/info> command creates a basic composer.json file\n in the current directory.\n \n@@ -144,6 +146,11 @@ protected function execute(InputInterface $input, OutputInterface $output)\n                 }\n             }\n         }\n+\n+        $question = 'Would you like to install dependencies now [<comment>yes<\/comment>]? ';\n+        if ($input->isInteractive() && $this->hasDependencies($options) && $io->askConfirmation($question, true)) {\n+            $this->installDependencies($output);\n+        }\n     }\n \n     \/**\n@@ -165,7 +172,7 @@ protected function interact(InputInterface $input, OutputInterface $output)\n             }\n             $repos[] = RepositoryFactory::createRepo($io, $config, array(\n                 'type' => 'composer',\n-                'url' => 'https:\/\/packagist.org',\n+                'url' => 'https:\/\/repo.packagist.org',\n             ));\n \n             $this->repos = new CompositeRepository($repos);\n@@ -191,19 +198,23 @@ protected function interact(InputInterface $input, OutputInterface $output)\n             $name = basename($cwd);\n             $name = preg_replace('{(?:([a-z])([A-Z])|([A-Z])([A-Z][a-z]))}', '\\\\1\\\\3-\\\\2\\\\4', $name);\n             $name = strtolower($name);\n-            if (isset($git['github.user'])) {\n+            if (!empty($_SERVER['COMPOSER_DEFAULT_VENDOR'])) {\n+                $name = $_SERVER['COMPOSER_DEFAULT_VENDOR'] . '\/' . $name;\n+            } elseif (isset($git['github.user'])) {\n                 $name = $git['github.user'] . '\/' . $name;\n             } elseif (!empty($_SERVER['USERNAME'])) {\n                 $name = $_SERVER['USERNAME'] . '\/' . $name;\n+            } elseif (!empty($_SERVER['USER'])) {\n+                $name = $_SERVER['USER'] . '\/' . $name;\n             } elseif (get_current_user()) {\n                 $name = get_current_user() . '\/' . $name;\n             } else {\n                 \/\/ package names must be in the format foo\/bar\n-                $name = $name . '\/' . $name;\n+                $name .= '\/' . $name;\n             }\n             $name = strtolower($name);\n         } else {\n-            if (!preg_match('{^[a-z0-9_.-]+\/[a-z0-9_.-]+$}', $name)) {\n+            if (!preg_match('{^[a-z0-9_.-]+\/[a-z0-9_.-]+$}D', $name)) {\n                 throw new \\InvalidArgumentException(\n                     'The package name '.$name.' is invalid, it should be lowercase and have a vendor name, a forward slash, and a package name, matching: [a-z0-9_.-]+\/[a-z0-9_.-]+'\n                 );\n@@ -217,7 +228,7 @@ function ($value) use ($name) {\n                     return $name;\n                 }\n \n-                if (!preg_match('{^[a-z0-9_.-]+\/[a-z0-9_.-]+$}', $value)) {\n+                if (!preg_match('{^[a-z0-9_.-]+\/[a-z0-9_.-]+$}D', $value)) {\n                     throw new \\InvalidArgumentException(\n                         'The package name '.$value.' is invalid, it should be lowercase and have a vendor name, a forward slash, and a package name, matching: [a-z0-9_.-]+\/[a-z0-9_.-]+'\n                     );\n@@ -238,8 +249,20 @@ function ($value) use ($name) {\n         $input->setOption('description', $description);\n \n         if (null === $author = $input->getOption('author')) {\n-            if (isset($git['user.name']) && isset($git['user.email'])) {\n-                $author = sprintf('%s <%s>', $git['user.name'], $git['user.email']);\n+            if (!empty($_SERVER['COMPOSER_DEFAULT_AUTHOR'])) {\n+                $author_name = $_SERVER['COMPOSER_DEFAULT_AUTHOR'];\n+            } elseif (isset($git['user.name'])) {\n+                $author_name = $git['user.name'];\n+            }\n+\n+            if (!empty($_SERVER['COMPOSER_DEFAULT_EMAIL'])) {\n+                $author_email = $_SERVER['COMPOSER_DEFAULT_EMAIL'];\n+            } elseif (isset($git['user.email'])) {\n+                $author_email = $git['user.email'];\n+            }\n+\n+            if (isset($author_name) && isset($author_email)) {\n+                $author = sprintf('%s <%s>', $author_name, $author_email);\n             }\n         }\n \n@@ -263,7 +286,7 @@ function ($value) use ($self, $author) {\n         $minimumStability = $input->getOption('stability') ?: null;\n         $minimumStability = $io->askAndValidate(\n             'Minimum Stability [<comment>'.$minimumStability.'<\/comment>]: ',\n-            function ($value) use ($self, $minimumStability) {\n+            function ($value) use ($minimumStability) {\n                 if (null === $value) {\n                     return $minimumStability;\n                 }\n@@ -289,7 +312,12 @@ function ($value) use ($self, $minimumStability) {\n         );\n         $input->setOption('type', $type);\n \n-        $license = $input->getOption('license') ?: false;\n+        if (null === $license = $input->getOption('license')) {\n+            if (!empty($_SERVER['COMPOSER_DEFAULT_LICENSE'])) {\n+                $license = $_SERVER['COMPOSER_DEFAULT_LICENSE'];\n+            }\n+        }\n+\n         $license = $io->ask(\n             'License [<comment>'.$license.'<\/comment>]: ',\n             $license\n@@ -298,17 +326,24 @@ function ($value) use ($self, $minimumStability) {\n \n         $io->writeError(array('', 'Define your dependencies.', ''));\n \n+        \/\/ prepare to resolve dependencies\n+        $repos = $this->getRepos();\n+        $preferredStability = $minimumStability ?: 'stable';\n+        $phpVersion = $repos->findPackage('php', '*')->getPrettyVersion();\n+\n         $question = 'Would you like to define your dependencies (require) interactively [<comment>yes<\/comment>]? ';\n+        $require = $input->getOption('require');\n         $requirements = array();\n-        if ($io->askConfirmation($question, true)) {\n-            $requirements = $this->determineRequirements($input, $output, $input->getOption('require'));\n+        if ($require || $io->askConfirmation($question, true)) {\n+            $requirements = $this->determineRequirements($input, $output, $require, $phpVersion, $preferredStability);\n         }\n         $input->setOption('require', $requirements);\n \n         $question = 'Would you like to define your dev dependencies (require-dev) interactively [<comment>yes<\/comment>]? ';\n+        $requireDev = $input->getOption('require-dev');\n         $devRequirements = array();\n-        if ($io->askConfirmation($question, true)) {\n-            $devRequirements = $this->determineRequirements($input, $output, $input->getOption('require-dev'));\n+        if ($requireDev || $io->askConfirmation($question, true)) {\n+            $devRequirements = $this->determineRequirements($input, $output, $requireDev, $phpVersion, $preferredStability);\n         }\n         $input->setOption('require-dev', $devRequirements);\n     }\n@@ -320,10 +355,10 @@ function ($value) use ($self, $minimumStability) {\n      *\/\n     public function parseAuthorString($author)\n     {\n-        if (preg_match('\/^(?P<name>[- .,\\p{L}\\p{N}\\'\u2019\"()]+) <(?P<email>.+?)>$\/u', $author, $match)) {\n+        if (preg_match('\/^(?P<name>[- .,\\p{L}\\p{N}\\p{Mn}\\'\u2019\"()]+) <(?P<email>.+?)>$\/u', $author, $match)) {\n             if ($this->isValidEmail($match['email'])) {\n                 return array(\n-                    'name'  => trim($match['name']),\n+                    'name' => trim($match['name']),\n                     'email' => $match['email'],\n                 );\n             }\n@@ -352,7 +387,7 @@ protected function getRepos()\n         return $this->repos;\n     }\n \n-    protected function determineRequirements(InputInterface $input, OutputInterface $output, $requires = array(), $phpVersion = null)\n+    protected function determineRequirements(InputInterface $input, OutputInterface $output, $requires = array(), $phpVersion = null, $preferredStability = 'stable', $checkProvidedVersions = true)\n     {\n         if ($requires) {\n             $requires = $this->normalizeRequirements($requires);\n@@ -362,14 +397,23 @@ protected function determineRequirements(InputInterface $input, OutputInterface\n             foreach ($requires as $requirement) {\n                 if (!isset($requirement['version'])) {\n                     \/\/ determine the best version automatically\n-                    $version = $this->findBestVersionForPackage($input, $requirement['name'], $phpVersion);\n+                    list($name, $version) = $this->findBestVersionAndNameForPackage($input, $requirement['name'], $phpVersion, $preferredStability);\n                     $requirement['version'] = $version;\n \n+                    \/\/ replace package name from packagist.org\n+                    $requirement['name'] = $name;\n+\n                     $io->writeError(sprintf(\n                         'Using version <info>%s<\/info> for <info>%s<\/info>',\n                         $requirement['version'],\n                         $requirement['name']\n                     ));\n+                } else {\n+                    \/\/ check that the specified version\/constraint exists before we proceed\n+                    list($name, $version) = $this->findBestVersionAndNameForPackage($input, $requirement['name'], $phpVersion, $preferredStability, $checkProvidedVersions ? $requirement['version'] : null, 'dev');\n+\n+                    \/\/ replace package name from packagist.org\n+                    $requirement['name'] = $name;\n                 }\n \n                 $result[] = $requirement['name'] . ' ' . $requirement['version'];\n@@ -387,7 +431,17 @@ protected function determineRequirements(InputInterface $input, OutputInterface\n                 $exactMatch = null;\n                 $choices = array();\n                 foreach ($matches as $position => $foundPackage) {\n-                    $choices[] = sprintf(' <info>%5s<\/info> %s', \"[$position]\", $foundPackage['name']);\n+                    $abandoned = '';\n+                    if (isset($foundPackage['abandoned'])) {\n+                        if (is_string($foundPackage['abandoned'])) {\n+                            $replacement = sprintf('Use %s instead', $foundPackage['abandoned']);\n+                        } else {\n+                            $replacement = 'No replacement was suggested';\n+                        }\n+                        $abandoned = sprintf('<warning>Abandoned. %s.<\/warning>', $replacement);\n+                    }\n+\n+                    $choices[] = sprintf(' <info>%5s<\/info> %s %s', \"[$position]\", $foundPackage['name'], $abandoned);\n                     if ($foundPackage['name'] === $package) {\n                         $exactMatch = true;\n                         break;\n@@ -457,7 +511,7 @@ protected function determineRequirements(InputInterface $input, OutputInterface\n                     );\n \n                     if (false === $constraint) {\n-                        $constraint = $this->findBestVersionForPackage($input, $package, $phpVersion);\n+                        list($name, $constraint) = $this->findBestVersionAndNameForPackage($input, $package, $phpVersion, $preferredStability);\n \n                         $io->writeError(sprintf(\n                             'Using version <info>%s<\/info> for <info>%s<\/info>',\n@@ -589,14 +643,16 @@ protected function isValidEmail($email)\n         return false !== filter_var($email, FILTER_VALIDATE_EMAIL);\n     }\n \n-    private function getPool(InputInterface $input)\n+    private function getPool(InputInterface $input, $minimumStability = null)\n     {\n-        if (!$this->pool) {\n-            $this->pool = new Pool($this->getMinimumStability($input));\n-            $this->pool->addRepository($this->getRepos());\n+        $key = $minimumStability ?: 'default';\n+\n+        if (!isset($this->pools[$key])) {\n+            $this->pools[$key] = $pool = new Pool($minimumStability ?: $this->getMinimumStability($input));\n+            $pool->addRepository($this->getRepos());\n         }\n \n-        return $this->pool;\n+        return $this->pools[$key];\n     }\n \n     private function getMinimumStability(InputInterface $input)\n@@ -622,30 +678,118 @@ private function getMinimumStability(InputInterface $input)\n      *\n      * @param  InputInterface            $input\n      * @param  string                    $name\n-     * @param  string                    $phpVersion\n+     * @param  string|null               $phpVersion\n+     * @param  string                    $preferredStability\n+     * @param  string|null               $requiredVersion\n+     * @param  string                    $minimumStability\n      * @throws \\InvalidArgumentException\n-     * @return string\n+     * @return array                     name version\n      *\/\n-    private function findBestVersionForPackage(InputInterface $input, $name, $phpVersion)\n+    private function findBestVersionAndNameForPackage(InputInterface $input, $name, $phpVersion, $preferredStability = 'stable', $requiredVersion = null, $minimumStability = null)\n     {\n         \/\/ find the latest version allowed in this pool\n-        $versionSelector = new VersionSelector($this->getPool($input));\n-        $package = $versionSelector->findBestCandidate($name, null, $phpVersion);\n+        $versionSelector = new VersionSelector($this->getPool($input, $minimumStability));\n+        $package = $versionSelector->findBestCandidate($name, $requiredVersion, $phpVersion, $preferredStability);\n+\n+        \/\/ retry without phpVersion if platform requirements are ignored in case nothing was found\n+        if ($input->hasOption('ignore-platform-reqs') && $input->getOption('ignore-platform-reqs')) {\n+            $phpVersion = null;\n+            $package = $versionSelector->findBestCandidate($name, $requiredVersion, $phpVersion, $preferredStability);\n+        }\n \n         if (!$package) {\n+            \/\/ Check whether the PHP version was the problem\n+            if ($phpVersion && $versionSelector->findBestCandidate($name, $requiredVersion, null, $preferredStability)) {\n+                throw new \\InvalidArgumentException(sprintf(\n+                    'Package %s at version %s has a PHP requirement incompatible with your PHP version (%s)',\n+                    $name,\n+                    $requiredVersion,\n+                    $phpVersion\n+                ));\n+            }\n+            \/\/ Check whether the required version was the problem\n+            if ($requiredVersion && $versionSelector->findBestCandidate($name, null, $phpVersion, $preferredStability)) {\n+                throw new \\InvalidArgumentException(sprintf(\n+                    'Could not find package %s in a version matching %s',\n+                    $name,\n+                    $requiredVersion\n+                ));\n+            }\n             \/\/ Check whether the PHP version was the problem\n             if ($phpVersion && $versionSelector->findBestCandidate($name)) {\n                 throw new \\InvalidArgumentException(sprintf(\n-                    'Could not find package %s at any version matching your PHP version %s', $name, $phpVersion\n+                    'Could not find package %s in any version matching your PHP version (%s)',\n+                    $name,\n+                    $phpVersion\n+                ));\n+            }\n+\n+            \/\/ Check for similar names\/typos\n+            $similar = $this->findSimilar($name);\n+            if ($similar) {\n+                \/\/ Check whether the minimum stability was the problem but the package exists\n+                if ($requiredVersion === null && in_array($name, $similar, true)) {\n+                    throw new \\InvalidArgumentException(sprintf(\n+                        'Could not find a version of package %s matching your minimum-stability (%s). Require it with an explicit version constraint allowing its desired stability.',\n+                        $name,\n+                        $this->getMinimumStability($input)\n+                    ));\n+                }\n+\n+                throw new \\InvalidArgumentException(sprintf(\n+                    \"Could not find package %s.\\n\\nDid you mean \" . (count($similar) > 1 ? 'one of these' : 'this') . \"?\\n    %s\",\n+                    $name,\n+                    implode(\"\\n    \", $similar)\n                 ));\n             }\n+\n             throw new \\InvalidArgumentException(sprintf(\n-                'Could not find package %s at any version for your minimum-stability (%s). Check the package spelling or your minimum-stability',\n+                'Could not find a matching version of package %s. Check the package spelling, your version constraint and that the package is available in a stability which matches your minimum-stability (%s).',\n                 $name,\n                 $this->getMinimumStability($input)\n             ));\n         }\n \n-        return $versionSelector->findRecommendedRequireVersion($package);\n+        return array(\n+            $package->getPrettyName(),\n+            $versionSelector->findRecommendedRequireVersion($package),\n+        );\n+    }\n+\n+    private function findSimilar($package)\n+    {\n+        try {\n+            $results = $this->repos->search($package);\n+        } catch (\\Exception $e) {\n+            \/\/ ignore search errors\n+            return array();\n+        }\n+        $similarPackages = array();\n+\n+        foreach ($results as $result) {\n+            $similarPackages[$result['name']] = levenshtein($package, $result['name']);\n+        }\n+        asort($similarPackages);\n+\n+        return array_keys(array_slice($similarPackages, 0, 5));\n+    }\n+\n+    private function installDependencies($output)\n+    {\n+        try {\n+            $installCommand = $this->getApplication()->find('install');\n+            $installCommand->run(new ArrayInput(array()), $output);\n+        } catch (\\Exception $e) {\n+            $this->getIO()->writeError('Could not install dependencies. Run `composer install` to see more information.');\n+        }\n+\n+    }\n+\n+    private function hasDependencies($options)\n+    {\n+        $requires = (array) $options['require'];\n+        $devRequires = isset($options['require-dev']) ? (array) $options['require-dev'] : array();\n+\n+        return !empty($requires) || !empty($devRequires);\n     }\n }"
        },
        {
            "sha": "cc590d8c9fd683cbea98b22b7533025878462442",
            "filename": "src\/Composer\/Command\/InstallCommand.php",
            "status": "modified",
            "additions": 3,
            "deletions": 1,
            "changes": 4,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/InstallCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/InstallCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/InstallCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -32,6 +32,7 @@ protected function configure()\n     {\n         $this\n             ->setName('install')\n+            ->setAliases(array('i'))\n             ->setDescription('Installs the project dependencies from the composer.lock file if present, or falls back on the composer.json.')\n             ->setDefinition(array(\n                 new InputOption('prefer-source', null, InputOption::VALUE_NONE, 'Forces installation from package sources when possible, including VCS information.'),\n@@ -51,7 +52,8 @@ protected function configure()\n                 new InputOption('ignore-platform-reqs', null, InputOption::VALUE_NONE, 'Ignore platform requirements (php & ext- packages).'),\n                 new InputArgument('packages', InputArgument::IS_ARRAY | InputArgument::OPTIONAL, 'Should not be provided, use composer require instead to add a given package to composer.json.'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The <info>install<\/info> command reads the composer.lock file from\n the current directory, processes it, and downloads and installs all the\n libraries and dependencies outlined in that file. If the file does not"
        },
        {
            "sha": "9dec45e1bcc4a1f4f9952e6fe9ddb1248de1b8cb",
            "filename": "src\/Composer\/Command\/LicensesCommand.php",
            "status": "modified",
            "additions": 9,
            "deletions": 7,
            "changes": 16,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/LicensesCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/LicensesCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/LicensesCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -31,12 +31,13 @@ protected function configure()\n     {\n         $this\n             ->setName('licenses')\n-            ->setDescription('Show information about licenses of dependencies.')\n+            ->setDescription('Shows information about licenses of dependencies.')\n             ->setDefinition(array(\n                 new InputOption('format', 'f', InputOption::VALUE_REQUIRED, 'Format of the output: text or json', 'text'),\n                 new InputOption('no-dev', null, InputOption::VALUE_NONE, 'Disables search in require-dev packages.'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The license command displays detailed information about the licenses of\n the installed dependencies.\n \n@@ -74,8 +75,9 @@ protected function execute(InputInterface $input, OutputInterface $output)\n \n                 $table = new Table($output);\n                 $table->setStyle('compact');\n-                $table->getStyle()->setVerticalBorderChar('');\n-                $table->getStyle()->setCellRowContentFormat('%s  ');\n+                $tableStyle = $table->getStyle();\n+                $tableStyle->setVerticalBorderChar('');\n+                $tableStyle->setCellRowContentFormat('%s  ');\n                 $table->setHeaders(array('Name', 'Version', 'License'));\n                 foreach ($packages as $package) {\n                     $table->addRow(array(\n@@ -97,9 +99,9 @@ protected function execute(InputInterface $input, OutputInterface $output)\n                 }\n \n                 $io->write(JsonFile::encode(array(\n-                    'name'         => $root->getPrettyName(),\n-                    'version'      => $root->getFullPrettyVersion(),\n-                    'license'      => $root->getLicense(),\n+                    'name' => $root->getPrettyName(),\n+                    'version' => $root->getFullPrettyVersion(),\n+                    'license' => $root->getLicense(),\n                     'dependencies' => $dependencies,\n                 )));\n                 break;"
        },
        {
            "sha": "79409c58fd9773d18c964350f46c94cdd41833bc",
            "filename": "src\/Composer\/Command\/OutdatedCommand.php",
            "status": "modified",
            "additions": 10,
            "deletions": 5,
            "changes": 15,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/OutdatedCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/OutdatedCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/OutdatedCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -35,17 +35,20 @@ protected function configure()\n                 new InputOption('direct', 'D', InputOption::VALUE_NONE, 'Shows only packages that are directly required by the root package'),\n                 new InputOption('strict', null, InputOption::VALUE_NONE, 'Return a non-zero exit code when there are outdated packages'),\n                 new InputOption('minor-only', 'm', InputOption::VALUE_NONE, 'Show only packages that have minor SemVer-compatible updates. Use with the --outdated option.'),\n+                new InputOption('format', 'f', InputOption::VALUE_REQUIRED, 'Format of the output: text or json', 'text'),\n+                new InputOption('ignore', null, InputOption::VALUE_REQUIRED | InputOption::VALUE_IS_ARRAY, 'Ignore specified package(s). Use it with the --outdated option if you don\\'t want to be informed about new versions of some packages.'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The outdated command is just a proxy for `composer show -l`\n \n-The color coding for dependency versions is as such:\n+The color coding (or signage if you have ANSI colors disabled) for dependency versions is as such:\n \n-- <info>green<\/info>: Dependency is in the latest version and is up to date.\n-- <comment>yellow<\/comment>: Dependency has a new version available that includes backwards\n+- <info>green<\/info> (=): Dependency is in the latest version and is up to date.\n+- <comment>yellow<\/comment> (~): Dependency has a new version available that includes backwards\n   compatibility breaks according to semver, so upgrade when you can but it\n   may involve work.\n-- <highlight>red<\/highlight>: Dependency has a new version that is semver-compatible and you should upgrade it.\n+- <highlight>red<\/highlight> (!): Dependency has a new version that is semver-compatible and you should upgrade it.\n \n \n EOT\n@@ -74,6 +77,8 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         if ($input->getOption('minor-only')) {\n             $args['--minor-only'] = true;\n         }\n+        $args['--format'] = $input->getOption('format');\n+        $args['--ignore'] = $input->getOption('ignore');\n \n         $input = new ArrayInput($args);\n "
        },
        {
            "sha": "edf6729ab5da20515b9294bf6bd61c193a9c6259",
            "filename": "src\/Composer\/Command\/ProhibitsCommand.php",
            "status": "modified",
            "additions": 2,
            "deletions": 1,
            "changes": 3,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ProhibitsCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ProhibitsCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/ProhibitsCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -31,7 +31,8 @@ protected function configure()\n             ->setName('prohibits')\n             ->setAliases(array('why-not'))\n             ->setDescription('Shows which packages prevent the given package from being installed.')\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n Displays detailed information about why a package cannot be installed.\n \n <info>php composer.phar prohibits composer\/composer<\/info>"
        },
        {
            "sha": "27be1a0caa4cee30d17d3b4980d7eea67ef75259",
            "filename": "src\/Composer\/Command\/RemoveCommand.php",
            "status": "modified",
            "additions": 21,
            "deletions": 14,
            "changes": 35,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/RemoveCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/RemoveCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/RemoveCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -22,6 +22,7 @@\n use Symfony\\Component\\Console\\Input\\InputOption;\n use Symfony\\Component\\Console\\Input\\InputArgument;\n use Symfony\\Component\\Console\\Output\\OutputInterface;\n+use Composer\\Package\\BasePackage;\n \n \/**\n  * @author Pierre du Plessis <pdples@gmail.com>\n@@ -35,7 +36,7 @@ protected function configure()\n             ->setName('remove')\n             ->setDescription('Removes a package from the require or require-dev.')\n             ->setDefinition(array(\n-                new InputArgument('packages', InputArgument::IS_ARRAY, 'Packages that should be removed.'),\n+                new InputArgument('packages', InputArgument::IS_ARRAY | InputArgument::REQUIRED, 'Packages that should be removed.'),\n                 new InputOption('dev', null, InputOption::VALUE_NONE, 'Removes a package from the require-dev section.'),\n                 new InputOption('no-progress', null, InputOption::VALUE_NONE, 'Do not output download progress.'),\n                 new InputOption('no-update', null, InputOption::VALUE_NONE, 'Disables the automatic update of the dependencies.'),\n@@ -48,7 +49,8 @@ protected function configure()\n                 new InputOption('classmap-authoritative', 'a', InputOption::VALUE_NONE, 'Autoload classes from the classmap only. Implicitly enables `--optimize-autoloader`.'),\n                 new InputOption('apcu-autoloader', null, InputOption::VALUE_NONE, 'Use APCu to cache found\/not-found classes.'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The <info>remove<\/info> command removes a package from the current\n list of installed packages\n \n@@ -93,12 +95,25 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             if (isset($composer[$type][$package])) {\n                 $json->removeLink($type, $composer[$type][$package]);\n             } elseif (isset($composer[$altType][$package])) {\n-                $io->writeError('<warning>'.$composer[$altType][$package].' could not be found in '.$type.' but it is present in '.$altType.'<\/warning>');\n+                $io->writeError('<warning>' . $composer[$altType][$package] . ' could not be found in ' . $type . ' but it is present in ' . $altType . '<\/warning>');\n                 if ($io->isInteractive()) {\n-                    if ($io->askConfirmation('Do you want to remove it from '.$altType.' [<comment>yes<\/comment>]? ', true)) {\n+                    if ($io->askConfirmation('Do you want to remove it from ' . $altType . ' [<comment>yes<\/comment>]? ', true)) {\n                         $json->removeLink($altType, $composer[$altType][$package]);\n                     }\n                 }\n+            } elseif (isset($composer[$type]) && $matches = preg_grep(BasePackage::packageNameToRegexp($package), array_keys($composer[$type]))) {\n+                foreach ($matches as $matchedPackage) {\n+                    $json->removeLink($type, $matchedPackage);\n+                }\n+            } elseif (isset($composer[$altType]) && $matches = preg_grep(BasePackage::packageNameToRegexp($package), array_keys($composer[$altType]))) {\n+                foreach ($matches as $matchedPackage) {\n+                    $io->writeError('<warning>' . $matchedPackage . ' could not be found in ' . $type . ' but it is present in ' . $altType . '<\/warning>');\n+                    if ($io->isInteractive()) {\n+                        if ($io->askConfirmation('Do you want to remove it from ' . $altType . ' [<comment>yes<\/comment>]? ', true)) {\n+                            $json->removeLink($altType, $matchedPackage);\n+                        }\n+                    }\n+                }\n             } else {\n                 $io->writeError('<warning>'.$package.' is not required in your composer.json and has not been removed<\/warning>');\n             }\n@@ -131,24 +146,16 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             ->setApcuAutoloader($apcu)\n             ->setUpdate(true)\n             ->setUpdateWhitelist($packages)\n-            ->setWhitelistDependencies(!$input->getOption('no-update-with-dependencies'))\n+            ->setWhitelistTransitiveDependencies(!$input->getOption('no-update-with-dependencies'))\n             ->setIgnorePlatformRequirements($input->getOption('ignore-platform-reqs'))\n             ->setRunScripts(!$input->getOption('no-scripts'))\n         ;\n \n-        $exception = null;\n-        try {\n-            $status = $install->run();\n-        } catch (\\Exception $exception) {\n-            $status = 1;\n-        }\n+        $status = $install->run();\n         if ($status !== 0) {\n             $io->writeError(\"\\n\".'<error>Removal failed, reverting '.$file.' to its original content.<\/error>');\n             file_put_contents($jsonFile->getPath(), $composerBackup);\n         }\n-        if ($exception) {\n-            throw $exception;\n-        }\n \n         return $status;\n     }"
        },
        {
            "sha": "1f29751b9dfbe7e0917ca1e2b5838fea2de96581",
            "filename": "src\/Composer\/Command\/RequireCommand.php",
            "status": "modified",
            "additions": 63,
            "deletions": 38,
            "changes": 101,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/RequireCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/RequireCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/RequireCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -32,13 +32,18 @@\n  *\/\n class RequireCommand extends InitCommand\n {\n+    private $newlyCreated;\n+    private $json;\n+    private $file;\n+    private $composerBackup;\n+\n     protected function configure()\n     {\n         $this\n             ->setName('require')\n             ->setDescription('Adds required packages to your composer.json and installs them.')\n             ->setDefinition(array(\n-                new InputArgument('packages', InputArgument::IS_ARRAY | InputArgument::OPTIONAL, 'Required package name optionally including a version constraint, e.g. foo\/bar or foo\/bar:1.0.0 or foo\/bar=1.0.0 or \"foo\/bar 1.0.0\"'),\n+                new InputArgument('packages', InputArgument::IS_ARRAY | InputArgument::OPTIONAL, 'Optional package name can also include a version constraint, e.g. foo\/bar or foo\/bar:1.0.0 or foo\/bar=1.0.0 or \"foo\/bar 1.0.0\"'),\n                 new InputOption('dev', null, InputOption::VALUE_NONE, 'Add requirement to require-dev.'),\n                 new InputOption('prefer-source', null, InputOption::VALUE_NONE, 'Forces installation from package sources when possible, including VCS information.'),\n                 new InputOption('prefer-dist', null, InputOption::VALUE_NONE, 'Forces installation from package dist even for dev versions.'),\n@@ -47,7 +52,8 @@ protected function configure()\n                 new InputOption('no-update', null, InputOption::VALUE_NONE, 'Disables the automatic update of the dependencies.'),\n                 new InputOption('no-scripts', null, InputOption::VALUE_NONE, 'Skips the execution of all scripts defined in composer.json file.'),\n                 new InputOption('update-no-dev', null, InputOption::VALUE_NONE, 'Run the dependency update with the --no-dev option.'),\n-                new InputOption('update-with-dependencies', null, InputOption::VALUE_NONE, 'Allows inherited dependencies to be updated with explicit dependencies.'),\n+                new InputOption('update-with-dependencies', null, InputOption::VALUE_NONE, 'Allows inherited dependencies to be updated, except those that are root requirements.'),\n+                new InputOption('update-with-all-dependencies', null, InputOption::VALUE_NONE, 'Allows all inherited dependencies to be updated, including those that are root requirements.'),\n                 new InputOption('ignore-platform-reqs', null, InputOption::VALUE_NONE, 'Ignore platform requirements (php & ext- packages).'),\n                 new InputOption('prefer-stable', null, InputOption::VALUE_NONE, 'Prefer stable versions of dependencies.'),\n                 new InputOption('prefer-lowest', null, InputOption::VALUE_NONE, 'Prefer lowest versions of dependencies.'),\n@@ -56,9 +62,13 @@ protected function configure()\n                 new InputOption('classmap-authoritative', 'a', InputOption::VALUE_NONE, 'Autoload classes from the classmap only. Implicitly enables `--optimize-autoloader`.'),\n                 new InputOption('apcu-autoloader', null, InputOption::VALUE_NONE, 'Use APCu to cache found\/not-found classes.'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The require command adds required packages to your composer.json and installs them.\n \n+If you do not specify a package, composer will prompt you to search for a package, and given results, provide a list of\n+matches to require.\n+\n If you do not specify a version constraint, composer will choose a suitable one based on the available package versions.\n \n If you do not want to install the new dependencies immediately you can call it with --no-update\n@@ -70,32 +80,39 @@ protected function configure()\n \n     protected function execute(InputInterface $input, OutputInterface $output)\n     {\n-        $file = Factory::getComposerFile();\n+        if (function_exists('pcntl_async_signals')) {\n+            pcntl_async_signals(true);\n+            pcntl_signal(SIGINT, array($this, 'revertComposerFile'));\n+            pcntl_signal(SIGTERM, array($this, 'revertComposerFile'));\n+            pcntl_signal(SIGHUP, array($this, 'revertComposerFile'));\n+        }\n+\n+        $this->file = Factory::getComposerFile();\n         $io = $this->getIO();\n \n-        $newlyCreated = !file_exists($file);\n-        if (!file_exists($file) && !file_put_contents($file, \"{\\n}\\n\")) {\n-            $io->writeError('<error>'.$file.' could not be created.<\/error>');\n+        $this->newlyCreated = !file_exists($this->file);\n+        if ($this->newlyCreated && !file_put_contents($this->file, \"{\\n}\\n\")) {\n+            $io->writeError('<error>'.$this->file.' could not be created.<\/error>');\n \n             return 1;\n         }\n-        if (!is_readable($file)) {\n-            $io->writeError('<error>'.$file.' is not readable.<\/error>');\n+        if (!is_readable($this->file)) {\n+            $io->writeError('<error>'.$this->file.' is not readable.<\/error>');\n \n             return 1;\n         }\n-        if (!is_writable($file)) {\n-            $io->writeError('<error>'.$file.' is not writable.<\/error>');\n+        if (!is_writable($this->file)) {\n+            $io->writeError('<error>'.$this->file.' is not writable.<\/error>');\n \n             return 1;\n         }\n \n-        if (filesize($file) === 0) {\n-            file_put_contents($file, \"{\\n}\\n\");\n+        if (filesize($this->file) === 0) {\n+            file_put_contents($this->file, \"{\\n}\\n\");\n         }\n \n-        $json = new JsonFile($file);\n-        $composerBackup = file_get_contents($json->getPath());\n+        $this->json = new JsonFile($this->file);\n+        $this->composerBackup = file_get_contents($this->json->getPath());\n \n         $composer = $this->getComposer(true, $input->getOption('no-plugins'));\n         $repos = $composer->getRepositoryManager()->getRepositories();\n@@ -107,8 +124,14 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             $repos\n         ));\n \n-        $phpVersion = $this->repos->findPackage('php', '*')->getVersion();\n-        $requirements = $this->determineRequirements($input, $output, $input->getArgument('packages'), $phpVersion);\n+        if ($composer->getPackage()->getPreferStable()) {\n+            $preferredStability = 'stable';\n+        } else {\n+            $preferredStability = $composer->getPackage()->getMinimumStability();\n+        }\n+\n+        $phpVersion = $this->repos->findPackage('php', '*')->getPrettyVersion();\n+        $requirements = $this->determineRequirements($input, $output, $input->getArgument('packages'), $phpVersion, $preferredStability, !$input->getOption('no-update'));\n \n         $requireKey = $input->getOption('dev') ? 'require-dev' : 'require';\n         $removeKey = $input->getOption('dev') ? 'require' : 'require-dev';\n@@ -122,16 +145,16 @@ protected function execute(InputInterface $input, OutputInterface $output)\n \n         $sortPackages = $input->getOption('sort-packages') || $composer->getConfig()->get('sort-packages');\n \n-        if (!$this->updateFileCleanly($json, $requirements, $requireKey, $removeKey, $sortPackages)) {\n-            $composerDefinition = $json->read();\n+        if (!$this->updateFileCleanly($this->json, $requirements, $requireKey, $removeKey, $sortPackages)) {\n+            $composerDefinition = $this->json->read();\n             foreach ($requirements as $package => $version) {\n                 $composerDefinition[$requireKey][$package] = $version;\n                 unset($composerDefinition[$removeKey][$package]);\n             }\n-            $json->write($composerDefinition);\n+            $this->json->write($composerDefinition);\n         }\n \n-        $io->writeError('<info>'.$file.' has been '.($newlyCreated ? 'created' : 'updated').'<\/info>');\n+        $io->writeError('<info>'.$this->file.' has been '.($this->newlyCreated ? 'created' : 'updated').'<\/info>');\n \n         if ($input->getOption('no-update')) {\n             return 0;\n@@ -163,29 +186,16 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             ->setApcuAutoloader($apcu)\n             ->setUpdate(true)\n             ->setUpdateWhitelist(array_keys($requirements))\n-            ->setWhitelistDependencies($input->getOption('update-with-dependencies'))\n+            ->setWhitelistTransitiveDependencies($input->getOption('update-with-dependencies'))\n+            ->setWhitelistAllDependencies($input->getOption('update-with-all-dependencies'))\n             ->setIgnorePlatformRequirements($input->getOption('ignore-platform-reqs'))\n             ->setPreferStable($input->getOption('prefer-stable'))\n             ->setPreferLowest($input->getOption('prefer-lowest'))\n         ;\n \n-        $exception = null;\n-        try {\n-            $status = $install->run();\n-        } catch (\\Exception $exception) {\n-            $status = 1;\n-        }\n+        $status = $install->run();\n         if ($status !== 0) {\n-            if ($newlyCreated) {\n-                $io->writeError(\"\\n\".'<error>Installation failed, deleting '.$file.'.<\/error>');\n-                unlink($json->getPath());\n-            } else {\n-                $io->writeError(\"\\n\".'<error>Installation failed, reverting '.$file.' to its original content.<\/error>');\n-                file_put_contents($json->getPath(), $composerBackup);\n-            }\n-        }\n-        if ($exception) {\n-            throw $exception;\n+            $this->revertComposerFile();\n         }\n \n         return $status;\n@@ -215,4 +225,19 @@ protected function interact(InputInterface $input, OutputInterface $output)\n     {\n         return;\n     }\n+\n+    public function revertComposerFile()\n+    {\n+        $io = $this->getIO();\n+\n+        if ($this->newlyCreated) {\n+            $io->writeError(\"\\n\".'<error>Installation failed, deleting '.$this->file.'.<\/error>');\n+            unlink($this->json->getPath());\n+        } else {\n+            $io->writeError(\"\\n\".'<error>Installation failed, reverting '.$this->file.' to its original content.<\/error>');\n+            file_put_contents($this->json->getPath(), $this->composerBackup);\n+        }\n+\n+        exit(1);\n+    }\n }"
        },
        {
            "sha": "ea3b5c8927376b63e5041be82b30f37167ccc914",
            "filename": "src\/Composer\/Command\/RunScriptCommand.php",
            "status": "modified",
            "additions": 25,
            "deletions": 6,
            "changes": 31,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/RunScriptCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/RunScriptCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/RunScriptCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -19,6 +19,7 @@\n use Symfony\\Component\\Console\\Input\\InputOption;\n use Symfony\\Component\\Console\\Input\\InputArgument;\n use Symfony\\Component\\Console\\Output\\OutputInterface;\n+use Symfony\\Component\\Console\\Helper\\Table;\n \n \/**\n  * @author Fabien Potencier <fabien.potencier@gmail.com>\n@@ -47,7 +48,7 @@ protected function configure()\n     {\n         $this\n             ->setName('run-script')\n-            ->setDescription('Run the scripts defined in composer.json.')\n+            ->setDescription('Runs the scripts defined in composer.json.')\n             ->setDefinition(array(\n                 new InputArgument('script', InputArgument::OPTIONAL, 'Script name to run.'),\n                 new InputArgument('args', InputArgument::IS_ARRAY | InputArgument::OPTIONAL, ''),\n@@ -56,7 +57,8 @@ protected function configure()\n                 new InputOption('no-dev', null, InputOption::VALUE_NONE, 'Disables the dev mode.'),\n                 new InputOption('list', 'l', InputOption::VALUE_NONE, 'List scripts.'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The <info>run-script<\/info> command runs scripts defined in composer.json:\n \n <info>php composer.phar run-script post-update-cmd<\/info>\n@@ -68,7 +70,7 @@ protected function configure()\n     protected function execute(InputInterface $input, OutputInterface $output)\n     {\n         if ($input->getOption('list')) {\n-            return $this->listScripts();\n+            return $this->listScripts($output);\n         } elseif (!$input->getArgument('script')) {\n             throw new \\RuntimeException('Missing required argument \"script\"');\n         }\n@@ -90,7 +92,7 @@ protected function execute(InputInterface $input, OutputInterface $output)\n \n         $args = $input->getArgument('args');\n \n-        if (!is_null($timeout = $input->getOption('timeout'))) {\n+        if (null !== $timeout = $input->getOption('timeout')) {\n             if (!ctype_digit($timeout)) {\n                 throw new \\RuntimeException('Timeout value must be numeric and positive if defined, or 0 for forever');\n             }\n@@ -101,7 +103,7 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         return $composer->getEventDispatcher()->dispatchScript($script, $devMode, $args);\n     }\n \n-    protected function listScripts()\n+    protected function listScripts(OutputInterface $output)\n     {\n         $scripts = $this->getComposer()->getPackage()->getScripts();\n \n@@ -111,10 +113,27 @@ protected function listScripts()\n \n         $io = $this->getIO();\n         $io->writeError('<info>scripts:<\/info>');\n+        $table = array();\n         foreach ($scripts as $name => $script) {\n-            $io->write('  ' . $name);\n+            $description = '';\n+            try {\n+                $cmd = $this->getApplication()->find($name);\n+                if ($cmd instanceof ScriptAliasCommand) {\n+                    $description = $cmd->getDescription();\n+                }\n+            } catch (\\Symfony\\Component\\Console\\Exception\\CommandNotFoundException $e) {\n+                \/\/ ignore scripts that have no command associated, like native Composer script listeners\n+            }\n+            $table[] = array('  '.$name, $description);\n         }\n \n+        $renderer = new Table($output);\n+        $renderer->setStyle('compact');\n+        $rendererStyle = $renderer->getStyle();\n+        $rendererStyle->setVerticalBorderChar('');\n+        $rendererStyle->setCellRowContentFormat('%s  ');\n+        $renderer->setRows($table)->render();\n+\n         return 0;\n     }\n }"
        },
        {
            "sha": "1aba0b074e42c958815fca46019dee317cc5abf9",
            "filename": "src\/Composer\/Command\/ScriptAliasCommand.php",
            "status": "modified",
            "additions": 6,
            "deletions": 3,
            "changes": 9,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ScriptAliasCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ScriptAliasCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/ScriptAliasCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -23,10 +23,12 @@\n class ScriptAliasCommand extends BaseCommand\n {\n     private $script;\n+    private $description;\n \n-    public function __construct($script)\n+    public function __construct($script, $description)\n     {\n         $this->script = $script;\n+        $this->description = empty($description) ? 'Runs the '.$script.' script as defined in composer.json.' : $description;\n \n         parent::__construct();\n     }\n@@ -35,13 +37,14 @@ protected function configure()\n     {\n         $this\n             ->setName($this->script)\n-            ->setDescription('Run the '.$this->script.' script as defined in composer.json.')\n+            ->setDescription($this->description)\n             ->setDefinition(array(\n                 new InputOption('dev', null, InputOption::VALUE_NONE, 'Sets the dev mode.'),\n                 new InputOption('no-dev', null, InputOption::VALUE_NONE, 'Disables the dev mode.'),\n                 new InputArgument('args', InputArgument::IS_ARRAY | InputArgument::OPTIONAL, ''),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The <info>run-script<\/info> command runs scripts defined in composer.json:\n \n <info>php composer.phar run-script post-update-cmd<\/info>"
        },
        {
            "sha": "ed180e84c507e06e6c07f8734e01a48fe053a132",
            "filename": "src\/Composer\/Command\/SearchCommand.php",
            "status": "modified",
            "additions": 4,
            "deletions": 3,
            "changes": 7,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/SearchCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/SearchCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/SearchCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -38,13 +38,14 @@ protected function configure()\n     {\n         $this\n             ->setName('search')\n-            ->setDescription('Search for packages.')\n+            ->setDescription('Searches for packages.')\n             ->setDefinition(array(\n                 new InputOption('only-name', 'N', InputOption::VALUE_NONE, 'Search only in name'),\n                 new InputOption('type', 't', InputOption::VALUE_REQUIRED, 'Search for a specific package type'),\n                 new InputArgument('tokens', InputArgument::IS_ARRAY | InputArgument::REQUIRED, 'tokens to search for'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The search command searches for packages by its name\n <info>php composer.phar search symfony composer<\/info>\n \n@@ -59,7 +60,7 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         $platformRepo = new PlatformRepository;\n         $io = $this->getIO();\n         if (!($composer = $this->getComposer(false))) {\n-            $composer = Factory::create($this->getIO(), array());\n+            $composer = Factory::create($this->getIO(), array(), $input->hasParameterOption('--no-plugins'));\n         }\n         $localRepo = $composer->getRepositoryManager()->getLocalRepository();\n         $installedRepo = new CompositeRepository(array($localRepo, $platformRepo));"
        },
        {
            "sha": "243755963c9386f41e023201797c2145c0bc00d1",
            "filename": "src\/Composer\/Command\/SelfUpdateCommand.php",
            "status": "modified",
            "additions": 30,
            "deletions": 7,
            "changes": 37,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/SelfUpdateCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/SelfUpdateCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/SelfUpdateCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -51,8 +51,10 @@ protected function configure()\n                 new InputOption('stable', null, InputOption::VALUE_NONE, 'Force an update to the stable channel'),\n                 new InputOption('preview', null, InputOption::VALUE_NONE, 'Force an update to the preview channel'),\n                 new InputOption('snapshot', null, InputOption::VALUE_NONE, 'Force an update to the snapshot channel'),\n+                new InputOption('set-channel-only', null, InputOption::VALUE_NONE, 'Only store the channel as the default one and then exit'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The <info>self-update<\/info> command checks getcomposer.org for newer\n versions of composer and if found, installs the latest.\n \n@@ -85,6 +87,10 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             }\n         }\n \n+        if ($input->getOption('set-channel-only')) {\n+            return 0;\n+        }\n+\n         $cacheDir = $config->get('cache-dir');\n         $rollbackDir = $config->get('data-dir');\n         $home = $config->get('home');\n@@ -102,6 +108,15 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             throw new FilesystemException('Composer update failed: the \"'.$tmpDir.'\" directory used to download the temp file could not be written');\n         }\n \n+        \/\/ check if composer is running as the same user that owns the directory root, only if POSIX is defined and callable\n+        if (function_exists('posix_getpwuid') && function_exists('posix_geteuid')) {\n+            $composeUser = posix_getpwuid(posix_geteuid());\n+            $homeOwner = posix_getpwuid(fileowner($home));\n+            if (isset($composeUser['name']) && isset($homeOwner['name']) && $composeUser['name'] !== $homeOwner['name']) {\n+                $io->writeError('<warning>You are running composer as \"'.$composeUser['name'].'\", while \"'.$home.'\" is owned by \"'.$homeOwner['name'].'\"<\/warning>');\n+            }\n+        }\n+\n         if ($input->getOption('rollback')) {\n             return $this->rollback($output, $rollbackDir, $localFilename);\n         }\n@@ -162,7 +177,9 @@ protected function execute(InputInterface $input, OutputInterface $output)\n \n             $sigFile = 'file:\/\/'.$home.'\/' . ($updatingToTag ? 'keys.tags.pub' : 'keys.dev.pub');\n             if (!file_exists($sigFile)) {\n-                file_put_contents($home.'\/keys.dev.pub', <<<DEVPUBKEY\n+                file_put_contents(\n+                    $home.'\/keys.dev.pub',\n+                    <<<DEVPUBKEY\n -----BEGIN PUBLIC KEY-----\n MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAnBDHjZS6e0ZMoK3xTD7f\n FNCzlXjX\/Aie2dit8QXA03pSrOTbaMnxON3hUL47Lz3g1SC6YJEMVHr0zYq4elWi\n@@ -178,8 +195,11 @@ protected function execute(InputInterface $input, OutputInterface $output)\n wSEuAuRm+pRqi8BRnQ\/GKUcCAwEAAQ==\n -----END PUBLIC KEY-----\n DEVPUBKEY\n-);\n-                file_put_contents($home.'\/keys.tags.pub', <<<TAGSPUBKEY\n+                );\n+\n+                file_put_contents(\n+                    $home.'\/keys.tags.pub',\n+                    <<<TAGSPUBKEY\n -----BEGIN PUBLIC KEY-----\n MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA0Vi\/2K6apCVj76nCnCl2\n MQUPdK+A9eqkYBacXo2wQBYmyVlXm2\/n\/ZsX6pCLYPQTHyr5jXbkQzBw8SKqPdlh\n@@ -195,12 +215,12 @@ protected function execute(InputInterface $input, OutputInterface $output)\n RGv89BPD+2DLnJysngsvVaUCAwEAAQ==\n -----END PUBLIC KEY-----\n TAGSPUBKEY\n-);\n+                );\n             }\n \n             $pubkeyid = openssl_pkey_get_public($sigFile);\n             $algo = defined('OPENSSL_ALGO_SHA384') ? OPENSSL_ALGO_SHA384 : 'SHA384';\n-            if (!in_array('SHA384', openssl_get_md_methods())) {\n+            if (!in_array('sha384', array_map('strtolower', openssl_get_md_methods()))) {\n                 throw new \\RuntimeException('SHA384 is not supported by your openssl extension, could not verify the phar file integrity');\n             }\n             $signature = json_decode($signature, true);\n@@ -226,7 +246,10 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         }\n \n         if (file_exists($backupFile)) {\n-            $io->writeError('Use <info>composer self-update --rollback<\/info> to return to version '.Composer::VERSION);\n+            $io->writeError(sprintf(\n+                'Use <info>composer self-update --rollback<\/info> to return to version <comment>%s<\/comment>',\n+                Composer::VERSION\n+            ));\n         } else {\n             $io->writeError('<warning>A backup of the current version could not be written to '.$backupFile.', no rollback possible<\/warning>');\n         }"
        },
        {
            "sha": "cc0fe01545c1b1e6ade0fab8ed247a0510efce35",
            "filename": "src\/Composer\/Command\/ShowCommand.php",
            "status": "modified",
            "additions": 405,
            "deletions": 161,
            "changes": 566,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ShowCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ShowCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/ShowCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,36 +12,39 @@\n \n namespace Composer\\Command;\n \n-use Composer\\DependencyResolver\\Pool;\n+use Composer\\Composer;\n use Composer\\DependencyResolver\\DefaultPolicy;\n+use Composer\\DependencyResolver\\Pool;\n+use Composer\\Json\\JsonFile;\n+use Composer\\Package\\BasePackage;\n use Composer\\Package\\CompletePackageInterface;\n+use Composer\\Package\\PackageInterface;\n use Composer\\Package\\Version\\VersionParser;\n-use Composer\\Package\\BasePackage;\n use Composer\\Package\\Version\\VersionSelector;\n use Composer\\Plugin\\CommandEvent;\n use Composer\\Plugin\\PluginEvents;\n-use Composer\\Package\\PackageInterface;\n+use Composer\\Repository\\ArrayRepository;\n+use Composer\\Repository\\ComposerRepository;\n+use Composer\\Repository\\CompositeRepository;\n+use Composer\\Repository\\PlatformRepository;\n+use Composer\\Repository\\RepositoryFactory;\n+use Composer\\Repository\\RepositoryInterface;\n use Composer\\Semver\\Constraint\\ConstraintInterface;\n+use Composer\\Semver\\Semver;\n+use Composer\\Spdx\\SpdxLicenses;\n use Composer\\Util\\Platform;\n use Symfony\\Component\\Console\\Formatter\\OutputFormatterStyle;\n-use Symfony\\Component\\Console\\Input\\InputInterface;\n use Symfony\\Component\\Console\\Input\\InputArgument;\n+use Symfony\\Component\\Console\\Input\\InputInterface;\n use Symfony\\Component\\Console\\Input\\InputOption;\n use Symfony\\Component\\Console\\Output\\OutputInterface;\n-use Composer\\Repository\\ArrayRepository;\n-use Composer\\Repository\\CompositeRepository;\n-use Composer\\Repository\\ComposerRepository;\n-use Composer\\Repository\\PlatformRepository;\n-use Composer\\Repository\\RepositoryInterface;\n-use Composer\\Repository\\RepositoryFactory;\n-use Composer\\Spdx\\SpdxLicenses;\n-use Composer\\Composer;\n-use Composer\\Semver\\Semver;\n+use Symfony\\Component\\Console\\Terminal;\n \n \/**\n  * @author Robert Sch\u00f6nthal <seroscho@googlemail.com>\n  * @author Jordi Boggiano <j.boggiano@seld.be>\n  * @author J\u00e9r\u00e9my Romey <jeremyFreeAgent>\n+ * @author Mihai Plasoianu <mihai@plasoianu.de>\n  *\/\n class ShowCommand extends BaseCommand\n {\n@@ -57,7 +60,7 @@ protected function configure()\n         $this\n             ->setName('show')\n             ->setAliases(array('info'))\n-            ->setDescription('Show information about packages.')\n+            ->setDescription('Shows information about packages.')\n             ->setDefinition(array(\n                 new InputArgument('package', InputArgument::OPTIONAL, 'Package to inspect. Or a name including a wildcard (*) to filter lists of packages instead.'),\n                 new InputArgument('version', InputArgument::OPTIONAL, 'Version or version constraint to inspect'),\n@@ -71,11 +74,14 @@ protected function configure()\n                 new InputOption('tree', 't', InputOption::VALUE_NONE, 'List the dependencies as a tree'),\n                 new InputOption('latest', 'l', InputOption::VALUE_NONE, 'Show the latest version'),\n                 new InputOption('outdated', 'o', InputOption::VALUE_NONE, 'Show the latest version but only for packages that are outdated'),\n+                new InputOption('ignore', null, InputOption::VALUE_REQUIRED | InputOption::VALUE_IS_ARRAY, 'Ignore specified package(s). Use it with the --outdated option if you don\\'t want to be informed about new versions of some packages.'),\n                 new InputOption('minor-only', 'm', InputOption::VALUE_NONE, 'Show only packages that have minor SemVer-compatible updates. Use with the --outdated option.'),\n                 new InputOption('direct', 'D', InputOption::VALUE_NONE, 'Shows only packages that are directly required by the root package'),\n                 new InputOption('strict', null, InputOption::VALUE_NONE, 'Return a non-zero exit code when there are outdated packages'),\n+                new InputOption('format', 'f', InputOption::VALUE_REQUIRED, 'Format of the output: text or json', 'text'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The show command displays detailed information about a package, or\n lists all packages available.\n \n@@ -100,6 +106,8 @@ protected function execute(InputInterface $input, OutputInterface $output)\n \n         if ($input->getOption('outdated')) {\n             $input->setOption('latest', true);\n+        } elseif ($input->getOption('ignore')) {\n+            $io->writeError('<warning>You are using the option \"ignore\" for action other than \"outdated\", it will be ignored.<\/warning>');\n         }\n \n         if ($input->getOption('direct') && ($input->getOption('all') || $input->getOption('available') || $input->getOption('platform'))) {\n@@ -114,6 +122,19 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             return 1;\n         }\n \n+        if ($input->getOption('tree') && $input->getOption('latest')) {\n+            $io->writeError('The --tree (-t) option is not usable in combination with --latest (-l)');\n+\n+            return 1;\n+        }\n+\n+        $format = $input->getOption('format');\n+        if (!in_array($format, array('text', 'json'))) {\n+            $io->writeError(sprintf('Unsupported format \"%s\". See help for supported formats.', $format));\n+\n+            return 1;\n+        }\n+\n         \/\/ init repos\n         $platformOverrides = array();\n         if ($composer) {\n@@ -147,6 +168,10 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             $repos = new CompositeRepository(array_merge(array($installedRepo), $defaultRepos));\n         } else {\n             $repos = $installedRepo = $this->getComposer()->getRepositoryManager()->getLocalRepository();\n+            $rootPkg = $this->getComposer()->getPackage();\n+            if (!$installedRepo->getPackages() && ($rootPkg->getRequires() || $rootPkg->getDevRequires())) {\n+                $io->writeError('<warning>No dependencies installed. Try running composer install or update.<\/warning>');\n+            }\n         }\n \n         if ($composer) {\n@@ -173,19 +198,36 @@ protected function execute(InputInterface $input, OutputInterface $output)\n                     }\n \n                     $io->writeError('Package ' . $packageFilter . ' not found in ' . $options['working-dir'] . '\/composer.json');\n-                    return;\n+\n+                    return 1;\n                 }\n             } else {\n                 $versions = array($package->getPrettyVersion() => $package->getVersion());\n             }\n \n+            $exitCode = 0;\n             if ($input->getOption('tree')) {\n-                $this->displayPackageTree($package, $installedRepo, $repos);\n+                $arrayTree = $this->generatePackageTree($package, $installedRepo, $repos);\n+\n+                if ('json' === $format) {\n+                    $io->write(JsonFile::encode(array('installed' => array($arrayTree))));\n+                } else {\n+                    $this->displayPackageTree(array($arrayTree));\n+                }\n             } else {\n                 $latestPackage = null;\n                 if ($input->getOption('latest')) {\n                     $latestPackage = $this->findLatestPackage($package, $composer, $phpVersion);\n                 }\n+                if ($input->getOption('outdated') && $input->getOption('strict') && $latestPackage && $latestPackage->getFullPrettyVersion() !== $package->getFullPrettyVersion() && !$latestPackage->isAbandoned()) {\n+                    $exitCode = 1;\n+                }\n+                if ($input->getOption('path')) {\n+                    $io->write($package->getName(), false);\n+                    $io->write(' ' . strtok(realpath($composer->getInstallationManager()->getInstallPath($package)), \"\\r\\n\"));\n+\n+                    return $exitCode;\n+                }\n                 $this->printMeta($package, $versions, $installedRepo, $latestPackage ?: null);\n                 $this->printLinks($package, 'requires');\n                 $this->printLinks($package, 'devRequires', 'requires (dev)');\n@@ -200,18 +242,27 @@ protected function execute(InputInterface $input, OutputInterface $output)\n                 $this->printLinks($package, 'replaces');\n             }\n \n-            return;\n+            return $exitCode;\n         }\n \n         \/\/ show tree view if requested\n         if ($input->getOption('tree')) {\n             $rootRequires = $this->getRootRequires();\n-            foreach ($installedRepo->getPackages() as $package) {\n+            $packages = $installedRepo->getPackages();\n+            usort($packages, 'strcmp');\n+            $arrayTree = array();\n+            foreach ($packages as $package) {\n                 if (in_array($package->getName(), $rootRequires, true)) {\n-                    $this->displayPackageTree($package, $installedRepo, $repos);\n+                    $arrayTree[] = $this->generatePackageTree($package, $installedRepo, $repos);\n                 }\n             }\n \n+            if ('json' === $format) {\n+                $io->write(JsonFile::encode(array('installed' => $arrayTree)));\n+            } else {\n+                $this->displayPackageTree($arrayTree);\n+            }\n+\n             return 0;\n         }\n \n@@ -232,16 +283,39 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             $packageListFilter = $this->getRootRequires();\n         }\n \n+        if (class_exists('Symfony\\Component\\Console\\Terminal')) {\n+            $terminal = new Terminal();\n+            $width = $terminal->getWidth();\n+        } else {\n+            \/\/ For versions of Symfony console before 3.2\n+            list($width) = $this->getApplication()->getTerminalDimensions();\n+        }\n+        if (null === $width) {\n+            \/\/ In case the width is not detected, we're probably running the command\n+            \/\/ outside of a real terminal, use space without a limit\n+            $width = PHP_INT_MAX;\n+        }\n+        if (Platform::isWindows()) {\n+            $width--;\n+        } else {\n+            $width = max(80, $width);\n+        }\n+\n+        if ($input->getOption('path') && null === $composer) {\n+            $io->writeError('No composer.json found in the current directory, disabling \"path\" option');\n+            $input->setOption('path', false);\n+        }\n+\n         foreach ($repos as $repo) {\n             if ($repo === $platformRepo) {\n-                $type = '<info>platform<\/info>:';\n+                $type = 'platform';\n             } elseif (\n                 $repo === $installedRepo\n                 || ($installedRepo instanceof CompositeRepository && in_array($repo, $installedRepo->getRepositories(), true))\n             ) {\n-                $type = '<info>installed<\/info>:';\n+                $type = 'installed';\n             } else {\n-                $type = '<comment>available<\/comment>:';\n+                $type = 'available';\n             }\n             if ($repo instanceof ComposerRepository && $repo->hasProviders()) {\n                 foreach ($repo->getProviderNames() as $name) {\n@@ -268,130 +342,174 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         $showAllTypes = $input->getOption('all');\n         $showLatest = $input->getOption('latest');\n         $showMinorOnly = $input->getOption('minor-only');\n+        $ignoredPackages = array_map('strtolower', $input->getOption('ignore'));\n         $indent = $showAllTypes ? '  ' : '';\n         $latestPackages = array();\n-        foreach (array('<info>platform<\/info>:' => true, '<comment>available<\/comment>:' => false, '<info>installed<\/info>:' => true) as $type => $showVersion) {\n+        $exitCode = 0;\n+        $viewData = array();\n+        $viewMetaData = array();\n+        foreach (array('platform' => true, 'available' => false, 'installed' => true) as $type => $showVersion) {\n             if (isset($packages[$type])) {\n-                if ($showAllTypes) {\n-                    $io->write($type);\n-                }\n                 ksort($packages[$type]);\n \n                 $nameLength = $versionLength = $latestLength = 0;\n-                foreach ($packages[$type] as $package) {\n-                    if (is_object($package)) {\n-                        $nameLength = max($nameLength, strlen($package->getPrettyName()));\n-                        if ($showVersion) {\n-                            $versionLength = max($versionLength, strlen($package->getFullPrettyVersion()));\n-                            if ($showLatest) {\n-\n-                                $latestPackage = $this->findLatestPackage($package, $composer, $phpVersion, $showMinorOnly);\n-                                if ($latestPackage === false) {\n-                                    continue;\n-                                }\n \n-                                $latestPackages[$package->getPrettyName()] = $latestPackage;\n-                                $latestLength =  max($latestLength, strlen($latestPackage->getFullPrettyVersion()));\n+                if ($showLatest && $showVersion) {\n+                    foreach ($packages[$type] as $package) {\n+                        if (is_object($package)) {\n+                            $latestPackage = $this->findLatestPackage($package, $composer, $phpVersion, $showMinorOnly);\n+                            if ($latestPackage === false) {\n+                                continue;\n                             }\n+\n+                            $latestPackages[$package->getPrettyName()] = $latestPackage;\n                         }\n-                    } else {\n-                        $nameLength = max($nameLength, strlen($package));\n                     }\n                 }\n-                list($width) = $this->getApplication()->getTerminalDimensions();\n-                if (null === $width) {\n-                    \/\/ In case the width is not detected, we're probably running the command\n-                    \/\/ outside of a real terminal, use space without a limit\n-                    $width = PHP_INT_MAX;\n-                }\n-                if (Platform::isWindows()) {\n-                    $width--;\n-                }\n-\n-                if ($input->getOption('path') && null === $composer) {\n-                    $io->writeError('No composer.json found in the current directory, disabling \"path\" option');\n-                    $input->setOption('path', false);\n-                }\n \n                 $writePath = !$input->getOption('name-only') && $input->getOption('path');\n-                $writeVersion = !$input->getOption('name-only') && !$input->getOption('path') && $showVersion && ($nameLength + $versionLength + 3 <= $width);\n-                $writeLatest = $writeVersion && $showLatest && ($nameLength + $versionLength + $latestLength + 3 <= $width);\n-                $writeDescription = !$input->getOption('name-only') && !$input->getOption('path') && ($nameLength + $versionLength + $latestLength + 24 <= $width);\n+                $writeVersion = !$input->getOption('name-only') && !$input->getOption('path') && $showVersion;\n+                $writeLatest = $writeVersion && $showLatest;\n+                $writeDescription = !$input->getOption('name-only') && !$input->getOption('path');\n+\n                 $hasOutdatedPackages = false;\n+\n+                $viewData[$type] = array();\n                 foreach ($packages[$type] as $package) {\n+                    $packageViewData = array();\n                     if (is_object($package)) {\n-                        $latestPackackage = null;\n+                        $latestPackage = null;\n                         if ($showLatest && isset($latestPackages[$package->getPrettyName()])) {\n-                            $latestPackackage = $latestPackages[$package->getPrettyName()];\n+                            $latestPackage = $latestPackages[$package->getPrettyName()];\n                         }\n-                        if ($input->getOption('outdated') && $latestPackackage && $latestPackackage->getFullPrettyVersion() === $package->getFullPrettyVersion() && !$latestPackackage->isAbandoned()) {\n+\n+                        \/\/ Determine if Composer is checking outdated dependencies and if current package should trigger non-default exit code\n+                        $packageIsUpToDate = $latestPackage && $latestPackage->getFullPrettyVersion() === $package->getFullPrettyVersion() && !$latestPackage->isAbandoned();\n+                        $packageIsIgnored = \\in_array($package->getPrettyName(), $ignoredPackages, true);\n+                        if ($input->getOption('outdated') && ($packageIsUpToDate || $packageIsIgnored)) {\n                             continue;\n-                        } elseif ($input->getOption('outdated')) {\n+                        } elseif ($input->getOption('outdated') || $input->getOption('strict')) {\n                             $hasOutdatedPackages = true;\n                         }\n \n-                        $io->write($indent . str_pad($package->getPrettyName(), $nameLength, ' '), false);\n-\n+                        $packageViewData['name'] = $package->getPrettyName();\n+                        $nameLength = max($nameLength, strlen($package->getPrettyName()));\n                         if ($writeVersion) {\n-                            $io->write(' ' . str_pad($package->getFullPrettyVersion(), $versionLength, ' '), false);\n+                            $packageViewData['version'] = $package->getFullPrettyVersion();\n+                            $versionLength = max($versionLength, strlen($package->getFullPrettyVersion()));\n                         }\n-\n-                        if ($writeLatest && $latestPackackage) {\n-                            $latestVersion = $latestPackackage->getFullPrettyVersion();\n-                            $style = $this->getVersionStyle($latestPackackage, $package);\n-                            $io->write(' <'.$style.'>' . str_pad($latestVersion, $latestLength, ' ') . '<\/'.$style.'>', false);\n+                        if ($writeLatest && $latestPackage) {\n+                            $packageViewData['latest'] = $latestPackage->getFullPrettyVersion();\n+                            $packageViewData['latest-status'] = $this->getUpdateStatus($latestPackage, $package);\n+                            $latestLength = max($latestLength, strlen($latestPackage->getFullPrettyVersion()));\n                         }\n-\n                         if ($writeDescription) {\n-                            $description = strtok($package->getDescription(), \"\\r\\n\");\n-                            $remaining = $width - $nameLength - $versionLength - 4;\n-                            if ($writeLatest) {\n-                                $remaining -= $latestLength;\n-                            }\n-                            if (strlen($description) > $remaining) {\n-                                $description = substr($description, 0, $remaining - 3) . '...';\n-                            }\n-                            $io->write(' ' . $description, false);\n+                            $packageViewData['description'] = $package->getDescription();\n                         }\n-\n                         if ($writePath) {\n-                            $path = strtok(realpath($composer->getInstallationManager()->getInstallPath($package)), \"\\r\\n\");\n-                            $io->write(' ' . $path, false);\n+                            $packageViewData['path'] = strtok(realpath($composer->getInstallationManager()->getInstallPath($package)), \"\\r\\n\");\n                         }\n \n-                        if ($latestPackackage && $latestPackackage->isAbandoned()) {\n-                            $replacement = (is_string($latestPackackage->getReplacementPackage()))\n-                                ? 'Use ' . $latestPackackage->getReplacementPackage() . ' instead'\n+                        if ($latestPackage && $latestPackage->isAbandoned()) {\n+                            $replacement = is_string($latestPackage->getReplacementPackage())\n+                                ? 'Use ' . $latestPackage->getReplacementPackage() . ' instead'\n                                 : 'No replacement was suggested';\n-\n-                            $io->writeError('');\n-                            $io->writeError(\n-                                sprintf(\n-                                    \"<warning>Package %s is abandoned, you should avoid using it. %s.<\/warning>\",\n-                                    $package->getPrettyName(),\n-                                    $replacement\n-                                ),\n-                                false\n+                            $packageWarning = sprintf(\n+                                'Package %s is abandoned, you should avoid using it. %s.',\n+                                $package->getPrettyName(),\n+                                $replacement\n                             );\n+                            $packageViewData['warning'] = $packageWarning;\n                         }\n                     } else {\n-                        $io->write($indent . $package, false);\n+                        $packageViewData['name'] = $package;\n+                        $nameLength = max($nameLength, strlen($package));\n                     }\n-                    $io->write('');\n+                    $viewData[$type][] = $packageViewData;\n                 }\n+                $viewMetaData[$type] = array(\n+                    'nameLength' => $nameLength,\n+                    'versionLength' => $versionLength,\n+                    'latestLength' => $latestLength,\n+                );\n+                if ($input->getOption('strict') && $hasOutdatedPackages) {\n+                    $exitCode = 1;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        if ('json' === $format) {\n+            $io->write(JsonFile::encode($viewData));\n+        } else {\n+            foreach ($viewData as $type => $packages) {\n+                $nameLength = $viewMetaData[$type]['nameLength'];\n+                $versionLength = $viewMetaData[$type]['versionLength'];\n+                $latestLength = $viewMetaData[$type]['latestLength'];\n+\n+                $writeVersion = $nameLength + $versionLength + 3 <= $width;\n+                $writeLatest = $nameLength + $versionLength + $latestLength + 3 <= $width;\n+                $writeDescription = $nameLength + $versionLength + $latestLength + 24 <= $width;\n+\n+                if ($writeLatest && !$io->isDecorated()) {\n+                    $latestLength += 2;\n+                }\n+\n                 if ($showAllTypes) {\n+                    if ('available' === $type) {\n+                        $io->write('<comment>' . $type . '<\/comment>:');\n+                    } else {\n+                        $io->write('<info>' . $type . '<\/info>:');\n+                    }\n+                }\n+\n+                foreach ($packages as $package) {\n+                    $io->write($indent . str_pad($package['name'], $nameLength, ' '), false);\n+                    if (isset($package['version']) && $writeVersion) {\n+                        $io->write(' ' . str_pad($package['version'], $versionLength, ' '), false);\n+                    }\n+                    if (isset($package['latest']) && $writeLatest) {\n+                        $latestVersion = $package['latest'];\n+                        $updateStatus = $package['latest-status'];\n+                        $style = $this->updateStatusToVersionStyle($updateStatus);\n+                        if (!$io->isDecorated()) {\n+                            $latestVersion = str_replace(array('up-to-date', 'semver-safe-update', 'update-possible'), array('=', '!', '~'), $updateStatus) . ' ' . $latestVersion;\n+                        }\n+                        $io->write(' <' . $style . '>' . str_pad($latestVersion, $latestLength, ' ') . '<\/' . $style . '>', false);\n+                    }\n+                    if (isset($package['description']) && $writeDescription) {\n+                        $description = strtok($package['description'], \"\\r\\n\");\n+                        $remaining = $width - $nameLength - $versionLength - 4;\n+                        if ($writeLatest) {\n+                            $remaining -= $latestLength;\n+                        }\n+                        if (strlen($description) > $remaining) {\n+                            $description = substr($description, 0, $remaining - 3) . '...';\n+                        }\n+                        $io->write(' ' . $description, false);\n+                    }\n+                    if (isset($package['path'])) {\n+                        $io->write(' ' . $package['path'], false);\n+                    }\n                     $io->write('');\n+                    if (isset($package['warning'])) {\n+                        $io->writeError('<warning>' . $package['warning'] . '<\/warning>');\n+                    }\n                 }\n-                if ($input->getOption('strict') && $hasOutdatedPackages) {\n-                    return 1;\n+\n+                if ($showAllTypes) {\n+                    $io->write('');\n                 }\n             }\n         }\n+\n+        return $exitCode;\n     }\n \n     protected function getRootRequires()\n     {\n         $rootPackage = $this->getComposer()->getPackage();\n+\n         return array_map(\n             'strtolower',\n             array_keys(array_merge($rootPackage->getRequires(), $rootPackage->getDevRequires()))\n@@ -400,22 +518,7 @@ protected function getRootRequires()\n \n     protected function getVersionStyle(PackageInterface $latestPackage, PackageInterface $package)\n     {\n-        if ($latestPackage->getFullPrettyVersion() === $package->getFullPrettyVersion()) {\n-            \/\/ print green as it's up to date\n-            return 'info';\n-        }\n-\n-        $constraint = $package->getVersion();\n-        if (0 !== strpos($constraint, 'dev-')) {\n-            $constraint = '^'.$constraint;\n-        }\n-        if ($latestPackage->getVersion() && Semver::satisfies($latestPackage->getVersion(), $constraint)) {\n-            \/\/ print red as it needs an immediate semver-compliant upgrade\n-            return 'highlight';\n-        }\n-\n-        \/\/ print yellow as it needs an upgrade but has potential BC breaks so is not urgent\n-        return 'comment';\n+        return $this->updateStatusToVersionStyle($this->getUpdateStatus($latestPackage, $package));\n     }\n \n     \/**\n@@ -488,6 +591,9 @@ protected function printMeta(CompletePackageInterface $package, array $versions,\n         $this->printLicenses($package);\n         $io->write('<info>source<\/info>   : ' . sprintf('[%s] <comment>%s<\/comment> %s', $package->getSourceType(), $package->getSourceUrl(), $package->getSourceReference()));\n         $io->write('<info>dist<\/info>     : ' . sprintf('[%s] <comment>%s<\/comment> %s', $package->getDistType(), $package->getDistUrl(), $package->getDistReference()));\n+        if ($installedRepo->hasPackage($package)) {\n+            $io->write('<info>path<\/info>     : ' . sprintf('%s', realpath($this->getComposer()->getInstallationManager()->getInstallPath($package))));\n+        }\n         $io->write('<info>names<\/info>    : ' . implode(', ', $package->getNames()));\n \n         if ($latestPackage->isAbandoned()) {\n@@ -631,83 +737,221 @@ protected function initStyles(OutputInterface $output)\n     \/**\n      * Display the tree\n      *\n-     * @param PackageInterface|string $package\n-     * @param RepositoryInterface     $installedRepo\n-     * @param RepositoryInterface     $distantRepos\n+     * @param array $arrayTree\n      *\/\n-    protected function displayPackageTree(PackageInterface $package, RepositoryInterface $installedRepo, RepositoryInterface $distantRepos)\n+    protected function displayPackageTree(array $arrayTree)\n     {\n         $io = $this->getIO();\n-        $io->write(sprintf('<info>%s<\/info>', $package->getPrettyName()), false);\n-        $io->write(' ' . $package->getPrettyVersion(), false);\n-        $io->write(' ' . strtok($package->getDescription(), \"\\r\\n\"));\n-\n-        if (is_object($package)) {\n-            $requires = $package->getRequires();\n-            $treeBar = '\u251c';\n-            $j = 0;\n-            $total = count($requires);\n-            foreach ($requires as $requireName => $require) {\n-                $j++;\n-                if ($j == 0) {\n-                    $this->writeTreeLine($treeBar);\n-                }\n-                if ($j == $total) {\n-                    $treeBar = '\u2514';\n+        foreach ($arrayTree as $package) {\n+            $io->write(sprintf('<info>%s<\/info>', $package['name']), false);\n+            $io->write(' ' . $package['version'], false);\n+            $io->write(' ' . strtok($package['description'], \"\\r\\n\"));\n+\n+            if (isset($package['requires'])) {\n+                $requires = $package['requires'];\n+                $treeBar = '\u251c';\n+                $j = 0;\n+                $total = count($requires);\n+                foreach ($requires as $require) {\n+                    $requireName = $require['name'];\n+                    $j++;\n+                    if ($j === $total) {\n+                        $treeBar = '\u2514';\n+                    }\n+                    $level = 1;\n+                    $color = $this->colors[$level];\n+                    $info = sprintf(\n+                        '%s\u2500\u2500<%s>%s<\/%s> %s',\n+                        $treeBar,\n+                        $color,\n+                        $requireName,\n+                        $color,\n+                        $require['version']\n+                    );\n+                    $this->writeTreeLine($info);\n+\n+                    $treeBar = str_replace('\u2514', ' ', $treeBar);\n+                    $packagesInTree = array($package['name'], $requireName);\n+\n+                    $this->displayTree($require, $packagesInTree, $treeBar, $level + 1);\n                 }\n-                $level = 1;\n-                $color = $this->colors[$level];\n-                $info = sprintf('%s\u2500\u2500<%s>%s<\/%s> %s', $treeBar, $color, $requireName, $color, $require->getPrettyConstraint());\n-                $this->writeTreeLine($info);\n+            }\n+        }\n+    }\n \n-                $treeBar = str_replace('\u2514', ' ', $treeBar);\n-                $packagesInTree = array($package->getName(), $requireName);\n+    \/**\n+     * Generate the package tree\n+     *\n+     * @param  PackageInterface $package\n+     * @param  RepositoryInterface     $installedRepo\n+     * @param  RepositoryInterface     $distantRepos\n+     * @return array\n+     *\/\n+    protected function generatePackageTree(\n+        PackageInterface $package,\n+        RepositoryInterface $installedRepo,\n+        RepositoryInterface $distantRepos\n+    ) {\n+        $requires = $package->getRequires();\n+        ksort($requires);\n+        $children = array();\n+        foreach ($requires as $requireName => $require) {\n+            $packagesInTree = array($package->getName(), $requireName);\n+\n+            $treeChildDesc = array(\n+                'name' => $requireName,\n+                'version' => $require->getPrettyConstraint(),\n+            );\n \n-                $this->displayTree($requireName, $require, $installedRepo, $distantRepos, $packagesInTree, $treeBar, $level + 1);\n+            $deepChildren = $this->addTree($requireName, $require, $installedRepo, $distantRepos, $packagesInTree);\n+\n+            if ($deepChildren) {\n+                $treeChildDesc['requires'] = $deepChildren;\n             }\n+\n+            $children[] = $treeChildDesc;\n+        }\n+        $tree = array(\n+            'name' => $package->getPrettyName(),\n+            'version' => $package->getPrettyVersion(),\n+            'description' => $package->getDescription(),\n+        );\n+\n+        if ($children) {\n+            $tree['requires'] = $children;\n         }\n+\n+        return $tree;\n     }\n \n     \/**\n      * Display a package tree\n      *\n-     * @param string                  $name\n      * @param PackageInterface|string $package\n-     * @param RepositoryInterface     $installedRepo\n-     * @param RepositoryInterface     $distantRepos\n      * @param array                   $packagesInTree\n      * @param string                  $previousTreeBar\n      * @param int                     $level\n      *\/\n-    protected function displayTree($name, $package, RepositoryInterface $installedRepo, RepositoryInterface $distantRepos, array $packagesInTree, $previousTreeBar = '\u251c', $level = 1)\n-    {\n+    protected function displayTree(\n+        $package,\n+        array $packagesInTree,\n+        $previousTreeBar = '\u251c',\n+        $level = 1\n+    ) {\n         $previousTreeBar = str_replace('\u251c', '\u2502', $previousTreeBar);\n-        list($package, $versions) = $this->getPackage($installedRepo, $distantRepos, $name, $package->getPrettyConstraint() === 'self.version' ? $package->getConstraint() : $package->getPrettyConstraint());\n-        if (is_object($package)) {\n-            $requires = $package->getRequires();\n+        if (isset($package['requires'])) {\n+            $requires = $package['requires'];\n             $treeBar = $previousTreeBar . '  \u251c';\n             $i = 0;\n             $total = count($requires);\n-            foreach ($requires as $requireName => $require) {\n+            foreach ($requires as $require) {\n                 $currentTree = $packagesInTree;\n                 $i++;\n-                if ($i == $total) {\n+                if ($i === $total) {\n                     $treeBar = $previousTreeBar . '  \u2514';\n                 }\n                 $colorIdent = $level % count($this->colors);\n                 $color = $this->colors[$colorIdent];\n \n-                $circularWarn = in_array($requireName, $currentTree) ? '(circular dependency aborted here)' : '';\n-                $info = rtrim(sprintf('%s\u2500\u2500<%s>%s<\/%s> %s %s', $treeBar, $color, $requireName, $color, $require->getPrettyConstraint(), $circularWarn));\n+                $circularWarn = in_array(\n+                    $require['name'],\n+                    $currentTree,\n+                    true\n+                ) ? '(circular dependency aborted here)' : '';\n+                $info = rtrim(sprintf(\n+                    '%s\u2500\u2500<%s>%s<\/%s> %s %s',\n+                    $treeBar,\n+                    $color,\n+                    $require['name'],\n+                    $color,\n+                    $require['version'],\n+                    $circularWarn\n+                ));\n                 $this->writeTreeLine($info);\n \n                 $treeBar = str_replace('\u2514', ' ', $treeBar);\n-                if (!in_array($requireName, $currentTree)) {\n+\n+                $currentTree[] = $require['name'];\n+                $this->displayTree($require, $currentTree, $treeBar, $level + 1);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Display a package tree\n+     *\n+     * @param  string                  $name\n+     * @param  PackageInterface|string $package\n+     * @param  RepositoryInterface     $installedRepo\n+     * @param  RepositoryInterface     $distantRepos\n+     * @param  array                   $packagesInTree\n+     * @return array\n+     *\/\n+    protected function addTree(\n+        $name,\n+        $package,\n+        RepositoryInterface $installedRepo,\n+        RepositoryInterface $distantRepos,\n+        array $packagesInTree\n+    ) {\n+        $children = array();\n+        list($package, $versions) = $this->getPackage(\n+            $installedRepo,\n+            $distantRepos,\n+            $name,\n+            $package->getPrettyConstraint() === 'self.version' ? $package->getConstraint() : $package->getPrettyConstraint()\n+        );\n+        if (is_object($package)) {\n+            $requires = $package->getRequires();\n+            ksort($requires);\n+            foreach ($requires as $requireName => $require) {\n+                $currentTree = $packagesInTree;\n+\n+                $treeChildDesc = array(\n+                    'name' => $requireName,\n+                    'version' => $require->getPrettyConstraint(),\n+                );\n+\n+                if (!in_array($requireName, $currentTree, true)) {\n                     $currentTree[] = $requireName;\n-                    $this->displayTree($requireName, $require, $installedRepo, $distantRepos, $currentTree, $treeBar, $level + 1);\n+                    $deepChildren = $this->addTree($requireName, $require, $installedRepo, $distantRepos, $currentTree);\n+                    if ($deepChildren) {\n+                        $treeChildDesc['requires'] = $deepChildren;\n+                    }\n                 }\n+\n+                $children[] = $treeChildDesc;\n             }\n         }\n+\n+        return $children;\n+    }\n+\n+    private function updateStatusToVersionStyle($updateStatus)\n+    {\n+        \/\/ 'up-to-date' is printed green\n+        \/\/ 'semver-safe-update' is printed red\n+        \/\/ 'update-possible' is printed yellow\n+        return str_replace(array('up-to-date', 'semver-safe-update', 'update-possible'), array('info', 'highlight', 'comment'), $updateStatus);\n+    }\n+\n+    private function getUpdateStatus(PackageInterface $latestPackage, PackageInterface $package)\n+    {\n+        if ($latestPackage->getFullPrettyVersion() === $package->getFullPrettyVersion()) {\n+            return 'up-to-date';\n+        }\n+\n+        $constraint = $package->getVersion();\n+        if (0 !== strpos($constraint, 'dev-')) {\n+            $constraint = '^'.$constraint;\n+        }\n+        if ($latestPackage->getVersion() && Semver::satisfies($latestPackage->getVersion(), $constraint)) {\n+            \/\/ it needs an immediate semver-compliant upgrade\n+            return 'semver-safe-update';\n+        }\n+\n+        \/\/ it needs an upgrade but has potential BC breaks so is not urgent\n+        return 'update-possible';\n     }\n \n     private function writeTreeLine($line)\n@@ -723,10 +967,10 @@ private function writeTreeLine($line)\n     \/**\n      * Given a package, this finds the latest package matching it\n      *\n-     * @param  PackageInterface $package\n-     * @param  Composer         $composer\n-     * @param  string           $phpVersion\n-     * @param  bool             $minorOnly\n+     * @param PackageInterface $package\n+     * @param Composer         $composer\n+     * @param string           $phpVersion\n+     * @param bool             $minorOnly\n      *\n      * @return PackageInterface|null\n      *\/"
        },
        {
            "sha": "3e46b7fa07a047dae1377a2bd8cd9e5547c948bc",
            "filename": "src\/Composer\/Command\/StatusCommand.php",
            "status": "modified",
            "additions": 17,
            "deletions": 8,
            "changes": 25,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/StatusCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/StatusCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/StatusCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -32,20 +32,23 @@\n  *\/\n class StatusCommand extends BaseCommand\n {\n-\n-    const EXIT_CODE_ERRORS           = 1;\n+    const EXIT_CODE_ERRORS = 1;\n     const EXIT_CODE_UNPUSHED_CHANGES = 2;\n-    const EXIT_CODE_VERSION_CHANGES  = 4;\n+    const EXIT_CODE_VERSION_CHANGES = 4;\n \n+    \/**\n+     * @throws \\Symfony\\Component\\Console\\Exception\\InvalidArgumentException\n+     *\/\n     protected function configure()\n     {\n         $this\n             ->setName('status')\n-            ->setDescription('Show a list of locally modified packages.')\n+            ->setDescription('Shows a list of locally modified packages, for packages installed from source.')\n             ->setDefinition(array(\n                 new InputOption('verbose', 'v|vv|vvv', InputOption::VALUE_NONE, 'Show modified files for each directory that contains changes.'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The status command displays a list of dependencies that have\n been modified locally.\n \n@@ -54,6 +57,11 @@ protected function configure()\n         ;\n     }\n \n+    \/**\n+     * @param  InputInterface  $input\n+     * @param  OutputInterface $output\n+     * @return int|null\n+     *\/\n     protected function execute(InputInterface $input, OutputInterface $output)\n     {\n         \/\/ init repos\n@@ -113,11 +121,11 @@ protected function execute(InputInterface $input, OutputInterface $output)\n                         $vcsVersionChanges[$targetDir] = array(\n                             'previous' => array(\n                                 'version' => $package->getPrettyVersion(),\n-                                'ref'     => $previousRef\n+                                'ref' => $previousRef,\n                             ),\n-                            'current'  => array(\n+                            'current' => array(\n                                 'version' => $currentVersion['pretty_version'],\n-                                'ref'     => $currentVersion['commit'],\n+                                'ref' => $currentVersion['commit'],\n                             ),\n                         );\n                     }\n@@ -134,6 +142,7 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         \/\/ output errors\/warnings\n         if (!$errors && !$unpushedChanges && !$vcsVersionChanges) {\n             $io->writeError('<info>No local changes<\/info>');\n+\n             return 0;\n         }\n "
        },
        {
            "sha": "225725e12b71b62c87dc0040c3d7726c5b50e246",
            "filename": "src\/Composer\/Command\/SuggestsCommand.php",
            "status": "modified",
            "additions": 4,
            "deletions": 3,
            "changes": 7,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/SuggestsCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/SuggestsCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/SuggestsCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -24,14 +24,15 @@ protected function configure()\n     {\n         $this\n             ->setName('suggests')\n-            ->setDescription('Show package suggestions.')\n+            ->setDescription('Shows package suggestions.')\n             ->setDefinition(array(\n                 new InputOption('by-package', null, InputOption::VALUE_NONE, 'Groups output by suggesting package'),\n                 new InputOption('by-suggestion', null, InputOption::VALUE_NONE, 'Groups output by suggested package'),\n                 new InputOption('no-dev', null, InputOption::VALUE_NONE, 'Exclude suggestions from require-dev packages'),\n                 new InputArgument('packages', InputArgument::IS_ARRAY | InputArgument::OPTIONAL, 'Packages that you want to list suggestions from.'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n \n The <info>%command.name%<\/info> command shows a sorted list of suggested packages.\n \n@@ -88,7 +89,7 @@ protected function execute(InputInterface $input, OutputInterface $output)\n                 continue;\n             }\n             foreach ($package['suggest'] as $suggestion => $reason) {\n-                if (false === strpos('\/', $suggestion) && !is_null($platform->findPackage($suggestion, '*'))) {\n+                if (false === strpos('\/', $suggestion) && null !== $platform->findPackage($suggestion, '*')) {\n                     continue;\n                 }\n                 if (!isset($installed[$suggestion])) {"
        },
        {
            "sha": "34420b747307f25f6f06f16dcccdebc802809b61",
            "filename": "src\/Composer\/Command\/UpdateCommand.php",
            "status": "modified",
            "additions": 10,
            "deletions": 5,
            "changes": 15,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/UpdateCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/UpdateCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/UpdateCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -34,7 +34,8 @@ protected function configure()\n     {\n         $this\n             ->setName('update')\n-            ->setDescription('Updates your dependencies to the latest version according to composer.json, and updates the composer.lock file.')\n+            ->setAliases(array('u', 'upgrade'))\n+            ->setDescription('Upgrades your dependencies to the latest version according to composer.json, and updates the composer.lock file.')\n             ->setDefinition(array(\n                 new InputArgument('packages', InputArgument::IS_ARRAY | InputArgument::OPTIONAL, 'Packages that should be updated, if not provided all packages are.'),\n                 new InputOption('prefer-source', null, InputOption::VALUE_NONE, 'Forces installation from package sources when possible, including VCS information.'),\n@@ -48,7 +49,8 @@ protected function configure()\n                 new InputOption('no-scripts', null, InputOption::VALUE_NONE, 'Skips the execution of all scripts defined in composer.json file.'),\n                 new InputOption('no-progress', null, InputOption::VALUE_NONE, 'Do not output download progress.'),\n                 new InputOption('no-suggest', null, InputOption::VALUE_NONE, 'Do not show package suggestions.'),\n-                new InputOption('with-dependencies', null, InputOption::VALUE_NONE, 'Add also all dependencies of whitelisted packages to the whitelist.'),\n+                new InputOption('with-dependencies', null, InputOption::VALUE_NONE, 'Add also dependencies of whitelisted packages to the whitelist, except those defined in root package.'),\n+                new InputOption('with-all-dependencies', null, InputOption::VALUE_NONE, 'Add also all dependencies of whitelisted packages to the whitelist, including those defined in root package.'),\n                 new InputOption('verbose', 'v|vv|vvv', InputOption::VALUE_NONE, 'Shows more details including new commits pulled in when updating packages.'),\n                 new InputOption('optimize-autoloader', 'o', InputOption::VALUE_NONE, 'Optimize autoloader during autoloader dump.'),\n                 new InputOption('classmap-authoritative', 'a', InputOption::VALUE_NONE, 'Autoload classes from the classmap only. Implicitly enables `--optimize-autoloader`.'),\n@@ -59,7 +61,8 @@ protected function configure()\n                 new InputOption('interactive', 'i', InputOption::VALUE_NONE, 'Interactive interface with autocompletion to select the packages to update.'),\n                 new InputOption('root-reqs', null, InputOption::VALUE_NONE, 'Restricts the update to your first degree dependencies.'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The <info>update<\/info> command reads the composer.json file from the\n current directory, processes it, and updates, removes or installs all the\n dependencies.\n@@ -145,7 +148,8 @@ protected function execute(InputInterface $input, OutputInterface $output)\n             ->setApcuAutoloader($apcu)\n             ->setUpdate(true)\n             ->setUpdateWhitelist($input->getOption('lock') ? array('lock') : $packages)\n-            ->setWhitelistDependencies($input->getOption('with-dependencies'))\n+            ->setWhitelistTransitiveDependencies($input->getOption('with-dependencies'))\n+            ->setWhitelistAllDependencies($input->getOption('with-all-dependencies'))\n             ->setIgnorePlatformRequirements($input->getOption('ignore-platform-reqs'))\n             ->setPreferStable($input->getOption('prefer-stable'))\n             ->setPreferLowest($input->getOption('prefer-lowest'))\n@@ -170,7 +174,8 @@ private function getPackagesInteractively(IOInterface $io, InputInterface $input\n         );\n         $autocompleterValues = array();\n         foreach ($requires as $require) {\n-            $autocompleterValues[strtolower($require->getTarget())] = $require->getTarget();\n+            $target = $require->getTarget();\n+            $autocompleterValues[strtolower($target)] = $target;\n         }\n \n         $installedPackages = $composer->getRepositoryManager()->getLocalRepository()->getPackages();"
        },
        {
            "sha": "b86fd92eaf71617a0ec8d5d10ebc9da5760425c5",
            "filename": "src\/Composer\/Command\/ValidateCommand.php",
            "status": "modified",
            "additions": 14,
            "deletions": 10,
            "changes": 24,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ValidateCommand.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Command\/ValidateCommand.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Command\/ValidateCommand.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -44,9 +44,10 @@ protected function configure()\n                 new InputOption('no-check-publish', null, InputOption::VALUE_NONE, 'Do not check for publish errors'),\n                 new InputOption('with-dependencies', 'A', InputOption::VALUE_NONE, 'Also validate the composer.json of all installed dependencies'),\n                 new InputOption('strict', null, InputOption::VALUE_NONE, 'Return a non-zero exit code for warnings as well as errors'),\n-                new InputArgument('file', InputArgument::OPTIONAL, 'path to composer.json file', '.\/composer.json'),\n+                new InputArgument('file', InputArgument::OPTIONAL, 'path to composer.json file'),\n             ))\n-            ->setHelp(<<<EOT\n+            ->setHelp(\n+                <<<EOT\n The validate command validates a given composer.json and composer.lock\n \n Exit codes in case of errors are:\n@@ -66,7 +67,7 @@ protected function configure()\n      *\/\n     protected function execute(InputInterface $input, OutputInterface $output)\n     {\n-        $file = $input->getArgument('file');\n+        $file = $input->getArgument('file') ?: Factory::getComposerFile();\n         $io = $this->getIO();\n \n         if (!file_exists($file)) {\n@@ -88,15 +89,16 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         list($errors, $publishErrors, $warnings) = $validator->validate($file, $checkAll);\n \n         $lockErrors = array();\n-        $composer = Factory::create($io, $file);\n+        $composer = Factory::create($io, $file, $input->hasParameterOption('--no-plugins'));\n         $locker = $composer->getLocker();\n         if ($locker->isLocked() && !$locker->isFresh()) {\n             $lockErrors[] = 'The lock file is not up to date with the latest changes in composer.json, it is recommended that you run `composer update`.';\n         }\n \n-        $this->outputResult($io, $file, $errors, $warnings, $checkPublish, $publishErrors, $checkLock, $lockErrors, true);\n+        $this->outputResult($io, $file, $errors, $warnings, $checkPublish, $publishErrors, $checkLock, $lockErrors, true, $isStrict);\n \n-        $exitCode = $errors || ($publishErrors && $checkPublish) || ($lockErrors && $checkLock) ? 2 : ($isStrict && $warnings ? 1 : 0);\n+        \/\/ $errors include publish and lock errors when exists\n+        $exitCode = $errors ? 2 : ($isStrict && $warnings ? 1 : 0);\n \n         if ($input->getOption('with-dependencies')) {\n             $localRepo = $composer->getRepositoryManager()->getLocalRepository();\n@@ -107,7 +109,7 @@ protected function execute(InputInterface $input, OutputInterface $output)\n                     list($errors, $publishErrors, $warnings) = $validator->validate($file, $checkAll);\n                     $this->outputResult($io, $package->getPrettyName(), $errors, $warnings, $checkPublish, $publishErrors);\n \n-                    $depCode = $errors || ($publishErrors && $checkPublish) ? 2 : ($isStrict && $warnings ? 1 : 0);\n+                    $depCode = $errors ? 2 : ($isStrict && $warnings ? 1 : 0);\n                     $exitCode = max($depCode, $exitCode);\n                 }\n             }\n@@ -120,7 +122,7 @@ protected function execute(InputInterface $input, OutputInterface $output)\n         return $exitCode;\n     }\n \n-    private function outputResult($io, $name, &$errors, &$warnings, $checkPublish = false, $publishErrors = array(), $checkLock = false, $lockErrors = array(), $printSchemaUrl = false)\n+    private function outputResult($io, $name, &$errors, &$warnings, $checkPublish = false, $publishErrors = array(), $checkLock = false, $lockErrors = array(), $printSchemaUrl = false, $isStrict = false)\n     {\n         if (!$errors && !$publishErrors && !$warnings) {\n             $io->write('<info>' . $name . ' is valid<\/info>');\n@@ -140,16 +142,18 @@ private function outputResult($io, $name, &$errors, &$warnings, $checkPublish =\n         }\n \n         \/\/ If checking publish errors, display them as errors, otherwise just show them as warnings\n+        \/\/ Skip when it is a strict check and we don't want to check publish errors\n         if ($checkPublish) {\n             $errors = array_merge($errors, $publishErrors);\n-        } else {\n+        } elseif (!$isStrict) {\n             $warnings = array_merge($warnings, $publishErrors);\n         }\n \n         \/\/ If checking lock errors, display them as errors, otherwise just show them as warnings\n+        \/\/ Skip when it is a strict check and we don't want to check lock errors\n         if ($checkLock) {\n             $errors = array_merge($errors, $lockErrors);\n-        } else {\n+        } elseif (!$isStrict) {\n             $warnings = array_merge($warnings, $lockErrors);\n         }\n "
        },
        {
            "sha": "27b1f48167c3bf7412d1213871331146add9da0b",
            "filename": "src\/Composer\/Compiler.php",
            "status": "modified",
            "additions": 19,
            "deletions": 5,
            "changes": 24,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Compiler.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Compiler.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Compiler.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -105,7 +105,7 @@ public function compile($pharFile = 'composer.phar')\n         foreach ($finder as $file) {\n             $this->addFile($phar, $file, false);\n         }\n-        $this->addFile($phar, new \\SplFileInfo(__DIR__ . '\/..\/..\/vendor\/seld\/cli-prompt\/res\/hiddeninput.exe'), false);\n+        $this->addFile($phar, new \\SplFileInfo(__DIR__ . '\/..\/..\/vendor\/symfony\/console\/Resources\/bin\/hiddeninput.exe'), false);\n \n         $finder = new Finder();\n         $finder->files()\n@@ -117,11 +117,11 @@ public function compile($pharFile = 'composer.phar')\n             ->exclude('docs')\n             ->in(__DIR__.'\/..\/..\/vendor\/symfony\/')\n             ->in(__DIR__.'\/..\/..\/vendor\/seld\/jsonlint\/')\n-            ->in(__DIR__.'\/..\/..\/vendor\/seld\/cli-prompt\/')\n             ->in(__DIR__.'\/..\/..\/vendor\/justinrainbow\/json-schema\/')\n             ->in(__DIR__.'\/..\/..\/vendor\/composer\/spdx-licenses\/')\n             ->in(__DIR__.'\/..\/..\/vendor\/composer\/semver\/')\n             ->in(__DIR__.'\/..\/..\/vendor\/composer\/ca-bundle\/')\n+            ->in(__DIR__.'\/..\/..\/vendor\/composer\/xdebug-handler\/')\n             ->in(__DIR__.'\/..\/..\/vendor\/psr\/')\n             ->sort($finderSort)\n         ;\n@@ -164,10 +164,24 @@ public function compile($pharFile = 'composer.phar')\n         $util->save($pharFile, \\Phar::SHA1);\n     }\n \n-    private function addFile($phar, $file, $strip = true)\n+    \/**\n+     * @param  \\SplFileInfo $file\n+     * @return string\n+     *\/\n+    private function getRelativeFilePath($file)\n     {\n-        $path = strtr(str_replace(dirname(dirname(__DIR__)).DIRECTORY_SEPARATOR, '', $file->getRealPath()), '\\\\', '\/');\n+        $realPath = $file->getRealPath();\n+        $pathPrefix = dirname(dirname(__DIR__)).DIRECTORY_SEPARATOR;\n+\n+        $pos = strpos($realPath, $pathPrefix);\n+        $relativePath = ($pos !== false) ? substr_replace($realPath, '', $pos, strlen($pathPrefix)) : $realPath;\n \n+        return strtr($relativePath, '\\\\', '\/');\n+    }\n+\n+    private function addFile($phar, $file, $strip = true)\n+    {\n+        $path = $this->getRelativeFilePath($file);\n         $content = file_get_contents($file);\n         if ($strip) {\n             $content = $this->stripWhitespace($content);\n@@ -241,7 +255,7 @@ private function getStub()\n  *\/\n \n \/\/ Avoid APC causing random fatal errors per https:\/\/github.com\/composer\/composer\/issues\/264\n-if (extension_loaded('apc') && ini_get('apc.enable_cli') && ini_get('apc.cache_by_default')) {\n+if (extension_loaded('apc') && filter_var(ini_get('apc.enable_cli'), FILTER_VALIDATE_BOOLEAN) && filter_var(ini_get('apc.cache_by_default'), FILTER_VALIDATE_BOOLEAN)) {\n     if (version_compare(phpversion('apc'), '3.0.12', '>=')) {\n         ini_set('apc.cache_by_default', 0);\n     } else {"
        },
        {
            "sha": "11588815ce0daa0ad2950af07300b2e5e8e2fea8",
            "filename": "src\/Composer\/Composer.php",
            "status": "modified",
            "additions": 25,
            "deletions": 3,
            "changes": 28,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Composer.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Composer.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Composer.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -20,6 +20,7 @@\n use Composer\\Downloader\\DownloadManager;\n use Composer\\EventDispatcher\\EventDispatcher;\n use Composer\\Autoload\\AutoloadGenerator;\n+use Composer\\Package\\Archiver\\ArchiveManager;\n \n \/**\n  * @author Jordi Boggiano <j.boggiano@seld.be>\n@@ -28,9 +29,9 @@\n  *\/\n class Composer\n {\n-    const VERSION = '@package_version@';\n-    const BRANCH_ALIAS_VERSION = '@package_branch_alias_version@';\n-    const RELEASE_DATE = '@release_date@';\n+    const VERSION = '1.8.0';\n+    const BRANCH_ALIAS_VERSION = '';\n+    const RELEASE_DATE = '2018-12-03 10:31:16';\n \n     \/**\n      * @var Package\\RootPackageInterface\n@@ -77,6 +78,11 @@ class Composer\n      *\/\n     private $autoloadGenerator;\n \n+    \/**\n+     * @var ArchiveManager\n+     *\/\n+    private $archiveManager;\n+\n     \/**\n      * @param  Package\\RootPackageInterface $package\n      * @return void\n@@ -158,6 +164,22 @@ public function getDownloadManager()\n         return $this->downloadManager;\n     }\n \n+    \/**\n+     * @param ArchiveManager $manager\n+     *\/\n+    public function setArchiveManager(ArchiveManager $manager)\n+    {\n+        $this->archiveManager = $manager;\n+    }\n+\n+    \/**\n+     * @return ArchiveManager\n+     *\/\n+    public function getArchiveManager()\n+    {\n+        return $this->archiveManager;\n+    }\n+\n     \/**\n      * @param Installer\\InstallationManager $manager\n      *\/"
        },
        {
            "sha": "7b4220724b2c18893aa1ea291af4bb00143fa640",
            "filename": "src\/Composer\/Config.php",
            "status": "modified",
            "additions": 8,
            "deletions": 2,
            "changes": 10,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Config.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Config.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Config.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -60,6 +60,7 @@ class Config\n         'platform' => array(),\n         'archive-format' => 'tar',\n         'archive-dir' => '.',\n+        'htaccess-protect' => true,\n         \/\/ valid keys without defaults (auth config stuff):\n         \/\/ bitbucket-oauth\n         \/\/ github-oauth\n@@ -71,15 +72,17 @@ class Config\n     public static $defaultRepositories = array(\n         'packagist.org' => array(\n             'type' => 'composer',\n-            'url' => 'https?:\/\/packagist.org',\n+            'url' => 'https?:\/\/repo.packagist.org',\n             'allow_ssl_downgrade' => true,\n         ),\n     );\n \n     private $config;\n     private $baseDir;\n     private $repositories;\n+    \/** @var ConfigSourceInterface *\/\n     private $configSource;\n+    \/** @var ConfigSourceInterface *\/\n     private $authConfigSource;\n     private $useEnvironment;\n     private $warnedHosts = array();\n@@ -213,6 +216,7 @@ public function get($key, $flags = 0)\n             case 'cache-vcs-dir':\n             case 'cafile':\n             case 'capath':\n+            case 'htaccess-protect':\n                 \/\/ convert foo-bar to COMPOSER_FOO_BAR and check if it exists since it overrides the local config\n                 $env = 'COMPOSER_' . strtoupper(strtr($key, '-', '_'));\n \n@@ -241,9 +245,11 @@ public function get($key, $flags = 0)\n                         case 'g':\n                             $size *= 1024;\n                             \/\/ intentional fallthrough\n+                            \/\/ no break\n                         case 'm':\n                             $size *= 1024;\n                             \/\/ intentional fallthrough\n+                            \/\/ no break\n                         case 'k':\n                             $size *= 1024;\n                             break;\n@@ -414,7 +420,7 @@ private function disableRepoByName($name)\n     {\n         if (isset($this->repositories[$name])) {\n             unset($this->repositories[$name]);\n-        } else if ($name === 'packagist') { \/\/ BC support for default \"packagist\" named repo\n+        } elseif ($name === 'packagist') { \/\/ BC support for default \"packagist\" named repo\n             unset($this->repositories['packagist.org']);\n         }\n     }"
        },
        {
            "sha": "128ebf8ec832bfb363fffe6f9479d676fcd73e01",
            "filename": "src\/Composer\/Config\/JsonConfigSource.php",
            "status": "modified",
            "additions": 21,
            "deletions": 6,
            "changes": 27,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Config\/JsonConfigSource.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Config\/JsonConfigSource.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Config\/JsonConfigSource.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -60,6 +60,21 @@ public function getName()\n     public function addRepository($name, $config)\n     {\n         $this->manipulateJson('addRepository', $name, $config, function (&$config, $repo, $repoConfig) {\n+            \/\/ if converting from an array format to hashmap format, and there is a {\"packagist.org\":false} repo, we have\n+            \/\/ to convert it to \"packagist.org\": false key on the hashmap otherwise it fails schema validation\n+            if (isset($config['repositories'])) {\n+                foreach ($config['repositories'] as $index => $val) {\n+                    if ($index === $repo) {\n+                        continue;\n+                    }\n+                    if (is_numeric($index) && ($val === array('packagist' => false) || $val === array('packagist.org' => false))) {\n+                        unset($config['repositories'][$index]);\n+                        $config['repositories']['packagist.org'] = false;\n+                        break;\n+                    }\n+                }\n+            }\n+\n             $config['repositories'][$repo] = $repoConfig;\n         });\n     }\n@@ -120,15 +135,15 @@ public function removeConfigSetting($name)\n     public function addProperty($name, $value)\n     {\n         $this->manipulateJson('addProperty', $name, $value, function (&$config, $key, $val) {\n-            if (substr($key, 0, 6) === 'extra.') {\n+            if (substr($key, 0, 6) === 'extra.' || substr($key, 0, 8) === 'scripts.') {\n                 $bits = explode('.', $key);\n                 $last = array_pop($bits);\n-                $arr =& $config['extra'];\n+                $arr = &$config[reset($bits)];\n                 foreach ($bits as $bit) {\n                     if (!isset($arr[$bit])) {\n                         $arr[$bit] = array();\n                     }\n-                    $arr =& $arr[$bit];\n+                    $arr = &$arr[$bit];\n                 }\n                 $arr[$last] = $val;\n             } else {\n@@ -144,15 +159,15 @@ public function removeProperty($name)\n     {\n         $authConfig = $this->authConfig;\n         $this->manipulateJson('removeProperty', $name, function (&$config, $key) {\n-            if (substr($key, 0, 6) === 'extra.') {\n+            if (substr($key, 0, 6) === 'extra.' || substr($key, 0, 8) === 'scripts.') {\n                 $bits = explode('.', $key);\n                 $last = array_pop($bits);\n-                $arr =& $config['extra'];\n+                $arr = &$config[reset($bits)];\n                 foreach ($bits as $bit) {\n                     if (!isset($arr[$bit])) {\n                         return;\n                     }\n-                    $arr =& $arr[$bit];\n+                    $arr = &$arr[$bit];\n                 }\n                 unset($arr[$last]);\n             } else {"
        },
        {
            "sha": "e6ff7da9d475c172e41f2415a9b635f70e2a7f91",
            "filename": "src\/Composer\/Console\/Application.php",
            "status": "modified",
            "additions": 35,
            "deletions": 3,
            "changes": 38,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Console\/Application.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Console\/Application.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Console\/Application.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,9 +12,11 @@\n \n namespace Composer\\Console;\n \n+use Composer\\IO\\NullIO;\n use Composer\\Util\\Platform;\n use Composer\\Util\\Silencer;\n use Symfony\\Component\\Console\\Application as BaseApplication;\n+use Symfony\\Component\\Console\\Exception\\CommandNotFoundException;\n use Symfony\\Component\\Console\\Input\\InputInterface;\n use Symfony\\Component\\Console\\Input\\InputOption;\n use Symfony\\Component\\Console\\Output\\OutputInterface;\n@@ -85,6 +87,8 @@ public function __construct()\n             });\n         }\n \n+        $this->io = new NullIO();\n+\n         parent::__construct('Composer', Composer::VERSION);\n     }\n \n@@ -122,10 +126,31 @@ public function doRun(InputInterface $input, OutputInterface $output)\n         if ($name = $this->getCommandName($input)) {\n             try {\n                 $commandName = $this->find($name)->getName();\n+            } catch (CommandNotFoundException $e) {\n+              \/\/ we'll check command validity again later after plugins are loaded\n+              $commandName = false;\n             } catch (\\InvalidArgumentException $e) {\n             }\n         }\n \n+        \/\/ prompt user for dir change if no composer.json is present in current dir\n+        if ($io->isInteractive() && !$newWorkDir && !in_array($commandName, array('', 'list', 'init', 'about', 'help', 'diagnose', 'self-update', 'global', 'create-project'), true) && !file_exists(Factory::getComposerFile())) {\n+            $dir = dirname(getcwd());\n+            $home = realpath(getenv('HOME') ?: getenv('USERPROFILE') ?: '\/');\n+\n+            \/\/ abort when we reach the home dir or top of the filesystem\n+            while (dirname($dir) !== $dir && $dir !== $home) {\n+                if (file_exists($dir.'\/'.Factory::getComposerFile())) {\n+                    if ($io->askConfirmation('<info>No composer.json in current directory, do you want to use the one at '.$dir.'?<\/info> [<comment>Y,n<\/comment>]? ', true)) {\n+                        $oldWorkingDir = getcwd();\n+                        chdir($dir);\n+                    }\n+                    break;\n+                }\n+                $dir = dirname($dir);\n+            }\n+        }\n+\n         if (!$this->disablePluginsByDefault && !$this->hasPluginCommands && 'global' !== $commandName) {\n             try {\n                 foreach ($this->getPluginCommands() as $command) {\n@@ -159,14 +184,14 @@ public function doRun(InputInterface $input, OutputInterface $output)\n                 Composer::VERSION,\n                 Composer::RELEASE_DATE,\n                 defined('HHVM_VERSION') ? 'HHVM '.HHVM_VERSION : 'PHP '.PHP_VERSION,\n-                php_uname('s') . ' \/ ' . php_uname('r')\n+                function_exists('php_uname') ? php_uname('s') . ' \/ ' . php_uname('r') : 'Unknown OS'\n             ), true, IOInterface::DEBUG);\n \n             if (PHP_VERSION_ID < 50302) {\n                 $io->writeError('<warning>Composer only officially supports PHP 5.3.2 and above, you will most likely encounter problems with your PHP '.PHP_VERSION.', upgrading is strongly recommended.<\/warning>');\n             }\n \n-            if (extension_loaded('xdebug') && (!getenv('COMPOSER_DISABLE_XDEBUG_WARN') || getenv('COMPOSER_ALLOW_XDEBUG'))) {\n+            if (extension_loaded('xdebug') && !getenv('COMPOSER_DISABLE_XDEBUG_WARN')) {\n                 $io->writeError('<warning>You are running composer with xdebug enabled. This has a major impact on runtime performance. See https:\/\/getcomposer.org\/xdebug<\/warning>');\n             }\n \n@@ -210,7 +235,13 @@ public function doRun(InputInterface $input, OutputInterface $output)\n                             if ($this->has($script)) {\n                                 $io->writeError('<warning>A script named '.$script.' would override a Composer command and has been skipped<\/warning>');\n                             } else {\n-                                $this->add(new Command\\ScriptAliasCommand($script));\n+                                $description = null;\n+\n+                                if (isset($composer['scripts-descriptions'][$script])) {\n+                                    $description = $composer['scripts-descriptions'][$script];\n+                                }\n+\n+                                $this->add(new Command\\ScriptAliasCommand($script, $description));\n                             }\n                         }\n                     }\n@@ -379,6 +410,7 @@ protected function getDefaultCommands()\n             new Command\\HomeCommand(),\n             new Command\\ExecCommand(),\n             new Command\\OutdatedCommand(),\n+            new Command\\CheckPlatformReqsCommand(),\n         ));\n \n         if ('phar:' === substr(__FILE__, 0, 5)) {"
        },
        {
            "sha": "df8a2a003c47e787f9a9f7280d697beba9e62e63",
            "filename": "src\/Composer\/DependencyResolver\/GenericRule.php",
            "status": "added",
            "additions": 91,
            "deletions": 0,
            "changes": 91,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/GenericRule.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/GenericRule.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/GenericRule.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -0,0 +1,91 @@\n+<?php\n+\n+\/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ *\/\n+\n+namespace Composer\\DependencyResolver;\n+\n+use Composer\\Package\\PackageInterface;\n+use Composer\\Package\\Link;\n+\n+\/**\n+ * @author Nils Adermann <naderman@naderman.de>\n+ *\/\n+class GenericRule extends Rule\n+{\n+    protected $literals;\n+\n+    \/**\n+     * @param array                 $literals\n+     * @param int                   $reason     A RULE_* constant describing the reason for generating this rule\n+     * @param Link|PackageInterface $reasonData\n+     * @param array                 $job        The job this rule was created from\n+     *\/\n+    public function __construct(array $literals, $reason, $reasonData, $job = null)\n+    {\n+        parent::__construct($reason, $reasonData, $job);\n+\n+        \/\/ sort all packages ascending by id\n+        sort($literals);\n+\n+        $this->literals = $literals;\n+    }\n+\n+    public function getLiterals()\n+    {\n+        return $this->literals;\n+    }\n+\n+    public function getHash()\n+    {\n+        $data = unpack('ihash', md5(implode(',', $this->literals), true));\n+\n+        return $data['hash'];\n+    }\n+\n+    \/**\n+     * Checks if this rule is equal to another one\n+     *\n+     * Ignores whether either of the rules is disabled.\n+     *\n+     * @param  Rule $rule The rule to check against\n+     * @return bool Whether the rules are equal\n+     *\/\n+    public function equals(Rule $rule)\n+    {\n+        return $this->literals === $rule->getLiterals();\n+    }\n+\n+    public function isAssertion()\n+    {\n+        return 1 === count($this->literals);\n+    }\n+\n+    \/**\n+     * Formats a rule as a string of the format (Literal1|Literal2|...)\n+     *\n+     * @return string\n+     *\/\n+    public function __toString()\n+    {\n+        $result = $this->isDisabled() ? 'disabled(' : '(';\n+\n+        foreach ($this->literals as $i => $literal) {\n+            if ($i != 0) {\n+                $result .= '|';\n+            }\n+            $result .= $literal;\n+        }\n+\n+        $result .= ')';\n+\n+        return $result;\n+    }\n+}"
        },
        {
            "sha": "836725ef5c30704de2e0ea4450ef0007b0488f43",
            "filename": "src\/Composer\/DependencyResolver\/Operation\/UpdateOperation.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Operation\/UpdateOperation.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Operation\/UpdateOperation.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/Operation\/UpdateOperation.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -36,7 +36,7 @@ public function __construct(PackageInterface $initial, PackageInterface $target,\n         parent::__construct($reason);\n \n         $this->initialPackage = $initial;\n-        $this->targetPackage  = $target;\n+        $this->targetPackage = $target;\n     }\n \n     \/**"
        },
        {
            "sha": "085aaa7bf0a65b8effb59b1ea590b3df44778c74",
            "filename": "src\/Composer\/DependencyResolver\/Pool.php",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Pool.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Pool.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/Pool.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -317,12 +317,12 @@ public function isPackageAcceptable($name, $stability)\n      * Checks if the package matches the given constraint directly or through\n      * provided or replaced packages\n      *\n-     * @param  array|PackageInterface $candidate\n+     * @param  PackageInterface       $candidate\n      * @param  string                 $name       Name of the package to be matched\n      * @param  ConstraintInterface    $constraint The constraint to verify\n      * @return int                    One of the MATCH* constants of this class or 0 if there is no match\n      *\/\n-    private function match($candidate, $name, ConstraintInterface $constraint = null, $bypassFilters)\n+    public function match($candidate, $name, ConstraintInterface $constraint = null, $bypassFilters)\n     {\n         $candidateName = $candidate->getName();\n         $candidateVersion = $candidate->getVersion();"
        },
        {
            "sha": "de24b09913e93026d86f8d87bdba685ec81e02fd",
            "filename": "src\/Composer\/DependencyResolver\/Problem.php",
            "status": "modified",
            "additions": 17,
            "deletions": 2,
            "changes": 19,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Problem.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Problem.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/Problem.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,6 +12,8 @@\n \n namespace Composer\\DependencyResolver;\n \n+use Composer\\Package\\CompletePackageInterface;\n+\n \/**\n  * Represents a problem detected while solving dependencies\n  *\n@@ -90,8 +92,17 @@ public function getPrettyString(array $installedMap = array())\n \n                 \/\/ handle php\/hhvm\n                 if ($job['packageName'] === 'php' || $job['packageName'] === 'php-64bit' || $job['packageName'] === 'hhvm') {\n+                    $version = phpversion();\n                     $available = $this->pool->whatProvides($job['packageName']);\n-                    $version = count($available) ? $available[0]->getPrettyVersion() : phpversion();\n+\n+                    if (count($available)) {\n+                        $firstAvailable = reset($available);\n+                        $version = $firstAvailable->getPrettyVersion();\n+                        $extra = $firstAvailable->getExtra();\n+                        if ($firstAvailable instanceof CompletePackageInterface && isset($extra['config.platform']) && $extra['config.platform'] === true) {\n+                            $version .= '; ' . $firstAvailable->getDescription();\n+                        }\n+                    }\n \n                     $msg = \"\\n    - This package requires \".$job['packageName'].$this->constraintToText($job['constraint']).' but ';\n \n@@ -108,6 +119,10 @@ public function getPrettyString(array $installedMap = array())\n \n                 \/\/ handle php extensions\n                 if (0 === stripos($job['packageName'], 'ext-')) {\n+                    if (false !== strpos($job['packageName'], ' ')) {\n+                        return \"\\n    - The requested PHP extension \".$job['packageName'].' should be required as '.str_replace(' ', '-', $job['packageName']).'.';\n+                    }\n+\n                     $ext = substr($job['packageName'], 4);\n                     $error = extension_loaded($ext) ? 'has the wrong version ('.(phpversion($ext) ?: '0').') installed' : 'is missing from your system';\n \n@@ -233,6 +248,6 @@ protected function getPackageList($packages)\n      *\/\n     protected function constraintToText($constraint)\n     {\n-        return ($constraint) ? ' '.$constraint->getPrettyString() : '';\n+        return $constraint ? ' '.$constraint->getPrettyString() : '';\n     }\n }"
        },
        {
            "sha": "4760b89640466c910db57d51c9070ee336704f3a",
            "filename": "src\/Composer\/DependencyResolver\/Rule.php",
            "status": "modified",
            "additions": 24,
            "deletions": 74,
            "changes": 98,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Rule.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Rule.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/Rule.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,13 +13,14 @@\n namespace Composer\\DependencyResolver;\n \n use Composer\\Package\\CompletePackage;\n-use Composer\\Package\\PackageInterface;\n use Composer\\Package\\Link;\n+use Composer\\Package\\PackageInterface;\n \n \/**\n  * @author Nils Adermann <naderman@naderman.de>\n+ * @author Ruben Gonzalez <rubenrua@gmail.com>\n  *\/\n-class Rule\n+abstract class Rule\n {\n     \/\/ reason constants\n     const RULE_INTERNAL_ALLOW_UPDATE = 1;\n@@ -39,27 +40,17 @@ class Rule\n     const BITFIELD_REASON = 8;\n     const BITFIELD_DISABLED = 16;\n \n-    \/**\n-     * READ-ONLY: The literals this rule consists of.\n-     * @var array\n-     *\/\n-    public $literals;\n-\n     protected $bitfield;\n+    protected $job;\n     protected $reasonData;\n \n     \/**\n-     * @param array                 $literals\n      * @param int                   $reason     A RULE_* constant describing the reason for generating this rule\n      * @param Link|PackageInterface $reasonData\n      * @param array                 $job        The job this rule was created from\n      *\/\n-    public function __construct(array $literals, $reason, $reasonData, $job = null)\n+    public function __construct($reason, $reasonData, $job = null)\n     {\n-        \/\/ sort all packages ascending by id\n-        sort($literals);\n-\n-        $this->literals = $literals;\n         $this->reasonData = $reasonData;\n \n         if ($job) {\n@@ -71,18 +62,17 @@ public function __construct(array $literals, $reason, $reasonData, $job = null)\n             (255 << self::BITFIELD_TYPE);\n     }\n \n-    public function getHash()\n-    {\n-        $data = unpack('ihash', md5(implode(',', $this->literals), true));\n+    abstract public function getLiterals();\n \n-        return $data['hash'];\n-    }\n+    abstract public function getHash();\n \n     public function getJob()\n     {\n-        return isset($this->job) ? $this->job : null;\n+        return $this->job;\n     }\n \n+    abstract public function equals(Rule $rule);\n+\n     public function getReason()\n     {\n         return ($this->bitfield & (255 << self::BITFIELD_REASON)) >> self::BITFIELD_REASON;\n@@ -104,29 +94,6 @@ public function getRequiredPackage()\n         }\n     }\n \n-    \/**\n-     * Checks if this rule is equal to another one\n-     *\n-     * Ignores whether either of the rules is disabled.\n-     *\n-     * @param  Rule $rule The rule to check against\n-     * @return bool Whether the rules are equal\n-     *\/\n-    public function equals(Rule $rule)\n-    {\n-        if (count($this->literals) != count($rule->literals)) {\n-            return false;\n-        }\n-\n-        for ($i = 0, $n = count($this->literals); $i < $n; $i++) {\n-            if ($this->literals[$i] !== $rule->literals[$i]) {\n-                return false;\n-            }\n-        }\n-\n-        return true;\n-    }\n-\n     public function setType($type)\n     {\n         $this->bitfield = ($this->bitfield & ~(255 << self::BITFIELD_TYPE)) | ((255 & $type) << self::BITFIELD_TYPE);\n@@ -144,7 +111,7 @@ public function disable()\n \n     public function enable()\n     {\n-        $this->bitfield = $this->bitfield & ~(255 << self::BITFIELD_DISABLED);\n+        $this->bitfield &= ~(255 << self::BITFIELD_DISABLED);\n     }\n \n     public function isDisabled()\n@@ -157,15 +124,14 @@ public function isEnabled()\n         return !(($this->bitfield & (255 << self::BITFIELD_DISABLED)) >> self::BITFIELD_DISABLED);\n     }\n \n-    public function isAssertion()\n-    {\n-        return 1 === count($this->literals);\n-    }\n+    abstract public function isAssertion();\n \n     public function getPrettyString(Pool $pool, array $installedMap = array())\n     {\n+        $literals = $this->getLiterals();\n+\n         $ruleText = '';\n-        foreach ($this->literals as $i => $literal) {\n+        foreach ($literals as $i => $literal) {\n             if ($i != 0) {\n                 $ruleText .= '|';\n             }\n@@ -183,13 +149,12 @@ public function getPrettyString(Pool $pool, array $installedMap = array())\n                 return \"Remove command rule ($ruleText)\";\n \n             case self::RULE_PACKAGE_CONFLICT:\n-                $package1 = $pool->literalToPackage($this->literals[0]);\n-                $package2 = $pool->literalToPackage($this->literals[1]);\n+                $package1 = $pool->literalToPackage($literals[0]);\n+                $package2 = $pool->literalToPackage($literals[1]);\n \n                 return $package1->getPrettyString().' conflicts with '.$this->formatPackagesUnique($pool, array($package2)).'.';\n \n             case self::RULE_PACKAGE_REQUIRES:\n-                $literals = $this->literals;\n                 $sourceLiteral = array_shift($literals);\n                 $sourcePackage = $pool->literalToPackage($sourceLiteral);\n \n@@ -261,7 +226,7 @@ public function getPrettyString(Pool $pool, array $installedMap = array())\n             case self::RULE_INSTALLED_PACKAGE_OBSOLETES:\n                 return $ruleText;\n             case self::RULE_PACKAGE_SAME_NAME:\n-                return 'Can only install one of: ' . $this->formatPackagesUnique($pool, $this->literals) . '.';\n+                return 'Can only install one of: ' . $this->formatPackagesUnique($pool, $literals) . '.';\n             case self::RULE_PACKAGE_IMPLICIT_OBSOLETES:\n                 return $ruleText;\n             case self::RULE_LEARNED:\n@@ -273,6 +238,12 @@ public function getPrettyString(Pool $pool, array $installedMap = array())\n         }\n     }\n \n+    \/**\n+     * @param Pool  $pool\n+     * @param array $packages\n+     *\n+     * @return string\n+     *\/\n     protected function formatPackagesUnique($pool, array $packages)\n     {\n         $prepared = array();\n@@ -289,25 +260,4 @@ protected function formatPackagesUnique($pool, array $packages)\n \n         return implode(', ', $prepared);\n     }\n-\n-    \/**\n-     * Formats a rule as a string of the format (Literal1|Literal2|...)\n-     *\n-     * @return string\n-     *\/\n-    public function __toString()\n-    {\n-        $result = ($this->isDisabled()) ? 'disabled(' : '(';\n-\n-        foreach ($this->literals as $i => $literal) {\n-            if ($i != 0) {\n-                $result .= '|';\n-            }\n-            $result .= $literal;\n-        }\n-\n-        $result .= ')';\n-\n-        return $result;\n-    }\n }"
        },
        {
            "sha": "6bf47db34014c97a3e6dc81d77faffc7ea76c783",
            "filename": "src\/Composer\/DependencyResolver\/Rule2Literals.php",
            "status": "added",
            "additions": 113,
            "deletions": 0,
            "changes": 113,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Rule2Literals.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Rule2Literals.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/Rule2Literals.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -0,0 +1,113 @@\n+<?php\n+\n+\/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ *\/\n+\n+namespace Composer\\DependencyResolver;\n+\n+use Composer\\Package\\PackageInterface;\n+use Composer\\Package\\Link;\n+\n+\/**\n+ * @author Nils Adermann <naderman@naderman.de>\n+ *\/\n+class Rule2Literals extends Rule\n+{\n+    protected $literal1;\n+    protected $literal2;\n+\n+    \/**\n+     * @param int                   $literal1\n+     * @param int                   $literal2\n+     * @param int                   $reason     A RULE_* constant describing the reason for generating this rule\n+     * @param Link|PackageInterface $reasonData\n+     * @param array                 $job        The job this rule was created from\n+     *\/\n+    public function __construct($literal1, $literal2, $reason, $reasonData, $job = null)\n+    {\n+        parent::__construct($reason, $reasonData, $job);\n+\n+        if ($literal1 < $literal2) {\n+            $this->literal1 = $literal1;\n+            $this->literal2 = $literal2;\n+        } else {\n+            $this->literal1 = $literal2;\n+            $this->literal2 = $literal1;\n+        }\n+    }\n+\n+    public function getLiterals()\n+    {\n+        return array($this->literal1, $this->literal2);\n+    }\n+\n+    public function getHash()\n+    {\n+        return $this->literal1.','.$this->literal2;\n+    }\n+\n+    \/**\n+     * Checks if this rule is equal to another one\n+     *\n+     * Ignores whether either of the rules is disabled.\n+     *\n+     * @param  Rule $rule The rule to check against\n+     * @return bool Whether the rules are equal\n+     *\/\n+    public function equals(Rule $rule)\n+    {\n+        \/\/ specialized fast-case\n+        if ($rule instanceof self) {\n+            if ($this->literal1 !== $rule->literal1) {\n+                return false;\n+            }\n+\n+            if ($this->literal2 !== $rule->literal2) {\n+                return false;\n+            }\n+\n+            return true;\n+        }\n+\n+        $literals = $rule->getLiterals();\n+        if (2 != count($literals)) {\n+            return false;\n+        }\n+\n+        if ($this->literal1 !== $literals[0]) {\n+            return false;\n+        }\n+\n+        if ($this->literal2 !== $literals[1]) {\n+            return false;\n+        }\n+\n+        return true;\n+    }\n+\n+    public function isAssertion()\n+    {\n+        return false;\n+    }\n+\n+    \/**\n+     * Formats a rule as a string of the format (Literal1|Literal2|...)\n+     *\n+     * @return string\n+     *\/\n+    public function __toString()\n+    {\n+        $result = $this->isDisabled() ? 'disabled(' : '(';\n+\n+        $result .= $this->literal1 . '|' . $this->literal2 . ')';\n+\n+        return $result;\n+    }\n+}"
        },
        {
            "sha": "bf4de0d7c4b121fc4d7f90ede2dd3d284b3d71ae",
            "filename": "src\/Composer\/DependencyResolver\/RuleSet.php",
            "status": "modified",
            "additions": 14,
            "deletions": 5,
            "changes": 19,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/RuleSet.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/RuleSet.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/RuleSet.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -63,8 +63,14 @@ public function add(Rule $rule, $type)\n         \/\/ Do not add if rule already exists\n         if (isset($this->rulesByHash[$hash])) {\n             $potentialDuplicates = $this->rulesByHash[$hash];\n-            foreach ($potentialDuplicates as $potentialDuplicate) {\n-                if ($rule->equals($potentialDuplicate)) {\n+            if (is_array($potentialDuplicates)) {\n+                foreach ($potentialDuplicates as $potentialDuplicate) {\n+                    if ($rule->equals($potentialDuplicate)) {\n+                        return;\n+                    }\n+                }\n+            } else {\n+                if ($rule->equals($potentialDuplicates)) {\n                     return;\n                 }\n             }\n@@ -73,17 +79,20 @@ public function add(Rule $rule, $type)\n         if (!isset($this->rules[$type])) {\n             $this->rules[$type] = array();\n         }\n-        \n+\n         $this->rules[$type][] = $rule;\n         $this->ruleById[$this->nextRuleId] = $rule;\n         $rule->setType($type);\n \n         $this->nextRuleId++;\n \n         if (!isset($this->rulesByHash[$hash])) {\n-            $this->rulesByHash[$hash] = array($rule);\n-        } else {\n+            $this->rulesByHash[$hash] = $rule;\n+        } elseif (is_array($this->rulesByHash[$hash])) {\n             $this->rulesByHash[$hash][] = $rule;\n+        } else {\n+            $originalRule = $this->rulesByHash[$hash];\n+            $this->rulesByHash[$hash] = array($originalRule, $rule);\n         }\n     }\n "
        },
        {
            "sha": "6117c1d9575468c7e8dde1f2357e6fe370e074e4",
            "filename": "src\/Composer\/DependencyResolver\/RuleSetGenerator.php",
            "status": "modified",
            "additions": 67,
            "deletions": 32,
            "changes": 99,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/RuleSetGenerator.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/RuleSetGenerator.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/RuleSetGenerator.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -28,6 +28,9 @@ class RuleSetGenerator\n     protected $installedMap;\n     protected $whitelistedMap;\n     protected $addedMap;\n+    protected $conflictAddedMap;\n+    protected $addedPackages;\n+    protected $addedPackagesByNames;\n \n     public function __construct(PolicyInterface $policy, Pool $pool)\n     {\n@@ -47,7 +50,7 @@ public function __construct(PolicyInterface $policy, Pool $pool)\n      *                                      reason for generating this rule\n      * @param  mixed            $reasonData Any data, e.g. the requirement name,\n      *                                      that goes with the reason\n-     * @return Rule             The generated rule or null if tautological\n+     * @return Rule|null             The generated rule or null if tautological\n      *\/\n     protected function createRequireRule(PackageInterface $package, array $providers, $reason, $reasonData = null)\n     {\n@@ -61,7 +64,7 @@ protected function createRequireRule(PackageInterface $package, array $providers\n             $literals[] = $provider->id;\n         }\n \n-        return new Rule($literals, $reason, $reasonData);\n+        return new GenericRule($literals, $reason, $reasonData);\n     }\n \n     \/**\n@@ -83,7 +86,7 @@ protected function createInstallOneOfRule(array $packages, $reason, $job)\n             $literals[] = $package->id;\n         }\n \n-        return new Rule($literals, $reason, $job['packageName'], $job);\n+        return new GenericRule($literals, $reason, $job['packageName'], $job);\n     }\n \n     \/**\n@@ -99,7 +102,7 @@ protected function createInstallOneOfRule(array $packages, $reason, $job)\n      *\/\n     protected function createRemoveRule(PackageInterface $package, $reason, $job)\n     {\n-        return new Rule(array(-$package->id), $reason, $job['packageName'], $job);\n+        return new GenericRule(array(-$package->id), $reason, $job['packageName'], $job);\n     }\n \n     \/**\n@@ -114,16 +117,16 @@ protected function createRemoveRule(PackageInterface $package, $reason, $job)\n      *                                      reason for generating this rule\n      * @param  mixed            $reasonData Any data, e.g. the package name, that\n      *                                      goes with the reason\n-     * @return Rule             The generated rule\n+     * @return Rule|null             The generated rule\n      *\/\n-    protected function createConflictRule(PackageInterface $issuer, PackageInterface $provider, $reason, $reasonData = null)\n+    protected function createRule2Literals(PackageInterface $issuer, PackageInterface $provider, $reason, $reasonData = null)\n     {\n         \/\/ ignore self conflict\n         if ($issuer === $provider) {\n             return null;\n         }\n \n-        return new Rule(array(-$issuer->id, -$provider->id), $reason, $reasonData);\n+        return new Rule2Literals(-$issuer->id, -$provider->id, $reason, $reasonData);\n     }\n \n     \/**\n@@ -185,65 +188,89 @@ protected function addRulesForPackage(PackageInterface $package, $ignorePlatform\n         $workQueue->enqueue($package);\n \n         while (!$workQueue->isEmpty()) {\n+            \/** @var PackageInterface $package *\/\n             $package = $workQueue->dequeue();\n             if (isset($this->addedMap[$package->id])) {\n                 continue;\n             }\n \n             $this->addedMap[$package->id] = true;\n \n+            $this->addedPackages[] = $package;\n+            foreach ($package->getNames() as $name) {\n+                $this->addedPackagesByNames[$name][] = $package;\n+            }\n+\n             foreach ($package->getRequires() as $link) {\n                 if ($ignorePlatformReqs && preg_match(PlatformRepository::PLATFORM_PACKAGE_REGEX, $link->getTarget())) {\n                     continue;\n                 }\n \n                 $possibleRequires = $this->pool->whatProvides($link->getTarget(), $link->getConstraint());\n \n-                $this->addRule(RuleSet::TYPE_PACKAGE, $rule = $this->createRequireRule($package, $possibleRequires, Rule::RULE_PACKAGE_REQUIRES, $link));\n+                $this->addRule(RuleSet::TYPE_PACKAGE, $this->createRequireRule($package, $possibleRequires, Rule::RULE_PACKAGE_REQUIRES, $link));\n \n                 foreach ($possibleRequires as $require) {\n                     $workQueue->enqueue($require);\n                 }\n             }\n \n-            foreach ($package->getConflicts() as $link) {\n-                $possibleConflicts = $this->pool->whatProvides($link->getTarget(), $link->getConstraint());\n+            $packageName = $package->getName();\n+            $obsoleteProviders = $this->pool->whatProvides($packageName, null);\n \n-                foreach ($possibleConflicts as $conflict) {\n-                    $this->addRule(RuleSet::TYPE_PACKAGE, $this->createConflictRule($package, $conflict, Rule::RULE_PACKAGE_CONFLICT, $link));\n+            foreach ($obsoleteProviders as $provider) {\n+                if ($provider === $package) {\n+                    continue;\n+                }\n+\n+                if (($package instanceof AliasPackage) && $package->getAliasOf() === $provider) {\n+                    $this->addRule(RuleSet::TYPE_PACKAGE, $this->createRequireRule($package, array($provider), Rule::RULE_PACKAGE_ALIAS, $package));\n+                } elseif (!$this->obsoleteImpossibleForAlias($package, $provider)) {\n+                    $reason = ($packageName == $provider->getName()) ? Rule::RULE_PACKAGE_SAME_NAME : Rule::RULE_PACKAGE_IMPLICIT_OBSOLETES;\n+                    $this->addRule(RuleSet::TYPE_PACKAGE, $this->createRule2Literals($package, $provider, $reason, $package));\n                 }\n             }\n+        }\n+    }\n \n-            \/\/ check obsoletes and implicit obsoletes of a package\n-            $isInstalled = (isset($this->installedMap[$package->id]));\n+    protected function addConflictRules()\n+    {\n+        \/** @var PackageInterface $package *\/\n+        foreach ($this->addedPackages as $package) {\n+            foreach ($package->getConflicts() as $link) {\n+                if (!isset($this->addedPackagesByNames[$link->getTarget()])) {\n+                    continue;\n+                }\n \n-            foreach ($package->getReplaces() as $link) {\n-                $obsoleteProviders = $this->pool->whatProvides($link->getTarget(), $link->getConstraint());\n+                \/** @var PackageInterface $possibleConflict *\/\n+                foreach ($this->addedPackagesByNames[$link->getTarget()] as $possibleConflict) {\n+                    $conflictMatch = $this->pool->match($possibleConflict, $link->getTarget(), $link->getConstraint(), true);\n \n-                foreach ($obsoleteProviders as $provider) {\n-                    if ($provider === $package) {\n-                        continue;\n+                    if ($conflictMatch === Pool::MATCH || $conflictMatch === Pool::MATCH_REPLACE) {\n+                        $this->addRule(RuleSet::TYPE_PACKAGE, $this->createRule2Literals($package, $possibleConflict, Rule::RULE_PACKAGE_CONFLICT, $link));\n                     }\n \n-                    if (!$this->obsoleteImpossibleForAlias($package, $provider)) {\n-                        $reason = ($isInstalled) ? Rule::RULE_INSTALLED_PACKAGE_OBSOLETES : Rule::RULE_PACKAGE_OBSOLETES;\n-                        $this->addRule(RuleSet::TYPE_PACKAGE, $this->createConflictRule($package, $provider, $reason, $link));\n-                    }\n                 }\n             }\n \n-            $obsoleteProviders = $this->pool->whatProvides($package->getName(), null);\n+            \/\/ check obsoletes and implicit obsoletes of a package\n+            $isInstalled = isset($this->installedMap[$package->id]);\n \n-            foreach ($obsoleteProviders as $provider) {\n-                if ($provider === $package) {\n+            foreach ($package->getReplaces() as $link) {\n+                if (!isset($this->addedPackagesByNames[$link->getTarget()])) {\n                     continue;\n                 }\n \n-                if (($package instanceof AliasPackage) && $package->getAliasOf() === $provider) {\n-                    $this->addRule(RuleSet::TYPE_PACKAGE, $rule = $this->createRequireRule($package, array($provider), Rule::RULE_PACKAGE_ALIAS, $package));\n-                } elseif (!$this->obsoleteImpossibleForAlias($package, $provider)) {\n-                    $reason = ($package->getName() == $provider->getName()) ? Rule::RULE_PACKAGE_SAME_NAME : Rule::RULE_PACKAGE_IMPLICIT_OBSOLETES;\n-                    $this->addRule(RuleSet::TYPE_PACKAGE, $rule = $this->createConflictRule($package, $provider, $reason, $package));\n+                \/** @var PackageInterface $possibleConflict *\/\n+                foreach ($this->addedPackagesByNames[$link->getTarget()] as $provider) {\n+                    if ($provider === $package) {\n+                        continue;\n+                    }\n+\n+                    if (!$this->obsoleteImpossibleForAlias($package, $provider)) {\n+                        $reason = $isInstalled ? Rule::RULE_INSTALLED_PACKAGE_OBSOLETES : Rule::RULE_PACKAGE_OBSOLETES;\n+                        $this->addRule(RuleSet::TYPE_PACKAGE, $this->createRule2Literals($package, $provider, $reason, $link));\n+                    }\n                 }\n             }\n         }\n@@ -283,7 +310,7 @@ protected function addRulesForJobs($ignorePlatformReqs)\n             switch ($job['cmd']) {\n                 case 'install':\n                     if (!$job['fixed'] && $ignorePlatformReqs && preg_match(PlatformRepository::PLATFORM_PACKAGE_REGEX, $job['packageName'])) {\n-                        continue;\n+                        break;\n                     }\n \n                     $packages = $this->pool->whatProvides($job['packageName'], $job['constraint']);\n@@ -326,12 +353,20 @@ public function getRulesFor($jobs, $installedMap, $ignorePlatformReqs = false)\n         $this->pool->setWhitelist($this->whitelistedMap);\n \n         $this->addedMap = array();\n+        $this->conflictAddedMap = array();\n+        $this->addedPackages = array();\n+        $this->addedPackagesByNames = array();\n         foreach ($this->installedMap as $package) {\n             $this->addRulesForPackage($package, $ignorePlatformReqs);\n         }\n \n         $this->addRulesForJobs($ignorePlatformReqs);\n \n+        $this->addConflictRules();\n+\n+        \/\/ Remove references to packages\n+        $this->addedPackages = $this->addedPackagesByNames = null;\n+\n         return $this->rules;\n     }\n }"
        },
        {
            "sha": "8c048624f8e7fa66732e6ebee8aa7bf9bd6710e5",
            "filename": "src\/Composer\/DependencyResolver\/RuleSetIterator.php",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/RuleSetIterator.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/RuleSetIterator.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/RuleSetIterator.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -51,7 +51,7 @@ public function next()\n             return;\n         }\n \n-        if ($this->currentOffset >= sizeof($this->rules[$this->currentType])) {\n+        if ($this->currentOffset >= count($this->rules[$this->currentType])) {\n             $this->currentOffset = 0;\n \n             do {\n@@ -63,7 +63,7 @@ public function next()\n                 }\n \n                 $this->currentType = $this->types[$this->currentTypeOffset];\n-            } while (isset($this->types[$this->currentTypeOffset]) && !sizeof($this->rules[$this->currentType]));\n+            } while (isset($this->types[$this->currentTypeOffset]) && !count($this->rules[$this->currentType]));\n         }\n     }\n \n@@ -83,7 +83,7 @@ public function rewind()\n             }\n \n             $this->currentType = $this->types[$this->currentTypeOffset];\n-        } while (isset($this->types[$this->currentTypeOffset]) && !sizeof($this->rules[$this->currentType]));\n+        } while (isset($this->types[$this->currentTypeOffset]) && !count($this->rules[$this->currentType]));\n     }\n \n     public function valid()"
        },
        {
            "sha": "31a22414dd3a5e3e63666aec18d89ba2946f85af",
            "filename": "src\/Composer\/DependencyResolver\/RuleWatchGraph.php",
            "status": "modified",
            "additions": 4,
            "deletions": 4,
            "changes": 8,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/RuleWatchGraph.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/RuleWatchGraph.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/RuleWatchGraph.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -95,7 +95,7 @@ public function propagateLiteral($decidedLiteral, $level, $decisions)\n             $otherWatch = $node->getOtherWatch($literal);\n \n             if (!$node->getRule()->isDisabled() && !$decisions->satisfy($otherWatch)) {\n-                $ruleLiterals = $node->getRule()->literals;\n+                $ruleLiterals = $node->getRule()->getLiterals();\n \n                 $alternativeLiterals = array_filter($ruleLiterals, function ($ruleLiteral) use ($literal, $otherWatch, $decisions) {\n                     return $literal !== $ruleLiteral &&\n@@ -127,9 +127,9 @@ public function propagateLiteral($decidedLiteral, $level, $decisions)\n      *\n      * The rule node's watched literals are updated accordingly.\n      *\n-     * @param $fromLiteral mixed A literal the node used to watch\n-     * @param $toLiteral mixed A literal the node should watch now\n-     * @param $node mixed The rule node to be moved\n+     * @param int           $fromLiteral A literal the node used to watch\n+     * @param int           $toLiteral A literal the node should watch now\n+     * @param RuleWatchNode $node The rule node to be moved\n      *\/\n     protected function moveWatch($fromLiteral, $toLiteral, $node)\n     {"
        },
        {
            "sha": "eeaa54162085438c6bce088a1421b92bd54eb2cc",
            "filename": "src\/Composer\/DependencyResolver\/RuleWatchNode.php",
            "status": "modified",
            "additions": 7,
            "deletions": 6,
            "changes": 13,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/RuleWatchNode.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/RuleWatchNode.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/RuleWatchNode.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -35,10 +35,11 @@ public function __construct($rule)\n     {\n         $this->rule = $rule;\n \n-        $literals = $rule->literals;\n+        $literals = $rule->getLiterals();\n \n-        $this->watch1 = count($literals) > 0 ? $literals[0] : 0;\n-        $this->watch2 = count($literals) > 1 ? $literals[1] : 0;\n+        $literalCount = count($literals);\n+        $this->watch1 = $literalCount > 0 ? $literals[0] : 0;\n+        $this->watch2 = $literalCount > 1 ? $literals[1] : 0;\n     }\n \n     \/**\n@@ -51,7 +52,7 @@ public function __construct($rule)\n      *\/\n     public function watch2OnHighest(Decisions $decisions)\n     {\n-        $literals = $this->rule->literals;\n+        $literals = $this->rule->getLiterals();\n \n         \/\/ if there are only 2 elements, both are being watched anyway\n         if (count($literals) < 3) {\n@@ -90,9 +91,9 @@ public function getOtherWatch($literal)\n     {\n         if ($this->watch1 == $literal) {\n             return $this->watch2;\n-        } else {\n-            return $this->watch1;\n         }\n+\n+        return $this->watch1;\n     }\n \n     \/**"
        },
        {
            "sha": "1ed35ad9c935db421ba7c4100a875ce7e3e2c12b",
            "filename": "src\/Composer\/DependencyResolver\/Solver.php",
            "status": "modified",
            "additions": 26,
            "deletions": 17,
            "changes": 43,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Solver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Solver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/Solver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -30,7 +30,7 @@ class Solver\n     protected $pool;\n     \/** @var RepositoryInterface *\/\n     protected $installed;\n-    \/** @var Ruleset *\/\n+    \/** @var RuleSet *\/\n     protected $rules;\n     \/** @var RuleSetGenerator *\/\n     protected $ruleSetGenerator;\n@@ -97,10 +97,10 @@ private function makeAssertionRuleDecisions()\n                 continue;\n             }\n \n-            $literals = $rule->literals;\n+            $literals = $rule->getLiterals();\n             $literal = $literals[0];\n \n-            if (!$this->decisions->decided(abs($literal))) {\n+            if (!$this->decisions->decided($literal)) {\n                 $this->decisions->decide($literal, 1, $rule);\n                 continue;\n             }\n@@ -139,7 +139,7 @@ private function makeAssertionRuleDecisions()\n                     continue;\n                 }\n \n-                $assertRuleLiterals = $assertRule->literals;\n+                $assertRuleLiterals = $assertRule->getLiterals();\n                 $assertRuleLiteral = $assertRuleLiterals[0];\n \n                 if (abs($literal) !== abs($assertRuleLiteral)) {\n@@ -193,7 +193,7 @@ protected function checkForRootRequireProblems($ignorePlatformReqs)\n \n                     if (!$this->pool->whatProvides($job['packageName'], $job['constraint'])) {\n                         $problem = new Problem($this->pool);\n-                        $problem->addRule(new Rule(array(), null, null, $job));\n+                        $problem->addRule(new GenericRule(array(), null, null, $job));\n                         $this->problems[] = $problem;\n                     }\n                     break;\n@@ -226,6 +226,7 @@ public function solve(Request $request, $ignorePlatformReqs = false)\n         $this->io->writeError('Resolving dependencies through SAT', true, IOInterface::DEBUG);\n         $before = microtime(true);\n         $this->runSat(true);\n+        $this->io->writeError('', true, IOInterface::DEBUG);\n         $this->io->writeError(sprintf('Dependency resolution completed in %.3f seconds', microtime(true) - $before), true, IOInterface::VERBOSE);\n \n         \/\/ decide to remove everything that's installed and undecided\n@@ -413,7 +414,7 @@ protected function analyze($level, Rule $rule)\n         while (true) {\n             $this->learnedPool[count($this->learnedPool) - 1][] = $rule;\n \n-            foreach ($rule->literals as $literal) {\n+            foreach ($rule->getLiterals() as $literal) {\n                 \/\/ skip the one true literal\n                 if ($this->decisions->satisfy($literal)) {\n                     continue;\n@@ -498,7 +499,7 @@ protected function analyze($level, Rule $rule)\n             );\n         }\n \n-        $newRule = new Rule($learnedLiterals, Rule::RULE_LEARNED, $why);\n+        $newRule = new GenericRule($learnedLiterals, Rule::RULE_LEARNED, $why);\n \n         return array($learnedLiterals[0], $ruleLevel, $newRule, $why);\n     }\n@@ -509,9 +510,8 @@ protected function analyze($level, Rule $rule)\n      *\/\n     private function analyzeUnsolvableRule(Problem $problem, Rule $conflictRule)\n     {\n-        $why = spl_object_hash($conflictRule);\n-\n         if ($conflictRule->getType() == RuleSet::TYPE_LEARNED) {\n+            $why = spl_object_hash($conflictRule);\n             $learnedWhy = $this->learnedWhy[$why];\n             $problemRules = $this->learnedPool[$learnedWhy];\n \n@@ -546,7 +546,7 @@ private function analyzeUnsolvable(Rule $conflictRule, $disableRules)\n         $this->problems[] = $problem;\n \n         $seen = array();\n-        $literals = $conflictRule->literals;\n+        $literals = $conflictRule->getLiterals();\n \n         foreach ($literals as $literal) {\n             \/\/ skip the one true literal\n@@ -569,7 +569,7 @@ private function analyzeUnsolvable(Rule $conflictRule, $disableRules)\n             $problem->addRule($why);\n             $this->analyzeUnsolvableRule($problem, $why);\n \n-            $literals = $why->literals;\n+            $literals = $why->getLiterals();\n \n             foreach ($literals as $literal) {\n                 \/\/ skip the one true literal\n@@ -703,7 +703,7 @@ private function runSat($disableRules = true)\n                         $decisionQueue = array();\n                         $noneSatisfied = true;\n \n-                        foreach ($rule->literals as $literal) {\n+                        foreach ($rule->getLiterals() as $literal) {\n                             if ($this->decisions->satisfy($literal)) {\n                                 $noneSatisfied = false;\n                                 break;\n@@ -759,14 +759,23 @@ private function runSat($disableRules = true)\n             }\n \n             $rulesCount = count($this->rules);\n+            $pass = 1;\n \n+            $this->io->writeError('Looking at all rules.', true, IOInterface::DEBUG);\n             for ($i = 0, $n = 0; $n < $rulesCount; $i++, $n++) {\n                 if ($i == $rulesCount) {\n+                    if (1 === $pass) {\n+                        $this->io->writeError(\"Something's changed, looking at all rules again (pass #$pass)\", false, IOInterface::DEBUG);\n+                    } else {\n+                        $this->io->overwriteError(\"Something's changed, looking at all rules again (pass #$pass)\", false, null, IOInterface::DEBUG);\n+                    }\n+\n                     $i = 0;\n+                    $pass++;\n                 }\n \n                 $rule = $this->rules->ruleById[$i];\n-                $literals = $rule->literals;\n+                $literals = $rule->getLiterals();\n \n                 if ($rule->isDisabled()) {\n                     continue;\n@@ -782,14 +791,14 @@ private function runSat($disableRules = true)\n                 \/\/\n                 foreach ($literals as $literal) {\n                     if ($literal <= 0) {\n-                        if (!$this->decisions->decidedInstall(abs($literal))) {\n+                        if (!$this->decisions->decidedInstall($literal)) {\n                             continue 2; \/\/ next rule\n                         }\n                     } else {\n-                        if ($this->decisions->decidedInstall(abs($literal))) {\n+                        if ($this->decisions->decidedInstall($literal)) {\n                             continue 2; \/\/ next rule\n                         }\n-                        if ($this->decisions->undecided(abs($literal))) {\n+                        if ($this->decisions->undecided($literal)) {\n                             $decisionQueue[] = $literal;\n                         }\n                     }\n@@ -820,7 +829,7 @@ private function runSat($disableRules = true)\n                 $lastLiteral = null;\n                 $lastLevel = null;\n                 $lastBranchIndex = 0;\n-                $lastBranchOffset  = 0;\n+                $lastBranchOffset = 0;\n \n                 for ($i = count($this->branches) - 1; $i >= 0; $i--) {\n                     list($literals, $l) = $this->branches[$i];"
        },
        {
            "sha": "6920411f53ac77d69f3004e5873e96b8eccf2f85",
            "filename": "src\/Composer\/DependencyResolver\/SolverBugException.php",
            "status": "modified",
            "additions": 2,
            "deletions": 1,
            "changes": 3,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/SolverBugException.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/SolverBugException.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/SolverBugException.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -21,6 +21,7 @@ public function __construct($message)\n     {\n         parent::__construct(\n             $message.\"\\nThis exception was most likely caused by a bug in Composer.\\n\".\n-            \"Please report the command you ran, the exact error you received, and your composer.json on https:\/\/github.com\/composer\/composer\/issues - thank you!\\n\");\n+            \"Please report the command you ran, the exact error you received, and your composer.json on https:\/\/github.com\/composer\/composer\/issues - thank you!\\n\"\n+        );\n     }\n }"
        },
        {
            "sha": "142895697d4adf46ebd862d6b1a69953c7560d93",
            "filename": "src\/Composer\/DependencyResolver\/SolverProblemsException.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/SolverProblemsException.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/SolverProblemsException.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/SolverProblemsException.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -43,7 +43,7 @@ protected function createMessage()\n         }\n \n         if (strpos($text, 'could not be found') || strpos($text, 'no matching package found')) {\n-            $text .= \"\\nPotential causes:\\n - A typo in the package name\\n - The package is not available in a stable-enough version according to your minimum-stability setting\\n   see <https:\/\/getcomposer.org\/doc\/04-schema.md#minimum-stability> for more details.\\n\\nRead <https:\/\/getcomposer.org\/doc\/articles\/troubleshooting.md> for further common problems.\";\n+            $text .= \"\\nPotential causes:\\n - A typo in the package name\\n - The package is not available in a stable-enough version according to your minimum-stability setting\\n   see <https:\/\/getcomposer.org\/doc\/04-schema.md#minimum-stability> for more details.\\n - It's a private package and you forgot to add a custom repository to find it\\n\\nRead <https:\/\/getcomposer.org\/doc\/articles\/troubleshooting.md> for further common problems.\";\n         }\n \n         if ($hasExtensionProblems) {"
        },
        {
            "sha": "c8d3bbe53935d6855afe870f184e9026b74be5da",
            "filename": "src\/Composer\/DependencyResolver\/Transaction.php",
            "status": "modified",
            "additions": 6,
            "deletions": 5,
            "changes": 11,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Transaction.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/DependencyResolver\/Transaction.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/DependencyResolver\/Transaction.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -49,7 +49,7 @@ public function getOperations()\n             $package = $this->pool->literalToPackage($literal);\n \n             \/\/ wanted & installed || !wanted & !installed\n-            if (($literal > 0) == (isset($this->installedMap[$package->id]))) {\n+            if (($literal > 0) == isset($this->installedMap[$package->id])) {\n                 continue;\n             }\n \n@@ -97,7 +97,8 @@ public function getOperations()\n \n     protected function transactionFromMaps($installMap, $updateMap, $uninstallMap)\n     {\n-        $queue = array_map(function ($operation) {\n+        $queue = array_map(\n+            function ($operation) {\n                 return $operation['package'];\n             },\n             $this->findRootPackages($installMap, $updateMap)\n@@ -110,16 +111,16 @@ protected function transactionFromMaps($installMap, $updateMap, $uninstallMap)\n             $packageId = $package->id;\n \n             if (!isset($visited[$packageId])) {\n-                array_push($queue, $package);\n+                $queue[] = $package;\n \n                 if ($package instanceof AliasPackage) {\n-                    array_push($queue, $package->getAliasOf());\n+                    $queue[] = $package->getAliasOf();\n                 } else {\n                     foreach ($package->getRequires() as $link) {\n                         $possibleRequires = $this->pool->whatProvides($link->getTarget(), $link->getConstraint());\n \n                         foreach ($possibleRequires as $require) {\n-                            array_push($queue, $require);\n+                            $queue[] = $require;\n                         }\n                     }\n                 }"
        },
        {
            "sha": "d041a7f88f382091398030db3b4322060922ec20",
            "filename": "src\/Composer\/Downloader\/ArchiveDownloader.php",
            "status": "modified",
            "additions": 6,
            "deletions": 31,
            "changes": 37,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/ArchiveDownloader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/ArchiveDownloader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/ArchiveDownloader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -27,6 +27,8 @@\n {\n     \/**\n      * {@inheritDoc}\n+     * @throws \\RuntimeException\n+     * @throws \\UnexpectedValueException\n      *\/\n     public function download(PackageInterface $package, $path, $output = true)\n     {\n@@ -35,7 +37,9 @@ public function download(PackageInterface $package, $path, $output = true)\n         while ($retries--) {\n             $fileName = parent::download($package, $path, $output);\n \n-            $this->io->writeError(' Extracting archive', false, IOInterface::VERBOSE);\n+            if ($output) {\n+                $this->io->writeError(' Extracting archive', false, IOInterface::VERBOSE);\n+            }\n \n             try {\n                 $this->filesystem->ensureDirectoryExists($temporaryDir);\n@@ -91,10 +95,6 @@ public function download(PackageInterface $package, $path, $output = true)\n \n             break;\n         }\n-\n-        if ($output) {\n-            $this->io->writeError('');\n-        }\n     }\n \n     \/**\n@@ -105,32 +105,6 @@ protected function getFileName(PackageInterface $package, $path)\n         return rtrim($path.'\/'.md5($path.spl_object_hash($package)).'.'.pathinfo(parse_url($package->getDistUrl(), PHP_URL_PATH), PATHINFO_EXTENSION), '.');\n     }\n \n-    \/**\n-     * {@inheritdoc}\n-     *\/\n-    protected function processUrl(PackageInterface $package, $url)\n-    {\n-        if ($package->getDistReference() && strpos($url, 'github.com')) {\n-            if (preg_match('{^https?:\/\/(?:www\\.)?github\\.com\/([^\/]+)\/([^\/]+)\/(zip|tar)ball\/(.+)$}i', $url, $match)) {\n-                \/\/ update legacy github archives to API calls with the proper reference\n-                $url = 'https:\/\/api.github.com\/repos\/' . $match[1] . '\/'. $match[2] . '\/' . $match[3] . 'ball\/' . $package->getDistReference();\n-            } elseif ($package->getDistReference() && preg_match('{^https?:\/\/(?:www\\.)?github\\.com\/([^\/]+)\/([^\/]+)\/archive\/.+\\.(zip|tar)(?:\\.gz)?$}i', $url, $match)) {\n-                \/\/ update current github web archives to API calls with the proper reference\n-                $url = 'https:\/\/api.github.com\/repos\/' . $match[1] . '\/'. $match[2] . '\/' . $match[3] . 'ball\/' . $package->getDistReference();\n-            } elseif ($package->getDistReference() && preg_match('{^https?:\/\/api\\.github\\.com\/repos\/([^\/]+)\/([^\/]+)\/(zip|tar)ball(?:\/.+)?$}i', $url, $match)) {\n-                \/\/ update api archives to the proper reference\n-                $url = 'https:\/\/api.github.com\/repos\/' . $match[1] . '\/'. $match[2] . '\/' . $match[3] . 'ball\/' . $package->getDistReference();\n-            }\n-        } elseif ($package->getDistReference() && strpos($url, 'bitbucket.org')) {\n-            if (preg_match('{^https?:\/\/(?:www\\.)?bitbucket\\.org\/([^\/]+)\/([^\/]+)\/get\/(.+)\\.(zip|tar\\.gz|tar\\.bz2)$}i', $url, $match)) {\n-                \/\/ update Bitbucket archives to the proper reference\n-                $url = 'https:\/\/bitbucket.org\/' . $match[1] . '\/'. $match[2] . '\/get\/' . $package->getDistReference() . '.' . $match[4];\n-            }\n-        }\n-\n-        return parent::processUrl($package, $url);\n-    }\n-\n     \/**\n      * Extract file to directory\n      *\n@@ -152,6 +126,7 @@ private function getFolderContent($dir)\n         $finder = Finder::create()\n             ->ignoreVCS(false)\n             ->ignoreDotFiles(false)\n+            ->notName('.DS_Store')\n             ->depth(0)\n             ->in($dir);\n "
        },
        {
            "sha": "15c00a6e6182b769a29b16d66f4b1cac7343a8aa",
            "filename": "src\/Composer\/Downloader\/DownloadManager.php",
            "status": "modified",
            "additions": 10,
            "deletions": 7,
            "changes": 17,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/DownloadManager.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/DownloadManager.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/DownloadManager.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -28,7 +28,7 @@ class DownloadManager\n     private $preferSource = false;\n     private $packagePreferences = array();\n     private $filesystem;\n-    private $downloaders  = array();\n+    private $downloaders = array();\n \n     \/**\n      * Initializes download manager.\n@@ -160,8 +160,11 @@ public function getDownloaderForInstalledPackage(PackageInterface $package)\n \n         if ($installationSource !== $downloader->getInstallationSource()) {\n             throw new \\LogicException(sprintf(\n-                'Downloader \"%s\" is a %s type downloader and can not be used to download %s',\n-                get_class($downloader), $downloader->getInstallationSource(), $installationSource\n+                'Downloader \"%s\" is a %s type downloader and can not be used to download %s for package %s',\n+                get_class($downloader),\n+                $downloader->getInstallationSource(),\n+                $installationSource,\n+                $package\n             ));\n         }\n \n@@ -181,8 +184,8 @@ public function getDownloaderForInstalledPackage(PackageInterface $package)\n     public function download(PackageInterface $package, $targetDir, $preferSource = null)\n     {\n         $preferSource = null !== $preferSource ? $preferSource : $this->preferSource;\n-        $sourceType   = $package->getSourceType();\n-        $distType     = $package->getDistType();\n+        $sourceType = $package->getSourceType();\n+        $distType = $package->getDistType();\n \n         $sources = array();\n         if ($sourceType) {\n@@ -248,10 +251,10 @@ public function update(PackageInterface $initial, PackageInterface $target, $tar\n \n         if ('dist' === $installationSource) {\n             $initialType = $initial->getDistType();\n-            $targetType  = $target->getDistType();\n+            $targetType = $target->getDistType();\n         } else {\n             $initialType = $initial->getSourceType();\n-            $targetType  = $target->getSourceType();\n+            $targetType = $target->getSourceType();\n         }\n \n         \/\/ upgrading from a dist stable package to a dev package, force source reinstall"
        },
        {
            "sha": "6596d9c8bc5a19ff3a4fe90657af5ac0c03debf9",
            "filename": "src\/Composer\/Downloader\/FileDownloader.php",
            "status": "modified",
            "additions": 62,
            "deletions": 9,
            "changes": 71,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/FileDownloader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/FileDownloader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/FileDownloader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -16,12 +16,16 @@\n use Composer\\Cache;\n use Composer\\Factory;\n use Composer\\IO\\IOInterface;\n+use Composer\\IO\\NullIO;\n+use Composer\\Package\\Comparer\\Comparer;\n use Composer\\Package\\PackageInterface;\n+use Composer\\Package\\Version\\VersionParser;\n use Composer\\Plugin\\PluginEvents;\n use Composer\\Plugin\\PreFileDownloadEvent;\n use Composer\\EventDispatcher\\EventDispatcher;\n use Composer\\Util\\Filesystem;\n use Composer\\Util\\RemoteFilesystem;\n+use Composer\\Util\\Url as UrlUtil;\n \n \/**\n  * Base downloader for files\n@@ -31,7 +35,7 @@\n  * @author Fran\u00e7ois Pluchino <francois.pluchino@opendisplay.com>\n  * @author Nils Adermann <naderman@naderman.de>\n  *\/\n-class FileDownloader implements DownloaderInterface\n+class FileDownloader implements DownloaderInterface, ChangeReportInterface\n {\n     protected $io;\n     protected $config;\n@@ -84,13 +88,14 @@ public function download(PackageInterface $package, $path, $output = true)\n         }\n \n         if ($output) {\n-            $this->io->writeError(\"  - Installing <info>\" . $package->getName() . \"<\/info> (<comment>\" . $package->getFullPrettyVersion() . \"<\/comment>)\", false);\n+            $this->io->writeError(\"  - Installing <info>\" . $package->getName() . \"<\/info> (<comment>\" . $package->getFullPrettyVersion() . \"<\/comment>): \", false);\n         }\n \n         $urls = $package->getDistUrls();\n         while ($url = array_shift($urls)) {\n             try {\n-                return $this->doDownload($package, $path, $url);\n+                $fileName = $this->doDownload($package, $path, $url);\n+                break;\n             } catch (\\Exception $e) {\n                 if ($this->io->isDebug()) {\n                     $this->io->writeError('');\n@@ -109,6 +114,8 @@ public function download(PackageInterface $package, $path, $output = true)\n         if ($output) {\n             $this->io->writeError('');\n         }\n+\n+        return $fileName;\n     }\n \n     protected function doDownload(PackageInterface $package, $path, $url)\n@@ -130,10 +137,13 @@ protected function doDownload(PackageInterface $package, $path, $url)\n             $checksum = $package->getDistSha1Checksum();\n             $cacheKey = $this->getCacheKey($package, $processedUrl);\n \n-            \/\/ download if we don't have it in cache or the cache is invalidated\n-            if (!$this->cache || ($checksum && $checksum !== $this->cache->sha1($cacheKey)) || !$this->cache->copyTo($cacheKey, $fileName)) {\n+            \/\/ use from cache if it is present and has a valid checksum or we have no checksum to check against\n+            if ($this->cache && (!$checksum || $checksum === $this->cache->sha1($cacheKey)) && $this->cache->copyTo($cacheKey, $fileName)) {\n+                $this->io->writeError('Loading from cache', false);\n+            } else {\n+                \/\/ download if cache restore failed\n                 if (!$this->outputProgress) {\n-                    $this->io->writeError(' Downloading', false);\n+                    $this->io->writeError('Downloading', false);\n                 }\n \n                 \/\/ try to download 3 times then fail hard\n@@ -153,12 +163,14 @@ protected function doDownload(PackageInterface $package, $path, $url)\n                     }\n                 }\n \n+                if (!$this->outputProgress) {\n+                    $this->io->writeError(' (<comment>100%<\/comment>)', false);\n+                }\n+\n                 if ($this->cache) {\n                     $this->lastCacheWrites[$package->getName()] = $cacheKey;\n                     $this->cache->copyFrom($cacheKey, $fileName);\n                 }\n-            } else {\n-                $this->io->writeError(' Loading from cache', false);\n             }\n \n             if (!file_exists($fileName)) {\n@@ -206,7 +218,8 @@ public function update(PackageInterface $initial, PackageInterface $target, $pat\n         $from = $initial->getPrettyVersion();\n         $to = $target->getPrettyVersion();\n \n-        $this->io->writeError(\"  - Updating <info>\" . $name . \"<\/info> (<comment>\" . $from . \"<\/comment> => <comment>\" . $to . \"<\/comment>)\", false);\n+        $actionName = VersionParser::isUpgrade($initial->getVersion(), $target->getVersion()) ? 'Updating' : 'Downgrading';\n+        $this->io->writeError(\"  - \" . $actionName . \" <info>\" . $name . \"<\/info> (<comment>\" . $from . \"<\/comment> => <comment>\" . $to . \"<\/comment>): \", false);\n \n         $this->remove($initial, $path, false);\n         $this->download($target, $path, false);\n@@ -253,6 +266,10 @@ protected function processUrl(PackageInterface $package, $url)\n             throw new \\RuntimeException('You must enable the openssl extension to download files via https');\n         }\n \n+        if ($package->getDistReference()) {\n+            $url = UrlUtil::updateDistReference($this->config, $url, $package->getDistReference());\n+        }\n+\n         return $url;\n     }\n \n@@ -266,4 +283,40 @@ private function getCacheKey(PackageInterface $package, $processedUrl)\n \n         return $package->getName().'\/'.$cacheKey.'.'.$package->getDistType();\n     }\n+\n+    \/**\n+     * {@inheritDoc}\n+     * @throws \\RuntimeException\n+     *\/\n+    public function getLocalChanges(PackageInterface $package, $targetDir)\n+    {\n+        $prevIO = $this->io;\n+        $prevProgress = $this->outputProgress;\n+\n+        $this->io = new NullIO;\n+        $this->io->loadConfiguration($this->config);\n+        $this->outputProgress = false;\n+        $e = null;\n+\n+        try {\n+            $this->download($package, $targetDir.'_compare', false);\n+\n+            $comparer = new Comparer();\n+            $comparer->setSource($targetDir.'_compare');\n+            $comparer->setUpdate($targetDir);\n+            $comparer->doCompare();\n+            $output = $comparer->getChanged(true, true);\n+            $this->filesystem->removeDirectory($targetDir.'_compare');\n+        } catch (\\Exception $e) {\n+        }\n+\n+        $this->io = $prevIO;\n+        $this->outputProgress = $prevProgress;\n+\n+        if ($e) {\n+            throw $e;\n+        }\n+\n+        return trim($output);\n+    }\n }"
        },
        {
            "sha": "135e973e0fb7ef6eaeab3858a82de63b04c8e8da",
            "filename": "src\/Composer\/Downloader\/FossilDownloader.php",
            "status": "modified",
            "additions": 4,
            "deletions": 5,
            "changes": 9,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/FossilDownloader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/FossilDownloader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/FossilDownloader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -31,12 +31,12 @@ public function doDownload(PackageInterface $package, $path, $url)\n         $url = ProcessExecutor::escape($url);\n         $ref = ProcessExecutor::escape($package->getSourceReference());\n         $repoFile = $path . '.fossil';\n-        $this->io->writeError(\" Cloning \".$package->getSourceReference());\n+        $this->io->writeError(\"Cloning \".$package->getSourceReference());\n         $command = sprintf('fossil clone %s %s', $url, ProcessExecutor::escape($repoFile));\n         if (0 !== $this->process->execute($command, $ignoredOutput)) {\n             throw new \\RuntimeException('Failed to execute ' . $command . \"\\n\\n\" . $this->process->getErrorOutput());\n         }\n-        $command = sprintf('fossil open %s', ProcessExecutor::escape($repoFile));\n+        $command = sprintf('fossil open %s --nested', ProcessExecutor::escape($repoFile));\n         if (0 !== $this->process->execute($command, $ignoredOutput, realpath($path))) {\n             throw new \\RuntimeException('Failed to execute ' . $command . \"\\n\\n\" . $this->process->getErrorOutput());\n         }\n@@ -87,7 +87,7 @@ public function getLocalChanges(PackageInterface $package, $path)\n      *\/\n     protected function getCommitLogs($fromReference, $toReference, $path)\n     {\n-        $command = sprintf('fossil timeline -t ci -W 0 -n 0 before %s', $toReference);\n+        $command = sprintf('fossil timeline -t ci -W 0 -n 0 before %s', ProcessExecutor::escape($toReference));\n \n         if (0 !== $this->process->execute($command, $output, realpath($path))) {\n             throw new \\RuntimeException('Failed to execute ' . $command . \"\\n\\n\" . $this->process->getErrorOutput());\n@@ -97,8 +97,7 @@ protected function getCommitLogs($fromReference, $toReference, $path)\n         $match = '\/\\d\\d:\\d\\d:\\d\\d\\s+\\[' . $toReference . '\\]\/';\n \n         foreach ($this->process->splitLines($output) as $line) {\n-            if (preg_match($match, $line))\n-            {\n+            if (preg_match($match, $line)) {\n                 break;\n             }\n             $log .= $line;"
        },
        {
            "sha": "869d5330bad4295567a9437d5dd8a1c5a5543498",
            "filename": "src\/Composer\/Downloader\/GitDownloader.php",
            "status": "modified",
            "additions": 31,
            "deletions": 19,
            "changes": 50,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/GitDownloader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/GitDownloader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/GitDownloader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,13 +12,13 @@\n \n namespace Composer\\Downloader;\n \n+use Composer\\Config;\n+use Composer\\IO\\IOInterface;\n use Composer\\Package\\PackageInterface;\n+use Composer\\Util\\Filesystem;\n use Composer\\Util\\Git as GitUtil;\n use Composer\\Util\\Platform;\n use Composer\\Util\\ProcessExecutor;\n-use Composer\\IO\\IOInterface;\n-use Composer\\Util\\Filesystem;\n-use Composer\\Config;\n \n \/**\n  * @author Jordi Boggiano <j.boggiano@seld.be>\n@@ -43,29 +43,41 @@ public function doDownload(PackageInterface $package, $path, $url)\n         GitUtil::cleanEnv();\n         $path = $this->normalizePath($path);\n         $cachePath = $this->config->get('cache-vcs-dir').'\/'.preg_replace('{[^a-z0-9.]}i', '-', $url).'\/';\n-        $cacheOptions = '';\n         $ref = $package->getSourceReference();\n         $flag = Platform::isWindows() ? '\/D ' : '';\n \n         \/\/ --dissociate option is only available since git 2.3.0-rc0\n         $gitVersion = $this->gitUtil->getVersion();\n-        $msg = \" Cloning \".$this->getShortHash($ref);\n+        $msg = \"Cloning \".$this->getShortHash($ref);\n+\n+        $command = 'git clone --no-checkout %url% %path% && cd '.$flag.'%path% && git remote add composer %url% && git fetch composer';\n         if ($gitVersion && version_compare($gitVersion, '2.3.0-rc0', '>=')) {\n             $this->io->writeError('', true, IOInterface::DEBUG);\n             $this->io->writeError(sprintf('    Cloning to cache at %s', ProcessExecutor::escape($cachePath)), true, IOInterface::DEBUG);\n             try {\n-                $this->gitUtil->syncMirror($url, $cachePath);\n+                $this->gitUtil->fetchRefOrSyncMirror($url, $cachePath, $ref);\n                 if (is_dir($cachePath)) {\n-                    $cacheOptions = sprintf('--dissociate --reference %s ', ProcessExecutor::escape($cachePath));\n-                    $msg = \" Cloning \".$this->getShortHash($ref).' from cache';\n+                    $command =\n+                        'git clone --no-checkout %cachePath% %path% --dissociate --reference %cachePath% '\n+                        . '&& cd '.$flag.'%path% '\n+                        . '&& git remote set-url origin %url% && git remote add composer %url%';\n+                    $msg = \"Cloning \".$this->getShortHash($ref).' from cache';\n                 }\n-            } catch (\\RuntimeException $e) {}\n+            } catch (\\RuntimeException $e) {\n+            }\n         }\n-        $command = 'git clone --no-checkout %s %s '.$cacheOptions.'&& cd '.$flag.'%2$s && git remote add composer %1$s && git fetch composer';\n         $this->io->writeError($msg);\n \n-        $commandCallable = function ($url) use ($ref, $path, $command) {\n-            return sprintf($command, ProcessExecutor::escape($url), ProcessExecutor::escape($path), ProcessExecutor::escape($ref));\n+        $commandCallable = function ($url) use ($path, $command, $cachePath) {\n+            return str_replace(\n+                array('%url%', '%path%', '%cachePath%'),\n+                array(\n+                    ProcessExecutor::escape($url),\n+                    ProcessExecutor::escape($path),\n+                    ProcessExecutor::escape($cachePath),\n+                ),\n+                $command\n+            );\n         };\n \n         $this->gitUtil->runCommand($commandCallable, $url, $path, true);\n@@ -106,10 +118,10 @@ public function doUpdate(PackageInterface $initial, PackageInterface $target, $p\n \n         $ref = $target->getSourceReference();\n         $this->io->writeError(\" Checking out \".$this->getShortHash($ref));\n-        $command = 'git remote set-url composer %s && git rev-parse --quiet --verify %s^{commit} || (git fetch composer && git fetch --tags composer)';\n+        $command = 'git remote set-url composer %s && git rev-parse --quiet --verify %s || (git fetch composer && git fetch --tags composer)';\n \n         $commandCallable = function ($url) use ($command, $ref) {\n-            return sprintf($command, ProcessExecutor::escape($url), ProcessExecutor::escape($ref));\n+            return sprintf($command, ProcessExecutor::escape($url), ProcessExecutor::escape($ref.'^{commit}'));\n         };\n \n         $this->gitUtil->runCommand($commandCallable, $url, $path);\n@@ -251,7 +263,7 @@ protected function cleanChanges(PackageInterface $package, $path, $update)\n         $this->io->writeError('    <error>The package has modified files:<\/error>');\n         $this->io->writeError(array_slice($changes, 0, 10));\n         if (count($changes) > 10) {\n-            $this->io->writeError('    <info>'.count($changes) - 10 . ' more files modified, choose \"v\" to view the full list<\/info>');\n+            $this->io->writeError('    <info>' . (count($changes) - 10) . ' more files modified, choose \"v\" to view the full list<\/info>');\n         }\n \n         while (true) {\n@@ -411,7 +423,7 @@ protected function setPushUrl($path, $url)\n     protected function getCommitLogs($fromReference, $toReference, $path)\n     {\n         $path = $this->normalizePath($path);\n-        $command = sprintf('git log %s..%s --pretty=format:\"%%h - %%an: %%s\"', $fromReference, $toReference);\n+        $command = sprintf('git log %s..%s --pretty=format:\"%%h - %%an: %%s\"', ProcessExecutor::escape($fromReference), ProcessExecutor::escape($toReference));\n \n         if (0 !== $this->process->execute($command, $output, $path)) {\n             throw new \\RuntimeException('Failed to execute ' . $command . \"\\n\\n\" . $this->process->getErrorOutput());\n@@ -421,7 +433,7 @@ protected function getCommitLogs($fromReference, $toReference, $path)\n     }\n \n     \/**\n-     * @param $path\n+     * @param string $path\n      * @throws \\RuntimeException\n      *\/\n     protected function discardChanges($path)\n@@ -435,7 +447,7 @@ protected function discardChanges($path)\n     }\n \n     \/**\n-     * @param $path\n+     * @param string $path\n      * @throws \\RuntimeException\n      *\/\n     protected function stashChanges($path)\n@@ -449,7 +461,7 @@ protected function stashChanges($path)\n     }\n \n     \/**\n-     * @param $path\n+     * @param string $path\n      * @throws \\RuntimeException\n      *\/\n     protected function viewDiff($path)"
        },
        {
            "sha": "2921cc4b733eeed96fadf5da5f2f391053acfba4",
            "filename": "src\/Composer\/Downloader\/HgDownloader.php",
            "status": "modified",
            "additions": 16,
            "deletions": 17,
            "changes": 33,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/HgDownloader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/HgDownloader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/HgDownloader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -14,6 +14,7 @@\n \n use Composer\\Package\\PackageInterface;\n use Composer\\Util\\ProcessExecutor;\n+use Composer\\Util\\Hg as HgUtils;\n \n \/**\n  * @author Per Bernhardt <plb@webfactory.de>\n@@ -25,16 +26,15 @@ class HgDownloader extends VcsDownloader\n      *\/\n     public function doDownload(PackageInterface $package, $path, $url)\n     {\n-        \/\/ Ensure we are allowed to use this URL by config\n-        $this->config->prohibitUrlByConfig($url, $this->io);\n+        $hgUtils = new HgUtils($this->io, $this->config, $this->process);\n+\n+        $cloneCommand = function ($url) use ($path) {\n+            return sprintf('hg clone %s %s', ProcessExecutor::escape($url), ProcessExecutor::escape($path));\n+        };\n+\n+        $hgUtils->runCommand($cloneCommand, $url, $path);\n \n-        $url = ProcessExecutor::escape($url);\n         $ref = ProcessExecutor::escape($package->getSourceReference());\n-        $this->io->writeError(\" Cloning \".$package->getSourceReference());\n-        $command = sprintf('hg clone %s %s', $url, ProcessExecutor::escape($path));\n-        if (0 !== $this->process->execute($command, $ignoredOutput)) {\n-            throw new \\RuntimeException('Failed to execute ' . $command . \"\\n\\n\" . $this->process->getErrorOutput());\n-        }\n         $command = sprintf('hg up %s', $ref);\n         if (0 !== $this->process->execute($command, $ignoredOutput, realpath($path))) {\n             throw new \\RuntimeException('Failed to execute ' . $command . \"\\n\\n\" . $this->process->getErrorOutput());\n@@ -46,21 +46,20 @@ public function doDownload(PackageInterface $package, $path, $url)\n      *\/\n     public function doUpdate(PackageInterface $initial, PackageInterface $target, $path, $url)\n     {\n-        \/\/ Ensure we are allowed to use this URL by config\n-        $this->config->prohibitUrlByConfig($url, $this->io);\n+        $hgUtils = new HgUtils($this->io, $this->config, $this->process);\n \n-        $url = ProcessExecutor::escape($url);\n-        $ref = ProcessExecutor::escape($target->getSourceReference());\n+        $ref = $target->getSourceReference();\n         $this->io->writeError(\" Updating to \".$target->getSourceReference());\n \n         if (!$this->hasMetadataRepository($path)) {\n             throw new \\RuntimeException('The .hg directory is missing from '.$path.', see https:\/\/getcomposer.org\/commit-deps for more information');\n         }\n \n-        $command = sprintf('hg pull %s && hg up %s', $url, $ref);\n-        if (0 !== $this->process->execute($command, $ignoredOutput, realpath($path))) {\n-            throw new \\RuntimeException('Failed to execute ' . $command . \"\\n\\n\" . $this->process->getErrorOutput());\n-        }\n+        $command = function ($url) use ($ref) {\n+            return sprintf('hg pull %s && hg up %s', ProcessExecutor::escape($url), ProcessExecutor::escape($ref));\n+        };\n+\n+        $hgUtils->runCommand($command, $url, $path);\n     }\n \n     \/**\n@@ -82,7 +81,7 @@ public function getLocalChanges(PackageInterface $package, $path)\n      *\/\n     protected function getCommitLogs($fromReference, $toReference, $path)\n     {\n-        $command = sprintf('hg log -r %s:%s --style compact', $fromReference, $toReference);\n+        $command = sprintf('hg log -r %s:%s --style compact', ProcessExecutor::escape($fromReference), ProcessExecutor::escape($toReference));\n \n         if (0 !== $this->process->execute($command, $output, realpath($path))) {\n             throw new \\RuntimeException('Failed to execute ' . $command . \"\\n\\n\" . $this->process->getErrorOutput());"
        },
        {
            "sha": "e7084bd973da2f3e43891d2bbfd7ed8b4b714b51",
            "filename": "src\/Composer\/Downloader\/PathDownloader.php",
            "status": "modified",
            "additions": 24,
            "deletions": 10,
            "changes": 34,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/PathDownloader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/PathDownloader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/PathDownloader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,12 +12,14 @@\n \n namespace Composer\\Downloader;\n \n+use Composer\\Package\\Archiver\\ArchivableFilesFinder;\n use Composer\\Package\\Dumper\\ArrayDumper;\n use Composer\\Package\\PackageInterface;\n use Composer\\Package\\Version\\VersionGuesser;\n use Composer\\Package\\Version\\VersionParser;\n use Composer\\Util\\Platform;\n use Composer\\Util\\ProcessExecutor;\n+use Composer\\Util\\Filesystem as ComposerFilesystem;\n use Symfony\\Component\\Filesystem\\Exception\\IOException;\n use Symfony\\Component\\Filesystem\\Filesystem;\n \n@@ -30,7 +32,7 @@\n class PathDownloader extends FileDownloader implements VcsCapableDownloaderInterface\n {\n     const STRATEGY_SYMLINK = 10;\n-    const STRATEGY_MIRROR  = 20;\n+    const STRATEGY_MIRROR = 20;\n \n     \/**\n      * {@inheritdoc}\n@@ -41,14 +43,22 @@ public function download(PackageInterface $package, $path, $output = true)\n         $realUrl = realpath($url);\n         if (false === $realUrl || !file_exists($realUrl) || !is_dir($realUrl)) {\n             throw new \\RuntimeException(sprintf(\n-                'Source path \"%s\" is not found for package %s', $url, $package->getName()\n+                'Source path \"%s\" is not found for package %s',\n+                $url,\n+                $package->getName()\n             ));\n         }\n \n         if (strpos(realpath($path) . DIRECTORY_SEPARATOR, $realUrl . DIRECTORY_SEPARATOR) === 0) {\n+            \/\/ IMPORTANT NOTICE: If you wish to change this, don't. You are wasting your time and ours.\n+            \/\/\n+            \/\/ Please see https:\/\/github.com\/composer\/composer\/pull\/5974 and https:\/\/github.com\/composer\/composer\/pull\/6174\n+            \/\/ for previous attempts that were shut down because they did not work well enough or introduced too many risks.\n             throw new \\RuntimeException(sprintf(\n                 'Package %s cannot install to \"%s\" inside its source at \"%s\"',\n-                $package->getName(), realpath($path), $realUrl\n+                $package->getName(),\n+                realpath($path),\n+                $realUrl\n             ));\n         }\n \n@@ -77,7 +87,7 @@ public function download(PackageInterface $package, $path, $output = true)\n \n         if ($output) {\n             $this->io->writeError(sprintf(\n-                '  - Installing <info>%s<\/info> (<comment>%s<\/comment>)',\n+                '  - Installing <info>%s<\/info> (<comment>%s<\/comment>): ',\n                 $package->getName(),\n                 $package->getFullPrettyVersion()\n             ), false);\n@@ -88,17 +98,17 @@ public function download(PackageInterface $package, $path, $output = true)\n             try {\n                 if (Platform::isWindows()) {\n                     \/\/ Implement symlinks as NTFS junctions on Windows\n+                    $this->io->writeError(sprintf('Junctioning from %s', $url), false);\n                     $this->filesystem->junction($realUrl, $path);\n-                    $this->io->writeError(sprintf(' Junctioned from %s', $url), false);\n                 } else {\n                     $absolutePath = $path;\n                     if (!$this->filesystem->isAbsolutePath($absolutePath)) {\n                         $absolutePath = getcwd() . DIRECTORY_SEPARATOR . $path;\n                     }\n                     $shortestPath = $this->filesystem->findShortestPath($absolutePath, $realUrl);\n                     $path = rtrim($path, \"\/\");\n+                    $this->io->writeError(sprintf('Symlinking from %s', $url), false);\n                     $fileSystem->symlink($shortestPath, $path);\n-                    $this->io->writeError(sprintf(' Symlinked from %s', $url), false);\n                 }\n             } catch (IOException $e) {\n                 if (in_array(self::STRATEGY_MIRROR, $allowedStrategies)) {\n@@ -114,8 +124,12 @@ public function download(PackageInterface $package, $path, $output = true)\n \n         \/\/ Fallback if symlink failed or if symlink is not allowed for the package\n         if (self::STRATEGY_MIRROR == $currentStrategy) {\n-            $fileSystem->mirror($realUrl, $path);\n-            $this->io->writeError(sprintf('%s Mirrored from %s', $isFallback ? '   ' : '', $url), false);\n+            $fs = new ComposerFilesystem();\n+            $realUrl = $fs->normalizePath($realUrl);\n+\n+            $this->io->writeError(sprintf('%sMirroring from %s', $isFallback ? '    ' : '', $url), false);\n+            $iterator = new ArchivableFilesFinder($realUrl, array());\n+            $fileSystem->mirror($realUrl, $path, $iterator);\n         }\n \n         $this->io->writeError('');\n@@ -136,11 +150,11 @@ public function remove(PackageInterface $package, $path, $output = true)\n                 $this->io->writeError(\"  - Removing junction for <info>\" . $package->getName() . \"<\/info> (<comment>\" . $package->getFullPrettyVersion() . \"<\/comment>)\");\n             }\n             if (!$this->filesystem->removeJunction($path)) {\n-                $this->io->writeError(\"    <warn>Could not remove junction at \" . $path . \" - is another process locking it?<\/warn>\");\n+                $this->io->writeError(\"    <warning>Could not remove junction at \" . $path . \" - is another process locking it?<\/warning>\");\n                 throw new \\RuntimeException('Could not reliably remove junction for package ' . $package->getName());\n             }\n         } else {\n-            parent::remove($package, $path);\n+            parent::remove($package, $path, $output);\n         }\n     }\n "
        },
        {
            "sha": "5eaf3edcdcb7b14804855790d496c8f1219e4731",
            "filename": "src\/Composer\/Downloader\/PearPackageExtractor.php",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/PearPackageExtractor.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/PearPackageExtractor.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/PearPackageExtractor.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -73,8 +73,8 @@ public function extractTo($target, array $roles = array('php' => '\/', 'script' =\n      * Perform copy actions on files\n      *\n      * @param array $files array of copy actions ('from', 'to') with relative paths\n-     * @param $source string path to source dir.\n-     * @param $target string path to destination dir\n+     * @param string $source path to source dir.\n+     * @param string $target path to destination dir\n      * @param array $roles array [role => roleRoot] relative root for files having that role\n      * @param array $vars  list of values can be used for replacement tasks\n      *\/\n@@ -135,7 +135,7 @@ private function copyFile($from, $to, $tasks, $vars)\n      *\/\n     private function buildCopyActions($source, array $roles, $vars)\n     {\n-        \/** @var $package \\SimpleXmlElement *\/\n+        \/** @var \\SimpleXmlElement $package *\/\n         $package = simplexml_load_string(file_get_contents($this->combine($source, 'package.xml')));\n         if (false === $package) {\n             throw new \\RuntimeException('Package definition file is not valid.');"
        },
        {
            "sha": "a472b84c6131d0dfc1c0b5fbc5fd4334dd44d577",
            "filename": "src\/Composer\/Downloader\/PerforceDownloader.php",
            "status": "modified",
            "additions": 2,
            "deletions": 4,
            "changes": 6,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/PerforceDownloader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/PerforceDownloader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/PerforceDownloader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -32,7 +32,7 @@ public function doDownload(PackageInterface $package, $path, $url)\n         $ref = $package->getSourceReference();\n         $label = $this->getLabelFromSourceReference($ref);\n \n-        $this->io->writeError(' Cloning ' . $ref);\n+        $this->io->writeError('Cloning ' . $ref);\n         $this->initPerforce($package, $path, $url);\n         $this->perforce->setStream($ref);\n         $this->perforce->p4Login();\n@@ -96,9 +96,7 @@ public function getLocalChanges(PackageInterface $package, $path)\n      *\/\n     protected function getCommitLogs($fromReference, $toReference, $path)\n     {\n-        $commitLogs = $this->perforce->getCommitLogs($fromReference, $toReference);\n-\n-        return $commitLogs;\n+        return $this->perforce->getCommitLogs($fromReference, $toReference);\n     }\n \n     public function setPerforce($perforce)"
        },
        {
            "sha": "e23958164f7a5c63b4d4eb2a8bbaf76510ac0c86",
            "filename": "src\/Composer\/Downloader\/SvnDownloader.php",
            "status": "modified",
            "additions": 39,
            "deletions": 13,
            "changes": 52,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/SvnDownloader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/SvnDownloader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/SvnDownloader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -15,6 +15,7 @@\n use Composer\\Package\\PackageInterface;\n use Composer\\Util\\Svn as SvnUtil;\n use Composer\\Repository\\VcsRepository;\n+use Composer\\Util\\ProcessExecutor;\n \n \/**\n  * @author Ben Bieker <mail@ben-bieker.de>\n@@ -56,11 +57,10 @@ public function doUpdate(PackageInterface $initial, PackageInterface $target, $p\n             throw new \\RuntimeException('The .svn directory is missing from '.$path.', see https:\/\/getcomposer.org\/commit-deps for more information');\n         }\n \n+        $util = new SvnUtil($url, $this->io, $this->config);\n         $flags = \"\";\n-        if (0 === $this->process->execute('svn --version', $output)) {\n-            if (preg_match('{(\\d+(?:\\.\\d+)+)}', $output, $match) && version_compare($match[1], '1.7.0', '>=')) {\n-                $flags .= ' --ignore-ancestry';\n-            }\n+        if (version_compare($util->binaryVersion(), '1.7.0', '>=')) {\n+            $flags .= ' --ignore-ancestry';\n         }\n \n         $this->io->writeError(\" Checking out \" . $ref);\n@@ -126,10 +126,17 @@ protected function cleanChanges(PackageInterface $package, $path, $update)\n         $changes = array_map(function ($elem) {\n             return '    '.$elem;\n         }, preg_split('{\\s*\\r?\\n\\s*}', $changes));\n-        $this->io->writeError('    <error>The package has modified files:<\/error>');\n+        $countChanges = count($changes);\n+        $this->io->writeError(sprintf('    <error>The package has modified file%s:<\/error>', $countChanges === 1 ? '' : 's'));\n         $this->io->writeError(array_slice($changes, 0, 10));\n-        if (count($changes) > 10) {\n-            $this->io->writeError('    <info>'.count($changes) - 10 . ' more files modified, choose \"v\" to view the full list<\/info>');\n+        if ($countChanges > 10) {\n+            $remaingChanges = $countChanges - 10;\n+            $this->io->writeError(\n+                sprintf(\n+                    '    <info>'.$remaingChanges.' more file%s modified, choose \"v\" to view the full list<\/info>',\n+                    $remaingChanges === 1 ? '' : 's'\n+                )\n+            );\n         }\n \n         while (true) {\n@@ -164,22 +171,41 @@ protected function cleanChanges(PackageInterface $package, $path, $update)\n     protected function getCommitLogs($fromReference, $toReference, $path)\n     {\n         if (preg_match('{.*@(\\d+)$}', $fromReference) && preg_match('{.*@(\\d+)$}', $toReference)) {\n+            \/\/ retrieve the svn base url from the checkout folder\n+            $command = sprintf('svn info --non-interactive --xml %s', ProcessExecutor::escape($path));\n+            if (0 !== $this->process->execute($command, $output, $path)) {\n+                throw new \\RuntimeException(\n+                    'Failed to execute ' . $command . \"\\n\\n\" . $this->process->getErrorOutput()\n+                );\n+            }\n+\n+            $urlPattern = '#<url>(.*)<\/url>#';\n+            if (preg_match($urlPattern, $output, $matches)) {\n+                $baseUrl = $matches[1];\n+            } else {\n+                throw new \\RuntimeException(\n+                    'Unable to determine svn url for path '. $path\n+                );\n+            }\n+\n             \/\/ strip paths from references and only keep the actual revision\n             $fromRevision = preg_replace('{.*@(\\d+)$}', '$1', $fromReference);\n             $toRevision = preg_replace('{.*@(\\d+)$}', '$1', $toReference);\n \n-            $command = sprintf('svn log -r%s:%s --incremental', $fromRevision, $toRevision);\n+            $command = sprintf('svn log -r%s:%s --incremental', ProcessExecutor::escape($fromRevision), ProcessExecutor::escape($toRevision));\n \n-            if (0 !== $this->process->execute($command, $output, $path)) {\n+            $util = new SvnUtil($baseUrl, $this->io, $this->config);\n+            $util->setCacheCredentials($this->cacheCredentials);\n+            try {\n+                return $util->executeLocal($command, $path, null, $this->io->isVerbose());\n+            } catch (\\RuntimeException $e) {\n                 throw new \\RuntimeException(\n-                    'Failed to execute ' . $command . \"\\n\\n\" . $this->process->getErrorOutput()\n+                    'Failed to execute ' . $command . \"\\n\\n\".$e->getMessage()\n                 );\n             }\n-        } else {\n-            $output = \"Could not retrieve changes between $fromReference and $toReference due to missing revision information\";\n         }\n \n-        return $output;\n+        return \"Could not retrieve changes between $fromReference and $toReference due to missing revision information\";\n     }\n \n     protected function discardChanges($path)"
        },
        {
            "sha": "39203d5a5d5bba52ec8b1b319da63b3d85da87c6",
            "filename": "src\/Composer\/Downloader\/VcsCapableDownloaderInterface.php",
            "status": "modified",
            "additions": 0,
            "deletions": 1,
            "changes": 1,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/VcsCapableDownloaderInterface.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/VcsCapableDownloaderInterface.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/VcsCapableDownloaderInterface.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -21,7 +21,6 @@\n  *\/\n interface VcsCapableDownloaderInterface\n {\n-\n     \/**\n      * Gets the VCS Reference for the package at path\n      *"
        },
        {
            "sha": "aa666058e7d03b5c7bf1ea2672cf8c0c4a7364b0",
            "filename": "src\/Composer\/Downloader\/VcsDownloader.php",
            "status": "modified",
            "additions": 3,
            "deletions": 2,
            "changes": 5,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/VcsDownloader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/VcsDownloader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/VcsDownloader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -60,7 +60,7 @@ public function download(PackageInterface $package, $path)\n             throw new \\InvalidArgumentException('Package '.$package->getPrettyName().' is missing reference information');\n         }\n \n-        $this->io->writeError(\"  - Installing <info>\" . $package->getName() . \"<\/info> (<comment>\" . $package->getFullPrettyVersion() . \"<\/comment>)\", false);\n+        $this->io->writeError(\"  - Installing <info>\" . $package->getName() . \"<\/info> (<comment>\" . $package->getFullPrettyVersion() . \"<\/comment>): \", false);\n         $this->filesystem->emptyDirectory($path);\n \n         $urls = $package->getSourceUrls();\n@@ -130,7 +130,8 @@ public function update(PackageInterface $initial, PackageInterface $target, $pat\n             $to = $target->getFullPrettyVersion();\n         }\n \n-        $this->io->writeError(\"  - Updating <info>\" . $name . \"<\/info> (<comment>\" . $from . \"<\/comment> => <comment>\" . $to . \"<\/comment>)\", false);\n+        $actionName = VersionParser::isUpgrade($initial->getVersion(), $target->getVersion()) ? 'Updating' : 'Downgrading';\n+        $this->io->writeError(\"  - \" . $actionName . \" <info>\" . $name . \"<\/info> (<comment>\" . $from . \"<\/comment> => <comment>\" . $to . \"<\/comment>): \", false);\n \n         $this->cleanChanges($initial, $path, true);\n         $urls = $target->getSourceUrls();"
        },
        {
            "sha": "6534db3d8d0b066b849a5e2132b6698aad1dccbb",
            "filename": "src\/Composer\/Downloader\/ZipDownloader.php",
            "status": "modified",
            "additions": 122,
            "deletions": 24,
            "changes": 146,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/ZipDownloader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Downloader\/ZipDownloader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Downloader\/ZipDownloader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -29,8 +29,12 @@\n  *\/\n class ZipDownloader extends ArchiveDownloader\n {\n-    protected $process;\n     protected static $hasSystemUnzip;\n+    private static $hasZipArchive;\n+    private static $isWindows;\n+\n+    protected $process;\n+    private $zipArchiveObject;\n \n     public function __construct(IOInterface $io, Config $config, EventDispatcher $eventDispatcher = null, Cache $cache = null, ProcessExecutor $process = null, RemoteFilesystem $rfs = null)\n     {\n@@ -48,53 +52,147 @@ public function download(PackageInterface $package, $path, $output = true)\n             self::$hasSystemUnzip = (bool) $finder->find('unzip');\n         }\n \n-        if (!class_exists('ZipArchive') && !self::$hasSystemUnzip) {\n+        if (null === self::$hasZipArchive) {\n+            self::$hasZipArchive = class_exists('ZipArchive');\n+        }\n+\n+        if (!self::$hasZipArchive && !self::$hasSystemUnzip) {\n             \/\/ php.ini path is added to the error message to help users find the correct file\n             $iniMessage = IniHelper::getMessage();\n             $error = \"The zip extension and unzip command are both missing, skipping.\\n\" . $iniMessage;\n \n             throw new \\RuntimeException($error);\n         }\n \n+        if (null === self::$isWindows) {\n+            self::$isWindows = Platform::isWindows();\n+\n+            if (!self::$isWindows && !self::$hasSystemUnzip) {\n+                $this->io->writeError(\"<warning>As there is no 'unzip' command installed zip files are being unpacked using the PHP zip extension.<\/warning>\");\n+                $this->io->writeError(\"<warning>This may cause invalid reports of corrupted archives. Besides, any UNIX permissions (e.g. executable) defined in the archives will be lost.<\/warning>\");\n+                $this->io->writeError(\"<warning>Installing 'unzip' may remediate them.<\/warning>\");\n+            }\n+        }\n+\n         return parent::download($package, $path, $output);\n     }\n \n-    protected function extract($file, $path)\n+    \/**\n+     * extract $file to $path with \"unzip\" command\n+     *\n+     * @param  string $file         File to extract\n+     * @param  string $path         Path where to extract file\n+     * @param  bool   $isLastChance If true it is called as a fallback and should throw an exception\n+     * @return bool   Success status\n+     *\/\n+    protected function extractWithSystemUnzip($file, $path, $isLastChance)\n     {\n+        if (!self::$hasZipArchive) {\n+            \/\/ Force Exception throwing if the Other alternative is not available\n+            $isLastChance = true;\n+        }\n+\n+        if (!self::$hasSystemUnzip && !$isLastChance) {\n+            \/\/ This was call as the favorite extract way, but is not available\n+            \/\/ We switch to the alternative\n+            return $this->extractWithZipArchive($file, $path, true);\n+        }\n+\n         $processError = null;\n+        \/\/ When called after a ZipArchive failed, perhaps there is some files to overwrite\n+        $overwrite = $isLastChance ? '-o' : '';\n+\n+        $command = 'unzip -qq '.$overwrite.' '.ProcessExecutor::escape($file).' -d '.ProcessExecutor::escape($path);\n \n-        if (self::$hasSystemUnzip && !(class_exists('ZipArchive') && Platform::isWindows())) {\n-            $command = 'unzip -qq '.ProcessExecutor::escape($file).' -d '.ProcessExecutor::escape($path);\n-            if (!Platform::isWindows()) {\n-                $command .= ' && chmod -R u+w ' . ProcessExecutor::escape($path);\n+        try {\n+            if (0 === $this->process->execute($command, $ignoredOutput)) {\n+                return true;\n             }\n \n-            try {\n-                if (0 === $this->process->execute($command, $ignoredOutput)) {\n-                    return;\n-                }\n+            $processError = new \\RuntimeException('Failed to execute ' . $command . \"\\n\\n\" . $this->process->getErrorOutput());\n+        } catch (\\Exception $e) {\n+            $processError = $e;\n+        }\n \n-                $processError = 'Failed to execute ' . $command . \"\\n\\n\" . $this->process->getErrorOutput();\n-            } catch (\\Exception $e) {\n-                $processError = 'Failed to execute ' . $command . \"\\n\\n\" . $e->getMessage();\n-            }\n+        if ($isLastChance) {\n+            throw $processError;\n+        }\n \n-            if (!class_exists('ZipArchive')) {\n-                throw new \\RuntimeException($processError);\n-            }\n+        $this->io->writeError('    '.$processError->getMessage());\n+        $this->io->writeError('    The archive may contain identical file names with different capitalization (which fails on case insensitive filesystems)');\n+        $this->io->writeError('    Unzip with unzip command failed, falling back to ZipArchive class');\n+\n+        return $this->extractWithZipArchive($file, $path, true);\n+    }\n+\n+    \/**\n+     * extract $file to $path with ZipArchive\n+     *\n+     * @param  string $file         File to extract\n+     * @param  string $path         Path where to extract file\n+     * @param  bool   $isLastChance If true it is called as a fallback and should throw an exception\n+     * @return bool   Success status\n+     *\/\n+    protected function extractWithZipArchive($file, $path, $isLastChance)\n+    {\n+        if (!self::$hasSystemUnzip) {\n+            \/\/ Force Exception throwing if the Other alternative is not available\n+            $isLastChance = true;\n         }\n \n-        $zipArchive = new ZipArchive();\n+        if (!self::$hasZipArchive && !$isLastChance) {\n+            \/\/ This was call as the favorite extract way, but is not available\n+            \/\/ We switch to the alternative\n+            return $this->extractWithSystemUnzip($file, $path, true);\n+        }\n+\n+        $processError = null;\n+        $zipArchive = $this->zipArchiveObject ?: new ZipArchive();\n+\n+        try {\n+            if (true === ($retval = $zipArchive->open($file))) {\n+                $extractResult = $zipArchive->extractTo($path);\n+\n+                if (true === $extractResult) {\n+                    $zipArchive->close();\n \n-        if (true !== ($retval = $zipArchive->open($file))) {\n-            throw new \\UnexpectedValueException(rtrim($this->getErrorMessage($retval, $file).\"\\n\".$processError), $retval);\n+                    return true;\n+                }\n+\n+                $processError = new \\RuntimeException(rtrim(\"There was an error extracting the ZIP file, it is either corrupted or using an invalid format.\\n\"));\n+            } else {\n+                $processError = new \\UnexpectedValueException(rtrim($this->getErrorMessage($retval, $file).\"\\n\"), $retval);\n+            }\n+        } catch (\\ErrorException $e) {\n+            $processError = new \\RuntimeException('The archive may contain identical file names with different capitalization (which fails on case insensitive filesystems): '.$e->getMessage(), 0, $e);\n+        } catch (\\Exception $e) {\n+            $processError = $e;\n         }\n \n-        if (true !== $zipArchive->extractTo($path)) {\n-            throw new \\RuntimeException(rtrim(\"There was an error extracting the ZIP file, it is either corrupted or using an invalid format.\\n\".$processError));\n+        if ($isLastChance) {\n+            throw $processError;\n         }\n \n-        $zipArchive->close();\n+        $this->io->writeError('    '.$processError->getMessage());\n+        $this->io->writeError('    Unzip with ZipArchive class failed, falling back to unzip command');\n+\n+        return $this->extractWithSystemUnzip($file, $path, true);\n+    }\n+\n+    \/**\n+     * extract $file to $path\n+     *\n+     * @param string $file File to extract\n+     * @param string $path Path where to extract file\n+     *\/\n+    public function extract($file, $path)\n+    {\n+        \/\/ Each extract calls its alternative if not available or fails\n+        if (self::$isWindows) {\n+            $this->extractWithZipArchive($file, $path, false);\n+        } else {\n+            $this->extractWithSystemUnzip($file, $path, false);\n+        }\n     }\n \n     \/**"
        },
        {
            "sha": "0fb978fd45cf6f9c39c001bb4e8730720ff7d03f",
            "filename": "src\/Composer\/EventDispatcher\/EventDispatcher.php",
            "status": "modified",
            "additions": 64,
            "deletions": 29,
            "changes": 93,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/EventDispatcher\/EventDispatcher.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/EventDispatcher\/EventDispatcher.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/EventDispatcher\/EventDispatcher.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -166,51 +166,60 @@ protected function doDispatch(Event $event)\n \n         $return = 0;\n         foreach ($listeners as $callable) {\n-            if (!is_string($callable) && is_callable($callable)) {\n+            if (!is_string($callable)) {\n+                if (!is_callable($callable)) {\n+                    $className = is_object($callable[0]) ? get_class($callable[0]) : $callable[0];\n+\n+                    throw new \\RuntimeException('Subscriber '.$className.'::'.$callable[1].' for event '.$event->getName().' is not callable, make sure the function is defined and public');\n+                }\n                 $event = $this->checkListenerExpectedEvent($callable, $event);\n                 $return = false === call_user_func($callable, $event) ? 1 : 0;\n             } elseif ($this->isComposerScript($callable)) {\n                 $this->io->writeError(sprintf('> %s: %s', $event->getName(), $callable), true, IOInterface::VERBOSE);\n-                $scriptName = substr($callable, 1);\n-                $args = $event->getArguments();\n+\n+                $script = explode(' ', substr($callable, 1));\n+                $scriptName = $script[0];\n+                unset($script[0]);\n+\n+                $args = array_merge($script, $event->getArguments());\n                 $flags = $event->getFlags();\n                 if (substr($callable, 0, 10) === '@composer ') {\n-                    $finder = new PhpExecutableFinder();\n-                    $phpPath = $finder->find();\n-                    if (!$phpPath) {\n-                        throw new \\RuntimeException('Failed to locate PHP binary to execute '.$scriptName);\n-                    }\n-                    $exec = $phpPath . '  ' . realpath($_SERVER['argv'][0]) . substr($callable, 9);\n+                    $exec = $this->getPhpExecCommand() . ' ' . ProcessExecutor::escape(getenv('COMPOSER_BINARY')) . substr($callable, 9);\n                     if (0 !== ($exitCode = $this->process->execute($exec))) {\n-                        $this->io->writeError(sprintf('<error>Script %s handling the %s event returned with error code '.$exitCode.'<\/error>', $callable, $event->getName()));\n+                        $this->io->writeError(sprintf('<error>Script %s handling the %s event returned with error code '.$exitCode.'<\/error>', $callable, $event->getName()), true, IOInterface::QUIET);\n \n                         throw new ScriptExecutionException('Error Output: '.$this->process->getErrorOutput(), $exitCode);\n                     }\n                 } else {\n                     if (!$this->getListeners(new Event($scriptName))) {\n-                        $this->io->writeError(sprintf('<warning>You made a reference to a non-existent script %s<\/warning>', $callable));\n+                        $this->io->writeError(sprintf('<warning>You made a reference to a non-existent script %s<\/warning>', $callable), true, IOInterface::QUIET);\n                     }\n \n-                    $return = $this->dispatch($scriptName, new Script\\Event($scriptName, $event->getComposer(), $event->getIO(), $event->isDevMode(), $args, $flags));\n+                    try {\n+                        $return = $this->dispatch($scriptName, new Script\\Event($scriptName, $event->getComposer(), $event->getIO(), $event->isDevMode(), $args, $flags));\n+                    } catch (ScriptExecutionException $e) {\n+                        $this->io->writeError(sprintf('<error>Script %s was called via %s<\/error>', $callable, $event->getName()), true, IOInterface::QUIET);\n+                        throw $e;\n+                    }\n                 }\n             } elseif ($this->isPhpScript($callable)) {\n                 $className = substr($callable, 0, strpos($callable, '::'));\n                 $methodName = substr($callable, strpos($callable, '::') + 2);\n \n                 if (!class_exists($className)) {\n-                    $this->io->writeError('<warning>Class '.$className.' is not autoloadable, can not call '.$event->getName().' script<\/warning>');\n+                    $this->io->writeError('<warning>Class '.$className.' is not autoloadable, can not call '.$event->getName().' script<\/warning>', true, IOInterface::QUIET);\n                     continue;\n                 }\n                 if (!is_callable($callable)) {\n-                    $this->io->writeError('<warning>Method '.$callable.' is not callable, can not call '.$event->getName().' script<\/warning>');\n+                    $this->io->writeError('<warning>Method '.$callable.' is not callable, can not call '.$event->getName().' script<\/warning>', true, IOInterface::QUIET);\n                     continue;\n                 }\n \n                 try {\n                     $return = false === $this->executeEventPhpScript($className, $methodName, $event) ? 1 : 0;\n                 } catch (\\Exception $e) {\n                     $message = \"Script %s handling the %s event terminated with an exception\";\n-                    $this->io->writeError('<error>'.sprintf($message, $callable, $event->getName()).'<\/error>');\n+                    $this->io->writeError('<error>'.sprintf($message, $callable, $event->getName()).'<\/error>', true, IOInterface::QUIET);\n                     throw $e;\n                 }\n             } else {\n@@ -234,16 +243,11 @@ protected function doDispatch(Event $event)\n                 }\n \n                 if (substr($exec, 0, 5) === '@php ') {\n-                    $finder = new PhpExecutableFinder();\n-                    $phpPath = $finder->find();\n-                    if (!$phpPath) {\n-                        throw new \\RuntimeException('Failed to locate PHP binary to execute \"'.$exec.'\"');\n-                    }\n-                    $exec = $phpPath . ' ' . substr($exec, 5);\n+                    $exec = $this->getPhpExecCommand() . ' ' . substr($exec, 5);\n                 }\n \n                 if (0 !== ($exitCode = $this->process->execute($exec))) {\n-                    $this->io->writeError(sprintf('<error>Script %s handling the %s event returned with error code '.$exitCode.'<\/error>', $callable, $event->getName()));\n+                    $this->io->writeError(sprintf('<error>Script %s handling the %s event returned with error code '.$exitCode.'<\/error>', $callable, $event->getName()), true, IOInterface::QUIET);\n \n                     throw new ScriptExecutionException('Error Output: '.$this->process->getErrorOutput(), $exitCode);\n                 }\n@@ -259,6 +263,22 @@ protected function doDispatch(Event $event)\n         return $return;\n     }\n \n+    protected function getPhpExecCommand()\n+    {\n+        $finder = new PhpExecutableFinder();\n+        $phpPath = $finder->find(false);\n+        if (!$phpPath) {\n+            throw new \\RuntimeException('Failed to locate PHP binary to execute '.$phpPath);\n+        }\n+        $phpArgs = $finder->findArguments();\n+        $phpArgs = $phpArgs ? ' ' . implode(' ', $phpArgs) : '';\n+        $allowUrlFOpenFlag = ' -d allow_url_fopen=' . ProcessExecutor::escape(ini_get('allow_url_fopen'));\n+        $disableFunctionsFlag = ' -d disable_functions=' . ProcessExecutor::escape(ini_get('disable_functions'));\n+        $memoryLimitFlag = ' -d memory_limit=' . ProcessExecutor::escape(ini_get('memory_limit'));\n+\n+        return ProcessExecutor::escape($phpPath) . $phpArgs . $allowUrlFOpenFlag . $disableFunctionsFlag . $memoryLimitFlag;\n+    }\n+\n     \/**\n      * @param string $className\n      * @param string $methodName\n@@ -310,22 +330,37 @@ protected function checkListenerExpectedEvent($target, Event $event)\n         if (!$event instanceof $expected && $expected === 'Composer\\Script\\CommandEvent') {\n             trigger_error('The callback '.$this->serializeCallback($target).' declared at '.$reflected->getDeclaringFunction()->getFileName().' accepts a '.$expected.' but '.$event->getName().' events use a '.get_class($event).' instance. Please adjust your type hint accordingly, see https:\/\/getcomposer.org\/doc\/articles\/scripts.md#event-classes', E_USER_DEPRECATED);\n             $event = new \\Composer\\Script\\CommandEvent(\n-                $event->getName(), $event->getComposer(), $event->getIO(), $event->isDevMode(), $event->getArguments()\n+                $event->getName(),\n+                $event->getComposer(),\n+                $event->getIO(),\n+                $event->isDevMode(),\n+                $event->getArguments()\n             );\n         }\n         if (!$event instanceof $expected && $expected === 'Composer\\Script\\PackageEvent') {\n             trigger_error('The callback '.$this->serializeCallback($target).' declared at '.$reflected->getDeclaringFunction()->getFileName().' accepts a '.$expected.' but '.$event->getName().' events use a '.get_class($event).' instance. Please adjust your type hint accordingly, see https:\/\/getcomposer.org\/doc\/articles\/scripts.md#event-classes', E_USER_DEPRECATED);\n             $event = new \\Composer\\Script\\PackageEvent(\n-                $event->getName(), $event->getComposer(), $event->getIO(), $event->isDevMode(),\n-                $event->getPolicy(), $event->getPool(), $event->getInstalledRepo(), $event->getRequest(),\n-                $event->getOperations(), $event->getOperation()\n+                $event->getName(),\n+                $event->getComposer(),\n+                $event->getIO(),\n+                $event->isDevMode(),\n+                $event->getPolicy(),\n+                $event->getPool(),\n+                $event->getInstalledRepo(),\n+                $event->getRequest(),\n+                $event->getOperations(),\n+                $event->getOperation()\n             );\n         }\n         if (!$event instanceof $expected && $expected === 'Composer\\Script\\Event') {\n             trigger_error('The callback '.$this->serializeCallback($target).' declared at '.$reflected->getDeclaringFunction()->getFileName().' accepts a '.$expected.' but '.$event->getName().' events use a '.get_class($event).' instance. Please adjust your type hint accordingly, see https:\/\/getcomposer.org\/doc\/articles\/scripts.md#event-classes', E_USER_DEPRECATED);\n             $event = new \\Composer\\Script\\Event(\n-                $event->getName(), $event->getComposer(), $event->getIO(), $event->isDevMode(),\n-                $event->getArguments(), $event->getFlags()\n+                $event->getName(),\n+                $event->getComposer(),\n+                $event->getIO(),\n+                $event->isDevMode(),\n+                $event->getArguments(),\n+                $event->getFlags()\n             );\n         }\n \n@@ -353,7 +388,7 @@ private function serializeCallback($cb)\n      * Add a listener for a particular event\n      *\n      * @param string   $eventName The event name - typically a constant\n-     * @param Callable $listener  A callable expecting an event argument\n+     * @param callable $listener  A callable expecting an event argument\n      * @param int      $priority  A higher value represents a higher priority\n      *\/\n     public function addListener($eventName, $listener, $priority = 0)"
        },
        {
            "sha": "1aac934a116a4413c7d9a5f88213d7c13916fa3b",
            "filename": "src\/Composer\/Factory.php",
            "status": "modified",
            "additions": 22,
            "deletions": 15,
            "changes": 37,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Factory.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Factory.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Factory.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -164,16 +164,19 @@ public static function createConfig(IOInterface $io = null, $cwd = null)\n             'data-dir' => self::getDataDir($home),\n         )));\n \n-        \/\/ Protect directory against web access. Since HOME could be\n-        \/\/ the www-data's user home and be web-accessible it is a\n-        \/\/ potential security risk\n-        $dirs = array($config->get('home'), $config->get('cache-dir'), $config->get('data-dir'));\n-        foreach ($dirs as $dir) {\n-            if (!file_exists($dir . '\/.htaccess')) {\n-                if (!is_dir($dir)) {\n-                    Silencer::call('mkdir', $dir, 0777, true);\n+        $htaccessProtect = (bool) $config->get('htaccess-protect');\n+        if ($htaccessProtect) {\n+            \/\/ Protect directory against web access. Since HOME could be\n+            \/\/ the www-data's user home and be web-accessible it is a\n+            \/\/ potential security risk\n+            $dirs = array($config->get('home'), $config->get('cache-dir'), $config->get('data-dir'));\n+            foreach ($dirs as $dir) {\n+                if (!file_exists($dir . '\/.htaccess')) {\n+                    if (!is_dir($dir)) {\n+                        Silencer::call('mkdir', $dir, 0777, true);\n+                    }\n+                    Silencer::call('file_put_contents', $dir . '\/.htaccess', 'Deny from all');\n                 }\n-                Silencer::call('file_put_contents', $dir . '\/.htaccess', 'Deny from all');\n             }\n         }\n \n@@ -201,7 +204,7 @@ public static function createConfig(IOInterface $io = null, $cwd = null)\n         if ($composerAuthEnv = getenv('COMPOSER_AUTH')) {\n             $authData = json_decode($composerAuthEnv, true);\n \n-            if (is_null($authData)) {\n+            if (null === $authData) {\n                 throw new \\UnexpectedValueException('COMPOSER_AUTH environment variable is malformed, should be a valid JSON object');\n             }\n \n@@ -235,7 +238,7 @@ public static function createAdditionalStyles()\n     public static function createOutput()\n     {\n         $styles = self::createAdditionalStyles();\n-        $formatter = new OutputFormatter(null, $styles);\n+        $formatter = new OutputFormatter(false, $styles);\n \n         return new ConsoleOutput(ConsoleOutput::VERBOSITY_NORMAL, null, $formatter);\n     }\n@@ -344,7 +347,7 @@ public function createComposer(IOInterface $io, $localConfig = null, $disablePlu\n         \/\/ load package\n         $parser = new VersionParser;\n         $guesser = new VersionGuesser($config, new ProcessExecutor($io), $parser);\n-        $loader  = new Package\\Loader\\RootPackageLoader($rm, $config, $parser, $guesser);\n+        $loader = new Package\\Loader\\RootPackageLoader($rm, $config, $parser, $guesser);\n         $package = $loader->load($localConfig, 'Composer\\Package\\RootPackage', $cwd);\n         $composer->setPackage($package);\n \n@@ -360,6 +363,10 @@ public function createComposer(IOInterface $io, $localConfig = null, $disablePlu\n             \/\/ initialize autoload generator\n             $generator = new AutoloadGenerator($dispatcher, $io);\n             $composer->setAutoloadGenerator($generator);\n+\n+            \/\/ initialize archive manager\n+            $am = $this->createArchiveManager($config, $dm);\n+            $composer->setArchiveManager($am);\n         }\n \n         \/\/ add installers to the manager (must happen after download manager is created since they read it out of $composer)\n@@ -430,7 +437,7 @@ protected function createGlobalComposer(IOInterface $io, Config $config, $disabl\n     {\n         $composer = null;\n         try {\n-            $composer = self::createComposer($io, $config->get('home') . '\/composer.json', $disablePlugins, $config->get('home'), $fullLoad);\n+            $composer = $this->createComposer($io, $config->get('home') . '\/composer.json', $disablePlugins, $config->get('home'), $fullLoad);\n         } catch (\\Exception $e) {\n             $io->writeError('Failed to initialize global composer: '.$e->getMessage(), true, IOInterface::DEBUG);\n         }\n@@ -539,7 +546,7 @@ protected function createDefaultInstallers(Installer\\InstallationManager $im, Co\n         $im->addInstaller(new Installer\\LibraryInstaller($io, $composer, null));\n         $im->addInstaller(new Installer\\PearInstaller($io, $composer, 'pear-library'));\n         $im->addInstaller(new Installer\\PluginInstaller($io, $composer));\n-        $im->addInstaller(new Installer\\MetapackageInstaller($io));\n+        $im->addInstaller(new Installer\\MetapackageInstaller());\n     }\n \n     \/**\n@@ -581,7 +588,7 @@ public static function createRemoteFilesystem(IOInterface $io, Config $config =\n         $disableTls = false;\n         if ($config && $config->get('disable-tls') === true) {\n             if (!$warned) {\n-                $io->write('<warning>You are running Composer with SSL\/TLS protection disabled.<\/warning>');\n+                $io->writeError('<warning>You are running Composer with SSL\/TLS protection disabled.<\/warning>');\n             }\n             $warned = true;\n             $disableTls = true;"
        },
        {
            "sha": "b327f1bbf137c7547a9298530421a8dcde897695",
            "filename": "src\/Composer\/IO\/BaseIO.php",
            "status": "modified",
            "additions": 19,
            "deletions": 19,
            "changes": 38,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/IO\/BaseIO.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/IO\/BaseIO.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/IO\/BaseIO.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -126,8 +126,8 @@ public function loadConfiguration(Config $config)\n     \/**\n      * System is unusable.\n      *\n-     * @param string $message\n-     * @param array $context\n+     * @param  string $message\n+     * @param  array  $context\n      * @return null\n      *\/\n     public function emergency($message, array $context = array())\n@@ -141,8 +141,8 @@ public function emergency($message, array $context = array())\n      * Example: Entire website down, database unavailable, etc. This should\n      * trigger the SMS alerts and wake you up.\n      *\n-     * @param string $message\n-     * @param array $context\n+     * @param  string $message\n+     * @param  array  $context\n      * @return null\n      *\/\n     public function alert($message, array $context = array())\n@@ -155,8 +155,8 @@ public function alert($message, array $context = array())\n      *\n      * Example: Application component unavailable, unexpected exception.\n      *\n-     * @param string $message\n-     * @param array $context\n+     * @param  string $message\n+     * @param  array  $context\n      * @return null\n      *\/\n     public function critical($message, array $context = array())\n@@ -168,8 +168,8 @@ public function critical($message, array $context = array())\n      * Runtime errors that do not require immediate action but should typically\n      * be logged and monitored.\n      *\n-     * @param string $message\n-     * @param array $context\n+     * @param  string $message\n+     * @param  array  $context\n      * @return null\n      *\/\n     public function error($message, array $context = array())\n@@ -183,8 +183,8 @@ public function error($message, array $context = array())\n      * Example: Use of deprecated APIs, poor use of an API, undesirable things\n      * that are not necessarily wrong.\n      *\n-     * @param string $message\n-     * @param array $context\n+     * @param  string $message\n+     * @param  array  $context\n      * @return null\n      *\/\n     public function warning($message, array $context = array())\n@@ -195,8 +195,8 @@ public function warning($message, array $context = array())\n     \/**\n      * Normal but significant events.\n      *\n-     * @param string $message\n-     * @param array $context\n+     * @param  string $message\n+     * @param  array  $context\n      * @return null\n      *\/\n     public function notice($message, array $context = array())\n@@ -209,8 +209,8 @@ public function notice($message, array $context = array())\n      *\n      * Example: User logs in, SQL logs.\n      *\n-     * @param string $message\n-     * @param array $context\n+     * @param  string $message\n+     * @param  array  $context\n      * @return null\n      *\/\n     public function info($message, array $context = array())\n@@ -221,8 +221,8 @@ public function info($message, array $context = array())\n     \/**\n      * Detailed debug information.\n      *\n-     * @param string $message\n-     * @param array $context\n+     * @param  string $message\n+     * @param  array  $context\n      * @return null\n      *\/\n     public function debug($message, array $context = array())\n@@ -233,9 +233,9 @@ public function debug($message, array $context = array())\n     \/**\n      * Logs with an arbitrary level.\n      *\n-     * @param mixed $level\n-     * @param string $message\n-     * @param array $context\n+     * @param  mixed  $level\n+     * @param  string $message\n+     * @param  array  $context\n      * @return null\n      *\/\n     public function log($level, $message, array $context = array())"
        },
        {
            "sha": "c0f235659c6a73e0904f1d6cedf2e5219760f2ca",
            "filename": "src\/Composer\/IO\/ConsoleIO.php",
            "status": "modified",
            "additions": 28,
            "deletions": 8,
            "changes": 36,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/IO\/ConsoleIO.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/IO\/ConsoleIO.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/IO\/ConsoleIO.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,11 +12,12 @@\n \n namespace Composer\\IO;\n \n+use Composer\\Question\\StrictConfirmationQuestion;\n+use Symfony\\Component\\Console\\Helper\\HelperSet;\n use Symfony\\Component\\Console\\Input\\InputInterface;\n use Symfony\\Component\\Console\\Output\\ConsoleOutputInterface;\n use Symfony\\Component\\Console\\Output\\OutputInterface;\n-use Symfony\\Component\\Console\\Helper\\HelperSet;\n-use Symfony\\Component\\Console\\Question\\ConfirmationQuestion;\n+use Symfony\\Component\\Console\\Question\\ChoiceQuestion;\n use Symfony\\Component\\Console\\Question\\Question;\n \n \/**\n@@ -247,7 +248,7 @@ public function askConfirmation($question, $default = true)\n     {\n         \/** @var \\Symfony\\Component\\Console\\Helper\\QuestionHelper $helper *\/\n         $helper = $this->helperSet->get('question');\n-        $question = new ConfirmationQuestion($question, $default);\n+        $question = new StrictConfirmationQuestion($question, $default);\n \n         return $helper->ask($this->input, $this->getErrorOutput(), $question);\n     }\n@@ -271,21 +272,40 @@ public function askAndValidate($question, $validator, $attempts = null, $default\n      *\/\n     public function askAndHideAnswer($question)\n     {\n-        $this->writeError($question, false);\n+        \/** @var \\Symfony\\Component\\Console\\Helper\\QuestionHelper $helper *\/\n+        $helper = $this->helperSet->get('question');\n+        $question = new Question($question);\n+        $question->setHidden(true);\n \n-        return \\Seld\\CliPrompt\\CliPrompt::hiddenPrompt(true);\n+        return $helper->ask($this->input, $this->getErrorOutput(), $question);\n     }\n \n     \/**\n      * {@inheritDoc}\n      *\/\n     public function select($question, $choices, $default, $attempts = false, $errorMessage = 'Value \"%s\" is invalid', $multiselect = false)\n     {\n-        if ($this->isInteractive()) {\n-            return $this->helperSet->get('dialog')->select($this->getErrorOutput(), $question, $choices, $default, $attempts, $errorMessage, $multiselect);\n+        \/** @var \\Symfony\\Component\\Console\\Helper\\QuestionHelper $helper *\/\n+        $helper = $this->helperSet->get('question');\n+        $question = new ChoiceQuestion($question, $choices, $default);\n+        $question->setMaxAttempts($attempts ?: null); \/\/ IOInterface requires false, and Question requires null or int\n+        $question->setErrorMessage($errorMessage);\n+        $question->setMultiselect($multiselect);\n+\n+        $result = $helper->ask($this->input, $this->getErrorOutput(), $question);\n+\n+        if (!is_array($result)) {\n+            return (string) array_search($result, $choices, true);\n+        }\n+\n+        $results = array();\n+        foreach ($choices as $index => $choice) {\n+            if (in_array($choice, $result, true)) {\n+                $results[] = (string) $index;\n+            }\n         }\n \n-        return $default;\n+        return $results;\n     }\n \n     \/**"
        },
        {
            "sha": "5766ba479d2bb061d19cbb84913ef7ebc63edd73",
            "filename": "src\/Composer\/IO\/IOInterface.php",
            "status": "modified",
            "additions": 14,
            "deletions": 14,
            "changes": 28,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/IO\/IOInterface.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/IO\/IOInterface.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/IO\/IOInterface.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -103,8 +103,8 @@ public function overwriteError($messages, $newline = true, $size = null, $verbos\n     \/**\n      * Asks a question to the user.\n      *\n-     * @param string|array $question The question to ask\n-     * @param string       $default  The default answer if none is given by the user\n+     * @param string $question The question to ask\n+     * @param string $default  The default answer if none is given by the user\n      *\n      * @throws \\RuntimeException If there is no data to read in the input stream\n      * @return string            The user answer\n@@ -116,8 +116,8 @@ public function ask($question, $default = null);\n      *\n      * The question will be asked until the user answers by nothing, yes, or no.\n      *\n-     * @param string|array $question The question to ask\n-     * @param bool         $default  The default answer if the user enters nothing\n+     * @param string $question The question to ask\n+     * @param bool   $default  The default answer if the user enters nothing\n      *\n      * @return bool true if the user has confirmed, false otherwise\n      *\/\n@@ -130,10 +130,10 @@ public function askConfirmation($question, $default = true);\n      * validated data when the data is valid and throw an exception\n      * otherwise.\n      *\n-     * @param string|array $question  The question to ask\n-     * @param callback     $validator A PHP callback\n-     * @param null|int     $attempts  Max number of times to ask before giving up (default of null means infinite)\n-     * @param mixed        $default   The default answer if none is given by the user\n+     * @param string   $question  The question to ask\n+     * @param callable $validator A PHP callback\n+     * @param null|int $attempts  Max number of times to ask before giving up (default of null means infinite)\n+     * @param mixed    $default   The default answer if none is given by the user\n      *\n      * @throws \\Exception When any of the validators return an error\n      * @return mixed\n@@ -152,12 +152,12 @@ public function askAndHideAnswer($question);\n     \/**\n      * Asks the user to select a value.\n      *\n-     * @param string|array $question     The question to ask\n-     * @param array        $choices      List of choices to pick from\n-     * @param bool|string  $default      The default answer if the user enters nothing\n-     * @param bool|int     $attempts     Max number of times to ask before giving up (false by default, which means infinite)\n-     * @param string       $errorMessage Message which will be shown if invalid value from choice list would be picked\n-     * @param bool         $multiselect  Select more than one value separated by comma\n+     * @param string      $question     The question to ask\n+     * @param array       $choices      List of choices to pick from\n+     * @param bool|string $default      The default answer if the user enters nothing\n+     * @param bool|int    $attempts     Max number of times to ask before giving up (false by default, which means infinite)\n+     * @param string      $errorMessage Message which will be shown if invalid value from choice list would be picked\n+     * @param bool        $multiselect  Select more than one value separated by comma\n      *\n      * @throws \\InvalidArgumentException\n      * @return int|string|array          The selected value or values (the key of the choices array)"
        },
        {
            "sha": "bd0d22e3c9047a2da56a487b9bdea91f21731582",
            "filename": "src\/Composer\/Installer.php",
            "status": "modified",
            "additions": 155,
            "deletions": 106,
            "changes": 261,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Installer.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -17,6 +17,7 @@\n use Composer\\DependencyResolver\\Operation\\UpdateOperation;\n use Composer\\DependencyResolver\\Operation\\InstallOperation;\n use Composer\\DependencyResolver\\Operation\\UninstallOperation;\n+use Composer\\DependencyResolver\\Operation\\MarkAliasUninstalledOperation;\n use Composer\\DependencyResolver\\Operation\\OperationInterface;\n use Composer\\DependencyResolver\\PolicyInterface;\n use Composer\\DependencyResolver\\Pool;\n@@ -32,6 +33,7 @@\n use Composer\\Installer\\SuggestedPackagesReporter;\n use Composer\\IO\\IOInterface;\n use Composer\\Package\\AliasPackage;\n+use Composer\\Package\\BasePackage;\n use Composer\\Package\\CompletePackage;\n use Composer\\Package\\Link;\n use Composer\\Package\\Loader\\ArrayLoader;\n@@ -125,7 +127,8 @@ class Installer\n      * @var array|null\n      *\/\n     protected $updateWhitelist = null;\n-    protected $whitelistDependencies = false;\n+    protected $whitelistDependencies = false; \/\/ TODO 2.0 rename to whitelistTransitiveDependencies\n+    protected $whitelistAllDependencies = false;\n \n     \/**\n      * @var SuggestedPackagesReporter\n@@ -194,6 +197,9 @@ public function run()\n         }\n \n         if ($this->runScripts) {\n+            $devMode = (int) $this->devMode;\n+            putenv(\"COMPOSER_DEV_MODE=$devMode\");\n+\n             \/\/ dispatch pre event\n             $eventName = $this->update ? ScriptEvents::PRE_UPDATE_CMD : ScriptEvents::PRE_INSTALL_CMD;\n             $this->eventDispatcher->dispatchScript($eventName, $this->devMode);\n@@ -246,7 +252,7 @@ public function run()\n                 continue;\n             }\n \n-            $replacement = (is_string($package->getReplacementPackage()))\n+            $replacement = is_string($package->getReplacementPackage())\n                 ? 'Use ' . $package->getReplacementPackage() . ' instead'\n                 : 'No replacement was suggested';\n \n@@ -298,15 +304,6 @@ public function run()\n             $this->autoloadGenerator->dump($this->config, $localRepo, $this->package, $this->installationManager, 'composer', $this->optimizeAutoloader);\n         }\n \n-        if ($this->runScripts) {\n-            $devMode = (int) $this->devMode;\n-            putenv(\"COMPOSER_DEV_MODE=$devMode\");\n-\n-            \/\/ dispatch post event\n-            $eventName = $this->update ? ScriptEvents::POST_UPDATE_CMD : ScriptEvents::POST_INSTALL_CMD;\n-            $this->eventDispatcher->dispatchScript($eventName, $this->devMode);\n-        }\n-\n         if ($this->executeOperations) {\n             \/\/ force binaries re-generation in case they are missing\n             foreach ($localRepo->getPackages() as $package) {\n@@ -321,6 +318,12 @@ public function run()\n             }\n         }\n \n+        if ($this->runScripts) {\n+            \/\/ dispatch post event\n+            $eventName = $this->update ? ScriptEvents::POST_UPDATE_CMD : ScriptEvents::POST_INSTALL_CMD;\n+            $this->eventDispatcher->dispatchScript($eventName, $this->devMode);\n+        }\n+\n         \/\/ re-enable GC except on HHVM which triggers a warning here\n         if (!defined('HHVM_VERSION')) {\n             gc_enable();\n@@ -334,7 +337,7 @@ public function run()\n      * @param  RepositoryInterface $installedRepo\n      * @param  PlatformRepository  $platformRepo\n      * @param  array               $aliases\n-     * @return array [int, PackageInterfaces[]|null] with the exit code and an array of dev packages on update, or null on install\n+     * @return array               [int, PackageInterfaces[]|null] with the exit code and an array of dev packages on update, or null on install\n      *\/\n     protected function doInstall($localRepo, $installedRepo, $platformRepo, $aliases)\n     {\n@@ -359,7 +362,7 @@ protected function doInstall($localRepo, $installedRepo, $platformRepo, $aliases\n         }\n \n         $this->whitelistUpdateDependencies(\n-            $localRepo,\n+            $lockedRepository ?: $localRepo,\n             $this->package->getRequires(),\n             $this->package->getDevRequires()\n         );\n@@ -473,6 +476,9 @@ protected function doInstall($localRepo, $installedRepo, $platformRepo, $aliases\n         } catch (SolverProblemsException $e) {\n             $this->io->writeError('<error>Your requirements could not be resolved to an installable set of packages.<\/error>', true, IOInterface::QUIET);\n             $this->io->writeError($e->getMessage());\n+            if ($this->update && !$this->devMode) {\n+                $this->io->writeError('<warning>Running update with --no-dev does not mean require-dev is ignored, it just means the packages will not be installed. If dev requirements are blocking the update you have to resolve those problems.<\/warning>', true, IOInterface::QUIET);\n+            }\n \n             return array(max(1, $e->getCode()), array());\n         }\n@@ -516,15 +522,15 @@ protected function doInstall($localRepo, $installedRepo, $platformRepo, $aliases\n                 }\n             }\n \n-            $this->io->writeError(\n-                sprintf(\"<info>Package operations: %d install%s, %d update%s, %d removal%s<\/info>\",\n+            $this->io->writeError(sprintf(\n+                \"<info>Package operations: %d install%s, %d update%s, %d removal%s<\/info>\",\n                 count($installs),\n                 1 === count($installs) ? '' : 's',\n                 count($updates),\n                 1 === count($updates) ? '' : 's',\n                 count($uninstalls),\n-                1 === count($uninstalls) ? '' : 's')\n-            );\n+                1 === count($uninstalls) ? '' : 's'\n+            ));\n             if ($installs) {\n                 $this->io->writeError(\"Installs: \".implode(', ', $installs), true, IOInterface::VERBOSE);\n             }\n@@ -538,16 +544,17 @@ protected function doInstall($localRepo, $installedRepo, $platformRepo, $aliases\n \n         foreach ($operations as $operation) {\n             \/\/ collect suggestions\n-            if ('install' === $operation->getJobType()) {\n+            $jobType = $operation->getJobType();\n+            if ('install' === $jobType) {\n                 $this->suggestedPackagesReporter->addSuggestionsFromPackage($operation->getPackage());\n             }\n \n             \/\/ updating, force dev packages' references if they're in root package refs\n             if ($this->update) {\n                 $package = null;\n-                if ('update' === $operation->getJobType()) {\n+                if ('update' === $jobType) {\n                     $package = $operation->getTargetPackage();\n-                } elseif ('install' === $operation->getJobType()) {\n+                } elseif ('install' === $jobType) {\n                     $package = $operation->getPackage();\n                 }\n                 if ($package && $package->isDev()) {\n@@ -556,20 +563,24 @@ protected function doInstall($localRepo, $installedRepo, $platformRepo, $aliases\n                         $this->updateInstallReferences($package, $references[$package->getName()]);\n                     }\n                 }\n-                if ('update' === $operation->getJobType()\n-                    && $operation->getTargetPackage()->isDev()\n-                    && $operation->getTargetPackage()->getVersion() === $operation->getInitialPackage()->getVersion()\n-                    && (!$operation->getTargetPackage()->getSourceReference() || $operation->getTargetPackage()->getSourceReference() === $operation->getInitialPackage()->getSourceReference())\n-                    && (!$operation->getTargetPackage()->getDistReference() || $operation->getTargetPackage()->getDistReference() === $operation->getInitialPackage()->getDistReference())\n-                ) {\n-                    $this->io->writeError('  - Skipping update of '. $operation->getTargetPackage()->getPrettyName().' to the same reference-locked version', true, IOInterface::DEBUG);\n-                    $this->io->writeError('', true, IOInterface::DEBUG);\n+                if ('update' === $jobType) {\n+                    $targetPackage = $operation->getTargetPackage();\n+                    if ($targetPackage->isDev()) {\n+                        $initialPackage = $operation->getInitialPackage();\n+                        if ($targetPackage->getVersion() === $initialPackage->getVersion()\n+                            && (!$targetPackage->getSourceReference() || $targetPackage->getSourceReference() === $initialPackage->getSourceReference())\n+                            && (!$targetPackage->getDistReference() || $targetPackage->getDistReference() === $initialPackage->getDistReference())\n+                        ) {\n+                            $this->io->writeError('  - Skipping update of ' . $targetPackage->getPrettyName() . ' to the same reference-locked version', true, IOInterface::DEBUG);\n+                            $this->io->writeError('', true, IOInterface::DEBUG);\n \n-                    continue;\n+                            continue;\n+                        }\n+                    }\n                 }\n             }\n \n-            $event = 'Composer\\Installer\\PackageEvents::PRE_PACKAGE_'.strtoupper($operation->getJobType());\n+            $event = 'Composer\\Installer\\PackageEvents::PRE_PACKAGE_'.strtoupper($jobType);\n             if (defined($event) && $this->runScripts) {\n                 $this->eventDispatcher->dispatchPackageEvent(constant($event), $this->devMode, $policy, $pool, $installedRepo, $request, $operations, $operation);\n             }\n@@ -584,7 +595,7 @@ protected function doInstall($localRepo, $installedRepo, $platformRepo, $aliases\n             $this->installationManager->execute($localRepo, $operation);\n \n             \/\/ output reasons why the operation was ran, only for install\/update operations\n-            if ($this->verbose && $this->io->isVeryVerbose() && in_array($operation->getJobType(), array('install', 'update'))) {\n+            if ($this->verbose && $this->io->isVeryVerbose() && in_array($jobType, array('install', 'update'))) {\n                 $reason = $operation->getReason();\n                 if ($reason instanceof Rule) {\n                     switch ($reason->getReason()) {\n@@ -600,13 +611,13 @@ protected function doInstall($localRepo, $installedRepo, $platformRepo, $aliases\n                 }\n             }\n \n-            $event = 'Composer\\Installer\\PackageEvents::POST_PACKAGE_'.strtoupper($operation->getJobType());\n-            if (defined($event) && $this->runScripts) {\n-                $this->eventDispatcher->dispatchPackageEvent(constant($event), $this->devMode, $policy, $pool, $installedRepo, $request, $operations, $operation);\n+            if ($this->executeOperations || $this->writeLock) {\n+                $localRepo->write();\n             }\n \n-            if ($this->executeOperations) {\n-                $localRepo->write();\n+            $event = 'Composer\\Installer\\PackageEvents::POST_PACKAGE_'.strtoupper($jobType);\n+            if (defined($event) && $this->runScripts) {\n+                $this->eventDispatcher->dispatchPackageEvent(constant($event), $this->devMode, $policy, $pool, $installedRepo, $request, $operations, $operation);\n             }\n         }\n \n@@ -712,6 +723,10 @@ private function filterDevPackageOperations(array $devPackages, array $operation\n         foreach ($devPackages as $pkg) {\n             $packagesToSkip[$pkg->getName()] = true;\n             if ($installedDevPkg = $localRepo->findPackage($pkg->getName(), '*')) {\n+                if ($installedDevPkg instanceof AliasPackage) {\n+                    $finalOps[] = new MarkAliasUninstalledOperation($installedDevPkg, 'non-dev install removing it');\n+                    $installedDevPkg = $installedDevPkg->getAliasOf();\n+                }\n                 $finalOps[] = new UninstallOperation($installedDevPkg, 'non-dev install removing it');\n             }\n         }\n@@ -744,8 +759,11 @@ private function filterDevPackageOperations(array $devPackages, array $operation\n      *\/\n     private function movePluginsToFront(array $operations)\n     {\n-        $installerOps = array();\n-        foreach ($operations as $idx => $op) {\n+        $pluginsNoDeps = array();\n+        $pluginsWithDeps = array();\n+        $pluginRequires = array();\n+\n+        foreach (array_reverse($operations, true) as $idx => $op) {\n             if ($op instanceof InstallOperation) {\n                 $package = $op->getPackage();\n             } elseif ($op instanceof UpdateOperation) {\n@@ -754,23 +772,32 @@ private function movePluginsToFront(array $operations)\n                 continue;\n             }\n \n-            if ($package->getType() === 'composer-plugin' || $package->getType() === 'composer-installer') {\n-                \/\/ ignore requirements to platform or composer-plugin-api\n-                $requires = array_keys($package->getRequires());\n-                foreach ($requires as $index => $req) {\n-                    if ($req === 'composer-plugin-api' || preg_match(PlatformRepository::PLATFORM_PACKAGE_REGEX, $req)) {\n-                        unset($requires[$index]);\n-                    }\n-                }\n-                \/\/ if there are no other requirements, move the plugin to the top of the op list\n-                if (!count($requires)) {\n-                    $installerOps[] = $op;\n-                    unset($operations[$idx]);\n+            \/\/ is this package a plugin?\n+            $isPlugin = $package->getType() === 'composer-plugin' || $package->getType() === 'composer-installer';\n+\n+            \/\/ is this a plugin or a dependency of a plugin?\n+            if ($isPlugin || count(array_intersect($package->getNames(), $pluginRequires))) {\n+                \/\/ get the package's requires, but filter out any platform requirements or 'composer-plugin-api'\n+                $requires = array_filter(array_keys($package->getRequires()), function ($req) {\n+                    return $req !== 'composer-plugin-api' && !preg_match(PlatformRepository::PLATFORM_PACKAGE_REGEX, $req);\n+                });\n+\n+                \/\/ is this a plugin with no meaningful dependencies?\n+                if ($isPlugin && !count($requires)) {\n+                    \/\/ plugins with no dependencies go to the very front\n+                    array_unshift($pluginsNoDeps, $op);\n+                } else {\n+                    \/\/ capture the requirements for this package so those packages will be moved up as well\n+                    $pluginRequires = array_merge($pluginRequires, $requires);\n+                    \/\/ move the operation to the front\n+                    array_unshift($pluginsWithDeps, $op);\n                 }\n+\n+                unset($operations[$idx]);\n             }\n         }\n \n-        return array_merge($installerOps, $operations);\n+        return array_merge($pluginsNoDeps, $pluginsWithDeps, $operations);\n     }\n \n     \/**\n@@ -1012,11 +1039,14 @@ private function processDevPackages($localRepo, $pool, $policy, $repositories, $\n                         $package->setReplaces($newPackage->getReplaces());\n                     }\n \n-                    if ($task === 'force-updates' && $newPackage && (\n-                        (($newPackage->getSourceReference() && $newPackage->getSourceReference() !== $package->getSourceReference())\n+                    if (\n+                        $task === 'force-updates'\n+                        && $newPackage\n+                        && (\n+                            ($newPackage->getSourceReference() && $newPackage->getSourceReference() !== $package->getSourceReference())\n                             || ($newPackage->getDistReference() && $newPackage->getDistReference() !== $package->getDistReference())\n                         )\n-                    )) {\n+                    ) {\n                         $operations[] = new UpdateOperation($package, $newPackage);\n \n                         continue;\n@@ -1168,9 +1198,9 @@ private function updatePackageUrl(PackageInterface $package, $sourceUrl, $source\n             $package->setSourceReference($sourceReference);\n         }\n \n-        \/\/ only update dist url for github\/bitbucket dists as they use a combination of dist url + dist reference to install\n+        \/\/ only update dist url for github\/bitbucket\/gitlab dists as they use a combination of dist url + dist reference to install\n         \/\/ but for other urls this is ambiguous and could result in bad outcomes\n-        if (preg_match('{^https?:\/\/(?:(?:www\\.)?bitbucket\\.org|(api\\.)?github\\.com)\/}i', $distUrl)) {\n+        if (preg_match('{^https?:\/\/(?:(?:www\\.)?bitbucket\\.org|(api\\.)?github\\.com|(?:www\\.)?gitlab\\.com)\/}i', $distUrl)) {\n             $package->setDistUrl($distUrl);\n             $this->updateInstallReferences($package, $sourceReference);\n         }\n@@ -1187,14 +1217,15 @@ private function updateInstallReferences(PackageInterface $package, $reference)\n         }\n \n         $package->setSourceReference($reference);\n-        $package->setDistReference($reference);\n \n-        if (preg_match('{^https?:\/\/(?:(?:www\\.)?bitbucket\\.org|(api\\.)?github\\.com)\/}i', $package->getDistUrl())) {\n-            $package->setDistUrl(preg_replace('{(?<=\/)[a-f0-9]{40}(?=\/|$)}i', $reference, $package->getDistUrl()));\n+        if (preg_match('{^https?:\/\/(?:(?:www\\.)?bitbucket\\.org|(api\\.)?github\\.com|(?:www\\.)?gitlab\\.com)\/}i', $package->getDistUrl())) {\n+            $package->setDistReference($reference);\n+            $package->setDistUrl(preg_replace('{(?<=\/|sha=)[a-f0-9]{40}(?=\/|$)}i', $reference, $package->getDistUrl()));\n+        } elseif ($package->getDistReference()) { \/\/ update the dist reference if there was one, but if none was provided ignore it\n+            $package->setDistReference($reference);\n         }\n     }\n \n-\n     \/**\n      * @param PlatformRepository $platformRepo\n      * @param array              $aliases\n@@ -1224,7 +1255,7 @@ private function isUpdateable(PackageInterface $package)\n         }\n \n         foreach ($this->updateWhitelist as $whiteListedPattern => $void) {\n-            $patternRegexp = $this->packageNameToRegexp($whiteListedPattern);\n+            $patternRegexp = BasePackage::packageNameToRegexp($whiteListedPattern);\n             if (preg_match($patternRegexp, $package->getName())) {\n                 return true;\n             }\n@@ -1233,19 +1264,6 @@ private function isUpdateable(PackageInterface $package)\n         return false;\n     }\n \n-    \/**\n-     * Build a regexp from a package name, expanding * globs as required\n-     *\n-     * @param  string $whiteListedPattern\n-     * @return string\n-     *\/\n-    private function packageNameToRegexp($whiteListedPattern)\n-    {\n-        $cleanedWhiteListedPattern = str_replace('\\\\*', '.*', preg_quote($whiteListedPattern));\n-\n-        return \"{^\" . $cleanedWhiteListedPattern . \"$}i\";\n-    }\n-\n     \/**\n      * @param  array $links\n      * @return array\n@@ -1267,13 +1285,15 @@ private function extractPlatformRequirements($links)\n      *\n      * Packages which are listed as requirements in the root package will be\n      * skipped including their dependencies, unless they are listed in the\n-     * update whitelist themselves.\n+     * update whitelist themselves or $whitelistAllDependencies is true.\n      *\n-     * @param RepositoryInterface $localRepo\n+     * @param RepositoryInterface $localOrLockRepo Use the locked repo if available, otherwise installed repo will do\n+     *                                             As we want the most accurate package list to work with, and installed\n+     *                                             repo might be empty but locked repo will always be current.\n      * @param array               $rootRequires    An array of links to packages in require of the root package\n      * @param array               $rootDevRequires An array of links to packages in require-dev of the root package\n      *\/\n-    private function whitelistUpdateDependencies($localRepo, array $rootRequires, array $rootDevRequires)\n+    private function whitelistUpdateDependencies($localOrLockRepo, array $rootRequires, array $rootDevRequires)\n     {\n         if (!$this->updateWhitelist) {\n             return;\n@@ -1287,12 +1307,14 @@ private function whitelistUpdateDependencies($localRepo, array $rootRequires, ar\n         }\n \n         $skipPackages = array();\n-        foreach ($rootRequires as $require) {\n-            $skipPackages[$require->getTarget()] = true;\n+        if (!$this->whitelistAllDependencies) {\n+            foreach ($rootRequires as $require) {\n+                $skipPackages[$require->getTarget()] = true;\n+            }\n         }\n \n-        $pool = new Pool;\n-        $pool->addRepository($localRepo);\n+        $pool = new Pool('dev');\n+        $pool->addRepository($localOrLockRepo);\n \n         $seen = array();\n \n@@ -1307,7 +1329,7 @@ private function whitelistUpdateDependencies($localRepo, array $rootRequires, ar\n \n             \/\/ check if the name is a glob pattern that did not match directly\n             if (!$nameMatchesRequiredPackage) {\n-                $whitelistPatternRegexp = $this->packageNameToRegexp($packageName);\n+                $whitelistPatternRegexp = BasePackage::packageNameToRegexp($packageName);\n                 foreach ($rootRequiredPackageNames as $rootRequiredPackageName) {\n                     if (preg_match($whitelistPatternRegexp, $rootRequiredPackageName)) {\n                         $nameMatchesRequiredPackage = true;\n@@ -1316,7 +1338,7 @@ private function whitelistUpdateDependencies($localRepo, array $rootRequires, ar\n                 }\n             }\n \n-            if (count($depPackages) == 0 && !$nameMatchesRequiredPackage && !in_array($packageName, array('nothing', 'lock'))) {\n+            if (count($depPackages) == 0 && !$nameMatchesRequiredPackage && !in_array($packageName, array('nothing', 'lock', 'mirrors'))) {\n                 $this->io->writeError('<warning>Package \"' . $packageName . '\" listed for update is not installed. Ignoring.<\/warning>');\n             }\n \n@@ -1333,7 +1355,7 @@ private function whitelistUpdateDependencies($localRepo, array $rootRequires, ar\n                 $seen[$package->getId()] = true;\n                 $this->updateWhitelist[$package->getName()] = true;\n \n-                if (!$this->whitelistDependencies) {\n+                if (!$this->whitelistDependencies && !$this->whitelistAllDependencies) {\n                     continue;\n                 }\n \n@@ -1424,7 +1446,7 @@ public function setAdditionalInstalledRepository(RepositoryInterface $additional\n      *\/\n     public function setDryRun($dryRun = true)\n     {\n-        $this->dryRun = (boolean) $dryRun;\n+        $this->dryRun = (bool) $dryRun;\n \n         return $this;\n     }\n@@ -1447,7 +1469,7 @@ public function isDryRun()\n      *\/\n     public function setPreferSource($preferSource = true)\n     {\n-        $this->preferSource = (boolean) $preferSource;\n+        $this->preferSource = (bool) $preferSource;\n \n         return $this;\n     }\n@@ -1460,7 +1482,7 @@ public function setPreferSource($preferSource = true)\n      *\/\n     public function setPreferDist($preferDist = true)\n     {\n-        $this->preferDist = (boolean) $preferDist;\n+        $this->preferDist = (bool) $preferDist;\n \n         return $this;\n     }\n@@ -1473,7 +1495,7 @@ public function setPreferDist($preferDist = true)\n      *\/\n     public function setOptimizeAutoloader($optimizeAutoloader = false)\n     {\n-        $this->optimizeAutoloader = (boolean) $optimizeAutoloader;\n+        $this->optimizeAutoloader = (bool) $optimizeAutoloader;\n         if (!$this->optimizeAutoloader) {\n             \/\/ Force classMapAuthoritative off when not optimizing the\n             \/\/ autoloader\n@@ -1492,7 +1514,7 @@ public function setOptimizeAutoloader($optimizeAutoloader = false)\n      *\/\n     public function setClassMapAuthoritative($classMapAuthoritative = false)\n     {\n-        $this->classMapAuthoritative = (boolean) $classMapAuthoritative;\n+        $this->classMapAuthoritative = (bool) $classMapAuthoritative;\n         if ($this->classMapAuthoritative) {\n             \/\/ Force optimizeAutoloader when classmap is authoritative\n             $this->setOptimizeAutoloader(true);\n@@ -1509,7 +1531,7 @@ public function setClassMapAuthoritative($classMapAuthoritative = false)\n      *\/\n     public function setApcuAutoloader($apcuAutoloader = false)\n     {\n-        $this->apcuAutoloader = (boolean) $apcuAutoloader;\n+        $this->apcuAutoloader = (bool) $apcuAutoloader;\n \n         return $this;\n     }\n@@ -1522,7 +1544,7 @@ public function setApcuAutoloader($apcuAutoloader = false)\n      *\/\n     public function setUpdate($update = true)\n     {\n-        $this->update = (boolean) $update;\n+        $this->update = (bool) $update;\n \n         return $this;\n     }\n@@ -1535,7 +1557,7 @@ public function setUpdate($update = true)\n      *\/\n     public function setDevMode($devMode = true)\n     {\n-        $this->devMode = (boolean) $devMode;\n+        $this->devMode = (bool) $devMode;\n \n         return $this;\n     }\n@@ -1550,7 +1572,7 @@ public function setDevMode($devMode = true)\n      *\/\n     public function setDumpAutoloader($dumpAutoloader = true)\n     {\n-        $this->dumpAutoloader = (boolean) $dumpAutoloader;\n+        $this->dumpAutoloader = (bool) $dumpAutoloader;\n \n         return $this;\n     }\n@@ -1565,7 +1587,7 @@ public function setDumpAutoloader($dumpAutoloader = true)\n      *\/\n     public function setRunScripts($runScripts = true)\n     {\n-        $this->runScripts = (boolean) $runScripts;\n+        $this->runScripts = (bool) $runScripts;\n \n         return $this;\n     }\n@@ -1591,7 +1613,7 @@ public function setConfig(Config $config)\n      *\/\n     public function setVerbose($verbose = true)\n     {\n-        $this->verbose = (boolean) $verbose;\n+        $this->verbose = (bool) $verbose;\n \n         return $this;\n     }\n@@ -1614,7 +1636,7 @@ public function isVerbose()\n      *\/\n     public function setIgnorePlatformRequirements($ignorePlatformReqs = false)\n     {\n-        $this->ignorePlatformReqs = (boolean) $ignorePlatformReqs;\n+        $this->ignorePlatformReqs = (bool) $ignorePlatformReqs;\n \n         return $this;\n     }\n@@ -1634,14 +1656,41 @@ public function setUpdateWhitelist(array $packages)\n     }\n \n     \/**\n-     * Should dependencies of whitelisted packages be updated recursively?\n+     * @deprecated use setWhitelistTransitiveDependencies instead\n+     *\/\n+    public function setWhitelistDependencies($updateDependencies = true)\n+    {\n+        return $this->setWhitelistTransitiveDependencies($updateDependencies);\n+    }\n+\n+    \/**\n+     * Should dependencies of whitelisted packages (but not direct dependencies) be updated?\n+     *\n+     * This will NOT whitelist any dependencies that are also directly defined\n+     * in the root package.\n+     *\n+     * @param  bool      $updateTransitiveDependencies\n+     * @return Installer\n+     *\/\n+    public function setWhitelistTransitiveDependencies($updateTransitiveDependencies = true)\n+    {\n+        $this->whitelistDependencies = (bool) $updateTransitiveDependencies;\n+\n+        return $this;\n+    }\n+\n+    \/**\n+     * Should all dependencies of whitelisted packages be updated recursively?\n      *\n-     * @param  bool      $updateDependencies\n+     * This will whitelist any dependencies of the whitelisted packages, including\n+     * those defined in the root package.\n+     *\n+     * @param  bool      $updateAllDependencies\n      * @return Installer\n      *\/\n-    public function setWhitelistDependencies($updateDependencies = true)\n+    public function setWhitelistAllDependencies($updateAllDependencies = true)\n     {\n-        $this->whitelistDependencies = (boolean) $updateDependencies;\n+        $this->whitelistAllDependencies = (bool) $updateAllDependencies;\n \n         return $this;\n     }\n@@ -1654,7 +1703,7 @@ public function setWhitelistDependencies($updateDependencies = true)\n      *\/\n     public function setPreferStable($preferStable = true)\n     {\n-        $this->preferStable = (boolean) $preferStable;\n+        $this->preferStable = (bool) $preferStable;\n \n         return $this;\n     }\n@@ -1667,7 +1716,7 @@ public function setPreferStable($preferStable = true)\n      *\/\n     public function setPreferLowest($preferLowest = true)\n     {\n-        $this->preferLowest = (boolean) $preferLowest;\n+        $this->preferLowest = (bool) $preferLowest;\n \n         return $this;\n     }\n@@ -1682,13 +1731,13 @@ public function setPreferLowest($preferLowest = true)\n      *\/\n     public function setWriteLock($writeLock = true)\n     {\n-        $this->writeLock = (boolean) $writeLock;\n+        $this->writeLock = (bool) $writeLock;\n \n         return $this;\n     }\n \n     \/**\n-     * Should the operations (packge install, update and removal) be executed on disk?\n+     * Should the operations (package install, update and removal) be executed on disk?\n      *\n      * This is disabled implicitly when enabling dryRun\n      *\n@@ -1697,7 +1746,7 @@ public function setWriteLock($writeLock = true)\n      *\/\n     public function setExecuteOperations($executeOperations = true)\n     {\n-        $this->executeOperations = (boolean) $executeOperations;\n+        $this->executeOperations = (bool) $executeOperations;\n \n         return $this;\n     }\n@@ -1710,7 +1759,7 @@ public function setExecuteOperations($executeOperations = true)\n      *\/\n     public function setSkipSuggest($skipSuggest = true)\n     {\n-        $this->skipSuggest = (boolean) $skipSuggest;\n+        $this->skipSuggest = (bool) $skipSuggest;\n \n         return $this;\n     }"
        },
        {
            "sha": "0f709f60b5955bc8e1a118976a19b6e46a6d4c7b",
            "filename": "src\/Composer\/Installer\/BinaryInstaller.php",
            "status": "modified",
            "additions": 7,
            "deletions": 14,
            "changes": 21,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer\/BinaryInstaller.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer\/BinaryInstaller.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Installer\/BinaryInstaller.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -113,7 +113,7 @@ public function removeBinaries(PackageInterface $package)\n         }\n \n         \/\/ attempt removing the bin dir in case it is left empty\n-        if ((is_dir($this->binDir)) && ($this->filesystem->isDirEmpty($this->binDir))) {\n+        if (is_dir($this->binDir) && $this->filesystem->isDirEmpty($this->binDir)) {\n             Silencer::call('rmdir', $this->binDir);\n         }\n     }\n@@ -194,21 +194,14 @@ protected function generateUnixyProxyCode($bin, $link)\n         $proxyCode = <<<PROXY\n #!\/usr\/bin\/env sh\n \n-dir=$(d=\\${0%[\/\\\\\\\\]*}; cd \"\\$d\"; cd $binDir && pwd)\n-\n-# See if we are running in Cygwin by checking for cygpath program\n-if command -v 'cygpath' >\/dev\/null 2>&1; then\n-\t# Cygwin paths start with \/cygdrive\/ which will break windows PHP,\n-\t# so we need to translate the dir path to windows format. However\n-\t# we could be using cygwin PHP which does not require this, so we\n-\t# test if the path to PHP starts with \/cygdrive\/ rather than \/usr\/bin\n-\tif [[ $(which php) == \/cygdrive\/* ]]; then\n-\t\tdir=$(cygpath -m \"\\$dir\");\n-\tfi\n+dir=\\$(cd \"\\${0%[\/\\\\\\\\]*}\" > \/dev\/null; cd $binDir && pwd)\n+\n+if [ -d \/proc\/cygdrive ] && [[ \\$(which php) == \\$(readlink -n \/proc\/cygdrive)\/* ]]; then\n+   # We are in Cgywin using Windows php, so the path must be translated\n+   dir=\\$(cygpath -m \"\\$dir\");\n fi\n \n-dir=$(echo \\$dir | sed 's\/ \/\\ \/g')\n-\"\\${dir}\/$binFile\" \"$@\"\n+\"\\${dir}\/$binFile\" \"\\$@\"\n \n PROXY;\n "
        },
        {
            "sha": "9f50b5980bc94e278e15791b117bc3b18e9f61a3",
            "filename": "src\/Composer\/Installer\/InstallationManager.php",
            "status": "modified",
            "additions": 5,
            "deletions": 5,
            "changes": 10,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer\/InstallationManager.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer\/InstallationManager.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Installer\/InstallationManager.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -186,7 +186,7 @@ public function update(RepositoryInterface $repo, UpdateOperation $operation)\n         $target = $operation->getTargetPackage();\n \n         $initialType = $initial->getType();\n-        $targetType  = $target->getType();\n+        $targetType = $target->getType();\n \n         if ($initialType === $targetType) {\n             $installer = $this->getInstaller($initialType);\n@@ -273,8 +273,8 @@ public function notifyInstalls(IOInterface $io)\n                     );\n                     $opts = array('http' =>\n                         array(\n-                            'method'  => 'POST',\n-                            'header'  => array('Content-type: application\/x-www-form-urlencoded'),\n+                            'method' => 'POST',\n+                            'header' => array('Content-type: application\/x-www-form-urlencoded'),\n                             'content' => http_build_query($params, '', '&'),\n                             'timeout' => 3,\n                         ),\n@@ -300,8 +300,8 @@ public function notifyInstalls(IOInterface $io)\n \n             $opts = array('http' =>\n                 array(\n-                    'method'  => 'POST',\n-                    'header'  => array('Content-Type: application\/json'),\n+                    'method' => 'POST',\n+                    'header' => array('Content-Type: application\/json'),\n                     'content' => json_encode($postData),\n                     'timeout' => 6,\n                 ),"
        },
        {
            "sha": "34fbbbee4e35a2dbe4b53b6c852e902733473f11",
            "filename": "src\/Composer\/Installer\/LibraryInstaller.php",
            "status": "modified",
            "additions": 12,
            "deletions": 1,
            "changes": 13,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer\/LibraryInstaller.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer\/LibraryInstaller.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Installer\/LibraryInstaller.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -18,6 +18,7 @@\n use Composer\\Package\\PackageInterface;\n use Composer\\Util\\Filesystem;\n use Composer\\Util\\Silencer;\n+use Composer\\Util\\Platform;\n \n \/**\n  * Package installation manager.\n@@ -71,7 +72,17 @@ public function supports($packageType)\n      *\/\n     public function isInstalled(InstalledRepositoryInterface $repo, PackageInterface $package)\n     {\n-        return $repo->hasPackage($package) && is_readable($this->getInstallPath($package));\n+        if (!$repo->hasPackage($package)) {\n+            return false;\n+        }\n+\n+        $installPath = $this->getInstallPath($package);\n+\n+        if (is_readable($installPath)) {\n+            return true;\n+        }\n+\n+        return (Platform::isWindows() && $this->filesystem->isJunction($installPath)) || is_link($installPath);\n     }\n \n     \/**"
        },
        {
            "sha": "f0d6783bba4dc8363f5692fab14ba445bb608efc",
            "filename": "src\/Composer\/Installer\/PearBinaryInstaller.php",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer\/PearBinaryInstaller.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer\/PearBinaryInstaller.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Installer\/PearBinaryInstaller.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -61,9 +61,9 @@ protected function initializeBinDir()\n     {\n         parent::initializeBinDir();\n         file_put_contents($this->binDir.'\/composer-php', $this->generateUnixyPhpProxyCode());\n-        @chmod($this->binDir.'\/composer-php', 0777);\n+        @chmod($this->binDir.'\/composer-php', 0777 & ~umask());\n         file_put_contents($this->binDir.'\/composer-php.bat', $this->generateWindowsPhpProxyCode());\n-        @chmod($this->binDir.'\/composer-php.bat', 0777);\n+        @chmod($this->binDir.'\/composer-php.bat', 0777 & ~umask());\n     }\n \n     protected function generateWindowsProxyCode($bin, $link)"
        },
        {
            "sha": "c400ca4a62d25cd40c9a72dd1e25b7e714271536",
            "filename": "src\/Composer\/Installer\/PluginInstaller.php",
            "status": "modified",
            "additions": 1,
            "deletions": 2,
            "changes": 3,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer\/PluginInstaller.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer\/PluginInstaller.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Installer\/PluginInstaller.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -32,9 +32,8 @@ class PluginInstaller extends LibraryInstaller\n      *\n      * @param IOInterface $io\n      * @param Composer    $composer\n-     * @param string      $type\n      *\/\n-    public function __construct(IOInterface $io, Composer $composer, $type = 'library')\n+    public function __construct(IOInterface $io, Composer $composer)\n     {\n         parent::__construct($io, $composer, 'composer-plugin');\n         $this->installationManager = $composer->getInstallationManager();"
        },
        {
            "sha": "25788e547b6b58ab66343753aeea5f9e33e1b241",
            "filename": "src\/Composer\/Installer\/SuggestedPackagesReporter.php",
            "status": "modified",
            "additions": 28,
            "deletions": 3,
            "changes": 31,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer\/SuggestedPackagesReporter.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Installer\/SuggestedPackagesReporter.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Installer\/SuggestedPackagesReporter.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -15,6 +15,7 @@\n use Composer\\IO\\IOInterface;\n use Composer\\Package\\PackageInterface;\n use Composer\\Repository\\RepositoryInterface;\n+use Symfony\\Component\\Console\\Formatter\\OutputFormatter;\n \n \/**\n  * Add suggested packages from different places to output them in the end.\n@@ -114,13 +115,37 @@ public function output(RepositoryInterface $installedRepo = null)\n             }\n \n             $this->io->writeError(sprintf(\n-                '%s suggests installing %s (%s)',\n+                '%s suggests installing %s%s',\n                 $suggestion['source'],\n-                $suggestion['target'],\n-                $suggestion['reason']\n+                $this->escapeOutput($suggestion['target']),\n+                $this->escapeOutput('' !== $suggestion['reason'] ? ' ('.$suggestion['reason'].')' : '')\n             ));\n         }\n \n         return $this;\n     }\n+\n+    \/**\n+     * @param  string $string\n+     * @return string\n+     *\/\n+    private function escapeOutput($string)\n+    {\n+        return OutputFormatter::escape(\n+            $this->removeControlCharacters($string)\n+        );\n+    }\n+\n+    \/**\n+     * @param  string $string\n+     * @return string\n+     *\/\n+    private function removeControlCharacters($string)\n+    {\n+        return preg_replace(\n+            '\/[[:cntrl:]]\/',\n+            '',\n+            str_replace(\"\\n\", ' ', $string)\n+        );\n+    }\n }"
        },
        {
            "sha": "b847914206ec0f1bbd723f2d83a678228bd89026",
            "filename": "src\/Composer\/Json\/JsonFile.php",
            "status": "modified",
            "additions": 1,
            "deletions": 4,
            "changes": 5,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Json\/JsonFile.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Json\/JsonFile.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Json\/JsonFile.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -223,9 +223,7 @@ public static function encode($data, $options = 448)\n             return $json;\n         }\n \n-        $result = JsonFormatter::format($json, $unescapeUnicode, $unescapeSlashes);\n-\n-        return $result;\n+        return JsonFormatter::format($json, $unescapeUnicode, $unescapeSlashes);\n     }\n \n     \/**\n@@ -283,7 +281,6 @@ public static function parseJson($json, $file = null)\n      * @param  string                    $json\n      * @param  string                    $file\n      * @throws \\UnexpectedValueException\n-     * @throws JsonValidationException\n      * @throws ParsingException\n      * @return bool                      true on success\n      *\/"
        },
        {
            "sha": "44acaff5929bb4f60e1db0526aad3aa8be789128",
            "filename": "src\/Composer\/Json\/JsonFormatter.php",
            "status": "modified",
            "additions": 8,
            "deletions": 1,
            "changes": 9,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Json\/JsonFormatter.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Json\/JsonFormatter.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Json\/JsonFormatter.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -69,6 +69,13 @@ public static function format($json, $unescapeUnicode, $unescapeSlashes)\n                         $l = strlen($match[1]);\n \n                         if ($l % 2) {\n+                            $code = hexdec($match[2]);\n+                            \/\/ 0xD800..0xDFFF denotes UTF-16 surrogate pair which won't be unescaped\n+                            \/\/ see https:\/\/github.com\/composer\/composer\/issues\/7510\n+                            if (0xD800 <= $code && 0xDFFF >= $code) {\n+                                return $match[0];\n+                            }\n+\n                             return str_repeat('\\\\', $l - 1) . mb_convert_encoding(\n                                 pack('H*', $match[2]),\n                                 'UTF-8',\n@@ -88,7 +95,7 @@ public static function format($json, $unescapeUnicode, $unescapeSlashes)\n             if (':' === $char) {\n                 \/\/ Add a space after the : character\n                 $char .= ' ';\n-            } elseif (('}' === $char || ']' === $char)) {\n+            } elseif ('}' === $char || ']' === $char) {\n                 $pos--;\n                 $prevChar = substr($json, $i - 1, 1);\n "
        },
        {
            "sha": "40c0c09a2c3b9a31290490f3ec0b5e1f079ac492",
            "filename": "src\/Composer\/Json\/JsonManipulator.php",
            "status": "modified",
            "additions": 26,
            "deletions": 10,
            "changes": 36,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Json\/JsonManipulator.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Json\/JsonManipulator.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Json\/JsonManipulator.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -69,11 +69,15 @@ public function addLink($type, $package, $constraint, $sortPackages = false)\n \n         $links = $matches['value'];\n \n-        if (isset($decoded[$type][$package])) {\n+        \/\/ try to find existing link\n+        $packageRegex = str_replace('\/', '\\\\\\\\?\/', preg_quote($package));\n+        $regex = '{'.self::$DEFINES.'\"(?P<package>'.$packageRegex.')\"(\\s*:\\s*)(?&string)}ix';\n+        if ($this->pregMatch($regex, $links, $packageMatches)) {\n             \/\/ update existing link\n-            $packageRegex = str_replace('\/', '\\\\\\\\?\/', preg_quote($package));\n-            $links = preg_replace_callback('{'.self::$DEFINES.'\"'.$packageRegex.'\"(?P<separator>\\s*:\\s*)(?&string)}ix', function ($m) use ($package, $constraint) {\n-                return JsonFile::encode($package) . $m['separator'] . '\"' . $constraint . '\"';\n+            $existingPackage = $packageMatches['package'];\n+            $packageRegex = str_replace('\/', '\\\\\\\\?\/', preg_quote($existingPackage));\n+            $links = preg_replace_callback('{'.self::$DEFINES.'\"'.$packageRegex.'\"(?P<separator>\\s*:\\s*)(?&string)}ix', function ($m) use ($existingPackage, $constraint) {\n+                return JsonFile::encode(str_replace('\\\\\/', '\/', $existingPackage)) . $m['separator'] . '\"' . $constraint . '\"';\n             }, $links);\n         } else {\n             if ($this->pregMatch('#^\\s*\\{\\s*\\S+.*?(\\s*\\}\\s*)$#s', $links, $match)) {\n@@ -167,6 +171,10 @@ public function addProperty($name, $value)\n             return $this->addSubNode('extra', substr($name, 6), $value);\n         }\n \n+        if (substr($name, 0, 8) === 'scripts.') {\n+            return $this->addSubNode('scripts', substr($name, 8), $value);\n+        }\n+\n         return $this->addMainKey($name, $value);\n     }\n \n@@ -176,6 +184,10 @@ public function removeProperty($name)\n             return $this->removeSubNode('extra', substr($name, 6));\n         }\n \n+        if (substr($name, 0, 8) === 'scripts.') {\n+            return $this->removeSubNode('scripts', substr($name, 8));\n+        }\n+\n         return $this->removeMainKey($name);\n     }\n \n@@ -184,7 +196,7 @@ public function addSubNode($mainNode, $name, $value)\n         $decoded = JsonFile::parseJson($this->contents);\n \n         $subName = null;\n-        if (in_array($mainNode, array('config', 'repositories', 'extra')) && false !== strpos($name, '.')) {\n+        if (in_array($mainNode, array('config', 'extra', 'scripts')) && false !== strpos($name, '.')) {\n             list($name, $subName) = explode('.', $name, 2);\n         }\n \n@@ -225,7 +237,7 @@ public function addSubNode($mainNode, $name, $value)\n         \/\/ child exists\n         $childRegex = '{'.self::$DEFINES.'(?P<start>\"'.preg_quote($name).'\"\\s*:\\s*)(?P<content>(?&json))(?P<end>,?)}x';\n         if ($this->pregMatch($childRegex, $children, $matches)) {\n-            $children = preg_replace_callback($childRegex, function ($matches) use ($name, $subName, $value, $that) {\n+            $children = preg_replace_callback($childRegex, function ($matches) use ($subName, $value, $that) {\n                 if ($subName !== null) {\n                     $curVal = json_decode($matches['content'], true);\n                     if (!is_array($curVal)) {\n@@ -304,7 +316,7 @@ public function removeSubNode($mainNode, $name)\n         }\n \n         $subName = null;\n-        if (in_array($mainNode, array('config', 'repositories', 'extra')) && false !== strpos($name, '.')) {\n+        if (in_array($mainNode, array('config', 'extra', 'scripts')) && false !== strpos($name, '.')) {\n             list($name, $subName) = explode('.', $name, 2);\n         }\n \n@@ -413,7 +425,7 @@ public function removeMainKey($key)\n     {\n         $decoded = JsonFile::parseJson($this->contents);\n \n-        if (!isset($decoded[$key])) {\n+        if (!array_key_exists($key, $decoded)) {\n             return true;\n         }\n \n@@ -426,6 +438,11 @@ public function removeMainKey($key)\n                 return false;\n             }\n \n+            \/\/ check that we are not leaving a dangling comma on the previous line if the last line was removed\n+            if (preg_match('#,\\s*$#', $matches['start']) && preg_match('#^\\}$#', $matches['end'])) {\n+                $matches['start'] = rtrim(preg_replace('#,(\\s*)$#', '$1', $matches['start']), $this->indent);\n+            }\n+\n             $this->contents = $matches['start'] . $matches['end'];\n             if (preg_match('#^\\{\\s*\\}\\s*$#', $this->contents)) {\n                 $this->contents = \"{\\n}\";\n@@ -493,8 +510,7 @@ protected function pregMatch($re, $str, &$matches = array())\n                     if (PHP_VERSION_ID > 70000) {\n                         throw new \\RuntimeException('Failed to execute regex: PREG_JIT_STACKLIMIT_ERROR', 6);\n                     }\n-                    \/\/ fallthrough\n-\n+                    \/\/ no break\n                 default:\n                     throw new \\RuntimeException('Failed to execute regex: Unknown error');\n             }"
        },
        {
            "sha": "4a9a5af1f9e818ac632a284f243020a0613ea818",
            "filename": "src\/Composer\/Package\/Archiver\/ArchivableFilesFilter.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/ArchivableFilesFilter.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/ArchivableFilesFilter.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Archiver\/ArchivableFilesFilter.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -26,7 +26,7 @@ public function accept()\n     {\n         $file = $this->getInnerIterator()->current();\n         if ($file->isDir()) {\n-            $this->dirs[] = (string)$file;\n+            $this->dirs[] = (string) $file;\n \n             return false;\n         }"
        },
        {
            "sha": "150e5f48e00774ace923f591d15f974f9178f6a7",
            "filename": "src\/Composer\/Package\/Archiver\/ArchivableFilesFinder.php",
            "status": "modified",
            "additions": 13,
            "deletions": 8,
            "changes": 21,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/ArchivableFilesFinder.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/ArchivableFilesFinder.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Archiver\/ArchivableFilesFinder.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -35,20 +35,25 @@ class ArchivableFilesFinder extends \\FilterIterator\n     \/**\n      * Initializes the internal Symfony Finder with appropriate filters\n      *\n-     * @param string $sources  Path to source files to be archived\n-     * @param array  $excludes Composer's own exclude rules from composer.json\n+     * @param string $sources       Path to source files to be archived\n+     * @param array  $excludes      Composer's own exclude rules from composer.json\n+     * @param bool   $ignoreFilters Ignore filters when looking for files\n      *\/\n-    public function __construct($sources, array $excludes)\n+    public function __construct($sources, array $excludes, $ignoreFilters = false)\n     {\n         $fs = new Filesystem();\n \n         $sources = $fs->normalizePath($sources);\n \n-        $filters = array(\n-            new HgExcludeFilter($sources),\n-            new GitExcludeFilter($sources),\n-            new ComposerExcludeFilter($sources, $excludes),\n-        );\n+        if ($ignoreFilters) {\n+            $filters = array();\n+        } else {\n+            $filters = array(\n+                new HgExcludeFilter($sources),\n+                new GitExcludeFilter($sources),\n+                new ComposerExcludeFilter($sources, $excludes),\n+            );\n+        }\n \n         $this->finder = new Finder();\n "
        },
        {
            "sha": "22f8eeafecfa39006a464fdebe4e18127e2396b8",
            "filename": "src\/Composer\/Package\/Archiver\/ArchiveManager.php",
            "status": "modified",
            "additions": 10,
            "deletions": 9,
            "changes": 19,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/ArchiveManager.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/ArchiveManager.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Archiver\/ArchiveManager.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -75,9 +75,9 @@ public function getPackageFilename(PackageInterface $package)\n         $nameParts = array(preg_replace('#[^a-z0-9-_]#i', '-', $package->getName()));\n \n         if (preg_match('{^[a-f0-9]{40}$}', $package->getDistReference())) {\n-            $nameParts = array_merge($nameParts, array($package->getDistReference(), $package->getDistType()));\n+            array_push($nameParts, $package->getDistReference(), $package->getDistType());\n         } else {\n-            $nameParts = array_merge($nameParts, array($package->getPrettyVersion(), $package->getDistReference()));\n+            array_push($nameParts, $package->getPrettyVersion(), $package->getDistReference());\n         }\n \n         if ($package->getSourceReference()) {\n@@ -94,16 +94,17 @@ public function getPackageFilename(PackageInterface $package)\n     \/**\n      * Create an archive of the specified package.\n      *\n-     * @param  PackageInterface          $package   The package to archive\n-     * @param  string                    $format    The format of the archive (zip, tar, ...)\n-     * @param  string                    $targetDir The directory where to build the archive\n-     * @param  string|null               $fileName  The relative file name to use for the archive, or null to generate\n-     *                                              the package name. Note that the format will be appended to this name\n+     * @param  PackageInterface          $package       The package to archive\n+     * @param  string                    $format        The format of the archive (zip, tar, ...)\n+     * @param  string                    $targetDir     The directory where to build the archive\n+     * @param  string|null               $fileName      The relative file name to use for the archive, or null to generate\n+     *                                                  the package name. Note that the format will be appended to this name\n+     * @param  bool                      $ignoreFilters Ignore filters when looking for files in the package\n      * @throws \\InvalidArgumentException\n      * @throws \\RuntimeException\n      * @return string                    The path of the created archive\n      *\/\n-    public function archive(PackageInterface $package, $format, $targetDir, $fileName = null)\n+    public function archive(PackageInterface $package, $format, $targetDir, $fileName = null, $ignoreFilters = false)\n     {\n         if (empty($format)) {\n             throw new \\InvalidArgumentException('Format must be specified');\n@@ -163,7 +164,7 @@ public function archive(PackageInterface $package, $format, $targetDir, $fileNam\n         $tempTarget = sys_get_temp_dir().'\/composer_archive'.uniqid().'.'.$format;\n         $filesystem->ensureDirectoryExists(dirname($tempTarget));\n \n-        $archivePath = $usableArchiver->archive($sourcePath, $tempTarget, $format, $package->getArchiveExcludes());\n+        $archivePath = $usableArchiver->archive($sourcePath, $tempTarget, $format, $package->getArchiveExcludes(), $ignoreFilters);\n         $filesystem->rename($archivePath, $target);\n \n         \/\/ cleanup temporary download"
        },
        {
            "sha": "4e5fa54f925187047e1be46f7d4ce7e6b40e472b",
            "filename": "src\/Composer\/Package\/Archiver\/ArchiverInterface.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/ArchiverInterface.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/ArchiverInterface.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Archiver\/ArchiverInterface.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -29,7 +29,7 @@\n      *\n      * @return string The path to the written archive file\n      *\/\n-    public function archive($sources, $target, $format, array $excludes = array());\n+    public function archive($sources, $target, $format, array $excludes = array(), $ignoreFilters = false);\n \n     \/**\n      * Format supported by the archiver."
        },
        {
            "sha": "18fa054045bc7186baa808a01879c0b2ff2ad0c6",
            "filename": "src\/Composer\/Package\/Archiver\/BaseExcludeFilter.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/BaseExcludeFilter.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/BaseExcludeFilter.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Archiver\/BaseExcludeFilter.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -71,7 +71,7 @@ public function filter($relativePath, $exclude)\n      * Processes a file containing exclude rules of different formats per line\n      *\n      * @param array    $lines      A set of lines to be parsed\n-     * @param callback $lineParser The parser to be used on each line\n+     * @param callable $lineParser The parser to be used on each line\n      *\n      * @return array Exclude patterns to be used in filter()\n      *\/"
        },
        {
            "sha": "f797348550ec26a84f79c17ce730d523c42375d5",
            "filename": "src\/Composer\/Package\/Archiver\/GitExcludeFilter.php",
            "status": "modified",
            "additions": 3,
            "deletions": 2,
            "changes": 5,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/GitExcludeFilter.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/GitExcludeFilter.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Archiver\/GitExcludeFilter.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -42,7 +42,8 @@ public function __construct($sourcePath)\n                 $this->parseLines(\n                     file($sourcePath.'\/.gitattributes'),\n                     array($this, 'parseGitAttributesLine')\n-            ));\n+                )\n+            );\n         }\n     }\n \n@@ -63,7 +64,7 @@ public function parseGitIgnoreLine($line)\n      *\n      * @param string $line A line from .gitattributes\n      *\n-     * @return array An exclude pattern for filter()\n+     * @return array|null An exclude pattern for filter()\n      *\/\n     public function parseGitAttributesLine($line)\n     {"
        },
        {
            "sha": "b83b7756bbcc13975054ef3daaff010da59b3830",
            "filename": "src\/Composer\/Package\/Archiver\/HgExcludeFilter.php",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/HgExcludeFilter.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/HgExcludeFilter.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Archiver\/HgExcludeFilter.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -54,7 +54,7 @@ public function __construct($sourcePath)\n      *\n      * @param string $line A line from .hgignore\n      *\n-     * @return array An exclude pattern for filter()\n+     * @return array|null An exclude pattern for filter()\n      *\/\n     public function parseHgIgnoreLine($line)\n     {\n@@ -70,9 +70,9 @@ public function parseHgIgnoreLine($line)\n \n         if ($this->patternMode == self::HG_IGNORE_GLOB) {\n             return $this->patternFromGlob($line);\n-        } else {\n-            return $this->patternFromRegex($line);\n         }\n+\n+        return $this->patternFromRegex($line);\n     }\n \n     \/**"
        },
        {
            "sha": "f9a392353e8ccac4bcd5319aeee4774c0f18aebb",
            "filename": "src\/Composer\/Package\/Archiver\/PharArchiver.php",
            "status": "modified",
            "additions": 8,
            "deletions": 7,
            "changes": 15,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/PharArchiver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/PharArchiver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Archiver\/PharArchiver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -20,21 +20,21 @@\n class PharArchiver implements ArchiverInterface\n {\n     protected static $formats = array(\n-        'zip'     => \\Phar::ZIP,\n-        'tar'     => \\Phar::TAR,\n-        'tar.gz'  => \\Phar::TAR,\n+        'zip' => \\Phar::ZIP,\n+        'tar' => \\Phar::TAR,\n+        'tar.gz' => \\Phar::TAR,\n         'tar.bz2' => \\Phar::TAR,\n     );\n \n     protected static $compressFormats = array(\n-        'tar.gz'  => \\Phar::GZ,\n+        'tar.gz' => \\Phar::GZ,\n         'tar.bz2' => \\Phar::BZ2,\n     );\n \n     \/**\n      * {@inheritdoc}\n      *\/\n-    public function archive($sources, $target, $format, array $excludes = array())\n+    public function archive($sources, $target, $format, array $excludes = array(), $ignoreFilters = false)\n     {\n         $sources = realpath($sources);\n \n@@ -53,7 +53,7 @@ public function archive($sources, $target, $format, array $excludes = array())\n             }\n \n             $phar = new \\PharData($target, null, null, static::$formats[$format]);\n-            $files = new ArchivableFilesFinder($sources, $excludes);\n+            $files = new ArchivableFilesFinder($sources, $excludes, $ignoreFilters);\n             $filesOnly = new ArchivableFilesFilter($files);\n             $phar->buildFromIterator($filesOnly, $sources);\n             $filesOnly->addEmptyDir($phar, $sources);\n@@ -76,7 +76,8 @@ public function archive($sources, $target, $format, array $excludes = array())\n \n             return $target;\n         } catch (\\UnexpectedValueException $e) {\n-            $message = sprintf(\"Could not create archive '%s' from '%s': %s\",\n+            $message = sprintf(\n+                \"Could not create archive '%s' from '%s': %s\",\n                 $target,\n                 $sources,\n                 $e->getMessage()"
        },
        {
            "sha": "65694cb883cd4791d999dd62bb87f69432f0ce83",
            "filename": "src\/Composer\/Package\/Archiver\/ZipArchiver.php",
            "status": "modified",
            "additions": 5,
            "deletions": 4,
            "changes": 9,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/ZipArchiver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Archiver\/ZipArchiver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Archiver\/ZipArchiver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -27,17 +27,17 @@ class ZipArchiver implements ArchiverInterface\n     \/**\n      * {@inheritdoc}\n      *\/\n-    public function archive($sources, $target, $format, array $excludes = array())\n+    public function archive($sources, $target, $format, array $excludes = array(), $ignoreFilters = false)\n     {\n         $fs = new Filesystem();\n         $sources = $fs->normalizePath($sources);\n \n         $zip = new ZipArchive();\n         $res = $zip->open($target, ZipArchive::CREATE);\n         if ($res === true) {\n-            $files = new ArchivableFilesFinder($sources, $excludes);\n+            $files = new ArchivableFilesFinder($sources, $excludes, $ignoreFilters);\n             foreach ($files as $file) {\n-                \/** @var $file \\SplFileInfo *\/\n+                \/** @var \\SplFileInfo $file *\/\n                 $filepath = strtr($file->getPath().\"\/\".$file->getFilename(), '\\\\', '\/');\n                 $localname = str_replace($sources.'\/', '', $filepath);\n                 if ($file->isDir()) {\n@@ -50,7 +50,8 @@ public function archive($sources, $target, $format, array $excludes = array())\n                 return $target;\n             }\n         }\n-        $message = sprintf(\"Could not create archive '%s' from '%s': %s\",\n+        $message = sprintf(\n+            \"Could not create archive '%s' from '%s': %s\",\n             $target,\n             $sources,\n             $zip->getStatusString()"
        },
        {
            "sha": "65ea6860fdc116fc14eaf94dfc585ddfcabb8402",
            "filename": "src\/Composer\/Package\/BasePackage.php",
            "status": "modified",
            "additions": 26,
            "deletions": 13,
            "changes": 39,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/BasePackage.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/BasePackage.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/BasePackage.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -23,25 +23,25 @@\n abstract class BasePackage implements PackageInterface\n {\n     public static $supportedLinkTypes = array(\n-        'require'   => array('description' => 'requires', 'method' => 'requires'),\n-        'conflict'  => array('description' => 'conflicts', 'method' => 'conflicts'),\n-        'provide'   => array('description' => 'provides', 'method' => 'provides'),\n-        'replace'   => array('description' => 'replaces', 'method' => 'replaces'),\n+        'require' => array('description' => 'requires', 'method' => 'requires'),\n+        'conflict' => array('description' => 'conflicts', 'method' => 'conflicts'),\n+        'provide' => array('description' => 'provides', 'method' => 'provides'),\n+        'replace' => array('description' => 'replaces', 'method' => 'replaces'),\n         'require-dev' => array('description' => 'requires (for development)', 'method' => 'devRequires'),\n     );\n \n-    const STABILITY_STABLE  = 0;\n-    const STABILITY_RC      = 5;\n-    const STABILITY_BETA    = 10;\n-    const STABILITY_ALPHA   = 15;\n-    const STABILITY_DEV     = 20;\n+    const STABILITY_STABLE = 0;\n+    const STABILITY_RC = 5;\n+    const STABILITY_BETA = 10;\n+    const STABILITY_ALPHA = 15;\n+    const STABILITY_DEV = 20;\n \n     public static $stabilities = array(\n         'stable' => self::STABILITY_STABLE,\n-        'RC'     => self::STABILITY_RC,\n-        'beta'   => self::STABILITY_BETA,\n-        'alpha'  => self::STABILITY_ALPHA,\n-        'dev'    => self::STABILITY_DEV,\n+        'RC' => self::STABILITY_RC,\n+        'beta' => self::STABILITY_BETA,\n+        'alpha' => self::STABILITY_ALPHA,\n+        'dev' => self::STABILITY_DEV,\n     );\n \n     \/**\n@@ -234,4 +234,17 @@ public function __clone()\n         $this->repository = null;\n         $this->id = -1;\n     }\n+\n+    \/**\n+     * Build a regexp from a package name, expanding * globs as required\n+     *\n+     * @param  string $whiteListedPattern\n+     * @return string\n+     *\/\n+    public static function packageNameToRegexp($whiteListedPattern)\n+    {\n+        $cleanedWhiteListedPattern = str_replace('\\\\*', '.*', preg_quote($whiteListedPattern));\n+\n+        return \"{^\" . $cleanedWhiteListedPattern . \"$}i\";\n+    }\n }"
        },
        {
            "sha": "c0ab98d9c41de799791832ae007f89f18aa0bb67",
            "filename": "src\/Composer\/Package\/Comparer\/Comparer.php",
            "status": "added",
            "additions": 129,
            "deletions": 0,
            "changes": 129,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Comparer\/Comparer.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Comparer\/Comparer.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Comparer\/Comparer.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -0,0 +1,129 @@\n+<?php\n+\n+\/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ *\/\n+\n+namespace Composer\\Package\\Comparer;\n+\n+\/**\n+ * class Comparer\n+ *\n+ * @author Hector Prats <hectorpratsortega@gmail.com>\n+ *\/\n+class Comparer\n+{\n+    private $source;\n+    private $update;\n+    private $changed;\n+\n+    public function setSource($source)\n+    {\n+        $this->source = $source;\n+    }\n+\n+    public function setUpdate($update)\n+    {\n+        $this->update = $update;\n+    }\n+\n+    public function getChanged($toString = false, $explicated = false)\n+    {\n+        $changed = $this->changed;\n+        if (!count($changed)) {\n+            return false;\n+        }\n+        if ($explicated) {\n+            foreach ($changed as $sectionKey => $itemSection) {\n+                foreach ($itemSection as $itemKey => $item) {\n+                    $changed[$sectionKey][$itemKey] = $item.' ('.$sectionKey.')';\n+                }\n+            }\n+        }\n+\n+        if ($toString) {\n+            foreach ($changed as $sectionKey => $itemSection) {\n+                foreach ($itemSection as $itemKey => $item) {\n+                    $changed['string'][] = $item.\"\\r\\n\";\n+                }\n+            }\n+            $changed = implode(\"\\r\\n\", $changed['string']);\n+        }\n+\n+        return $changed;\n+    }\n+\n+    public function doCompare()\n+    {\n+        $source = array();\n+        $destination = array();\n+        $this->changed = array();\n+        $currentDirectory = getcwd();\n+        chdir($this->source);\n+        $source = $this->doTree('.', $source);\n+        if (!is_array($source)) {\n+            return;\n+        }\n+        chdir($currentDirectory);\n+        chdir($this->update);\n+        $destination = $this->doTree('.', $destination);\n+        if (!is_array($destination)) {\n+            exit;\n+        }\n+        chdir($currentDirectory);\n+        foreach ($source as $dir => $value) {\n+            foreach ($value as $file => $hash) {\n+                if (isset($destination[$dir][$file])) {\n+                    if ($hash !== $destination[$dir][$file]) {\n+                        $this->changed['changed'][] = $dir.'\/'.$file;\n+                    }\n+                } else {\n+                    $this->changed['removed'][] = $dir.'\/'.$file;\n+                }\n+            }\n+        }\n+        foreach ($destination as $dir => $value) {\n+            foreach ($value as $file => $hash) {\n+                if (!isset($source[$dir][$file])) {\n+                    $this->changed['added'][] = $dir.'\/'.$file;\n+                }\n+            }\n+        }\n+    }\n+\n+    private function doTree($dir, &$array)\n+    {\n+        if ($dh = opendir($dir)) {\n+            while ($file = readdir($dh)) {\n+                if ($file !== '.' && $file !== '..') {\n+                    if (is_dir($dir.'\/'.$file)) {\n+                        if (!count($array)) {\n+                            $array[0] = 'Temp';\n+                        }\n+                        if (!$this->doTree($dir.'\/'.$file, $array)) {\n+                            return false;\n+                        }\n+                    } else {\n+                        if (filesize($dir.'\/'.$file)) {\n+                            set_time_limit(30);\n+                            $array[$dir][$file] = md5_file($dir.'\/'.$file);\n+                        }\n+                    }\n+                }\n+            }\n+            if (count($array) > 1 && isset($array['0'])) {\n+                unset($array['0']);\n+            }\n+\n+            return $array;\n+        }\n+\n+        return false;\n+    }\n+}"
        },
        {
            "sha": "5dbdb82e3fd12cf09e966e9c55be35ee29007331",
            "filename": "src\/Composer\/Package\/CompletePackage.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/CompletePackage.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/CompletePackage.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/CompletePackage.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -176,7 +176,7 @@ public function getSupport()\n      *\/\n     public function isAbandoned()\n     {\n-        return (boolean) $this->abandoned;\n+        return (bool) $this->abandoned;\n     }\n \n     \/**"
        },
        {
            "sha": "6593143d5325537b89a914cfc4dcad45c818bb26",
            "filename": "src\/Composer\/Package\/Dumper\/ArrayDumper.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Dumper\/ArrayDumper.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Dumper\/ArrayDumper.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Dumper\/ArrayDumper.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -133,7 +133,7 @@ private function dumpValues(PackageInterface $package, array $keys, array $data)\n             }\n \n             $getter = 'get'.ucfirst($method);\n-            $value  = $package->$getter();\n+            $value = $package->$getter();\n \n             if (null !== $value && !(is_array($value) && 0 === count($value))) {\n                 $data[$key] = $value;"
        },
        {
            "sha": "303cc3c1341c76b3b09e5b51f33d30f537480dbb",
            "filename": "src\/Composer\/Package\/Loader\/ArrayLoader.php",
            "status": "modified",
            "additions": 2,
            "deletions": 5,
            "changes": 7,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Loader\/ArrayLoader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Loader\/ArrayLoader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Loader\/ArrayLoader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -65,13 +65,10 @@ public function load(array $config, $class = 'Composer\\Package\\CompletePackage')\n         }\n \n         if (isset($config['bin'])) {\n-            if (!is_array($config['bin'])) {\n-                throw new \\UnexpectedValueException('Package '.$config['name'].'\\'s bin key should be an array, '.gettype($config['bin']).' given.');\n-            }\n-            foreach ($config['bin'] as $key => $bin) {\n+            foreach ((array) $config['bin'] as $key => $bin) {\n                 $config['bin'][$key] = ltrim($bin, '\/');\n             }\n-            $package->setBinaries($config['bin']);\n+            $package->setBinaries((array) $config['bin']);\n         }\n \n         if (isset($config['installation-source'])) {"
        },
        {
            "sha": "f917eb8385ab7088d3477ad96633dee049fb3412",
            "filename": "src\/Composer\/Package\/Loader\/RootPackageLoader.php",
            "status": "modified",
            "additions": 12,
            "deletions": 9,
            "changes": 21,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Loader\/RootPackageLoader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Loader\/RootPackageLoader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Loader\/RootPackageLoader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -68,22 +68,25 @@ public function load(array $config, $class = 'Composer\\Package\\RootPackage', $cw\n         }\n         $autoVersioned = false;\n         if (!isset($config['version'])) {\n+            $commit = null;\n+\n             \/\/ override with env var if available\n             if (getenv('COMPOSER_ROOT_VERSION')) {\n-                $version = getenv('COMPOSER_ROOT_VERSION');\n-                $commit = null;\n+                $config['version'] = getenv('COMPOSER_ROOT_VERSION');\n             } else {\n-                $versionData =  $this->versionGuesser->guessVersion($config, $cwd ?: getcwd());\n-                $version = $versionData['version'];\n-                $commit = $versionData['commit'];\n+                $versionData = $this->versionGuesser->guessVersion($config, $cwd ?: getcwd());\n+                if ($versionData) {\n+                    $config['version'] = $versionData['pretty_version'];\n+                    $config['version_normalized'] = $versionData['version'];\n+                    $commit = $versionData['commit'];\n+                }\n             }\n \n-            if (!$version) {\n-                $version = '1.0.0';\n+            if (!isset($config['version'])) {\n+                $config['version'] = '1.0.0';\n                 $autoVersioned = true;\n             }\n \n-            $config['version'] = $version;\n             if ($commit) {\n                 $config['source'] = array(\n                     'type' => '',\n@@ -227,7 +230,7 @@ private function extractReferences(array $requires, array $references)\n     {\n         foreach ($requires as $reqName => $reqVersion) {\n             $reqVersion = preg_replace('{^([^,\\s@]+) as .+$}', '$1', $reqVersion);\n-            if (preg_match('{^[^,\\s@]+?#([a-f0-9]+)$}', $reqVersion, $match) && 'dev' === ($stabilityName = VersionParser::parseStability($reqVersion))) {\n+            if (preg_match('{^[^,\\s@]+?#([a-f0-9]+)$}', $reqVersion, $match) && 'dev' === VersionParser::parseStability($reqVersion)) {\n                 $name = strtolower($reqName);\n                 $references[$name] = $match[1];\n             }"
        },
        {
            "sha": "f4753025bed6b1fefc3e2980bd771ece31346e88",
            "filename": "src\/Composer\/Package\/Loader\/ValidatingArrayLoader.php",
            "status": "modified",
            "additions": 52,
            "deletions": 13,
            "changes": 65,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Loader\/ValidatingArrayLoader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Loader\/ValidatingArrayLoader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Loader\/ValidatingArrayLoader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,11 +12,11 @@\n \n namespace Composer\\Package\\Loader;\n \n-use Composer\\Package;\n use Composer\\Package\\BasePackage;\n use Composer\\Semver\\Constraint\\Constraint;\n use Composer\\Package\\Version\\VersionParser;\n use Composer\\Repository\\PlatformRepository;\n+use Composer\\Spdx\\SpdxLicenses;\n \n \/**\n  * @author Jordi Boggiano <j.boggiano@seld.be>\n@@ -64,33 +64,72 @@ public function load(array $config, $class = 'Composer\\Package\\CompletePackage')\n             }\n         }\n \n+        if (!empty($this->config['config']['platform'])) {\n+            foreach ((array) $this->config['config']['platform'] as $key => $platform) {\n+                try {\n+                    $this->versionParser->normalize($platform);\n+                } catch (\\Exception $e) {\n+                    $this->errors[] = 'config.platform.' . $key . ' : invalid value ('.$platform.'): '.$e->getMessage();\n+                }\n+            }\n+        }\n+\n         $this->validateRegex('type', '[A-Za-z0-9-]+');\n         $this->validateString('target-dir');\n         $this->validateArray('extra');\n-        $this->validateFlatArray('bin');\n-        $this->validateArray('scripts'); \/\/ TODO validate event names & listener syntax\n-        $this->validateString('description');\n-        $this->validateUrl('homepage');\n-        $this->validateFlatArray('keywords', '[\\p{N}\\p{L} ._-]+');\n \n-        if (isset($this->config['license'])) {\n-            if (is_string($this->config['license'])) {\n-                $this->validateRegex('license', '[A-Za-z0-9+. ()-]+');\n+        if (isset($this->config['bin'])) {\n+            if (is_string($this->config['bin'])) {\n+                $this->validateString('bin');\n             } else {\n-                $this->validateFlatArray('license', '[A-Za-z0-9+. ()-]+');\n+                $this->validateFlatArray('bin');\n             }\n         }\n \n+        $this->validateArray('scripts'); \/\/ TODO validate event names & listener syntax\n+        $this->validateString('description');\n+        $this->validateUrl('homepage');\n+        $this->validateFlatArray('keywords', '[\\p{N}\\p{L} ._-]+');\n+\n+        $releaseDate = null;\n         $this->validateString('time');\n         if (!empty($this->config['time'])) {\n             try {\n-                $date = new \\DateTime($this->config['time'], new \\DateTimeZone('UTC'));\n+                $releaseDate = new \\DateTime($this->config['time'], new \\DateTimeZone('UTC'));\n             } catch (\\Exception $e) {\n                 $this->errors[] = 'time : invalid value ('.$this->config['time'].'): '.$e->getMessage();\n                 unset($this->config['time']);\n             }\n         }\n \n+        \/\/ check for license validity on newly updated branches\n+        if (isset($this->config['license']) && (!$releaseDate || $releaseDate->getTimestamp() >= strtotime('-8days'))) {\n+            if (is_array($this->config['license']) || is_string($this->config['license'])) {\n+                $licenses = (array) $this->config['license'];\n+\n+                \/\/ strip proprietary since it's not a valid SPDX identifier, but is accepted by composer\n+                foreach ($licenses as $key => $license) {\n+                    if ('proprietary' === $license) {\n+                        unset($licenses[$key]);\n+                    }\n+                }\n+\n+                $licenseValidator = new SpdxLicenses();\n+                if (count($licenses) === 1 && !$licenseValidator->validate($licenses) && $licenseValidator->validate(trim($licenses[0]))) {\n+                    $this->warnings[] = sprintf(\n+                        'License %s must not contain extra spaces, make sure to trim it.',\n+                        json_encode($this->config['license'])\n+                    );\n+                } elseif (array() !== $licenses && !$licenseValidator->validate($licenses)) {\n+                    $this->warnings[] = sprintf(\n+                        'License %s is not a valid SPDX license identifier, see https:\/\/spdx.org\/licenses\/ if you use an open license.' . PHP_EOL .\n+                        'If the software is closed-source, you may use \"proprietary\" as license.',\n+                        json_encode($this->config['license'])\n+                    );\n+                }\n+            }\n+        }\n+\n         if ($this->validateArray('authors') && !empty($this->config['authors'])) {\n             foreach ($this->config['authors'] as $key => $author) {\n                 if (!is_array($author)) {\n@@ -122,7 +161,7 @@ public function load(array $config, $class = 'Composer\\Package\\CompletePackage')\n         }\n \n         if ($this->validateArray('support') && !empty($this->config['support'])) {\n-            foreach (array('issues', 'forum', 'wiki', 'source', 'email', 'irc', 'docs', 'rss') as $key) {\n+            foreach (array('issues', 'forum', 'wiki', 'source', 'email', 'irc', 'docs', 'rss', 'chat') as $key) {\n                 if (isset($this->config['support'][$key]) && !is_string($this->config['support'][$key])) {\n                     $this->errors[] = 'support.'.$key.' : invalid value, must be a string';\n                     unset($this->config['support'][$key]);\n@@ -139,7 +178,7 @@ public function load(array $config, $class = 'Composer\\Package\\CompletePackage')\n                 unset($this->config['support']['irc']);\n             }\n \n-            foreach (array('issues', 'forum', 'wiki', 'source', 'docs') as $key) {\n+            foreach (array('issues', 'forum', 'wiki', 'source', 'docs', 'chat') as $key) {\n                 if (isset($this->config['support'][$key]) && !$this->filterUrl($this->config['support'][$key])) {\n                     $this->warnings[] = 'support.'.$key.' : invalid value ('.$this->config['support'][$key].'), must be an http\/https URL';\n                     unset($this->config['support'][$key]);"
        },
        {
            "sha": "57ec7423377a6091de42c61b90c273501802b005",
            "filename": "src\/Composer\/Package\/Locker.php",
            "status": "modified",
            "additions": 6,
            "deletions": 5,
            "changes": 11,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Locker.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Locker.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Locker.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -102,7 +102,7 @@ public static function getContentHash($composerFileContents)\n     }\n \n     \/**\n-     * Checks whether locker were been locked (lockfile found).\n+     * Checks whether locker has been locked (lockfile found).\n      *\n      * @return bool\n      *\/\n@@ -289,7 +289,7 @@ public function setLockData(array $packages, $devPackages, array $platformReqs,\n     {\n         $lock = array(\n             '_readme' => array('This file locks the dependencies of your project to a known state',\n-                               'Read more about it at https:\/\/getcomposer.org\/doc\/01-basic-usage.md#composer-lock-the-lock-file',\n+                               'Read more about it at https:\/\/getcomposer.org\/doc\/01-basic-usage.md#installing-dependencies',\n                                'This file is @gener'.'ated automatically', ),\n             'content-hash' => $this->contentHash,\n             'packages' => null,\n@@ -355,12 +355,13 @@ private function lockPackages(array $packages)\n                 continue;\n             }\n \n-            $name    = $package->getPrettyName();\n+            $name = $package->getPrettyName();\n             $version = $package->getPrettyVersion();\n \n             if (!$name || !$version) {\n                 throw new \\LogicException(sprintf(\n-                    'Package \"%s\" has no version or name and can not be locked', $package\n+                    'Package \"%s\" has no version or name and can not be locked',\n+                    $package\n                 ));\n             }\n \n@@ -432,6 +433,6 @@ private function getPackageTime(PackageInterface $package)\n             }\n         }\n \n-        return $datetime ? $datetime->format('Y-m-d H:i:s') : null;\n+        return $datetime ? $datetime->format(DATE_RFC3339) : null;\n     }\n }"
        },
        {
            "sha": "e6ff84965ad15f1d56e691c97e132924c9b1de08",
            "filename": "src\/Composer\/Package\/Version\/VersionGuesser.php",
            "status": "modified",
            "additions": 28,
            "deletions": 27,
            "changes": 55,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Version\/VersionGuesser.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Version\/VersionGuesser.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Version\/VersionGuesser.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -59,28 +59,40 @@ public function __construct(Config $config, ProcessExecutor $process, SemverVers\n      * @param array  $packageConfig\n      * @param string $path          Path to guess into\n      *\n-     * @return array versionData, 'version', 'pretty_version' and 'commit' keys\n+     * @return null|array versionData, 'version', 'pretty_version' and 'commit' keys\n      *\/\n     public function guessVersion(array $packageConfig, $path)\n     {\n         if (function_exists('proc_open')) {\n             $versionData = $this->guessGitVersion($packageConfig, $path);\n-            if (null !== $versionData) {\n-                return $versionData;\n+            if (null !== $versionData && null !== $versionData['version']) {\n+                return $this->postprocess($versionData);\n             }\n \n             $versionData = $this->guessHgVersion($packageConfig, $path);\n-            if (null !== $versionData) {\n-                return $versionData;\n+            if (null !== $versionData && null !== $versionData['version']) {\n+                return $this->postprocess($versionData);\n             }\n \n             $versionData = $this->guessFossilVersion($packageConfig, $path);\n-            if (null !== $versionData) {\n-                return $versionData;\n+            if (null !== $versionData && null !== $versionData['version']) {\n+                return $this->postprocess($versionData);\n             }\n \n-            return $this->guessSvnVersion($packageConfig, $path);\n+            $versionData = $this->guessSvnVersion($packageConfig, $path);\n+            if (null !== $versionData && null !== $versionData['version']) {\n+                return $this->postprocess($versionData);\n+            }\n+        }\n+    }\n+\n+    private function postprocess(array $versionData)\n+    {\n+        if ('-dev' === substr($versionData['version'], -4) && preg_match('{\\.9{7}}', $versionData['version'])) {\n+            $versionData['pretty_version'] = preg_replace('{(\\.9{7})+}', '.x', $versionData['version']);\n         }\n+\n+        return $versionData;\n     }\n \n     private function guessGitVersion(array $packageConfig, $path)\n@@ -89,6 +101,7 @@ private function guessGitVersion(array $packageConfig, $path)\n         $commit = null;\n         $version = null;\n         $prettyVersion = null;\n+        $isDetached = false;\n \n         \/\/ try to fetch current version from git branch\n         if (0 === $this->process->execute('git branch --no-color --no-abbrev -v', $output, $path)) {\n@@ -97,18 +110,16 @@ private function guessGitVersion(array $packageConfig, $path)\n \n             \/\/ find current branch and collect all branch names\n             foreach ($this->process->splitLines($output) as $branch) {\n-                if ($branch && preg_match('{^(?:\\* ) *(\\(no branch\\)|\\(detached from \\S+\\)|\\(HEAD detached at FETCH_HEAD\\)|\\S+) *([a-f0-9]+) .*$}', $branch, $match)) {\n+                if ($branch && preg_match('{^(?:\\* ) *(\\(no branch\\)|\\(detached from \\S+\\)|\\(HEAD detached at \\S+\\)|\\S+) *([a-f0-9]+) .*$}', $branch, $match)) {\n                     if ($match[1] === '(no branch)' || substr($match[1], 0, 10) === '(detached ' || substr($match[1], 0, 17) === '(HEAD detached at') {\n                         $version = 'dev-' . $match[2];\n                         $prettyVersion = $version;\n                         $isFeatureBranch = true;\n+                        $isDetached = true;\n                     } else {\n                         $version = $this->versionParser->normalizeBranch($match[1]);\n                         $prettyVersion = 'dev-' . $match[1];\n                         $isFeatureBranch = 0 === strpos($version, 'dev-');\n-                        if ('9999999-dev' === $version) {\n-                            $version = $prettyVersion;\n-                        }\n                     }\n \n                     if ($match[2]) {\n@@ -131,7 +142,7 @@ private function guessGitVersion(array $packageConfig, $path)\n             }\n         }\n \n-        if (!$version) {\n+        if (!$version || $isDetached) {\n             $result = $this->versionFromGitTags($path);\n             if ($result) {\n                 $version = $result['version'];\n@@ -173,11 +184,11 @@ private function guessHgVersion(array $packageConfig, $path)\n             $isFeatureBranch = 0 === strpos($version, 'dev-');\n \n             if ('9999999-dev' === $version) {\n-                $version = 'dev-' . $branch;\n+                return array('version' => $version, 'commit' => null, 'pretty_version' => 'dev-'.$branch);\n             }\n \n             if (!$isFeatureBranch) {\n-                return $version;\n+                return array('version' => $version, 'commit' => null, 'pretty_version' => $version);\n             }\n \n             \/\/ re-use the HgDriver to fetch branches (this properly includes bookmarks)\n@@ -215,8 +226,8 @@ private function guessFeatureVersion(array $packageConfig, $version, array $bran\n                     break;\n                 }\n \n-                \/\/ do not compare against other feature branches\n-                if ($candidate === $branch || !preg_match('{^(master|trunk|default|develop|\\d+\\..+)$}', $candidate, $match)) {\n+                \/\/ do not compare against itself or other feature branches\n+                if ($candidate === $branch || !preg_match('{^(' . $nonFeatureBranches . '|master|trunk|default|develop|\\d+\\..+)$}', $candidate, $match)) {\n                     continue;\n                 }\n \n@@ -229,9 +240,6 @@ private function guessFeatureVersion(array $packageConfig, $version, array $bran\n                     $length = strlen($output);\n                     $version = $this->versionParser->normalizeBranch($candidate);\n                     $prettyVersion = 'dev-' . $match[1];\n-                    if ('9999999-dev' === $version) {\n-                        $version = $prettyVersion;\n-                    }\n                 }\n             }\n         }\n@@ -249,10 +257,6 @@ private function guessFossilVersion(array $packageConfig, $path)\n             $branch = trim($output);\n             $version = $this->versionParser->normalizeBranch($branch);\n             $prettyVersion = 'dev-' . $branch;\n-\n-            if ('9999999-dev' === $version) {\n-                $version = $prettyVersion;\n-            }\n         }\n \n         \/\/ try to fetch current version from fossil tags\n@@ -284,9 +288,6 @@ private function guessSvnVersion(array $packageConfig, $path)\n                     \/\/ we are in a branches path\n                     $version = $this->versionParser->normalizeBranch($matches[3]);\n                     $prettyVersion = 'dev-' . $matches[3];\n-                    if ('9999999-dev' === $version) {\n-                        $version = $prettyVersion;\n-                    }\n \n                     return array('version' => $version, 'commit' => '', 'pretty_version' => $prettyVersion);\n                 }"
        },
        {
            "sha": "831c61d5f66c477ca616732295ea26db7a749bb4",
            "filename": "src\/Composer\/Package\/Version\/VersionParser.php",
            "status": "modified",
            "additions": 18,
            "deletions": 2,
            "changes": 20,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Version\/VersionParser.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Package\/Version\/VersionParser.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Package\/Version\/VersionParser.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,7 +12,9 @@\n \n namespace Composer\\Package\\Version;\n \n+use Composer\\Repository\\PlatformRepository;\n use Composer\\Semver\\VersionParser as SemverVersionParser;\n+use Composer\\Semver\\Semver;\n \n class VersionParser extends SemverVersionParser\n {\n@@ -47,13 +49,13 @@ public function parseNameVersionPairs(array $pairs)\n \n         for ($i = 0, $count = count($pairs); $i < $count; $i++) {\n             $pair = preg_replace('{^([^=: ]+)[=: ](.*)$}', '$1 $2', trim($pairs[$i]));\n-            if (false === strpos($pair, ' ') && isset($pairs[$i + 1]) && false === strpos($pairs[$i + 1], '\/')) {\n+            if (false === strpos($pair, ' ') && isset($pairs[$i + 1]) && false === strpos($pairs[$i + 1], '\/') && !preg_match(PlatformRepository::PLATFORM_PACKAGE_REGEX, $pairs[$i + 1])) {\n                 $pair .= ' '.$pairs[$i + 1];\n                 $i++;\n             }\n \n             if (strpos($pair, ' ')) {\n-                list($name, $version) = explode(\" \", $pair, 2);\n+                list($name, $version) = explode(' ', $pair, 2);\n                 $result[] = array('name' => $name, 'version' => $version);\n             } else {\n                 $result[] = array('name' => $pair);\n@@ -62,4 +64,18 @@ public function parseNameVersionPairs(array $pairs)\n \n         return $result;\n     }\n+\n+    \/**\n+     * @return bool\n+     *\/\n+    public static function isUpgrade($normalizedFrom, $normalizedTo)\n+    {\n+        if (substr($normalizedFrom, 0, 4) === 'dev-' || substr($normalizedTo, 0, 4) === 'dev-') {\n+            return true;\n+        }\n+\n+        $sorted = Semver::sort(array($normalizedTo, $normalizedFrom));\n+\n+        return $sorted[0] === $normalizedFrom;\n+    }\n }"
        },
        {
            "sha": "0f94bf37c2311165dbe64fc0173ebe07724de31f",
            "filename": "src\/Composer\/Plugin\/Capability\/CommandProvider.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Plugin\/Capability\/CommandProvider.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Plugin\/Capability\/CommandProvider.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Plugin\/Capability\/CommandProvider.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -25,7 +25,7 @@\n interface CommandProvider extends Capability\n {\n     \/**\n-     * Retreives an array of commands\n+     * Retrieves an array of commands\n      *\n      * @return \\Composer\\Command\\BaseCommand[]\n      *\/"
        },
        {
            "sha": "1fb368baf370b1000f15e3910e5d83c2439fc6ba",
            "filename": "src\/Composer\/Plugin\/PluginEvents.php",
            "status": "modified",
            "additions": 10,
            "deletions": 0,
            "changes": 10,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Plugin\/PluginEvents.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Plugin\/PluginEvents.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Plugin\/PluginEvents.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -48,4 +48,14 @@ class PluginEvents\n      * @var string\n      *\/\n     const PRE_FILE_DOWNLOAD = 'pre-file-download';\n+\n+    \/**\n+     * The PRE_COMMAND_RUN event occurs before a command is executed and lets you modify the input arguments\/options\n+     *\n+     * The event listener method receives a\n+     * Composer\\Plugin\\PreCommandRunEvent instance.\n+     *\n+     * @var string\n+     *\/\n+    const PRE_COMMAND_RUN = 'pre-command-run';\n }"
        },
        {
            "sha": "e8f4b58c31dc6c3f7a06a7caa75ff5a952915264",
            "filename": "src\/Composer\/Plugin\/PluginManager.php",
            "status": "modified",
            "additions": 7,
            "deletions": 7,
            "changes": 14,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Plugin\/PluginManager.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Plugin\/PluginManager.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Plugin\/PluginManager.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -169,7 +169,7 @@ public function registerPackage(PackageInterface $package, $failOnMissingClasses\n         $generator = $this->composer->getAutoloadGenerator();\n         $autoloads = array();\n         foreach ($autoloadPackages as $autoloadPackage) {\n-            $downloadPath = $this->getInstallPath($autoloadPackage, ($globalRepo && $globalRepo->hasPackage($autoloadPackage)));\n+            $downloadPath = $this->getInstallPath($autoloadPackage, $globalRepo && $globalRepo->hasPackage($autoloadPackage));\n             $autoloads[] = array($autoloadPackage, $downloadPath);\n         }\n \n@@ -232,7 +232,7 @@ protected function getPluginApiVersion()\n     public function addPlugin(PluginInterface $plugin)\n     {\n         $this->io->writeError('Loading plugin '.get_class($plugin), true, IOInterface::DEBUG);\n-        $this->plugins[] =  $plugin;\n+        $this->plugins[] = $plugin;\n         $plugin->activate($this->composer, $this->io);\n \n         if ($plugin instanceof EventSubscriberInterface) {\n@@ -307,7 +307,7 @@ private function lookupInstalledPackage(Pool $pool, Link $link)\n     {\n         $packages = $pool->whatProvides($link->getTarget(), $link->getConstraint());\n \n-        return (!empty($packages)) ? $packages[0] : null;\n+        return !empty($packages) ? $packages[0] : null;\n     }\n \n     \/**\n@@ -383,10 +383,10 @@ public function getPluginCapability(PluginInterface $plugin, $capabilityClassNam\n     }\n \n     \/**\n-     * @param  string          $capabilityClassName The fully qualified name of the API interface which the plugin may provide\n-     *                                              an implementation of.\n-     * @param  array           $ctorArgs            Arguments passed to Capability's constructor.\n-     *                                              Keeping it an array will allow future values to be passed w\\o changing the signature.\n+     * @param  string       $capabilityClassName The fully qualified name of the API interface which the plugin may provide\n+     *                                           an implementation of.\n+     * @param  array        $ctorArgs            Arguments passed to Capability's constructor.\n+     *                                           Keeping it an array will allow future values to be passed w\\o changing the signature.\n      * @return Capability[]\n      *\/\n     public function getPluginCapabilities($capabilityClassName, array $ctorArgs = array())"
        },
        {
            "sha": "60ad05b4ae0225ad00c3367ab2cb129278f8ab35",
            "filename": "src\/Composer\/Plugin\/PreCommandRunEvent.php",
            "status": "added",
            "additions": 68,
            "deletions": 0,
            "changes": 68,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Plugin\/PreCommandRunEvent.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Plugin\/PreCommandRunEvent.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Plugin\/PreCommandRunEvent.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -0,0 +1,68 @@\n+<?php\n+\n+\/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ *\/\n+\n+namespace Composer\\Plugin;\n+\n+use Composer\\EventDispatcher\\Event;\n+use Symfony\\Component\\Console\\Input\\InputInterface;\n+\n+\/**\n+ * The pre command run event.\n+ *\n+ * @author Jordi Boggiano <j.boggiano@seld.be>\n+ *\/\n+class PreCommandRunEvent extends Event\n+{\n+    \/**\n+     * @var InputInterface\n+     *\/\n+    private $input;\n+\n+    \/**\n+     * @var string\n+     *\/\n+    private $command;\n+\n+    \/**\n+     * Constructor.\n+     *\n+     * @param string         $name    The event name\n+     * @param InputInterface $input\n+     * @param string         $command The command about to be executed\n+     *\/\n+    public function __construct($name, InputInterface $input, $command)\n+    {\n+        parent::__construct($name);\n+        $this->input = $input;\n+        $this->command = $command;\n+    }\n+\n+    \/**\n+     * Returns the console input\n+     *\n+     * @return InputInterface\n+     *\/\n+    public function getInput()\n+    {\n+        return $this->input;\n+    }\n+\n+    \/**\n+     * Returns the command about to be executed\n+     *\n+     * @return string\n+     *\/\n+    public function getCommand()\n+    {\n+        return $this->command;\n+    }\n+}"
        },
        {
            "sha": "c64890b8dce619b42b398a4cdf4ddce491f810d0",
            "filename": "src\/Composer\/Question\/StrictConfirmationQuestion.php",
            "status": "added",
            "additions": 94,
            "deletions": 0,
            "changes": 94,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Question\/StrictConfirmationQuestion.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Question\/StrictConfirmationQuestion.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Question\/StrictConfirmationQuestion.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -0,0 +1,94 @@\n+<?php\n+\n+\/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ *\/\n+\n+namespace Composer\\Question;\n+\n+use Symfony\\Component\\Console\\Exception\\InvalidArgumentException;\n+use Symfony\\Component\\Console\\Question\\Question;\n+\n+\/**\n+ * Represents a yes\/no question\n+ * Enforces strict responses rather than non-standard answers counting as default\n+ * Based on Symfony\\Component\\Console\\Question\\ConfirmationQuestion\n+ *\n+ * @author Theo Tonge <theo@theotonge.co.uk>\n+ *\/\n+class StrictConfirmationQuestion extends Question\n+{\n+    private $trueAnswerRegex;\n+    private $falseAnswerRegex;\n+\n+    \/**\n+     * Constructor.s\n+     *\n+     * @param string $question         The question to ask to the user\n+     * @param bool   $default          The default answer to return, true or false\n+     * @param string $trueAnswerRegex  A regex to match the \"yes\" answer\n+     * @param string $falseAnswerRegex A regex to match the \"no\" answer\n+     *\/\n+    public function __construct($question, $default = true, $trueAnswerRegex = '\/^y(?:es)?$\/i', $falseAnswerRegex = '\/^no?$\/i')\n+    {\n+        parent::__construct($question, (bool) $default);\n+\n+        $this->trueAnswerRegex = $trueAnswerRegex;\n+        $this->falseAnswerRegex = $falseAnswerRegex;\n+        $this->setNormalizer($this->getDefaultNormalizer());\n+        $this->setValidator($this->getDefaultValidator());\n+    }\n+\n+    \/**\n+     * Returns the default answer normalizer.\n+     *\n+     * @return callable\n+     *\/\n+    private function getDefaultNormalizer()\n+    {\n+        $default = $this->getDefault();\n+        $trueRegex = $this->trueAnswerRegex;\n+        $falseRegex = $this->falseAnswerRegex;\n+\n+        return function ($answer) use ($default, $trueRegex, $falseRegex) {\n+            if (is_bool($answer)) {\n+                return $answer;\n+            }\n+            if (empty($answer) && !empty($default)) {\n+                return $default;\n+            }\n+\n+            if (preg_match($trueRegex, $answer)) {\n+                return true;\n+            }\n+\n+            if (preg_match($falseRegex, $answer)) {\n+                return false;\n+            }\n+\n+            return null;\n+        };\n+    }\n+\n+    \/**\n+     * Returns the default answer validator.\n+     *\n+     * @return callable\n+     *\/\n+    private function getDefaultValidator()\n+    {\n+        return function ($answer) {\n+            if (!is_bool($answer)) {\n+                throw new InvalidArgumentException('Please answer yes, y, no, or n.');\n+            }\n+\n+            return $answer;\n+        };\n+    }\n+}"
        },
        {
            "sha": "079d34c54c51d1a4308bba5ced3bb94a9726fd20",
            "filename": "src\/Composer\/Repository\/ArtifactRepository.php",
            "status": "modified",
            "additions": 9,
            "deletions": 2,
            "changes": 11,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/ArtifactRepository.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/ArtifactRepository.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/ArtifactRepository.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -84,7 +84,7 @@ private function scanDirectory($path)\n      * Find a file by name, returning the one that has the shortest path.\n      *\n      * @param \\ZipArchive $zip\n-     * @param $filename\n+     * @param string $filename\n      * @return bool|int\n      *\/\n     private function locateFile(\\ZipArchive $zip, $filename)\n@@ -126,18 +126,25 @@ private function locateFile(\\ZipArchive $zip, $filename)\n     private function getComposerInformation(\\SplFileInfo $file)\n     {\n         $zip = new \\ZipArchive();\n-        $zip->open($file->getPathname());\n+        if ($zip->open($file->getPathname()) !== true) {\n+            return false;\n+        }\n \n         if (0 == $zip->numFiles) {\n+            $zip->close();\n+\n             return false;\n         }\n \n         $foundFileIndex = $this->locateFile($zip, 'composer.json');\n         if (false === $foundFileIndex) {\n+            $zip->close();\n+\n             return false;\n         }\n \n         $configurationFileName = $zip->getNameIndex($foundFileIndex);\n+        $zip->close();\n \n         $composerFile = \"zip:\/\/{$file->getPathname()}#$configurationFileName\";\n         $json = file_get_contents($composerFile);"
        },
        {
            "sha": "2b30b63cd1ad1d7a6a40c31adeef2881d04067fa",
            "filename": "src\/Composer\/Repository\/BaseRepository.php",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/BaseRepository.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/BaseRepository.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/BaseRepository.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -39,7 +39,7 @@\n      *\/\n     public function getDependents($needle, $constraint = null, $invert = false, $recurse = true, $packagesFound = null)\n     {\n-        $needles = (array) $needle;\n+        $needles = array_map('strtolower', (array) $needle);\n         $results = array();\n \n         \/\/ initialize the array with the needles before any recursion occurs\n@@ -78,7 +78,7 @@ public function getDependents($needle, $constraint = null, $invert = false, $rec\n             foreach ($links as $link) {\n                 foreach ($needles as $needle) {\n                     if ($link->getTarget() === $needle) {\n-                        if (is_null($constraint) || (($link->getConstraint()->matches($constraint) === !$invert))) {\n+                        if ($constraint === null || ($link->getConstraint()->matches($constraint) === !$invert)) {\n                             \/\/ already displayed this node's dependencies, cutting short\n                             if (in_array($link->getSource(), $packagesInTree)) {\n                                 $results[$link->getSource()] = array($package, $link, false);"
        },
        {
            "sha": "8a5da2b232dd660a0f627016d3a02b2df380aa40",
            "filename": "src\/Composer\/Repository\/ComposerRepository.php",
            "status": "modified",
            "additions": 43,
            "deletions": 12,
            "changes": 55,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/ComposerRepository.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/ComposerRepository.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/ComposerRepository.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -90,6 +90,12 @@ public function __construct(array $repoConfig, IOInterface $io, Config $config,\n         $this->config = $config;\n         $this->options = $repoConfig['options'];\n         $this->url = $repoConfig['url'];\n+\n+        \/\/ force url for packagist.org to repo.packagist.org\n+        if (preg_match('{^(?P<proto>https?):\/\/packagist\\.org\/?$}i', $this->url, $match)) {\n+            $this->url = $match['proto'].':\/\/repo.packagist.org';\n+        }\n+\n         $this->baseUrl = rtrim(preg_replace('{(?:\/[^\/\\\\\\\\]+\\.json)?(?:[?#].*)?$}', '', $this->url), '\/');\n         $this->io = $io;\n         $this->cache = new Cache($io, $config->get('cache-repo-dir').'\/'.preg_replace('{[^a-z0-9.]}i', '-', $this->url), 'a-z0-9.$');\n@@ -201,9 +207,21 @@ public function search($query, $mode = 0, $type = null)\n \n             $hostname = parse_url($url, PHP_URL_HOST) ?: $url;\n             $json = $this->rfs->getContents($hostname, $url, false);\n-            $results = JsonFile::parseJson($json, $url);\n+            $search = JsonFile::parseJson($json, $url);\n+\n+            if (empty($search['results'])) {\n+                return array();\n+            }\n+\n+            $results = array();\n+            foreach ($search['results'] as $result) {\n+                \/\/ do not show virtual packages in results as they are not directly useful from a composer perspective\n+                if (empty($result['virtual'])) {\n+                    $results[] = $result;\n+                }\n+            }\n \n-            return $results['results'];\n+            return $results;\n         }\n \n         if ($this->hasProviders()) {\n@@ -497,15 +515,14 @@ protected function loadRootServerFile()\n                     $this->sourceMirrors['hg'][] = array('url' => $mirror['hg-url'], 'preferred' => !empty($mirror['preferred']));\n                 }\n                 if (!empty($mirror['dist-url'])) {\n-                    $this->distMirrors[] = array('url' => $mirror['dist-url'], 'preferred' => !empty($mirror['preferred']));\n+                    $this->distMirrors[] = array(\n+                        'url' => $this->canonicalizeUrl($mirror['dist-url']),\n+                        'preferred' => !empty($mirror['preferred']),\n+                    );\n                 }\n             }\n         }\n \n-        if (!empty($data['warning'])) {\n-            $this->io->writeError('<warning>Warning from '.$this->url.': '.$data['warning'].'<\/warning>');\n-        }\n-\n         if (!empty($data['providers-lazy-url'])) {\n             $this->lazyProvidersUrl = $this->canonicalizeUrl($data['providers-lazy-url']);\n             $this->hasProviders = true;\n@@ -528,10 +545,10 @@ protected function loadRootServerFile()\n         }\n \n         \/\/ force values for packagist\n-        if (preg_match('{^https?:\/\/packagist.org\/?$}i', $this->url) && !empty($this->repoConfig['force-lazy-providers'])) {\n-            $this->url = 'https:\/\/packagist.org';\n-            $this->baseUrl = 'https:\/\/packagist.org';\n-            $this->lazyProvidersUrl = $this->canonicalizeUrl('https:\/\/packagist.org\/p\/%package%.json');\n+        if (preg_match('{^https?:\/\/repo\\.packagist\\.org\/?$}i', $this->url) && !empty($this->repoConfig['force-lazy-providers'])) {\n+            $this->url = 'https:\/\/repo.packagist.org';\n+            $this->baseUrl = 'https:\/\/repo.packagist.org';\n+            $this->lazyProvidersUrl = $this->canonicalizeUrl('https:\/\/repo.packagist.org\/p\/%package%.json');\n             $this->providersUrl = null;\n         } elseif (!empty($this->repoConfig['force-lazy-providers'])) {\n             $this->lazyProvidersUrl = $this->canonicalizeUrl('\/p\/%package%.json');\n@@ -678,10 +695,17 @@ protected function fetchFile($filename, $cacheKey = null, $sha256 = null, $store\n                     }\n \n                     \/\/ TODO use scarier wording once we know for sure it doesn't do false positives anymore\n-                    throw new RepositorySecurityException('The contents of '.$filename.' do not match its signature. This should indicate a man-in-the-middle attack. Try running composer again and report this if you think it is a mistake.');\n+                    throw new RepositorySecurityException('The contents of '.$filename.' do not match its signature. This could indicate a man-in-the-middle attack or e.g. antivirus software corrupting files. Try running composer again and report this if you think it is a mistake.');\n                 }\n \n                 $data = JsonFile::parseJson($json, $filename);\n+                if (!empty($data['warning'])) {\n+                    $this->io->writeError('<warning>Warning from '.$this->url.': '.$data['warning'].'<\/warning>');\n+                }\n+                if (!empty($data['info'])) {\n+                    $this->io->writeError('<info>Info from '.$this->url.': '.$data['info'].'<\/info>');\n+                }\n+\n                 if ($cacheKey) {\n                     if ($storeLastModifiedTime) {\n                         $lastModifiedDate = $rfs->findHeaderValue($rfs->getLastHeaders(), 'last-modified');\n@@ -745,6 +769,13 @@ protected function fetchFileIfLastModified($filename, $cacheKey, $lastModifiedTi\n                 }\n \n                 $data = JsonFile::parseJson($json, $filename);\n+                if (!empty($data['warning'])) {\n+                    $this->io->writeError('<warning>Warning from '.$this->url.': '.$data['warning'].'<\/warning>');\n+                }\n+                if (!empty($data['info'])) {\n+                    $this->io->writeError('<info>Info from '.$this->url.': '.$data['info'].'<\/info>');\n+                }\n+\n                 $lastModifiedDate = $rfs->findHeaderValue($rfs->getLastHeaders(), 'last-modified');\n                 if ($lastModifiedDate) {\n                     $data['last-modified'] = $lastModifiedDate;"
        },
        {
            "sha": "bde55aad3cb22b7f36b416c5efe086df680d14d5",
            "filename": "src\/Composer\/Repository\/FilesystemRepository.php",
            "status": "modified",
            "additions": 4,
            "deletions": 0,
            "changes": 4,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/FilesystemRepository.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/FilesystemRepository.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/FilesystemRepository.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -83,6 +83,10 @@ public function write()\n             $data[] = $dumper->dump($package);\n         }\n \n+        usort($data, function ($a, $b) {\n+            return strcmp($a['name'], $b['name']);\n+        });\n+\n         $this->file->write($data);\n     }\n }"
        },
        {
            "sha": "61ebc8d8cd3caf75bee99ca54ec0ccb3dcf5f1d0",
            "filename": "src\/Composer\/Repository\/PathRepository.php",
            "status": "modified",
            "additions": 21,
            "deletions": 2,
            "changes": 23,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/PathRepository.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/PathRepository.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/PathRepository.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -142,9 +142,20 @@ protected function initialize()\n             );\n             $package['transport-options'] = $this->options;\n \n+            \/\/ carry over the root package version if this path repo is in the same git repository as root package\n+            if (!isset($package['version']) && ($rootVersion = getenv('COMPOSER_ROOT_VERSION'))) {\n+                if (\n+                    0 === $this->process->execute('git rev-parse HEAD', $ref1, $path)\n+                    && 0 === $this->process->execute('git rev-parse HEAD', $ref2)\n+                    && $ref1 === $ref2\n+                ) {\n+                    $package['version'] = $rootVersion;\n+                }\n+            }\n+\n             if (!isset($package['version'])) {\n                 $versionData = $this->versionGuesser->guessVersion($package, $path);\n-                $package['version'] = $versionData['version'] ?: 'dev-master';\n+                $package['version'] = $versionData['pretty_version'] ?: 'dev-master';\n             }\n \n             $output = '';\n@@ -163,9 +174,17 @@ protected function initialize()\n      *\/\n     private function getUrlMatches()\n     {\n+        $flags = GLOB_MARK | GLOB_ONLYDIR;\n+\n+        if (defined('GLOB_BRACE')) {\n+            $flags |= GLOB_BRACE;\n+        } elseif (strpos($this->url, '{') !== false || strpos($this->url, '}') !== false) {\n+            throw new \\RuntimeException('The operating system does not support GLOB_BRACE which is required for the url '. $this->url);\n+        }\n+\n         \/\/ Ensure environment-specific path separators are normalized to URL separators\n         return array_map(function ($val) {\n             return rtrim(str_replace(DIRECTORY_SEPARATOR, '\/', $val), '\/');\n-        }, glob($this->url, GLOB_MARK | GLOB_ONLYDIR));\n+        }, glob($this->url, $flags));\n     }\n }"
        },
        {
            "sha": "9b26eb9db9def96068a82919a9ff96efe1f282a1",
            "filename": "src\/Composer\/Repository\/Pear\/BaseChannelReader.php",
            "status": "modified",
            "additions": 4,
            "deletions": 4,
            "changes": 8,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Pear\/BaseChannelReader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Pear\/BaseChannelReader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Pear\/BaseChannelReader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -44,8 +44,8 @@ protected function __construct(RemoteFilesystem $rfs)\n     \/**\n      * Read content from remote filesystem.\n      *\n-     * @param $origin string server\n-     * @param $path   string relative path to content\n+     * @param string $origin server\n+     * @param string $path   relative path to content\n      * @throws \\UnexpectedValueException\n      * @return \\SimpleXMLElement\n      *\/\n@@ -63,8 +63,8 @@ protected function requestContent($origin, $path)\n     \/**\n      * Read xml content from remote filesystem\n      *\n-     * @param $origin string server\n-     * @param $path   string relative path to content\n+     * @param string $origin server\n+     * @param string $path   relative path to content\n      * @throws \\UnexpectedValueException\n      * @return \\SimpleXMLElement\n      *\/"
        },
        {
            "sha": "73cc9152e1eaaf1d675ccb9474da24ebeb8f0819",
            "filename": "src\/Composer\/Repository\/Pear\/ChannelReader.php",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Pear\/ChannelReader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Pear\/ChannelReader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Pear\/ChannelReader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -44,7 +44,7 @@ public function __construct(RemoteFilesystem $rfs)\n     \/**\n      * Reads PEAR channel through REST interface and builds list of packages\n      *\n-     * @param $url string PEAR Channel url\n+     * @param string $url PEAR Channel url\n      * @throws \\UnexpectedValueException\n      * @return ChannelInfo\n      *\/\n@@ -70,8 +70,8 @@ public function read($url)\n     \/**\n      * Reads channel supported REST interfaces and selects one of them\n      *\n-     * @param $channelXml \\SimpleXMLElement\n-     * @param $supportedVersions string[] supported PEAR REST protocols\n+     * @param \\SimpleXMLElement $channelXml\n+     * @param string[] $supportedVersions supported PEAR REST protocols\n      * @return array|null hash with selected version and baseUrl\n      *\/\n     private function selectRestVersion($channelXml, $supportedVersions)"
        },
        {
            "sha": "489914d5d804b097df92775e0b5791a5fd5cf172",
            "filename": "src\/Composer\/Repository\/Pear\/ChannelRest10Reader.php",
            "status": "modified",
            "additions": 10,
            "deletions": 11,
            "changes": 21,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Pear\/ChannelRest10Reader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Pear\/ChannelRest10Reader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Pear\/ChannelRest10Reader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -39,7 +39,7 @@ public function __construct($rfs)\n     \/**\n      * Reads package descriptions using PEAR Rest 1.0 interface\n      *\n-     * @param $baseUrl  string base Url interface\n+     * @param string $baseUrl base Url interface\n      *\n      * @return PackageInfo[]\n      *\/\n@@ -52,7 +52,7 @@ public function read($baseUrl)\n      * Read list of packages from\n      *  {baseUrl}\/p\/packages.xml\n      *\n-     * @param $baseUrl string\n+     * @param string $baseUrl\n      * @return PackageInfo[]\n      *\/\n     private function readPackages($baseUrl)\n@@ -75,8 +75,8 @@ private function readPackages($baseUrl)\n      * Read package info from\n      *  {baseUrl}\/p\/{package}\/info.xml\n      *\n-     * @param $baseUrl      string\n-     * @param $packageName  string\n+     * @param string $baseUrl\n+     * @param string $packageName\n      * @return PackageInfo\n      *\/\n     private function readPackage($baseUrl, $packageName)\n@@ -105,8 +105,8 @@ private function readPackage($baseUrl, $packageName)\n      * Read package releases from\n      *  {baseUrl}\/p\/{package}\/allreleases.xml\n      *\n-     * @param $baseUrl      string\n-     * @param $packageName  string\n+     * @param string $baseUrl\n+     * @param string $packageName\n      * @throws \\Composer\\Downloader\\TransportException|\\Exception\n      * @return ReleaseInfo[]                                      hash array with keys as version numbers\n      *\/\n@@ -146,9 +146,9 @@ private function readPackageReleases($baseUrl, $packageName)\n      * Read package dependencies from\n      *  {baseUrl}\/p\/{package}\/deps.{version}.txt\n      *\n-     * @param $baseUrl      string\n-     * @param $packageName  string\n-     * @param $version      string\n+     * @param string $baseUrl\n+     * @param string $packageName\n+     * @param string $version\n      * @return DependencyInfo[]\n      *\/\n     private function readPackageReleaseDependencies($baseUrl, $packageName, $version)\n@@ -158,8 +158,7 @@ private function readPackageReleaseDependencies($baseUrl, $packageName, $version\n         $depthPath = '\/r\/' . strtolower($packageName) . '\/deps.' . $version . '.txt';\n         $content = $this->requestContent($baseUrl, $depthPath);\n         $dependencyArray = unserialize($content);\n-        $result = $dependencyReader->buildDependencyInfo($dependencyArray);\n \n-        return $result;\n+        return $dependencyReader->buildDependencyInfo($dependencyArray);\n     }\n }"
        },
        {
            "sha": "f9e05f5bec010cc455eccba8ffcc6ad844ddf461",
            "filename": "src\/Composer\/Repository\/Pear\/ChannelRest11Reader.php",
            "status": "modified",
            "additions": 5,
            "deletions": 5,
            "changes": 10,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Pear\/ChannelRest11Reader.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Pear\/ChannelRest11Reader.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Pear\/ChannelRest11Reader.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -35,7 +35,7 @@ public function __construct($rfs)\n     \/**\n      * Reads package descriptions using PEAR Rest 1.1 interface\n      *\n-     * @param $baseUrl  string base Url interface\n+     * @param string $baseUrl base Url interface\n      *\n      * @return PackageInfo[]\n      *\/\n@@ -48,7 +48,7 @@ public function read($baseUrl)\n      * Read list of channel categories from\n      *  {baseUrl}\/c\/categories.xml\n      *\n-     * @param $baseUrl string\n+     * @param string $baseUrl\n      * @return PackageInfo[]\n      *\/\n     private function readChannelPackages($baseUrl)\n@@ -70,8 +70,8 @@ private function readChannelPackages($baseUrl)\n      * Read packages from\n      *  {baseUrl}\/c\/{category}\/packagesinfo.xml\n      *\n-     * @param $baseUrl      string\n-     * @param $categoryName string\n+     * @param string $baseUrl\n+     * @param string $categoryName\n      * @return PackageInfo[]\n      *\/\n     private function readCategoryPackages($baseUrl, $categoryName)\n@@ -92,7 +92,7 @@ private function readCategoryPackages($baseUrl, $categoryName)\n     \/**\n      * Parses package node.\n      *\n-     * @param $packageInfo  \\SimpleXMLElement   xml element describing package\n+     * @param \\SimpleXMLElement $packageInfo  xml element describing package\n      * @return PackageInfo\n      *\/\n     private function parsePackage($packageInfo)"
        },
        {
            "sha": "24f8fb9f949ee0434a93f164cc0f0d2ce4bff007",
            "filename": "src\/Composer\/Repository\/Pear\/PackageDependencyParser.php",
            "status": "modified",
            "additions": 11,
            "deletions": 8,
            "changes": 19,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Pear\/PackageDependencyParser.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Pear\/PackageDependencyParser.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Pear\/PackageDependencyParser.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -22,7 +22,7 @@ class PackageDependencyParser\n     \/**\n      * Builds dependency information. It detects used package.xml format.\n      *\n-     * @param $depArray array\n+     * @param array $depArray\n      * @return DependencyInfo\n      *\/\n     public function buildDependencyInfo($depArray)\n@@ -46,7 +46,7 @@ public function buildDependencyInfo($depArray)\n      * { type=\"php|os|sapi|ext|pkg\" rel=\"has|not|eq|ge|gt|le|lt\" optional=\"yes\"\n      *   channel=\"channelName\" name=\"extName|packageName\" }\n      *\n-     * @param $depArray array Dependency data in package.xml 1.0 format\n+     * @param array $depArray Dependency data in package.xml 1.0 format\n      * @return DependencyConstraint[]\n      *\/\n     private function buildDependency10Info($depArray)\n@@ -115,7 +115,7 @@ private function buildDependency10Info($depArray)\n     \/**\n      * Builds dependency information from package.xml 2.0 format\n      *\n-     * @param $depArray array Dependency data in package.xml 1.0 format\n+     * @param array $depArray Dependency data in package.xml 1.0 format\n      * @return DependencyInfo\n      *\/\n     private function buildDependency20Info($depArray)\n@@ -187,8 +187,8 @@ private function buildDependency20Info($depArray)\n     \/**\n      * Builds dependency constraint of 'extension' type\n      *\n-     * @param $depItem array dependency constraint or array of dependency constraints\n-     * @param $depType string target type of building constraint.\n+     * @param array $depItem dependency constraint or array of dependency constraints\n+     * @param string $depType target type of building constraint.\n      * @return DependencyConstraint[]\n      *\/\n     private function buildDepExtensionConstraints($depItem, $depType)\n@@ -217,8 +217,8 @@ private function buildDepExtensionConstraints($depItem, $depType)\n     \/**\n      * Builds dependency constraint of 'package' type\n      *\n-     * @param $depItem array dependency constraint or array of dependency constraints\n-     * @param $depType string target type of building constraint.\n+     * @param array $depItem dependency constraint or array of dependency constraints\n+     * @param string $depType target type of building constraint.\n      * @return DependencyConstraint[]\n      *\/\n     private function buildDepPackageConstraints($depItem, $depType)\n@@ -229,6 +229,9 @@ private function buildDepPackageConstraints($depItem, $depType)\n \n         $result = array();\n         foreach ($depItem as $subDepItem) {\n+            if (!array_key_exists('channel', $subDepItem)) {\n+                $subDepItem['channel'] = $subDepItem['uri'];\n+            }\n             $depChannelName = $subDepItem['channel'];\n             $depPackageName = $subDepItem['name'];\n             $depVersionConstraint = $this->parse20VersionConstraint($subDepItem);\n@@ -284,7 +287,7 @@ private function parse20VersionConstraint(array $data)\n     \/**\n      * Softened version parser\n      *\n-     * @param $version\n+     * @param string $version\n      * @return null|string\n      *\/\n     private function parseVersion($version)"
        },
        {
            "sha": "6d6e04d2fc2e16a33a754c7a6926efc422e1aee8",
            "filename": "src\/Composer\/Repository\/PlatformRepository.php",
            "status": "modified",
            "additions": 23,
            "deletions": 6,
            "changes": 29,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/PlatformRepository.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/PlatformRepository.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/PlatformRepository.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,19 +12,19 @@\n \n namespace Composer\\Repository;\n \n-use Composer\\XdebugHandler;\n use Composer\\Package\\CompletePackage;\n use Composer\\Package\\PackageInterface;\n use Composer\\Package\\Version\\VersionParser;\n use Composer\\Plugin\\PluginInterface;\n use Composer\\Util\\Silencer;\n+use Composer\\XdebugHandler\\XdebugHandler;\n \n \/**\n  * @author Jordi Boggiano <j.boggiano@seld.be>\n  *\/\n class PlatformRepository extends ArrayRepository\n {\n-    const PLATFORM_PACKAGE_REGEX = '{^(?:php(?:-64bit|-ipv6|-zts|-debug)?|hhvm|(?:ext|lib)-[^\/]+)$}i';\n+    const PLATFORM_PACKAGE_REGEX = '{^(?:php(?:-64bit|-ipv6|-zts|-debug)?|hhvm|(?:ext|lib)-[^\/ ]+)$}i';\n \n     private $versionParser;\n \n@@ -120,7 +120,7 @@ protected function initialize()\n         }\n \n         \/\/ Check for xdebug in a restarted process\n-        if (!in_array('xdebug', $loadedExtensions, true) && ($prettyVersion = strval(getenv(XdebugHandler::ENV_VERSION)))) {\n+        if (!in_array('xdebug', $loadedExtensions, true) && ($prettyVersion = XdebugHandler::getSkippedVersion())) {\n             $this->addExtension('xdebug', $prettyVersion);\n         }\n \n@@ -157,6 +157,13 @@ protected function initialize()\n \n                     break;\n \n+                case 'imagick':\n+                    $imagick = new \\Imagick();\n+                    $imageMagickVersion = $imagick->getVersion();\n+                    preg_match('\/^ImageMagick ([\\d.]+)-(\\d+)\/', $imageMagickVersion['versionString'], $matches);\n+                    $prettyVersion = \"{$matches[1]}.{$matches[2]}\";\n+                    break;\n+\n                 case 'libxml':\n                     $prettyVersion = LIBXML_DOTTED_VERSION;\n                     break;\n@@ -236,15 +243,25 @@ public function addPackage(PackageInterface $package)\n         \/\/ Skip if overridden\n         if (isset($this->overrides[$package->getName()])) {\n             $overrider = $this->findPackage($package->getName(), '*');\n-            $overrider->setDescription($overrider->getDescription().' (actual: '.$package->getPrettyVersion().')');\n+            if ($package->getVersion() === $overrider->getVersion()) {\n+                $actualText = 'same as actual';\n+            } else {\n+                $actualText = 'actual: '.$package->getPrettyVersion();\n+            }\n+            $overrider->setDescription($overrider->getDescription().' ('.$actualText.')');\n \n             return;\n         }\n \n         \/\/ Skip if PHP is overridden and we are adding a php-* package\n         if (isset($this->overrides['php']) && 0 === strpos($package->getName(), 'php-')) {\n             $overrider = $this->addOverriddenPackage($this->overrides['php'], $package->getPrettyName());\n-            $overrider->setDescription($overrider->getDescription().' (actual: '.$package->getPrettyVersion().')');\n+            if ($package->getVersion() === $overrider->getVersion()) {\n+                $actualText = 'same as actual';\n+            } else {\n+                $actualText = 'actual: '.$package->getPrettyVersion();\n+            }\n+            $overrider->setDescription($overrider->getDescription().' ('.$actualText.')');\n \n             return;\n         }\n@@ -266,7 +283,7 @@ private function addOverriddenPackage(array $override, $name = null)\n     \/**\n      * Parses the version and adds a new package to the repository\n      *\n-     * @param string $name\n+     * @param string      $name\n      * @param null|string $prettyVersion\n      *\/\n     private function addExtension($name, $prettyVersion)"
        },
        {
            "sha": "ca479a7fdd46bc8b411bc6416546a08e43adaeac",
            "filename": "src\/Composer\/Repository\/RepositoryFactory.php",
            "status": "modified",
            "additions": 3,
            "deletions": 0,
            "changes": 3,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/RepositoryFactory.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/RepositoryFactory.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/RepositoryFactory.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -119,11 +119,14 @@ public static function manager(IOInterface $io, Config $config, EventDispatcher\n         $rm->setRepositoryClass('package', 'Composer\\Repository\\PackageRepository');\n         $rm->setRepositoryClass('pear', 'Composer\\Repository\\PearRepository');\n         $rm->setRepositoryClass('git', 'Composer\\Repository\\VcsRepository');\n+        $rm->setRepositoryClass('git-bitbucket', 'Composer\\Repository\\VcsRepository');\n+        $rm->setRepositoryClass('github', 'Composer\\Repository\\VcsRepository');\n         $rm->setRepositoryClass('gitlab', 'Composer\\Repository\\VcsRepository');\n         $rm->setRepositoryClass('svn', 'Composer\\Repository\\VcsRepository');\n         $rm->setRepositoryClass('fossil', 'Composer\\Repository\\VcsRepository');\n         $rm->setRepositoryClass('perforce', 'Composer\\Repository\\VcsRepository');\n         $rm->setRepositoryClass('hg', 'Composer\\Repository\\VcsRepository');\n+        $rm->setRepositoryClass('hg-bitbucket', 'Composer\\Repository\\VcsRepository');\n         $rm->setRepositoryClass('artifact', 'Composer\\Repository\\ArtifactRepository');\n         $rm->setRepositoryClass('path', 'Composer\\Repository\\PathRepository');\n "
        },
        {
            "sha": "9a2aaf3b5c3f9ba8e9fa72531ec2d0a1d28ba0ca",
            "filename": "src\/Composer\/Repository\/RepositoryInterface.php",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/RepositoryInterface.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/RepositoryInterface.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/RepositoryInterface.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -65,10 +65,10 @@ public function getPackages();\n     \/**\n      * Searches the repository for packages containing the query\n      *\n-     * @param  string $query search query\n-     * @param  int    $mode  a set of SEARCH_* constants to search on, implementations should do a best effort only\n+     * @param string $query search query\n+     * @param int    $mode  a set of SEARCH_* constants to search on, implementations should do a best effort only\n      *\n-     * @return \\array[] an array of array('name' => '...', 'description' => '...')\n+     * @return array[] an array of array('name' => '...', 'description' => '...')\n      *\/\n     public function search($query, $mode = 0);\n }"
        },
        {
            "sha": "87b82d14d720b89c2ef377c83c188521e5fb818a",
            "filename": "src\/Composer\/Repository\/RepositoryManager.php",
            "status": "modified",
            "additions": 4,
            "deletions": 3,
            "changes": 7,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/RepositoryManager.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/RepositoryManager.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/RepositoryManager.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -54,6 +54,7 @@ public function __construct(IOInterface $io, Config $config, EventDispatcher $ev\n     public function findPackage($name, $constraint)\n     {\n         foreach ($this->repositories as $repository) {\n+            \/** @var RepositoryInterface $repository *\/\n             if ($package = $repository->findPackage($name, $constraint)) {\n                 return $package;\n             }\n@@ -68,13 +69,13 @@ public function findPackage($name, $constraint)\n      * @param string                                                 $name       package name\n      * @param string|\\Composer\\Semver\\Constraint\\ConstraintInterface $constraint package version or version constraint to match against\n      *\n-     * @return array\n+     * @return PackageInterface[]\n      *\/\n     public function findPackages($name, $constraint)\n     {\n         $packages = array();\n \n-        foreach ($this->repositories as $repository) {\n+        foreach ($this->getRepositories() as $repository) {\n             $packages = array_merge($packages, $repository->findPackages($name, $constraint));\n         }\n \n@@ -147,7 +148,7 @@ public function setRepositoryClass($type, $class)\n     \/**\n      * Returns all repositories, except local one.\n      *\n-     * @return array\n+     * @return RepositoryInterface[]\n      *\/\n     public function getRepositories()\n     {"
        },
        {
            "sha": "24a4af4dd58e0115dd09219dc835ae61f49db961",
            "filename": "src\/Composer\/Repository\/Vcs\/BitbucketDriver.php",
            "status": "modified",
            "additions": 251,
            "deletions": 13,
            "changes": 264,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/BitbucketDriver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/BitbucketDriver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Vcs\/BitbucketDriver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,5 +1,15 @@\n <?php\n \n+\/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ *\/\n+\n namespace Composer\\Repository\\Vcs;\n \n use Composer\\Cache;\n@@ -18,11 +28,18 @@\n     protected $tags;\n     protected $branches;\n     protected $infoCache = array();\n+    protected $branchesUrl = '';\n+    protected $tagsUrl = '';\n+    protected $homeUrl = '';\n+    protected $website = '';\n+    protected $cloneHttpsUrl = '';\n \n     \/**\n      * @var VcsDriver\n      *\/\n     protected $fallbackDriver;\n+    \/** @var string|null if set either git or hg *\/\n+    protected $vcsType;\n \n     \/**\n      * {@inheritDoc}\n@@ -39,11 +56,58 @@ public function initialize()\n                 $this->config->get('cache-repo-dir'),\n                 $this->originUrl,\n                 $this->owner,\n-                $this->repository\n+                $this->repository,\n             ))\n         );\n     }\n \n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    public function getUrl()\n+    {\n+        if ($this->fallbackDriver) {\n+            return $this->fallbackDriver->getUrl();\n+        }\n+\n+        return $this->cloneHttpsUrl;\n+    }\n+\n+    \/**\n+     * Attempts to fetch the repository data via the BitBucket API and\n+     * sets some parameters which are used in other methods\n+     *\n+     * @return bool\n+     *\/\n+    protected function getRepoData()\n+    {\n+        $resource = sprintf(\n+            'https:\/\/api.bitbucket.org\/2.0\/repositories\/%s\/%s?%s',\n+            $this->owner,\n+            $this->repository,\n+            http_build_query(\n+                array('fields' => '-project,-owner'),\n+                null,\n+                '&'\n+            )\n+        );\n+\n+        $repoData = JsonFile::parseJson($this->getContentsWithOAuthCredentials($resource, true), $resource);\n+        if ($this->fallbackDriver) {\n+            return false;\n+        }\n+        $this->parseCloneUrls($repoData['links']['clone']);\n+\n+        $this->hasIssues = !empty($repoData['has_issues']);\n+        $this->branchesUrl = $repoData['links']['branches']['href'];\n+        $this->tagsUrl = $repoData['links']['tags']['href'];\n+        $this->homeUrl = $repoData['links']['html']['href'];\n+        $this->website = $repoData['website'];\n+        $this->vcsType = $repoData['scm'];\n+\n+        return true;\n+    }\n+\n     \/**\n      * {@inheritDoc}\n      *\/\n@@ -102,6 +166,9 @@ public function getComposerInformation($identifier)\n                     $this->repository\n                 );\n             }\n+            if (!isset($composer['homepage'])) {\n+                $composer['homepage'] = empty($this->website) ? $this->homeUrl : $this->website;\n+            }\n \n             $this->infoCache[$identifier] = $composer;\n \n@@ -122,14 +189,22 @@ public function getFileContent($file, $identifier)\n             return $this->fallbackDriver->getFileContent($file, $identifier);\n         }\n \n-        $resource = $this->getScheme() . ':\/\/api.bitbucket.org\/1.0\/repositories\/'\n-                    . $this->owner . '\/' . $this->repository . '\/src\/' . $identifier . '\/' . $file;\n-        $fileData = JsonFile::parseJson($this->getContents($resource), $resource);\n-        if (!is_array($fileData) || ! array_key_exists('data', $fileData)) {\n-            return null;\n+        if (strpos($identifier, '\/') !== false) {\n+            $branches = $this->getBranches();\n+            if (isset($branches[$identifier])) {\n+                $identifier = $branches[$identifier];\n+            }\n         }\n \n-        return $fileData['data'];\n+        $resource = sprintf(\n+            'https:\/\/api.bitbucket.org\/2.0\/repositories\/%s\/%s\/src\/%s\/%s',\n+            $this->owner,\n+            $this->repository,\n+            $identifier,\n+            $file\n+        );\n+\n+        return $this->getContentsWithOAuthCredentials($resource);\n     }\n \n     \/**\n@@ -141,18 +216,143 @@ public function getChangeDate($identifier)\n             return $this->fallbackDriver->getChangeDate($identifier);\n         }\n \n-        $resource = $this->getScheme() . ':\/\/api.bitbucket.org\/1.0\/repositories\/'\n-                    . $this->owner . '\/' . $this->repository . '\/changesets\/' . $identifier;\n-        $changeset = JsonFile::parseJson($this->getContents($resource), $resource);\n+        $resource = sprintf(\n+            'https:\/\/api.bitbucket.org\/2.0\/repositories\/%s\/%s\/commit\/%s?fields=date',\n+            $this->owner,\n+            $this->repository,\n+            $identifier\n+        );\n+        $commit = JsonFile::parseJson($this->getContentsWithOAuthCredentials($resource), $resource);\n \n-        return new \\DateTime($changeset['timestamp']);\n+        return new \\DateTime($commit['date']);\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    public function getSource($identifier)\n+    {\n+        if ($this->fallbackDriver) {\n+            return $this->fallbackDriver->getSource($identifier);\n+        }\n+\n+        return array('type' => $this->vcsType, 'url' => $this->getUrl(), 'reference' => $identifier);\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    public function getDist($identifier)\n+    {\n+        if ($this->fallbackDriver) {\n+            return $this->fallbackDriver->getDist($identifier);\n+        }\n+\n+        $url = sprintf(\n+            'https:\/\/bitbucket.org\/%s\/%s\/get\/%s.zip',\n+            $this->owner,\n+            $this->repository,\n+            $identifier\n+        );\n+\n+        return array('type' => 'zip', 'url' => $url, 'reference' => $identifier, 'shasum' => '');\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    public function getTags()\n+    {\n+        if ($this->fallbackDriver) {\n+            return $this->fallbackDriver->getTags();\n+        }\n+\n+        if (null === $this->tags) {\n+            $this->tags = array();\n+            $resource = sprintf(\n+                '%s?%s',\n+                $this->tagsUrl,\n+                http_build_query(\n+                    array(\n+                        'pagelen' => 100,\n+                        'fields' => 'values.name,values.target.hash,next',\n+                        'sort' => '-target.date',\n+                    ),\n+                    null,\n+                    '&'\n+                )\n+            );\n+            $hasNext = true;\n+            while ($hasNext) {\n+                $tagsData = JsonFile::parseJson($this->getContentsWithOAuthCredentials($resource), $resource);\n+                foreach ($tagsData['values'] as $data) {\n+                    $this->tags[$data['name']] = $data['target']['hash'];\n+                }\n+                if (empty($tagsData['next'])) {\n+                    $hasNext = false;\n+                } else {\n+                    $resource = $tagsData['next'];\n+                }\n+            }\n+            if ($this->vcsType === 'hg') {\n+                unset($this->tags['tip']);\n+            }\n+        }\n+\n+        return $this->tags;\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    public function getBranches()\n+    {\n+        if ($this->fallbackDriver) {\n+            return $this->fallbackDriver->getBranches();\n+        }\n+\n+        if (null === $this->branches) {\n+            $this->branches = array();\n+            $resource = sprintf(\n+                '%s?%s',\n+                $this->branchesUrl,\n+                http_build_query(\n+                    array(\n+                        'pagelen' => 100,\n+                        'fields' => 'values.name,values.target.hash,values.heads,next',\n+                        'sort' => '-target.date',\n+                    ),\n+                    null,\n+                    '&'\n+                )\n+            );\n+            $hasNext = true;\n+            while ($hasNext) {\n+                $branchData = JsonFile::parseJson($this->getContentsWithOAuthCredentials($resource), $resource);\n+                foreach ($branchData['values'] as $data) {\n+                    \/\/ skip headless branches which seem to be deleted branches that bitbucket nevertheless returns in the API\n+                    if ($this->vcsType === 'hg' && empty($data['heads'])) {\n+                        continue;\n+                    }\n+\n+                    $this->branches[$data['name']] = $data['target']['hash'];\n+                }\n+                if (empty($branchData['next'])) {\n+                    $hasNext = false;\n+                } else {\n+                    $resource = $branchData['next'];\n+                }\n+            }\n+        }\n+\n+        return $this->branches;\n     }\n \n     \/**\n      * Get the remote content.\n      *\n-     * @param string $url The URL of content\n-     * @param bool $fetchingRepoData\n+     * @param string $url              The URL of content\n+     * @param bool   $fetchingRepoData\n      *\n      * @return mixed The result\n      *\/\n@@ -201,5 +401,43 @@ protected function attemptCloneFallback()\n         }\n     }\n \n+    \/**\n+     * @param  string $url\n+     * @return void\n+     *\/\n     abstract protected function setupFallbackDriver($url);\n+\n+    \/**\n+     * @param  array $cloneLinks\n+     * @return void\n+     *\/\n+    protected function parseCloneUrls(array $cloneLinks)\n+    {\n+        foreach ($cloneLinks as $cloneLink) {\n+            if ($cloneLink['name'] === 'https') {\n+                \/\/ Format: https:\/\/(user@)bitbucket.org\/{user}\/{repo}\n+                \/\/ Strip username from URL (only present in clone URL's for private repositories)\n+                $this->cloneHttpsUrl = preg_replace('\/https:\\\/\\\/([^@]+@)?\/', 'https:\/\/', $cloneLink['href']);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * @return array|null\n+     *\/\n+    protected function getMainBranchData()\n+    {\n+        $resource = sprintf(\n+            'https:\/\/api.bitbucket.org\/2.0\/repositories\/%s\/%s?fields=mainbranch',\n+            $this->owner,\n+            $this->repository\n+        );\n+\n+        $data = JsonFile::parseJson($this->getContentsWithOAuthCredentials($resource), $resource);\n+        if (isset($data['mainbranch'])) {\n+            return $data['mainbranch'];\n+        }\n+\n+        return null;\n+    }\n }"
        },
        {
            "sha": "cc872474e0c3d3190e36269905e271cb1d69eb74",
            "filename": "src\/Composer\/Repository\/Vcs\/FossilDriver.php",
            "status": "modified",
            "additions": 61,
            "deletions": 41,
            "changes": 102,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/FossilDriver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/FossilDriver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Vcs\/FossilDriver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,7 +13,6 @@\n namespace Composer\\Repository\\Vcs;\n \n use Composer\\Config;\n-use Composer\\Json\\JsonFile;\n use Composer\\Util\\ProcessExecutor;\n use Composer\\Util\\Filesystem;\n use Composer\\IO\\IOInterface;\n@@ -35,54 +34,74 @@ class FossilDriver extends VcsDriver\n      *\/\n     public function initialize()\n     {\n-        if (Filesystem::isLocalPath($this->url)) {\n+        \/\/ Make sure fossil is installed and reachable.\n+        $this->checkFossil();\n+\n+        \/\/ Ensure we are allowed to use this URL by config.\n+        $this->config->prohibitUrlByConfig($this->url, $this->io);\n+\n+        \/\/ Only if url points to a locally accessible directory, assume it's the checkout directory.\n+        \/\/ Otherwise, it should be something fossil can clone from.\n+        if (Filesystem::isLocalPath($this->url) && is_dir($this->url)) {\n             $this->checkoutDir = $this->url;\n         } else {\n-            $this->repoFile = $this->config->get('cache-repo-dir') . '\/' . preg_replace('{[^a-z0-9]}i', '-', $this->url) . '.fossil';\n-            $this->checkoutDir = $this->config->get('cache-vcs-dir') . '\/' . preg_replace('{[^a-z0-9]}i', '-', $this->url) . '\/';\n+            $localName = preg_replace('{[^a-z0-9]}i', '-', $this->url);\n+            $this->repoFile = $this->config->get('cache-repo-dir') . '\/' . $localName . '.fossil';\n+            $this->checkoutDir = $this->config->get('cache-vcs-dir') . '\/' . $localName . '\/';\n \n-            $fs = new Filesystem();\n-            $fs->ensureDirectoryExists($this->checkoutDir);\n+            $this->updateLocalRepo();\n+        }\n \n-            if (!is_writable(dirname($this->checkoutDir))) {\n-                throw new \\RuntimeException('Can not clone '.$this->url.' to access package information. The \"'.$this->checkoutDir.'\" directory is not writable by the current user.');\n-            }\n+        $this->getTags();\n+        $this->getBranches();\n+    }\n \n-            \/\/ Ensure we are allowed to use this URL by config\n-            $this->config->prohibitUrlByConfig($this->url, $this->io);\n+    \/**\n+     * Check that fossil can be invoked via command line.\n+     *\/\n+    protected function checkFossil()\n+    {\n+        if (0 !== $this->process->execute('fossil version', $ignoredOutput)) {\n+            throw new \\RuntimeException(\"fossil was not found, check that it is installed and in your PATH env.\\n\\n\" . $this->process->getErrorOutput());\n+        }\n+    }\n \n-            \/\/ update the repo if it is a valid fossil repository\n-            if (is_file($this->repoFile) && is_dir($this->checkoutDir) && 0 === $this->process->execute('fossil info', $output, $this->checkoutDir)) {\n-                if (0 !== $this->process->execute('fossil pull', $output, $this->checkoutDir)) {\n-                    $this->io->writeError('<error>Failed to update '.$this->url.', package information from this repository may be outdated ('.$this->process->getErrorOutput().')<\/error>');\n-                }\n-            } else {\n-                \/\/ clean up directory and do a fresh clone into it\n-                $fs->removeDirectory($this->checkoutDir);\n-                $fs->remove($this->repoFile);\n+    \/**\n+     * Clone or update existing local fossil repository.\n+     *\/\n+    protected function updateLocalRepo()\n+    {\n+        $fs = new Filesystem();\n+        $fs->ensureDirectoryExists($this->checkoutDir);\n \n-                $fs->ensureDirectoryExists($this->checkoutDir);\n+        if (!is_writable(dirname($this->checkoutDir))) {\n+            throw new \\RuntimeException('Can not clone '.$this->url.' to access package information. The \"'.$this->checkoutDir.'\" directory is not writable by the current user.');\n+        }\n \n-                if (0 !== $this->process->execute(sprintf('fossil clone %s %s', ProcessExecutor::escape($this->url), ProcessExecutor::escape($this->repoFile)), $output)) {\n-                    $output = $this->process->getErrorOutput();\n+        \/\/ update the repo if it is a valid fossil repository\n+        if (is_file($this->repoFile) && is_dir($this->checkoutDir) && 0 === $this->process->execute('fossil info', $output, $this->checkoutDir)) {\n+            if (0 !== $this->process->execute('fossil pull', $output, $this->checkoutDir)) {\n+                $this->io->writeError('<error>Failed to update '.$this->url.', package information from this repository may be outdated ('.$this->process->getErrorOutput().')<\/error>');\n+            }\n+        } else {\n+            \/\/ clean up directory and do a fresh clone into it\n+            $fs->removeDirectory($this->checkoutDir);\n+            $fs->remove($this->repoFile);\n \n-                    if (0 !== $this->process->execute('fossil version', $ignoredOutput)) {\n-                        throw new \\RuntimeException('Failed to clone '.$this->url.', fossil was not found, check that it is installed and in your PATH env.' . \"\\n\\n\" . $this->process->getErrorOutput());\n-                    }\n+            $fs->ensureDirectoryExists($this->checkoutDir);\n \n-                    throw new \\RuntimeException('Failed to clone '.$this->url.' to repository ' . $this->repoFile . \"\\n\\n\" .$output);\n-                }\n+            if (0 !== $this->process->execute(sprintf('fossil clone %s %s', ProcessExecutor::escape($this->url), ProcessExecutor::escape($this->repoFile)), $output)) {\n+                $output = $this->process->getErrorOutput();\n \n-                if (0 !== $this->process->execute(sprintf('fossil open %s', ProcessExecutor::escape($this->repoFile)), $output, $this->checkoutDir)) {\n-                    $output = $this->process->getErrorOutput();\n+                throw new \\RuntimeException('Failed to clone '.$this->url.' to repository ' . $this->repoFile . \"\\n\\n\" .$output);\n+            }\n \n-                    throw new \\RuntimeException('Failed to open repository '.$this->repoFile.' in ' . $this->checkoutDir . \"\\n\\n\" .$output);\n-                }\n+            if (0 !== $this->process->execute(sprintf('fossil open %s --nested', ProcessExecutor::escape($this->repoFile)), $output, $this->checkoutDir)) {\n+                $output = $this->process->getErrorOutput();\n+\n+                throw new \\RuntimeException('Failed to open repository '.$this->repoFile.' in ' . $this->checkoutDir . \"\\n\\n\" .$output);\n             }\n         }\n-\n-        $this->getTags();\n-        $this->getBranches();\n     }\n \n     \/**\n@@ -141,8 +160,10 @@ public function getFileContent($file, $identifier)\n      *\/\n     public function getChangeDate($identifier)\n     {\n-        $this->process->execute(sprintf('fossil finfo composer.json | head -n 2 | tail -n 1 | awk \\'{print $1}\\''), $output, $this->checkoutDir);\n-        return new \\DateTime(trim($output), new \\DateTimeZone('UTC'));\n+        $this->process->execute('fossil finfo -b -n 1 composer.json', $output, $this->checkoutDir);\n+        list($ckout, $date, $message) = explode(' ', trim($output), 3);\n+\n+        return new \\DateTime($date, new \\DateTimeZone('UTC'));\n     }\n \n     \/**\n@@ -194,8 +215,7 @@ public static function supports(IOInterface $io, Config $config, $url, $deep = f\n             return true;\n         }\n \n-        if (preg_match('!\/fossil\/|\\.fossil!', $url))\n-        {\n+        if (preg_match('!\/fossil\/|\\.fossil!', $url)) {\n             return true;\n         }\n \n@@ -206,13 +226,13 @@ public static function supports(IOInterface $io, Config $config, $url, $deep = f\n                 return false;\n             }\n \n-            $process = new ProcessExecutor();\n+            $process = new ProcessExecutor($io);\n             \/\/ check whether there is a fossil repo in that path\n             if ($process->execute('fossil info', $output, $url) === 0) {\n                 return true;\n             }\n         }\n \n         return false;\n-   }\n+    }\n }"
        },
        {
            "sha": "c8a5c99052df2b8d2ded8d22bd142330556bf858",
            "filename": "src\/Composer\/Repository\/Vcs\/GitBitbucketDriver.php",
            "status": "modified",
            "additions": 13,
            "deletions": 85,
            "changes": 98,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/GitBitbucketDriver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/GitBitbucketDriver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Vcs\/GitBitbucketDriver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,17 +13,13 @@\n namespace Composer\\Repository\\Vcs;\n \n use Composer\\Config;\n-use Composer\\Json\\JsonFile;\n use Composer\\IO\\IOInterface;\n \n \/**\n  * @author Per Bernhardt <plb@webfactory.de>\n  *\/\n-class GitBitbucketDriver extends BitbucketDriver implements VcsDriverInterface\n+class GitBitbucketDriver extends BitbucketDriver\n {\n-\n-\n-\n     \/**\n      * {@inheritDoc}\n      *\/\n@@ -34,90 +30,22 @@ public function getRootIdentifier()\n         }\n \n         if (null === $this->rootIdentifier) {\n-            $resource = $this->getScheme() . ':\/\/api.bitbucket.org\/1.0\/repositories\/'.$this->owner.'\/'.$this->repository;\n-            $repoData = JsonFile::parseJson($this->getContentsWithOAuthCredentials($resource, true), $resource);\n-            $this->hasIssues = !empty($repoData['has_issues']);\n-            $this->rootIdentifier = !empty($repoData['main_branch']) ? $repoData['main_branch'] : 'master';\n-        }\n-\n-        return $this->rootIdentifier;\n-    }\n-\n-    \/**\n-     * {@inheritDoc}\n-     *\/\n-    public function getUrl()\n-    {\n-        if ($this->fallbackDriver) {\n-            return $this->fallbackDriver->getUrl();\n-        }\n-\n-        return 'https:\/\/' . $this->originUrl . '\/'.$this->owner.'\/'.$this->repository.'.git';\n-    }\n-\n-    \/**\n-     * {@inheritDoc}\n-     *\/\n-    public function getSource($identifier)\n-    {\n-        if ($this->fallbackDriver) {\n-            return $this->fallbackDriver->getSource($identifier);\n-        }\n-\n-        return array('type' => 'git', 'url' => $this->getUrl(), 'reference' => $identifier);\n-    }\n-\n-    \/**\n-     * {@inheritDoc}\n-     *\/\n-    public function getDist($identifier)\n-    {\n-        $url = $this->getScheme() . ':\/\/bitbucket.org\/'.$this->owner.'\/'.$this->repository.'\/get\/'.$identifier.'.zip';\n-\n-        return array('type' => 'zip', 'url' => $url, 'reference' => $identifier, 'shasum' => '');\n-    }\n-\n-\n-    \/**\n-     * {@inheritDoc}\n-     *\/\n-    public function getTags()\n-    {\n-        if ($this->fallbackDriver) {\n-            return $this->fallbackDriver->getTags();\n-        }\n-\n-        if (null === $this->tags) {\n-            $resource = $this->getScheme() . ':\/\/api.bitbucket.org\/1.0\/repositories\/'.$this->owner.'\/'.$this->repository.'\/tags';\n-            $tagsData = JsonFile::parseJson($this->getContentsWithOAuthCredentials($resource), $resource);\n-            $this->tags = array();\n-            foreach ($tagsData as $tag => $data) {\n-                $this->tags[$tag] = $data['raw_node'];\n+            if (! $this->getRepoData()) {\n+                return $this->fallbackDriver->getRootIdentifier();\n             }\n-        }\n-\n-        return $this->tags;\n-    }\n \n-    \/**\n-     * {@inheritDoc}\n-     *\/\n-    public function getBranches()\n-    {\n-        if ($this->fallbackDriver) {\n-            return $this->fallbackDriver->getBranches();\n-        }\n-\n-        if (null === $this->branches) {\n-            $resource =  $this->getScheme() . ':\/\/api.bitbucket.org\/1.0\/repositories\/'.$this->owner.'\/'.$this->repository.'\/branches';\n-            $branchData = JsonFile::parseJson($this->getContentsWithOAuthCredentials($resource), $resource);\n-            $this->branches = array();\n-            foreach ($branchData as $branch => $data) {\n-                $this->branches[$branch] = $data['raw_node'];\n+            if ($this->vcsType !== 'git') {\n+                throw new \\RuntimeException(\n+                    $this->url.' does not appear to be a git repository, use '.\n+                    $this->cloneHttpsUrl.' if this is a mercurial bitbucket repository'\n+                );\n             }\n+\n+            $mainBranchData = $this->getMainBranchData();\n+            $this->rootIdentifier = !empty($mainBranchData['name']) ? $mainBranchData['name'] : 'master';\n         }\n \n-        return $this->branches;\n+        return $this->rootIdentifier;\n     }\n \n     \/**\n@@ -139,7 +67,7 @@ public static function supports(IOInterface $io, Config $config, $url, $deep = f\n     }\n \n     \/**\n-     * @param string $url\n+     * {@inheritdoc}\n      *\/\n     protected function setupFallbackDriver($url)\n     {"
        },
        {
            "sha": "0269f4721467a9b6d9ae596b5341f3a6822362d9",
            "filename": "src\/Composer\/Repository\/Vcs\/GitDriver.php",
            "status": "modified",
            "additions": 2,
            "deletions": 5,
            "changes": 7,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/GitDriver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/GitDriver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Vcs\/GitDriver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,7 +12,6 @@\n \n namespace Composer\\Repository\\Vcs;\n \n-use Composer\\Json\\JsonFile;\n use Composer\\Util\\ProcessExecutor;\n use Composer\\Util\\Filesystem;\n use Composer\\Util\\Git as GitUtil;\n@@ -143,6 +142,7 @@ public function getChangeDate($identifier)\n             'git log -1 --format=%%at %s',\n             ProcessExecutor::escape($identifier)\n         ), $output, $this->repoDir);\n+\n         return new \\DateTime('@'.trim($output), new \\DateTimeZone('UTC'));\n     }\n \n@@ -216,10 +216,7 @@ public static function supports(IOInterface $io, Config $config, $url, $deep = f\n         }\n \n         $process = new ProcessExecutor($io);\n-        if ($process->execute('git ls-remote --heads ' . ProcessExecutor::escape($url), $output) === 0) {\n-            return true;\n-        }\n \n-        return false;\n+        return $process->execute('git ls-remote --heads ' . ProcessExecutor::escape($url), $output) === 0;\n     }\n }"
        },
        {
            "sha": "d0b721af90f39bbd8b02717d69a21a0372a54a6e",
            "filename": "src\/Composer\/Repository\/Vcs\/GitHubDriver.php",
            "status": "modified",
            "additions": 15,
            "deletions": 66,
            "changes": 81,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/GitHubDriver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/GitHubDriver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Vcs\/GitHubDriver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -183,42 +183,27 @@ public function getFileContent($file, $identifier)\n             return $this->gitDriver->getFileContent($file, $identifier);\n         }\n \n-        $notFoundRetries = 2;\n-        while ($notFoundRetries) {\n-            try {\n-\n-                $resource = $this->getApiUrl() . '\/repos\/'.$this->owner.'\/'.$this->repository.'\/contents\/' . $file . '?ref='.urlencode($identifier);\n-                $resource = JsonFile::parseJson($this->getContents($resource));\n-                if (empty($resource['content']) || $resource['encoding'] !== 'base64' || !($content = base64_decode($resource['content']))) {\n-                    throw new \\RuntimeException('Could not retrieve ' . $file . ' for '.$identifier);\n-                }\n-\n-                return $content;\n-            } catch (TransportException $e) {\n-                if (404 !== $e->getCode()) {\n-                    throw $e;\n-                }\n-\n-                \/\/ TODO should be removed when possible\n-                \/\/ retry fetching if github returns a 404 since they happen randomly\n-                $notFoundRetries--;\n-                return null;\n-            }\n+        $resource = $this->getApiUrl() . '\/repos\/'.$this->owner.'\/'.$this->repository.'\/contents\/' . $file . '?ref='.urlencode($identifier);\n+        $resource = JsonFile::parseJson($this->getContents($resource));\n+        if (empty($resource['content']) || $resource['encoding'] !== 'base64' || !($content = base64_decode($resource['content']))) {\n+            throw new \\RuntimeException('Could not retrieve ' . $file . ' for '.$identifier);\n         }\n \n-        return null;\n+        return $content;\n     }\n \n     \/**\n      * {@inheritdoc}\n      *\/\n-    public function getChangeDate($identifier) {\n+    public function getChangeDate($identifier)\n+    {\n         if ($this->gitDriver) {\n             return $this->gitDriver->getChangeDate($identifier);\n         }\n \n         $resource = $this->getApiUrl() . '\/repos\/'.$this->owner.'\/'.$this->repository.'\/commits\/'.urlencode($identifier);\n         $commit = JsonFile::parseJson($this->getContents($resource), $resource);\n+\n         return new \\DateTime($commit['commit']['committer']['date']);\n     }\n \n@@ -359,7 +344,9 @@ protected function getContents($url, $fetchingRepoData = false)\n                         }\n                     }\n                     $scopesFailed = array_diff($scopesNeeded, $scopesIssued);\n-                    if (!$headers || count($scopesFailed)) {\n+                    \/\/ non-authenticated requests get no scopesNeeded, so ask for credentials\n+                    \/\/ authenticated requests which failed some scopes should ask for new credentials too\n+                    if (!$headers || !count($scopesNeeded) || count($scopesFailed)) {\n                         $gitHubUtil->authorizeOAuthInteractively($this->originUrl, 'Your GitHub credentials are required to fetch private repository metadata (<info>'.$this->url.'<\/info>)');\n                     }\n \n@@ -374,12 +361,7 @@ protected function getContents($url, $fetchingRepoData = false)\n                         return $this->attemptCloneFallback();\n                     }\n \n-                    $rateLimited = false;\n-                    foreach ($e->getHeaders() as $header) {\n-                        if (preg_match('{^X-RateLimit-Remaining: *0$}i', trim($header))) {\n-                            $rateLimited = true;\n-                        }\n-                    }\n+                    $rateLimited = $gitHubUtil->isRateLimited($e->getHeaders());\n \n                     if (!$this->io->hasAuthentication($this->originUrl)) {\n                         if (!$this->io->isInteractive()) {\n@@ -393,7 +375,7 @@ protected function getContents($url, $fetchingRepoData = false)\n                     }\n \n                     if ($rateLimited) {\n-                        $rateLimit = $this->getRateLimit($e->getHeaders());\n+                        $rateLimit = $gitHubUtil->getRateLimit($e->getHeaders());\n                         $this->io->writeError(sprintf(\n                             '<error>GitHub API limit (%d calls\/hr) is exhausted. You are already authorized so you have to wait until %s before doing more requests<\/error>',\n                             $rateLimit['limit'],\n@@ -409,39 +391,6 @@ protected function getContents($url, $fetchingRepoData = false)\n         }\n     }\n \n-    \/**\n-     * Extract ratelimit from response.\n-     *\n-     * @param array $headers Headers from Composer\\Downloader\\TransportException.\n-     *\n-     * @return array Associative array with the keys limit and reset.\n-     *\/\n-    protected function getRateLimit(array $headers)\n-    {\n-        $rateLimit = array(\n-            'limit' => '?',\n-            'reset' => '?',\n-        );\n-\n-        foreach ($headers as $header) {\n-            $header = trim($header);\n-            if (false === strpos($header, 'X-RateLimit-')) {\n-                continue;\n-            }\n-            list($type, $value) = explode(':', $header, 2);\n-            switch ($type) {\n-                case 'X-RateLimit-Limit':\n-                    $rateLimit['limit'] = (int) trim($value);\n-                    break;\n-                case 'X-RateLimit-Reset':\n-                    $rateLimit['reset'] = date('Y-m-d H:i:s', (int) trim($value));\n-                    break;\n-            }\n-        }\n-\n-        return $rateLimit;\n-    }\n-\n     \/**\n      * Fetch root identifier from GitHub\n      *\n@@ -510,8 +459,8 @@ protected function getNextPage()\n     {\n         $headers = $this->remoteFilesystem->getLastHeaders();\n         foreach ($headers as $header) {\n-            if (substr($header, 0, 5) === 'Link:') {\n-                $links = explode(',', substr($header, 5));\n+            if (preg_match('{^link:\\s*(.+?)\\s*$}i', $header, $match)) {\n+                $links = explode(',', $match[1]);\n                 foreach ($links as $link) {\n                     if (preg_match('{<(.+?)>; *rel=\"next\"}', $link, $match)) {\n                         return $match[1];"
        },
        {
            "sha": "2044ff7026ae866d7a95ad314350f3e69ffcdbb2",
            "filename": "src\/Composer\/Repository\/Vcs\/GitLabDriver.php",
            "status": "modified",
            "additions": 167,
            "deletions": 29,
            "changes": 196,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/GitLabDriver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/GitLabDriver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Vcs\/GitLabDriver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -29,7 +29,7 @@\n class GitLabDriver extends VcsDriver\n {\n     private $scheme;\n-    private $owner;\n+    private $namespace;\n     private $repository;\n \n     \/**\n@@ -59,7 +59,19 @@ class GitLabDriver extends VcsDriver\n      *\/\n     protected $gitDriver;\n \n-    const URL_REGEX = '#^(?:(?P<scheme>https?):\/\/(?P<domain>.+?)\/|git@(?P<domain2>[^:]+):)(?P<owner>[^\/]+)\/(?P<repo>[^\/]+?)(?:\\.git|\/)?$#';\n+    \/**\n+     * Defaults to true unless we can make sure it is public\n+     *\n+     * @var bool defines whether the repo is private or not\n+     *\/\n+    private $isPrivate = true;\n+\n+    \/**\n+     * @var int port number\n+     *\/\n+    protected $portNumber;\n+\n+    const URL_REGEX = '#^(?:(?P<scheme>https?):\/\/(?P<domain>.+?)(?::(?P<port>[0-9]+))?\/|git@(?P<domain2>[^:]+):)(?P<parts>.+)\/(?P<repo>[^\/]+?)(?:\\.git|\/)?$#';\n \n     \/**\n      * Extracts information from the repository url.\n@@ -74,12 +86,25 @@ public function initialize()\n             throw new \\InvalidArgumentException('The URL provided is invalid. It must be the HTTP URL of a GitLab project.');\n         }\n \n-        $this->scheme = !empty($match['scheme']) ? $match['scheme'] : (isset($this->repoConfig['secure-http']) && $this->repoConfig['secure-http'] === false ? 'http' : 'https');\n-        $this->originUrl = !empty($match['domain']) ? $match['domain'] : $match['domain2'];\n-        $this->owner = $match['owner'];\n+        $guessedDomain = !empty($match['domain']) ? $match['domain'] : $match['domain2'];\n+        $configuredDomains = $this->config->get('gitlab-domains');\n+        $urlParts = explode('\/', $match['parts']);\n+\n+        $this->scheme = !empty($match['scheme'])\n+            ? $match['scheme']\n+            : (isset($this->repoConfig['secure-http']) && $this->repoConfig['secure-http'] === false ? 'http' : 'https')\n+        ;\n+        $this->originUrl = $this->determineOrigin($configuredDomains, $guessedDomain, $urlParts);\n+\n+        if (!empty($match['port']) && true === is_numeric($match['port'])) {\n+            \/\/ If it is an HTTP based URL, and it has a port\n+            $this->portNumber = (int) $match['port'];\n+        }\n+\n+        $this->namespace = implode('\/', $urlParts);\n         $this->repository = preg_replace('#(\\.git)$#', '', $match['repo']);\n \n-        $this->cache = new Cache($this->io, $this->config->get('cache-repo-dir').'\/'.$this->originUrl.'\/'.$this->owner.'\/'.$this->repository);\n+        $this->cache = new Cache($this->io, $this->config->get('cache-repo-dir').'\/'.$this->originUrl.'\/'.$this->namespace.'\/'.$this->repository);\n \n         $this->fetchProject();\n     }\n@@ -100,22 +125,27 @@ public function setRemoteFilesystem(RemoteFilesystem $remoteFilesystem)\n      *\/\n     public function getFileContent($file, $identifier)\n     {\n-        \/\/ Convert the root identifier to a cachable commit id\n+        if ($this->gitDriver) {\n+            return $this->gitDriver->getFileContent($file, $identifier);\n+        }\n+\n+        \/\/ Convert the root identifier to a cacheable commit id\n         if (!preg_match('{[a-f0-9]{40}}i', $identifier)) {\n             $branches = $this->getBranches();\n             if (isset($branches[$identifier])) {\n                 $identifier = $branches[$identifier];\n             }\n         }\n \n-        $resource = $this->getApiUrl().'\/repository\/blobs\/'.$identifier.'?filepath=' . $file;\n+        $resource = $this->getApiUrl().'\/repository\/files\/'.$this->urlEncodeAll($file).'\/raw?ref='.$identifier;\n \n         try {\n             $content = $this->getContents($resource);\n         } catch (TransportException $e) {\n             if ($e->getCode() !== 404) {\n                 throw $e;\n             }\n+\n             return null;\n         }\n \n@@ -127,27 +157,34 @@ public function getFileContent($file, $identifier)\n      *\/\n     public function getChangeDate($identifier)\n     {\n+        if ($this->gitDriver) {\n+            return $this->gitDriver->getChangeDate($identifier);\n+        }\n+\n         if (isset($this->commits[$identifier])) {\n             return new \\DateTime($this->commits[$identifier]['committed_date']);\n         }\n \n         return new \\DateTime();\n     }\n \n-\n     \/**\n      * {@inheritDoc}\n      *\/\n     public function getRepositoryUrl()\n     {\n-        return $this->project['public'] ? $this->project['http_url_to_repo'] : $this->project['ssh_url_to_repo'];\n+        return $this->isPrivate ? $this->project['ssh_url_to_repo'] : $this->project['http_url_to_repo'];\n     }\n \n     \/**\n      * {@inheritDoc}\n      *\/\n     public function getUrl()\n     {\n+        if ($this->gitDriver) {\n+            return $this->gitDriver->getUrl();\n+        }\n+\n         return $this->project['web_url'];\n     }\n \n@@ -166,6 +203,10 @@ public function getDist($identifier)\n      *\/\n     public function getSource($identifier)\n     {\n+        if ($this->gitDriver) {\n+            return $this->gitDriver->getSource($identifier);\n+        }\n+\n         return array('type' => 'git', 'url' => $this->getRepositoryUrl(), 'reference' => $identifier);\n     }\n \n@@ -174,6 +215,10 @@ public function getSource($identifier)\n      *\/\n     public function getRootIdentifier()\n     {\n+        if ($this->gitDriver) {\n+            return $this->gitDriver->getRootIdentifier();\n+        }\n+\n         return $this->project['default_branch'];\n     }\n \n@@ -182,6 +227,10 @@ public function getRootIdentifier()\n      *\/\n     public function getBranches()\n     {\n+        if ($this->gitDriver) {\n+            return $this->gitDriver->getBranches();\n+        }\n+\n         if (!$this->branches) {\n             $this->branches = $this->getReferences('branches');\n         }\n@@ -194,6 +243,10 @@ public function getBranches()\n      *\/\n     public function getTags()\n     {\n+        if ($this->gitDriver) {\n+            return $this->gitDriver->getTags();\n+        }\n+\n         if (!$this->tags) {\n             $this->tags = $this->getReferences('tags');\n         }\n@@ -206,23 +259,29 @@ public function getTags()\n      *\/\n     public function getApiUrl()\n     {\n-        return $this->scheme.':\/\/'.$this->originUrl.'\/api\/v3\/projects\/'.$this->urlEncodeAll($this->owner).'%2F'.$this->urlEncodeAll($this->repository);\n+        $domainName = $this->originUrl;\n+        $portNumber = (true === is_numeric($this->portNumber)) ? sprintf(':%s', $this->portNumber) : '';\n+\n+        return $this->scheme.':\/\/'.$domainName.$portNumber.'\/api\/v4\/projects\/'.$this->urlEncodeAll($this->namespace).'%2F'.$this->urlEncodeAll($this->repository);\n     }\n \n     \/**\n      * Urlencode all non alphanumeric characters. rawurlencode() can not be used as it does not encode `.`\n      *\n-     * @param string $string\n+     * @param  string $string\n      * @return string\n      *\/\n     private function urlEncodeAll($string)\n     {\n         $encoded = '';\n         for ($i = 0; isset($string[$i]); $i++) {\n             $character = $string[$i];\n-            if (!ctype_alnum($character)) $character = '%' . sprintf('%02X', ord($character));\n+            if (!ctype_alnum($character) && !in_array($character, array('-', '_'), true)) {\n+                $character = '%' . sprintf('%02X', ord($character));\n+            }\n             $encoded .= $character;\n         }\n+\n         return $encoded;\n     }\n \n@@ -233,19 +292,27 @@ private function urlEncodeAll($string)\n      *\/\n     protected function getReferences($type)\n     {\n-        $resource = $this->getApiUrl().'\/repository\/'.$type;\n-\n-        $data = JsonFile::parseJson($this->getContents($resource), $resource);\n+        $perPage = 100;\n+        $resource = $this->getApiUrl().'\/repository\/'.$type.'?per_page='.$perPage;\n \n         $references = array();\n+        do {\n+            $data = JsonFile::parseJson($this->getContents($resource), $resource);\n \n-        foreach ($data as $datum) {\n-            $references[$datum['name']] = $datum['commit']['id'];\n+            foreach ($data as $datum) {\n+                $references[$datum['name']] = $datum['commit']['id'];\n \n-            \/\/ Keep the last commit date of a reference to avoid\n-            \/\/ unnecessary API call when retrieving the composer file.\n-            $this->commits[$datum['commit']['id']] = $datum['commit'];\n-        }\n+                \/\/ Keep the last commit date of a reference to avoid\n+                \/\/ unnecessary API call when retrieving the composer file.\n+                $this->commits[$datum['commit']['id']] = $datum['commit'];\n+            }\n+\n+            if (count($data) >= $perPage) {\n+                $resource = $this->getNextPage();\n+            } else {\n+                $resource = false;\n+            }\n+        } while ($resource);\n \n         return $references;\n     }\n@@ -255,21 +322,33 @@ protected function fetchProject()\n         \/\/ we need to fetch the default branch from the api\n         $resource = $this->getApiUrl();\n         $this->project = JsonFile::parseJson($this->getContents($resource, true), $resource);\n+        if (isset($this->project['visibility'])) {\n+            $this->isPrivate = $this->project['visibility'] !== 'public';\n+        } else {\n+            \/\/ client is not authendicated, therefore repository has to be public\n+            $this->isPrivate = false;\n+        }\n     }\n \n     protected function attemptCloneFallback()\n     {\n         try {\n+            if ($this->isPrivate === false) {\n+                $url = $this->generatePublicUrl();\n+            } else {\n+                $url = $this->generateSshUrl();\n+            }\n+\n             \/\/ If this repository may be private and we\n             \/\/ cannot ask for authentication credentials (because we\n             \/\/ are not interactive) then we fallback to GitDriver.\n-            $this->setupGitDriver($this->generateSshUrl());\n+            $this->setupGitDriver($url);\n \n             return;\n         } catch (\\RuntimeException $e) {\n             $this->gitDriver = null;\n \n-            $this->io->writeError('<error>Failed to clone the '.$this->generateSshUrl().' repository, try running in interactive mode so that you can enter your credentials<\/error>');\n+            $this->io->writeError('<error>Failed to clone the '.$url.' repository, try running in interactive mode so that you can enter your credentials<\/error>');\n             throw $e;\n         }\n     }\n@@ -281,7 +360,12 @@ protected function attemptCloneFallback()\n      *\/\n     protected function generateSshUrl()\n     {\n-        return 'git@' . $this->originUrl . ':'.$this->owner.'\/'.$this->repository.'.git';\n+        return 'git@' . $this->originUrl . ':'.$this->namespace.'\/'.$this->repository.'.git';\n+    }\n+\n+    protected function generatePublicUrl()\n+    {\n+        return $this->scheme . ':\/\/' . $this->originUrl . '\/'.$this->namespace.'\/'.$this->repository.'.git';\n     }\n \n     protected function setupGitDriver($url)\n@@ -302,7 +386,22 @@ protected function setupGitDriver($url)\n     protected function getContents($url, $fetchingRepoData = false)\n     {\n         try {\n-            return parent::getContents($url);\n+            $res = parent::getContents($url);\n+\n+            if ($fetchingRepoData) {\n+                $json = JsonFile::parseJson($res, $url);\n+\n+                \/\/ force auth as the unauthenticated version of the API is broken\n+                if (!isset($json['default_branch'])) {\n+                    if (!empty($json['id'])) {\n+                        $this->isPrivate = false;\n+                    }\n+\n+                    throw new TransportException('GitLab API seems to not be authenticated as it did not return a default_branch', 401);\n+                }\n+            }\n+\n+            return $res;\n         } catch (TransportException $e) {\n             $gitLabUtil = new GitLab($this->io, $this->config, $this->process, $this->remoteFilesystem);\n \n@@ -321,7 +420,7 @@ protected function getContents($url, $fetchingRepoData = false)\n                     if (!$this->io->isInteractive()) {\n                         return $this->attemptCloneFallback();\n                     }\n-                    $this->io->writeError('<warning>Failed to download ' . $this->owner . '\/' . $this->repository . ':' . $e->getMessage() . '<\/warning>');\n+                    $this->io->writeError('<warning>Failed to download ' . $this->namespace . '\/' . $this->repository . ':' . $e->getMessage() . '<\/warning>');\n                     $gitLabUtil->authorizeOAuthInteractively($this->scheme, $this->originUrl, 'Your credentials are required to fetch private repository metadata (<info>'.$this->url.'<\/info>)');\n \n                     return parent::getContents($url);\n@@ -356,9 +455,10 @@ public static function supports(IOInterface $io, Config $config, $url, $deep = f\n         }\n \n         $scheme = !empty($match['scheme']) ? $match['scheme'] : null;\n-        $originUrl = !empty($match['domain']) ? $match['domain'] : $match['domain2'];\n+        $guessedDomain = !empty($match['domain']) ? $match['domain'] : $match['domain2'];\n+        $urlParts = explode('\/', $match['parts']);\n \n-        if (!in_array($originUrl, (array) $config->get('gitlab-domains'))) {\n+        if (false === self::determineOrigin((array) $config->get('gitlab-domains'), $guessedDomain, $urlParts)) {\n             return false;\n         }\n \n@@ -370,4 +470,42 @@ public static function supports(IOInterface $io, Config $config, $url, $deep = f\n \n         return true;\n     }\n+\n+    private function getNextPage()\n+    {\n+        $headers = $this->remoteFilesystem->getLastHeaders();\n+        foreach ($headers as $header) {\n+            if (preg_match('{^link:\\s*(.+?)\\s*$}i', $header, $match)) {\n+                $links = explode(',', $match[1]);\n+                foreach ($links as $link) {\n+                    if (preg_match('{<(.+?)>; *rel=\"next\"}', $link, $match)) {\n+                        return $match[1];\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * @param  array       $configuredDomains\n+     * @param  string      $guessedDomain\n+     * @param  array       $urlParts\n+     * @return bool|string\n+     *\/\n+    private static function determineOrigin(array $configuredDomains, $guessedDomain, array &$urlParts)\n+    {\n+        if (in_array($guessedDomain, $configuredDomains)) {\n+            return $guessedDomain;\n+        }\n+\n+        while (null !== ($part = array_shift($urlParts))) {\n+            $guessedDomain .= '\/' . $part;\n+\n+            if (in_array($guessedDomain, $configuredDomains)) {\n+                return $guessedDomain;\n+            }\n+        }\n+\n+        return false;\n+    }\n }"
        },
        {
            "sha": "8324f22acd0da3e86463f5aab8f965cfba166a78",
            "filename": "src\/Composer\/Repository\/Vcs\/HgBitbucketDriver.php",
            "status": "modified",
            "additions": 18,
            "deletions": 68,
            "changes": 86,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/HgBitbucketDriver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/HgBitbucketDriver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Vcs\/HgBitbucketDriver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,92 +13,39 @@\n namespace Composer\\Repository\\Vcs;\n \n use Composer\\Config;\n-use Composer\\Json\\JsonFile;\n use Composer\\IO\\IOInterface;\n \n \/**\n  * @author Per Bernhardt <plb@webfactory.de>\n  *\/\n class HgBitbucketDriver extends BitbucketDriver\n {\n-\n     \/**\n      * {@inheritDoc}\n      *\/\n     public function getRootIdentifier()\n     {\n-        if (null === $this->rootIdentifier) {\n-            $resource = $this->getScheme() . ':\/\/bitbucket.org\/api\/1.0\/repositories\/'.$this->owner.'\/'.$this->repository.'\/tags';\n-            $repoData = JsonFile::parseJson($this->getContents($resource), $resource);\n-            if (array() === $repoData || !isset($repoData['tip'])) {\n-                throw new \\RuntimeException($this->url.' does not appear to be a mercurial repository, use '.$this->url.'.git if this is a git bitbucket repository');\n-            }\n-            $this->hasIssues = !empty($repoData['has_issues']);\n-            $this->rootIdentifier = $repoData['tip']['raw_node'];\n+        if ($this->fallbackDriver) {\n+            return $this->fallbackDriver->getRootIdentifier();\n         }\n \n-        return $this->rootIdentifier;\n-    }\n-\n-    \/**\n-     * {@inheritDoc}\n-     *\/\n-    public function getUrl()\n-    {\n-        return $this->url;\n-    }\n-\n-    \/**\n-     * {@inheritDoc}\n-     *\/\n-    public function getSource($identifier)\n-    {\n-        return array('type' => 'hg', 'url' => $this->getUrl(), 'reference' => $identifier);\n-    }\n-\n-    \/**\n-     * {@inheritDoc}\n-     *\/\n-    public function getDist($identifier)\n-    {\n-        $url = $this->getScheme() . ':\/\/bitbucket.org\/'.$this->owner.'\/'.$this->repository.'\/get\/'.$identifier.'.zip';\n-\n-        return array('type' => 'zip', 'url' => $url, 'reference' => $identifier, 'shasum' => '');\n-    }\n-\n-    \/**\n-     * {@inheritDoc}\n-     *\/\n-    public function getTags()\n-    {\n-        if (null === $this->tags) {\n-            $resource = $this->getScheme() . ':\/\/bitbucket.org\/api\/1.0\/repositories\/'.$this->owner.'\/'.$this->repository.'\/tags';\n-            $tagsData = JsonFile::parseJson($this->getContents($resource), $resource);\n-            $this->tags = array();\n-            foreach ($tagsData as $tag => $data) {\n-                $this->tags[$tag] = $data['raw_node'];\n+        if (null === $this->rootIdentifier) {\n+            if (! $this->getRepoData()) {\n+                return $this->fallbackDriver->getRootIdentifier();\n             }\n-            unset($this->tags['tip']);\n-        }\n \n-        return $this->tags;\n-    }\n-\n-    \/**\n-     * {@inheritDoc}\n-     *\/\n-    public function getBranches()\n-    {\n-        if (null === $this->branches) {\n-            $resource = $this->getScheme() . ':\/\/bitbucket.org\/api\/1.0\/repositories\/'.$this->owner.'\/'.$this->repository.'\/branches';\n-            $branchData = JsonFile::parseJson($this->getContents($resource), $resource);\n-            $this->branches = array();\n-            foreach ($branchData as $branch => $data) {\n-                $this->branches[$branch] = $data['raw_node'];\n+            if ($this->vcsType !== 'hg') {\n+                throw new \\RuntimeException(\n+                    $this->url.' does not appear to be a mercurial repository, use '.\n+                    $this->cloneHttpsUrl.' if this is a git bitbucket repository'\n+                );\n             }\n+\n+            $mainBranchData = $this->getMainBranchData();\n+            $this->rootIdentifier = !empty($mainBranchData['name']) ? $mainBranchData['name'] : 'default';\n         }\n \n-        return $this->branches;\n+        return $this->rootIdentifier;\n     }\n \n     \/**\n@@ -119,6 +66,9 @@ public static function supports(IOInterface $io, Config $config, $url, $deep = f\n         return true;\n     }\n \n+    \/**\n+     * {@inheritdoc}\n+     *\/\n     protected function setupFallbackDriver($url)\n     {\n         $this->fallbackDriver = new HgDriver(\n@@ -136,6 +86,6 @@ protected function setupFallbackDriver($url)\n      *\/\n     protected function generateSshUrl()\n     {\n-        return 'hg@' . $this->originUrl . '\/' . $this->owner.'\/'.$this->repository;\n+        return 'ssh:\/\/hg@' . $this->originUrl . '\/' . $this->owner.'\/'.$this->repository;\n     }\n }"
        },
        {
            "sha": "45f13d5fe770d62c6bb8e88864f64c1909b56d73",
            "filename": "src\/Composer\/Repository\/Vcs\/HgDriver.php",
            "status": "modified",
            "additions": 11,
            "deletions": 13,
            "changes": 24,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/HgDriver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/HgDriver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Vcs\/HgDriver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,11 +13,10 @@\n namespace Composer\\Repository\\Vcs;\n \n use Composer\\Config;\n-use Composer\\Json\\JsonFile;\n+use Composer\\Util\\Hg as HgUtils;\n use Composer\\Util\\ProcessExecutor;\n use Composer\\Util\\Filesystem;\n use Composer\\IO\\IOInterface;\n-use Symfony\\Component\\Process\\Process;\n \n \/**\n  * @author Per Bernhardt <plb@webfactory.de>\n@@ -51,6 +50,8 @@ public function initialize()\n             \/\/ Ensure we are allowed to use this URL by config\n             $this->config->prohibitUrlByConfig($this->url, $this->io);\n \n+            $hgUtils = new HgUtils($this->io, $this->config, $this->process);\n+\n             \/\/ update the repo if it is a valid hg repository\n             if (is_dir($this->repoDir) && 0 === $this->process->execute('hg summary', $output, $this->repoDir)) {\n                 if (0 !== $this->process->execute('hg pull', $output, $this->repoDir)) {\n@@ -60,15 +61,11 @@ public function initialize()\n                 \/\/ clean up directory and do a fresh clone into it\n                 $fs->removeDirectory($this->repoDir);\n \n-                if (0 !== $this->process->execute(sprintf('hg clone --noupdate %s %s', ProcessExecutor::escape($this->url), ProcessExecutor::escape($this->repoDir)), $output, $cacheDir)) {\n-                    $output = $this->process->getErrorOutput();\n-\n-                    if (0 !== $this->process->execute('hg --version', $ignoredOutput)) {\n-                        throw new \\RuntimeException('Failed to clone '.$this->url.', hg was not found, check that it is installed and in your PATH env.' . \"\\n\\n\" . $this->process->getErrorOutput());\n-                    }\n+                $command = function ($url) {\n+                    return sprintf('hg clone --noupdate %s %s', ProcessExecutor::escape($url), ProcessExecutor::escape($this->repoDir));\n+                };\n \n-                    throw new \\RuntimeException('Failed to clone '.$this->url.', could not read packages from it' . \"\\n\\n\" .$output);\n-                }\n+                $hgUtils->runCommand($command, $this->url, $this->repoDir);\n             }\n         }\n \n@@ -120,7 +117,7 @@ public function getDist($identifier)\n     public function getFileContent($file, $identifier)\n     {\n         $resource = sprintf('hg cat -r %s %s', ProcessExecutor::escape($identifier), ProcessExecutor::escape($file));\n-        $this->process->execute(sprintf('hg cat -r %s', $resource), $content, $this->repoDir);\n+        $this->process->execute($resource, $content, $this->repoDir);\n \n         if (!trim($content)) {\n             return;\n@@ -142,6 +139,7 @@ public function getChangeDate($identifier)\n             $output,\n             $this->repoDir\n         );\n+\n         return new \\DateTime(trim($output), new \\DateTimeZone('UTC'));\n     }\n \n@@ -213,7 +211,7 @@ public static function supports(IOInterface $io, Config $config, $url, $deep = f\n                 return false;\n             }\n \n-            $process = new ProcessExecutor();\n+            $process = new ProcessExecutor($io);\n             \/\/ check whether there is a hg repo in that path\n             if ($process->execute('hg summary', $output, $url) === 0) {\n                 return true;\n@@ -224,7 +222,7 @@ public static function supports(IOInterface $io, Config $config, $url, $deep = f\n             return false;\n         }\n \n-        $processExecutor = new ProcessExecutor();\n+        $processExecutor = new ProcessExecutor($io);\n         $exit = $processExecutor->execute(sprintf('hg identify %s', ProcessExecutor::escape($url)), $ignored);\n \n         return $exit === 0;"
        },
        {
            "sha": "667f914dfcd3a0d26f61b9a23b07c0816cc9a374",
            "filename": "src\/Composer\/Repository\/Vcs\/PerforceDriver.php",
            "status": "modified",
            "additions": 6,
            "deletions": 10,
            "changes": 16,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/PerforceDriver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/PerforceDriver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Vcs\/PerforceDriver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -26,6 +26,7 @@ class PerforceDriver extends VcsDriver\n     protected $branch;\n     \/** @var Perforce *\/\n     protected $perforce;\n+\n     \/**\n      * {@inheritDoc}\n      *\/\n@@ -57,7 +58,6 @@ private function initPerforce($repoConfig)\n         $this->perforce = Perforce::create($repoConfig, $this->getUrl(), $repoDir, $this->process, $this->io);\n     }\n \n-\n     \/**\n      * {@inheritdoc}\n      *\/\n@@ -87,19 +87,15 @@ public function getRootIdentifier()\n      *\/\n     public function getBranches()\n     {\n-        $branches = $this->perforce->getBranches();\n-\n-        return $branches;\n+        return $this->perforce->getBranches();\n     }\n \n     \/**\n      * {@inheritDoc}\n      *\/\n     public function getTags()\n     {\n-        $tags = $this->perforce->getTags();\n-\n-        return $tags;\n+        return $this->perforce->getTags();\n     }\n \n     \/**\n@@ -116,10 +112,10 @@ public function getDist($identifier)\n     public function getSource($identifier)\n     {\n         $source = array(\n-            'type'      => 'perforce',\n-            'url'       => $this->repoConfig['url'],\n+            'type' => 'perforce',\n+            'url' => $this->repoConfig['url'],\n             'reference' => $identifier,\n-            'p4user'    => $this->perforce->getUser(),\n+            'p4user' => $this->perforce->getUser(),\n         );\n \n         return $source;"
        },
        {
            "sha": "a8f0c4ad40db81ecbde2850f2085d625f4c88b0a",
            "filename": "src\/Composer\/Repository\/Vcs\/SvnDriver.php",
            "status": "modified",
            "additions": 36,
            "deletions": 10,
            "changes": 46,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/SvnDriver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/SvnDriver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Vcs\/SvnDriver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -37,10 +37,10 @@ class SvnDriver extends VcsDriver\n     protected $rootIdentifier;\n     protected $infoCache = array();\n \n-    protected $trunkPath    = 'trunk';\n+    protected $trunkPath = 'trunk';\n     protected $branchesPath = 'branches';\n-    protected $tagsPath     = 'tags';\n-    protected $packagePath   = '';\n+    protected $tagsPath = 'tags';\n+    protected $packagePath = '';\n     protected $cacheCredentials = true;\n \n     \/**\n@@ -115,24 +115,42 @@ public function getDist($identifier)\n         return null;\n     }\n \n+    \/**\n+     * {@inheritdoc}\n+     *\/\n+    protected function shouldCache($identifier)\n+    {\n+        return $this->cache && preg_match('{@\\d+$}', $identifier);\n+    }\n+\n     \/**\n      * {@inheritdoc}\n      *\/\n     public function getComposerInformation($identifier)\n     {\n         if (!isset($this->infoCache[$identifier])) {\n-            if ($res = $this->cache->read($identifier.'.json')) {\n+            if ($this->shouldCache($identifier) && $res = $this->cache->read($identifier.'.json')) {\n                 return $this->infoCache[$identifier] = JsonFile::parseJson($res);\n             }\n \n-            $composer = $this->getBaseComposerInformation($identifier);\n+            try {\n+                $composer = $this->getBaseComposerInformation($identifier);\n+            } catch (TransportException $e) {\n+                $message = $e->getMessage();\n+                if (stripos($message, 'path not found') === false && stripos($message, 'svn: warning: W160013') === false) {\n+                    throw $e;\n+                }\n+                \/\/ remember a not-existent composer.json\n+                $composer = '';\n+            }\n \n-            $this->cache->write($identifier.'.json', json_encode($composer));\n+            if ($this->shouldCache($identifier)) {\n+                $this->cache->write($identifier.'.json', json_encode($composer));\n+            }\n \n             $this->infoCache[$identifier] = $composer;\n         }\n \n-\n         return $this->infoCache[$identifier];\n     }\n \n@@ -289,10 +307,10 @@ public static function supports(IOInterface $io, Config $config, $url, $deep = f\n             return false;\n         }\n \n-        $processExecutor = new ProcessExecutor();\n+        $processExecutor = new ProcessExecutor($io);\n \n         $exit = $processExecutor->execute(\n-            \"svn info --non-interactive {$url}\",\n+            \"svn info --non-interactive \".ProcessExecutor::escape($url),\n             $ignoredOutput\n         );\n \n@@ -301,12 +319,20 @@ public static function supports(IOInterface $io, Config $config, $url, $deep = f\n             return true;\n         }\n \n+        \/\/ Subversion client 1.7 and older\n         if (false !== stripos($processExecutor->getErrorOutput(), 'authorization failed:')) {\n             \/\/ This is likely a remote Subversion repository that requires\n             \/\/ authentication. We will handle actual authentication later.\n             return true;\n         }\n \n+        \/\/ Subversion client 1.8 and newer\n+        if (false !== stripos($processExecutor->getErrorOutput(), 'Authentication failed')) {\n+            \/\/ This is likely a remote Subversion or newer repository that requires\n+            \/\/ authentication. We will handle actual authentication later.\n+            return true;\n+        }\n+\n         return false;\n     }\n \n@@ -346,7 +372,7 @@ protected function execute($command, $url)\n         try {\n             return $this->util->execute($command, $url);\n         } catch (\\RuntimeException $e) {\n-            if (0 !== $this->process->execute('svn --version', $ignoredOutput)) {\n+            if (null === $this->util->binaryVersion()) {\n                 throw new \\RuntimeException('Failed to load '.$this->url.', svn was not found, check that it is installed and in your PATH env.' . \"\\n\\n\" . $this->process->getErrorOutput());\n             }\n "
        },
        {
            "sha": "5227630f6bf165f24f9ac3c11cf4914de6db81b7",
            "filename": "src\/Composer\/Repository\/Vcs\/VcsDriver.php",
            "status": "modified",
            "additions": 6,
            "deletions": 5,
            "changes": 11,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/VcsDriver.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/VcsDriver.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Vcs\/VcsDriver.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -75,8 +75,8 @@\n     \/**\n      * Returns whether or not the given $identifier should be cached or not.\n      *\n-     * @param string $identifier\n-     * @return boolean\n+     * @param  string $identifier\n+     * @return bool\n      *\/\n     protected function shouldCache($identifier)\n     {\n@@ -102,7 +102,6 @@ public function getComposerInformation($identifier)\n             $this->infoCache[$identifier] = $composer;\n         }\n \n-\n         return $this->infoCache[$identifier];\n     }\n \n@@ -117,7 +116,7 @@ protected function getBaseComposerInformation($identifier)\n         $composer = JsonFile::parseJson($composerFileContent, $identifier . ':composer.json');\n \n         if (empty($composer['time']) && $changeDate = $this->getChangeDate($identifier)) {\n-            $composer['time'] = $changeDate->format('Y-m-d H:i:s');\n+            $composer['time'] = $changeDate->format(DATE_RFC3339);\n         }\n \n         return $composer;\n@@ -161,7 +160,9 @@ protected function getScheme()\n      *\/\n     protected function getContents($url)\n     {\n-        return $this->remoteFilesystem->getContents($this->originUrl, $url, false);\n+        $options = isset($this->repoConfig['options']) ? $this->repoConfig['options'] : array();\n+\n+        return $this->remoteFilesystem->getContents($this->originUrl, $url, false, $options);\n     }\n \n     \/**"
        },
        {
            "sha": "5e3bcec68011abb7c7fe064799ecaf3d1918e049",
            "filename": "src\/Composer\/Repository\/Vcs\/VcsDriverInterface.php",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/VcsDriverInterface.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/Vcs\/VcsDriverInterface.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/Vcs\/VcsDriverInterface.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -36,16 +36,16 @@ public function getComposerInformation($identifier);\n     \/**\n      * Return the content of $file or null if the file does not exist.\n      *\n-     * @param string $file\n-     * @param string $identifier\n+     * @param  string $file\n+     * @param  string $identifier\n      * @return string\n      *\/\n     public function getFileContent($file, $identifier);\n \n     \/**\n      * Get the changedate for $identifier.\n      *\n-     * @param string $identifier\n+     * @param  string    $identifier\n      * @return \\DateTime\n      *\/\n     public function getChangeDate($identifier);"
        },
        {
            "sha": "d6fb1bbee9f2d65aae9e3de979a7d4cb6db575fe",
            "filename": "src\/Composer\/Repository\/VcsRepository.php",
            "status": "modified",
            "additions": 84,
            "deletions": 20,
            "changes": 104,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/VcsRepository.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/VcsRepository.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/VcsRepository.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -41,21 +41,23 @@ class VcsRepository extends ArrayRepository implements ConfigurableRepositoryInt\n     private $drivers;\n     \/** @var VcsDriverInterface *\/\n     private $driver;\n+    \/** @var VersionCacheInterface *\/\n+    private $versionCache;\n \n-    public function __construct(array $repoConfig, IOInterface $io, Config $config, EventDispatcher $dispatcher = null, array $drivers = null)\n+    public function __construct(array $repoConfig, IOInterface $io, Config $config, EventDispatcher $dispatcher = null, array $drivers = null, VersionCacheInterface $versionCache = null)\n     {\n         parent::__construct();\n         $this->drivers = $drivers ?: array(\n-            'github'        => 'Composer\\Repository\\Vcs\\GitHubDriver',\n-            'gitlab'        => 'Composer\\Repository\\Vcs\\GitLabDriver',\n+            'github' => 'Composer\\Repository\\Vcs\\GitHubDriver',\n+            'gitlab' => 'Composer\\Repository\\Vcs\\GitLabDriver',\n             'git-bitbucket' => 'Composer\\Repository\\Vcs\\GitBitbucketDriver',\n-            'git'           => 'Composer\\Repository\\Vcs\\GitDriver',\n-            'hg-bitbucket'  => 'Composer\\Repository\\Vcs\\HgBitbucketDriver',\n-            'hg'            => 'Composer\\Repository\\Vcs\\HgDriver',\n-            'perforce'      => 'Composer\\Repository\\Vcs\\PerforceDriver',\n-            'fossil'        => 'Composer\\Repository\\Vcs\\FossilDriver',\n+            'git' => 'Composer\\Repository\\Vcs\\GitDriver',\n+            'hg-bitbucket' => 'Composer\\Repository\\Vcs\\HgBitbucketDriver',\n+            'hg' => 'Composer\\Repository\\Vcs\\HgDriver',\n+            'perforce' => 'Composer\\Repository\\Vcs\\PerforceDriver',\n+            'fossil' => 'Composer\\Repository\\Vcs\\FossilDriver',\n             \/\/ svn must be last because identifying a subversion server for sure is practically impossible\n-            'svn'           => 'Composer\\Repository\\Vcs\\SvnDriver',\n+            'svn' => 'Composer\\Repository\\Vcs\\SvnDriver',\n         );\n \n         $this->url = $repoConfig['url'];\n@@ -64,6 +66,7 @@ public function __construct(array $repoConfig, IOInterface $io, Config $config,\n         $this->verbose = $io->isVeryVerbose();\n         $this->config = $config;\n         $this->repoConfig = $repoConfig;\n+        $this->versionCache = $versionCache;\n     }\n \n     public function getRepoConfig()\n@@ -152,6 +155,13 @@ protected function initialize()\n             \/\/ strip the release- prefix from tags if present\n             $tag = str_replace('release-', '', $tag);\n \n+            $cachedPackage = $this->getCachedPackageVersion($tag, $identifier, $verbose);\n+            if ($cachedPackage) {\n+                $this->addPackage($cachedPackage);\n+\n+                continue;\n+            }\n+\n             if (!$parsedTag = $this->validateTag($tag)) {\n                 if ($verbose) {\n                     $this->io->writeError('<warning>Skipped tag '.$tag.', invalid tag name<\/warning>');\n@@ -188,6 +198,14 @@ protected function initialize()\n                     continue;\n                 }\n \n+                $tagPackageName = isset($data['name']) ? $data['name'] : $this->packageName;\n+                if ($existingPackage = $this->findPackage($tagPackageName, $data['version_normalized'])) {\n+                    if ($verbose) {\n+                        $this->io->writeError('<warning>Skipped tag '.$tag.', it conflicts with an another tag ('.$existingPackage->getPrettyVersion().') as both resolve to '.$data['version_normalized'].' internally<\/warning>');\n+                    }\n+                    continue;\n+                }\n+\n                 if ($verbose) {\n                     $this->io->writeError('Importing tag '.$tag.' ('.$data['version_normalized'].')');\n                 }\n@@ -205,21 +223,44 @@ protected function initialize()\n             $this->io->overwriteError('', false);\n         }\n \n-        foreach ($driver->getBranches() as $branch => $identifier) {\n+        $branches = $driver->getBranches();\n+        foreach ($branches as $branch => $identifier) {\n             $msg = 'Reading composer.json of <info>' . ($this->packageName ?: $this->url) . '<\/info> (<comment>' . $branch . '<\/comment>)';\n             if ($verbose) {\n                 $this->io->writeError($msg);\n             } else {\n                 $this->io->overwriteError($msg, false);\n             }\n \n+            if ($branch === 'trunk' && isset($branches['master'])) {\n+                if ($verbose) {\n+                    $this->io->writeError('<warning>Skipped branch '.$branch.', can not parse both master and trunk branches as they both resolve to 9999999-dev internally<\/warning>');\n+                }\n+                continue;\n+            }\n+\n             if (!$parsedBranch = $this->validateBranch($branch)) {\n                 if ($verbose) {\n                     $this->io->writeError('<warning>Skipped branch '.$branch.', invalid name<\/warning>');\n                 }\n                 continue;\n             }\n \n+            \/\/ make sure branch packages have a dev flag\n+            if ('dev-' === substr($parsedBranch, 0, 4) || '9999999-dev' === $parsedBranch) {\n+                $version = 'dev-' . $branch;\n+            } else {\n+                $prefix = substr($branch, 0, 1) === 'v' ? 'v' : '';\n+                $version = $prefix . preg_replace('{(\\.9{7})+}', '.x', $parsedBranch);\n+            }\n+\n+            $cachedPackage = $this->getCachedPackageVersion($version, $identifier, $verbose);\n+            if ($cachedPackage) {\n+                $this->addPackage($cachedPackage);\n+\n+                continue;\n+            }\n+\n             try {\n                 if (!$data = $driver->getComposerInformation($identifier)) {\n                     if ($verbose) {\n@@ -229,17 +270,9 @@ protected function initialize()\n                 }\n \n                 \/\/ branches are always auto-versioned, read value from branch name\n-                $data['version'] = $branch;\n+                $data['version'] = $version;\n                 $data['version_normalized'] = $parsedBranch;\n \n-                \/\/ make sure branch packages have a dev flag\n-                if ('dev-' === substr($parsedBranch, 0, 4) || '9999999-dev' === $parsedBranch) {\n-                    $data['version'] = 'dev-' . $data['version'];\n-                } else {\n-                    $prefix = substr($branch, 0, 1) === 'v' ? 'v' : '';\n-                    $data['version'] = $prefix . preg_replace('{(\\.9{7})+}', '.x', $parsedBranch);\n-                }\n-\n                 if ($verbose) {\n                     $this->io->writeError('Importing branch '.$branch.' ('.$data['version'].')');\n                 }\n@@ -279,7 +312,8 @@ protected function initialize()\n     protected function preProcess(VcsDriverInterface $driver, array $data, $identifier)\n     {\n         \/\/ keep the name of the main identifier for all packages\n-        $data['name'] = $this->packageName ?: $data['name'];\n+        $dataPackageName = isset($data['name']) ? $data['name'] : null;\n+        $data['name'] = $this->packageName ?: $dataPackageName;\n \n         if (!isset($data['dist'])) {\n             $data['dist'] = $driver->getDist($identifier);\n@@ -310,4 +344,34 @@ private function validateTag($version)\n \n         return false;\n     }\n+\n+    private function getCachedPackageVersion($version, $identifier, $verbose)\n+    {\n+        if (!$this->versionCache) {\n+            return;\n+        }\n+\n+        $cachedPackage = $this->versionCache->getVersionPackage($version, $identifier);\n+        if ($cachedPackage) {\n+            $msg = 'Found cached composer.json of <info>' . ($this->packageName ?: $this->url) . '<\/info> (<comment>' . $version . '<\/comment>)';\n+            if ($verbose) {\n+                $this->io->writeError($msg);\n+            } else {\n+                $this->io->overwriteError($msg, false);\n+            }\n+\n+            if ($existingPackage = $this->findPackage($cachedPackage['name'], $cachedPackage['version_normalized'])) {\n+                if ($verbose) {\n+                    $this->io->writeError('<warning>Skipped cached version '.$version.', it conflicts with an another tag ('.$existingPackage->getPrettyVersion().') as both resolve to '.$cachedPackage['version_normalized'].' internally<\/warning>');\n+                }\n+                $cachedPackage = null;\n+            }\n+        }\n+\n+        if ($cachedPackage) {\n+            return $this->loader->load($cachedPackage);\n+        }\n+\n+        return null;\n+    }\n }"
        },
        {
            "sha": "db5934b59c5a91c67839e97a38275bfeedaed6d5",
            "filename": "src\/Composer\/Repository\/VersionCacheInterface.php",
            "status": "added",
            "additions": 23,
            "deletions": 0,
            "changes": 23,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/VersionCacheInterface.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Repository\/VersionCacheInterface.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Repository\/VersionCacheInterface.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -0,0 +1,23 @@\n+<?php\n+\n+\/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ *\/\n+\n+namespace Composer\\Repository;\n+\n+interface VersionCacheInterface\n+{\n+    \/**\n+     * @param string $version\n+     * @param string $identifier\n+     * @return array Package version data\n+     *\/\n+    public function getVersionPackage($version, $identifier);\n+}"
        },
        {
            "sha": "491c6bc6556603243ef952000801114d63fc1a22",
            "filename": "src\/Composer\/Script\/ScriptEvents.php",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Script\/ScriptEvents.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Script\/ScriptEvents.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Script\/ScriptEvents.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -95,7 +95,7 @@ class ScriptEvents\n     \/**\n      * The POST_ROOT_PACKAGE_INSTALL event occurs after the root package has been installed.\n      *\n-     * The event listener method receives a Composer\\Installer\\PackageEvent instance.\n+     * The event listener method receives a Composer\\Script\\Event instance.\n      *\n      * @var string\n      *\/\n@@ -105,7 +105,7 @@ class ScriptEvents\n      * The POST_CREATE_PROJECT event occurs after the create-project command has been executed.\n      * Note: Event occurs after POST_INSTALL_CMD\n      *\n-     * The event listener method receives a Composer\\Installer\\PackageEvent instance.\n+     * The event listener method receives a Composer\\Script\\Event instance.\n      *\n      * @var string\n      *\/"
        },
        {
            "sha": "1fc286ac4adde7cba9f5a4581228bf6abe169f46",
            "filename": "src\/Composer\/Util\/Bitbucket.php",
            "status": "modified",
            "additions": 74,
            "deletions": 20,
            "changes": 94,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Bitbucket.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Bitbucket.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/Bitbucket.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -27,6 +27,7 @@ class Bitbucket\n     private $process;\n     private $remoteFilesystem;\n     private $token = array();\n+    private $time;\n \n     const OAUTH2_ACCESS_TOKEN_URL = 'https:\/\/bitbucket.org\/site\/oauth2\/access_token';\n \n@@ -37,21 +38,27 @@ class Bitbucket\n      * @param Config           $config           The composer configuration\n      * @param ProcessExecutor  $process          Process instance, injectable for mocking\n      * @param RemoteFilesystem $remoteFilesystem Remote Filesystem, injectable for mocking\n+     * @param int              $time             Timestamp, injectable for mocking\n      *\/\n-    public function __construct(IOInterface $io, Config $config, ProcessExecutor $process = null, RemoteFilesystem $remoteFilesystem = null)\n+    public function __construct(IOInterface $io, Config $config, ProcessExecutor $process = null, RemoteFilesystem $remoteFilesystem = null, $time = null)\n     {\n         $this->io = $io;\n         $this->config = $config;\n-        $this->process = $process ?: new ProcessExecutor;\n+        $this->process = $process ?: new ProcessExecutor($io);\n         $this->remoteFilesystem = $remoteFilesystem ?: Factory::createRemoteFilesystem($this->io, $config);\n+        $this->time = $time;\n     }\n \n     \/**\n-     * @return array\n+     * @return string\n      *\/\n     public function getToken()\n     {\n-        return $this->token;\n+        if (!isset($this->token['access_token'])) {\n+            return '';\n+        }\n+\n+        return $this->token['access_token'];\n     }\n \n     \/**\n@@ -102,13 +109,15 @@ private function requestAccessToken($originUrl)\n                 return false;\n             } elseif (in_array($e->getCode(), array(403, 401))) {\n                 $this->io->writeError('<error>Invalid OAuth consumer provided.<\/error>');\n-                $this->io->writeError('You can also add it manually later by using \"composer config bitbucket-oauth.bitbucket.org <consumer-key> <consumer-secret>\"');\n+                $this->io->writeError('You can also add it manually later by using \"composer config --global --auth bitbucket-oauth.bitbucket.org <consumer-key> <consumer-secret>\"');\n \n                 return false;\n             }\n \n             throw $e;\n         }\n+\n+        return true;\n     }\n \n     \/**\n@@ -129,13 +138,13 @@ public function authorizeOAuthInteractively($originUrl, $message = null)\n         $url = 'https:\/\/confluence.atlassian.com\/bitbucket\/oauth-on-bitbucket-cloud-238027431.html';\n         $this->io->writeError(sprintf('Follow the instructions on %s', $url));\n         $this->io->writeError(sprintf('to create a consumer. It will be stored in \"%s\" for future use by Composer.', $this->config->getAuthConfigSource()->getName()));\n-        $this->io->writeError('Ensure you enter a \"Callback URL\" or it will not be possible to create an Access Token (this callback url will not be used by composer)');\n+        $this->io->writeError('Ensure you enter a \"Callback URL\" (http:\/\/example.com is fine) or it will not be possible to create an Access Token (this callback url will not be used by composer)');\n \n         $consumerKey = trim($this->io->askAndHideAnswer('Consumer Key (hidden): '));\n \n         if (!$consumerKey) {\n             $this->io->writeError('<warning>No consumer key given, aborting.<\/warning>');\n-            $this->io->writeError('You can also add it manually later by using \"composer config bitbucket-oauth.bitbucket.org <consumer-key> <consumer-secret>\"');\n+            $this->io->writeError('You can also add it manually later by using \"composer config --global --auth bitbucket-oauth.bitbucket.org <consumer-key> <consumer-secret>\"');\n \n             return false;\n         }\n@@ -144,23 +153,20 @@ public function authorizeOAuthInteractively($originUrl, $message = null)\n \n         if (!$consumerSecret) {\n             $this->io->writeError('<warning>No consumer secret given, aborting.<\/warning>');\n-            $this->io->writeError('You can also add it manually later by using \"composer config bitbucket-oauth.bitbucket.org <consumer-key> <consumer-secret>\"');\n+            $this->io->writeError('You can also add it manually later by using \"composer config --global --auth bitbucket-oauth.bitbucket.org <consumer-key> <consumer-secret>\"');\n \n             return false;\n         }\n \n         $this->io->setAuthentication($originUrl, $consumerKey, $consumerSecret);\n \n-        $this->requestAccessToken($originUrl);\n+        if (!$this->requestAccessToken($originUrl)) {\n+            return false;\n+        }\n \n         \/\/ store value in user config\n-        $this->config->getConfigSource()->removeConfigSetting('bitbucket-oauth.'.$originUrl);\n+        $this->storeInAuthConfig($originUrl, $consumerKey, $consumerSecret);\n \n-        $consumer = array(\n-            \"consumer-key\" => $consumerKey,\n-            \"consumer-secret\" => $consumerSecret,\n-        );\n-        $this->config->getAuthConfigSource()->addConfigSetting('bitbucket-oauth.'.$originUrl, $consumer);\n         \/\/ Remove conflicting basic auth credentials (if available)\n         $this->config->getAuthConfigSource()->removeConfigSetting('http-basic.' . $originUrl);\n \n@@ -175,17 +181,65 @@ public function authorizeOAuthInteractively($originUrl, $message = null)\n      * @param  string $originUrl\n      * @param  string $consumerKey\n      * @param  string $consumerSecret\n-     * @return array\n+     * @return string\n      *\/\n     public function requestToken($originUrl, $consumerKey, $consumerSecret)\n     {\n-        if (!empty($this->token)) {\n-            return $this->token;\n+        if (!empty($this->token) || $this->getTokenFromConfig($originUrl)) {\n+            return $this->token['access_token'];\n         }\n \n         $this->io->setAuthentication($originUrl, $consumerKey, $consumerSecret);\n-        $this->requestAccessToken($originUrl);\n+        if (!$this->requestAccessToken($originUrl)) {\n+            return '';\n+        }\n+\n+        $this->storeInAuthConfig($originUrl, $consumerKey, $consumerSecret);\n+\n+        return $this->token['access_token'];\n+    }\n+\n+    \/**\n+     * Store the new\/updated credentials to the configuration\n+     * @param string $originUrl\n+     * @param string $consumerKey\n+     * @param string $consumerSecret\n+     *\/\n+    private function storeInAuthConfig($originUrl, $consumerKey, $consumerSecret)\n+    {\n+        $this->config->getConfigSource()->removeConfigSetting('bitbucket-oauth.'.$originUrl);\n \n-        return $this->token;\n+        $time = null === $this->time ? time() : $this->time;\n+        $consumer = array(\n+            \"consumer-key\" => $consumerKey,\n+            \"consumer-secret\" => $consumerSecret,\n+            \"access-token\" => $this->token['access_token'],\n+            \"access-token-expiration\" => $time + $this->token['expires_in'],\n+        );\n+\n+        $this->config->getAuthConfigSource()->addConfigSetting('bitbucket-oauth.'.$originUrl, $consumer);\n+    }\n+\n+    \/**\n+     * @param  string $originUrl\n+     * @return bool\n+     *\/\n+    private function getTokenFromConfig($originUrl)\n+    {\n+        $authConfig = $this->config->get('bitbucket-oauth');\n+\n+        if (\n+            !isset($authConfig[$originUrl]['access-token'])\n+            || !isset($authConfig[$originUrl]['access-token-expiration'])\n+            || time() > $authConfig[$originUrl]['access-token-expiration']\n+        ) {\n+            return false;\n+        }\n+\n+        $this->token = array(\n+            'access_token' => $authConfig[$originUrl]['access-token'],\n+        );\n+\n+        return true;\n     }\n }"
        },
        {
            "sha": "e1200fee1f8bcd510da7a98ffc910a5bcc312199",
            "filename": "src\/Composer\/Util\/ConfigValidator.php",
            "status": "modified",
            "additions": 40,
            "deletions": 14,
            "changes": 54,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/ConfigValidator.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/ConfigValidator.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/ConfigValidator.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -73,26 +73,40 @@ public function validate($file, $arrayLoaderValidationFlags = ValidatingArrayLoa\n         }\n \n         \/\/ validate actual data\n-        if (!empty($manifest['license'])) {\n+        if (empty($manifest['license'])) {\n+            $warnings[] = 'No license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.';\n+        } else {\n+            $licenses = (array) $manifest['license'];\n+\n             \/\/ strip proprietary since it's not a valid SPDX identifier, but is accepted by composer\n-            if (is_array($manifest['license'])) {\n-                foreach ($manifest['license'] as $key => $license) {\n-                    if ('proprietary' === $license) {\n-                        unset($manifest['license'][$key]);\n-                    }\n+            foreach ($licenses as $key => $license) {\n+                if ('proprietary' === $license) {\n+                    unset($licenses[$key]);\n                 }\n             }\n \n             $licenseValidator = new SpdxLicenses();\n-            if ('proprietary' !== $manifest['license'] && array() !== $manifest['license'] && !$licenseValidator->validate($manifest['license'])) {\n-                $warnings[] = sprintf(\n-                    'License %s is not a valid SPDX license identifier, see https:\/\/spdx.org\/licenses\/ if you use an open license.'\n-                    .\"\\nIf the software is closed-source, you may use \\\"proprietary\\\" as license.\",\n-                    json_encode($manifest['license'])\n-                );\n+            foreach ($licenses as $license) {\n+                $spdxLicense = $licenseValidator->getLicenseByIdentifier($license);\n+                if ($spdxLicense && $spdxLicense[3]) {\n+                    if (preg_match('{^[AL]?GPL-[123](\\.[01])?\\+$}i', $license)) {\n+                        $warnings[] = sprintf(\n+                            'License \"%s\" is a deprecated SPDX license identifier, use \"'.str_replace('+', '', $license).'-or-later\" instead',\n+                            $license\n+                        );\n+                    } elseif (preg_match('{^[AL]?GPL-[123](\\.[01])?$}i', $license)) {\n+                        $warnings[] = sprintf(\n+                            'License \"%s\" is a deprecated SPDX license identifier, use \"'.$license.'-only\" or \"'.$license.'-or-later\" instead',\n+                            $license\n+                        );\n+                    } else {\n+                        $warnings[] = sprintf(\n+                            'License \"%s\" is a deprecated SPDX license identifier, see https:\/\/spdx.org\/licenses\/',\n+                            $license\n+                        );\n+                    }\n+                }\n             }\n-        } else {\n-            $warnings[] = 'No license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.';\n         }\n \n         if (isset($manifest['version'])) {\n@@ -137,6 +151,18 @@ public function validate($file, $arrayLoaderValidationFlags = ValidatingArrayLoa\n             }\n         }\n \n+        \/\/ report scripts-descriptions for non-existent scripts\n+        $scriptsDescriptions = isset($manifest['scripts-descriptions']) ? $manifest['scripts-descriptions'] : array();\n+        $scripts = isset($manifest['scripts']) ? $manifest['scripts'] : array();\n+        foreach ($scriptsDescriptions as $scriptName => $scriptDescription) {\n+            if (!array_key_exists($scriptName, $scripts)) {\n+                $warnings[] = sprintf(\n+                    'Description for non-existent script \"%s\" found in \"scripts-descriptions\"',\n+                    $scriptName\n+                );\n+            }\n+        }\n+\n         \/\/ check for empty psr-0\/psr-4 namespace prefixes\n         if (isset($manifest['autoload']['psr-0'][''])) {\n             $warnings[] = \"Defining autoload.psr-0 with an empty namespace prefix is a bad idea for performance\";"
        },
        {
            "sha": "83e6b5ede8e510c1c7dae4179d39f511ba1d6e62",
            "filename": "src\/Composer\/Util\/ErrorHandler.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/ErrorHandler.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/ErrorHandler.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/ErrorHandler.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -41,7 +41,7 @@ public static function handle($level, $message, $file, $line)\n             return;\n         }\n \n-        if (ini_get('xdebug.scream')) {\n+        if (filter_var(ini_get('xdebug.scream'), FILTER_VALIDATE_BOOLEAN)) {\n             $message .= \"\\n\\nWarning: You have xdebug.scream enabled, the warning above may be\".\n             \"\\na legitimately suppressed error that you were not supposed to see.\";\n         }"
        },
        {
            "sha": "ebb7dfbd3405dcbf41818ac242f2e799071a9b5e",
            "filename": "src\/Composer\/Util\/Filesystem.php",
            "status": "modified",
            "additions": 32,
            "deletions": 8,
            "changes": 40,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Filesystem.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Filesystem.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/Filesystem.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -103,6 +103,10 @@ public function removeDirectory($directory)\n             return $this->removeJunction($directory);\n         }\n \n+        if (is_link($directory)) {\n+            return unlink($directory);\n+        }\n+\n         if (!file_exists($directory) || !is_dir($directory)) {\n             return true;\n         }\n@@ -247,27 +251,44 @@ public function rmdir($path)\n      *\/\n     public function copyThenRemove($source, $target)\n     {\n+        $this->copy($source, $target);\n         if (!is_dir($source)) {\n-            copy($source, $target);\n             $this->unlink($source);\n \n             return;\n         }\n \n+        $this->removeDirectoryPhp($source);\n+    }\n+\n+    \/**\n+     * Copies a file or directory from $source to $target.\n+     *\n+     * @param string $source\n+     * @param string $target\n+     * @return bool\n+     *\/\n+    public function copy($source, $target)\n+    {\n+        if (!is_dir($source)) {\n+            return copy($source, $target);\n+        }\n+\n         $it = new RecursiveDirectoryIterator($source, RecursiveDirectoryIterator::SKIP_DOTS);\n         $ri = new RecursiveIteratorIterator($it, RecursiveIteratorIterator::SELF_FIRST);\n         $this->ensureDirectoryExists($target);\n \n+        $result = true;\n         foreach ($ri as $file) {\n             $targetPath = $target . DIRECTORY_SEPARATOR . $ri->getSubPathName();\n             if ($file->isDir()) {\n                 $this->ensureDirectoryExists($targetPath);\n             } else {\n-                copy($file->getPathname(), $targetPath);\n+                $result = $result && copy($file->getPathname(), $targetPath);\n             }\n         }\n \n-        $this->removeDirectoryPhp($source);\n+        return $result;\n     }\n \n     public function rename($source, $target)\n@@ -506,7 +527,7 @@ protected function directorySize($directory)\n \n     protected function getProcess()\n     {\n-        return new ProcessExecutor;\n+        return $this->processExecutor;\n     }\n \n     \/**\n@@ -544,7 +565,7 @@ public function relativeSymlink($target, $link)\n \n         chdir($cwd);\n \n-        return (bool) $result;\n+        return $result;\n     }\n \n     \/**\n@@ -613,9 +634,11 @@ public function junction($target, $junction)\n         if (!is_dir($target)) {\n             throw new IOException(sprintf('Cannot junction to \"%s\" as it is not a directory.', $target), 0, null, $target);\n         }\n-        $cmd = sprintf('mklink \/J %s %s',\n-                       ProcessExecutor::escape(str_replace('\/', DIRECTORY_SEPARATOR, $junction)),\n-                       ProcessExecutor::escape(realpath($target)));\n+        $cmd = sprintf(\n+            'mklink \/J %s %s',\n+            ProcessExecutor::escape(str_replace('\/', DIRECTORY_SEPARATOR, $junction)),\n+            ProcessExecutor::escape(realpath($target))\n+        );\n         if ($this->getProcess()->execute($cmd, $output) !== 0) {\n             throw new IOException(sprintf('Failed to create junction to \"%s\" at \"%s\".', $target, $junction), 0, null, $target);\n         }\n@@ -648,6 +671,7 @@ public function isJunction($junction)\n          * Stat cache should be cleared before to avoid accidentally reading wrong information from previous installs.\n          *\/\n         clearstatcache(true, $junction);\n+        clearstatcache(false);\n         $stat = lstat($junction);\n \n         return !($stat['mode'] & 0xC000);"
        },
        {
            "sha": "37410eecd854defe9cf92f37ca8e2bfa4bc7fb53",
            "filename": "src\/Composer\/Util\/Git.php",
            "status": "modified",
            "additions": 28,
            "deletions": 11,
            "changes": 39,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Git.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Git.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/Git.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -57,7 +57,7 @@ public function runCommand($commandCallable, $url, $cwd, $initialClone = false)\n             \/\/ capture username\/password from URL if there is one\n             $this->process->execute('git remote -v', $output, $cwd);\n             if (preg_match('{^(?:composer|origin)\\s+https?:\/\/(.+):(.+)@([^\/]+)}im', $output, $match)) {\n-                $this->io->setAuthentication($match[3], urldecode($match[1]), urldecode($match[2]));\n+                $this->io->setAuthentication($match[3], rawurldecode($match[1]), rawurldecode($match[2]));\n             }\n         }\n \n@@ -122,17 +122,17 @@ public function runCommand($commandCallable, $url, $cwd, $initialClone = false)\n \n                     if (!$bitbucketUtil->authorizeOAuth($match[1]) && $this->io->isInteractive()) {\n                         $bitbucketUtil->authorizeOAuthInteractively($match[1], $message);\n-                        $token = $bitbucketUtil->getToken();\n-                        $this->io->setAuthentication($match[1], 'x-token-auth', $token['access_token']);\n+                        $accessToken = $bitbucketUtil->getToken();\n+                        $this->io->setAuthentication($match[1], 'x-token-auth', $accessToken);\n                     }\n                 } else { \/\/We're authenticating with a locally stored consumer.\n                     $auth = $this->io->getAuthentication($match[1]);\n \n                     \/\/We already have an access_token from a previous request.\n                     if ($auth['username'] !== 'x-token-auth') {\n-                        $token = $bitbucketUtil->requestToken($match[1], $auth['username'], $auth['password']);\n-                        if (!empty($token)) {\n-                            $this->io->setAuthentication($match[1], 'x-token-auth', $token['access_token']);\n+                        $accessToken = $bitbucketUtil->requestToken($match[1], $auth['username'], $auth['password']);\n+                        if (! empty($accessToken)) {\n+                            $this->io->setAuthentication($match[1], 'x-token-auth', $accessToken);\n                         }\n                     }\n                 }\n@@ -165,7 +165,7 @@ public function runCommand($commandCallable, $url, $cwd, $initialClone = false)\n                     $defaultUsername = null;\n                     if (isset($authParts) && $authParts) {\n                         if (false !== strpos($authParts, ':')) {\n-                            list($defaultUsername,) = explode(':', $authParts, 2);\n+                            list($defaultUsername, ) = explode(':', $authParts, 2);\n                         } else {\n                             $defaultUsername = $authParts;\n                         }\n@@ -228,21 +228,38 @@ public function syncMirror($url, $dir)\n         return true;\n     }\n \n+    public function fetchRefOrSyncMirror($url, $dir, $ref)\n+    {\n+        if (is_dir($dir) && 0 === $this->process->execute('git rev-parse --git-dir', $output, $dir) && trim($output) === '.') {\n+            $escapedRef = ProcessExecutor::escape($ref.'^{commit}');\n+            $exitCode = $this->process->execute(sprintf('git rev-parse --quiet --verify %s', $escapedRef), $output, $dir);\n+            if ($exitCode === 0) {\n+                return true;\n+            }\n+        }\n+\n+        $this->syncMirror($url, $dir);\n+\n+        return false;\n+    }\n+\n     private function isAuthenticationFailure($url, &$match)\n     {\n-        if (!preg_match('{(https?:\/\/)([^\/]+)(.*)$}i', $url, $match)) {\n+        if (!preg_match('{^(https?:\/\/)([^\/]+)(.*)$}i', $url, $match)) {\n             return false;\n         }\n \n         $authFailures = array(\n             'fatal: Authentication failed',\n             'remote error: Invalid username or password.',\n             'error: 401 Unauthorized',\n-            'fatal: unable to access'\n+            'fatal: unable to access',\n+            'fatal: could not read Username',\n         );\n \n+        $errorOutput = $this->process->getErrorOutput();\n         foreach ($authFailures as $authFailure) {\n-            if (strpos($this->process->getErrorOutput(), $authFailure) !== false) {\n+            if (strpos($errorOutput, $authFailure) !== false) {\n                 return true;\n             }\n         }\n@@ -252,7 +269,7 @@ private function isAuthenticationFailure($url, &$match)\n \n     public static function cleanEnv()\n     {\n-        if (ini_get('safe_mode') && false === strpos(ini_get('safe_mode_allowed_env_vars'), 'GIT_ASKPASS')) {\n+        if (PHP_VERSION_ID < 50400 && ini_get('safe_mode') && false === strpos(ini_get('safe_mode_allowed_env_vars'), 'GIT_ASKPASS')) {\n             throw new \\RuntimeException('safe_mode is enabled and safe_mode_allowed_env_vars does not contain GIT_ASKPASS, can not set env var. You can disable safe_mode with \"-dsafe_mode=0\" when running composer');\n         }\n "
        },
        {
            "sha": "1eca1a9bb0318f62e1b48581b400888de815a3b0",
            "filename": "src\/Composer\/Util\/GitHub.php",
            "status": "modified",
            "additions": 54,
            "deletions": 3,
            "changes": 57,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/GitHub.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/GitHub.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/GitHub.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -39,7 +39,7 @@ public function __construct(IOInterface $io, Config $config, ProcessExecutor $pr\n     {\n         $this->io = $io;\n         $this->config = $config;\n-        $this->process = $process ?: new ProcessExecutor;\n+        $this->process = $process ?: new ProcessExecutor($io);\n         $this->remoteFilesystem = $remoteFilesystem ?: Factory::createRemoteFilesystem($this->io, $config);\n     }\n \n@@ -94,7 +94,7 @@ public function authorizeOAuthInteractively($originUrl, $message = null)\n \n         if (!$token) {\n             $this->io->writeError('<warning>No token given, aborting.<\/warning>');\n-            $this->io->writeError('You can also add it manually later by using \"composer config github-oauth.github.com <token>\"');\n+            $this->io->writeError('You can also add it manually later by using \"composer config --global --auth github-oauth.github.com <token>\"');\n \n             return false;\n         }\n@@ -110,7 +110,7 @@ public function authorizeOAuthInteractively($originUrl, $message = null)\n         } catch (TransportException $e) {\n             if (in_array($e->getCode(), array(403, 401))) {\n                 $this->io->writeError('<error>Invalid token provided.<\/error>');\n-                $this->io->writeError('You can also add it manually later by using \"composer config github-oauth.github.com <token>\"');\n+                $this->io->writeError('You can also add it manually later by using \"composer config --global --auth github-oauth.github.com <token>\"');\n \n                 return false;\n             }\n@@ -126,4 +126,55 @@ public function authorizeOAuthInteractively($originUrl, $message = null)\n \n         return true;\n     }\n+\n+    \/**\n+     * Extract ratelimit from response.\n+     *\n+     * @param array $headers Headers from Composer\\Downloader\\TransportException.\n+     *\n+     * @return array Associative array with the keys limit and reset.\n+     *\/\n+    public function getRateLimit(array $headers)\n+    {\n+        $rateLimit = array(\n+            'limit' => '?',\n+            'reset' => '?',\n+        );\n+\n+        foreach ($headers as $header) {\n+            $header = trim($header);\n+            if (false === strpos($header, 'X-RateLimit-')) {\n+                continue;\n+            }\n+            list($type, $value) = explode(':', $header, 2);\n+            switch ($type) {\n+                case 'X-RateLimit-Limit':\n+                    $rateLimit['limit'] = (int) trim($value);\n+                    break;\n+                case 'X-RateLimit-Reset':\n+                    $rateLimit['reset'] = date('Y-m-d H:i:s', (int) trim($value));\n+                    break;\n+            }\n+        }\n+\n+        return $rateLimit;\n+    }\n+\n+    \/**\n+     * Finds whether a request failed due to rate limiting\n+     *\n+     * @param array $headers Headers from Composer\\Downloader\\TransportException.\n+     *\n+     * @return bool\n+     *\/\n+    public function isRateLimited(array $headers)\n+    {\n+        foreach ($headers as $header) {\n+            if (preg_match('{^X-RateLimit-Remaining: *0$}i', trim($header))) {\n+                return true;\n+            }\n+        }\n+\n+        return false;\n+    }\n }"
        },
        {
            "sha": "475c5e7ee903083e05a3caa97fc6497cc0267960",
            "filename": "src\/Composer\/Util\/GitLab.php",
            "status": "modified",
            "additions": 4,
            "deletions": 4,
            "changes": 8,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/GitLab.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/GitLab.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/GitLab.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -40,7 +40,7 @@ public function __construct(IOInterface $io, Config $config, ProcessExecutor $pr\n     {\n         $this->io = $io;\n         $this->config = $config;\n-        $this->process = $process ?: new ProcessExecutor();\n+        $this->process = $process ?: new ProcessExecutor($io);\n         $this->remoteFilesystem = $remoteFilesystem ?: Factory::createRemoteFilesystem($this->io, $config);\n     }\n \n@@ -112,8 +112,8 @@ public function authorizeOAuthInteractively($scheme, $originUrl, $message = null\n                         $this->io->writeError('Maximum number of login attempts exceeded. Please try again later.');\n                     }\n \n-                    $this->io->writeError('You can also manually create a personal token at '.$scheme.':\/\/'.$originUrl.'\/profile\/applications');\n-                    $this->io->writeError('Add it using \"composer config gitlab-oauth.'.$originUrl.' <token>\"');\n+                    $this->io->writeError('You can also manually create a personal token at '.$scheme.':\/\/'.$originUrl.'\/profile\/personal_access_tokens');\n+                    $this->io->writeError('Add it using \"composer config --global --auth gitlab-token.'.$originUrl.' <token>\"');\n \n                     continue;\n                 }\n@@ -144,7 +144,7 @@ private function createToken($scheme, $originUrl)\n             'username' => $username,\n             'password' => $password,\n             'grant_type' => 'password',\n-        ));\n+        ), null, '&');\n         $options = array(\n             'retry-auth-failure' => false,\n             'http' => array("
        },
        {
            "sha": "8cf6241a628a8aa013fd9db320057ab51a980ea5",
            "filename": "src\/Composer\/Util\/Hg.php",
            "status": "added",
            "additions": 94,
            "deletions": 0,
            "changes": 94,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Hg.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Hg.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/Hg.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -0,0 +1,94 @@\n+<?php\n+\n+\/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ *\/\n+\n+namespace Composer\\Util;\n+\n+use Composer\\Config;\n+use Composer\\IO\\IOInterface;\n+\n+\/**\n+ * @author Jonas Renaudot <jonas.renaudot@gmail.com>\n+ *\/\n+class Hg\n+{\n+    \/**\n+     * @var \\Composer\\IO\\IOInterface\n+     *\/\n+    private $io;\n+\n+    \/**\n+     * @var \\Composer\\Config\n+     *\/\n+    private $config;\n+\n+    \/**\n+     * @var \\Composer\\Util\\ProcessExecutor\n+     *\/\n+    private $process;\n+\n+    public function __construct(IOInterface $io, Config $config, ProcessExecutor $process)\n+    {\n+        $this->io = $io;\n+        $this->config = $config;\n+        $this->process = $process;\n+    }\n+\n+    public function runCommand($commandCallable, $url, $cwd)\n+    {\n+        $this->config->prohibitUrlByConfig($url, $this->io);\n+\n+        \/\/ Try as is\n+        $command = call_user_func($commandCallable, $url);\n+\n+        if (0 === $this->process->execute($command, $ignoredOutput, $cwd)) {\n+            return;\n+        }\n+\n+        \/\/ Try with the authentication informations available\n+        if (preg_match('{^(https?):\/\/((.+)(?:\\:(.+))?@)?([^\/]+)(\/.*)?}mi', $url, $match) && $this->io->hasAuthentication($match[5])) {\n+            $auth = $this->io->getAuthentication($match[5]);\n+            $authenticatedUrl = $match[1] . ':\/\/' . rawurlencode($auth['username']) . ':' . rawurlencode($auth['password']) . '@' . $match[5] . (!empty($match[6]) ? $match[6] : null);\n+\n+            $command = call_user_func($commandCallable, $authenticatedUrl);\n+\n+            if (0 === $this->process->execute($command, $ignoredOutput, $cwd)) {\n+                return;\n+            }\n+\n+            $error = $this->process->getErrorOutput();\n+        } else {\n+            $error = 'The given URL (' . $url . ') does not match the required format (http(s):\/\/(username:password@)example.com\/path-to-repository)';\n+        }\n+\n+        $this->throwException('Failed to clone ' . $url . ', ' . \"\\n\\n\" . $error, $url);\n+    }\n+\n+    public static function sanitizeUrl($message)\n+    {\n+        return preg_replace_callback('{:\/\/(?P<user>[^@]+?):(?P<password>.+?)@}', function ($m) {\n+            if (preg_match('{^[a-f0-9]{12,}$}', $m[1])) {\n+                return ':\/\/***:***@';\n+            }\n+\n+            return ':\/\/' . $m[1] . ':***@';\n+        }, $message);\n+    }\n+\n+    private function throwException($message, $url)\n+    {\n+        if (0 !== $this->process->execute('hg --version', $ignoredOutput)) {\n+            throw new \\RuntimeException(self::sanitizeUrl('Failed to clone ' . $url . ', hg was not found, check that it is installed and in your PATH env.' . \"\\n\\n\" . $this->process->getErrorOutput()));\n+        }\n+\n+        throw new \\RuntimeException(self::sanitizeUrl($message));\n+    }\n+}"
        },
        {
            "sha": "d655419fcc31dcb248ef1995ea43ef5b07dd1fb0",
            "filename": "src\/Composer\/Util\/IniHelper.php",
            "status": "modified",
            "additions": 15,
            "deletions": 15,
            "changes": 30,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/IniHelper.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/IniHelper.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/IniHelper.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,6 +12,8 @@\n \n namespace Composer\\Util;\n \n+use Composer\\XdebugHandler\\XdebugHandler;\n+\n \/**\n  * Provides ini file location functions that work with and without a restart.\n  * When the process has restarted it uses a tmp ini and stores the original\n@@ -21,8 +23,6 @@\n  *\/\n class IniHelper\n {\n-    const ENV_ORIGINAL = 'COMPOSER_ORIGINAL_INIS';\n-\n     \/**\n      * Returns an array of php.ini locations with at least one entry\n      *\n@@ -33,21 +33,11 @@ class IniHelper\n      *\/\n     public static function getAll()\n     {\n-        if ($env = strval(getenv(self::ENV_ORIGINAL))) {\n-            return explode(PATH_SEPARATOR, $env);\n-        }\n-\n-        $paths = array(strval(php_ini_loaded_file()));\n-\n-        if ($scanned = php_ini_scanned_files()) {\n-            $paths = array_merge($paths, array_map('trim', explode(',', $scanned)));\n-        }\n-\n-        return $paths;\n+        return XdebugHandler::getAllIniFiles();\n     }\n \n     \/**\n-     * Describes the location of the loaded php.ini file\n+     * Describes the location of the loaded php.ini file(s)\n      *\n      * @return string\n      *\/\n@@ -56,9 +46,19 @@ public static function getMessage()\n         $paths = self::getAll();\n \n         if (empty($paths[0])) {\n+            array_shift($paths);\n+        }\n+\n+        $ini = array_shift($paths);\n+\n+        if (empty($ini)) {\n             return 'A php.ini file does not exist. You will have to create one.';\n         }\n \n-        return 'The php.ini used by your command-line PHP is: '.$paths[0];\n+        if (!empty($paths)) {\n+            return 'Your command-line PHP is using multiple ini files. Run `php --ini` to show them.';\n+        }\n+\n+        return 'The php.ini used by your command-line PHP is: '.$ini;\n     }\n }"
        },
        {
            "sha": "a6cb112be78367f5b97a3b0175fb59d3cfb920cf",
            "filename": "src\/Composer\/Util\/NoProxyPattern.php",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/NoProxyPattern.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/NoProxyPattern.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/NoProxyPattern.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -35,7 +35,7 @@ public function __construct($pattern)\n      *\n      * @param string $url\n      *\n-     * @return true if the URL matches one of the rules.\n+     * @return bool true if the URL matches one of the rules.\n      *\/\n     public function test($url)\n     {\n@@ -125,7 +125,7 @@ private static function inCIDRBlock($cidr, $ip)\n         list($a, $b, $c, $d) = explode('.', $base);\n \n         \/\/ Now do some bit shifting\/switching to convert to ints\n-        $i    = ($a << 24) + ($b << 16) + ($c << 8) + $d;\n+        $i = ($a << 24) + ($b << 16) + ($c << 8) + $d;\n         $mask = $bits == 0 ? 0 : (~0 << (32 - $bits));\n \n         \/\/ Here's our lowest int"
        },
        {
            "sha": "b064feec42c4434cd42cf8a614d2a46731bc5d98",
            "filename": "src\/Composer\/Util\/Perforce.php",
            "status": "modified",
            "additions": 44,
            "deletions": 51,
            "changes": 95,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Perforce.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Perforce.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/Perforce.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -58,7 +58,7 @@ public static function checkServerExists($url, ProcessExecutor $processExecutor)\n     {\n         $output = null;\n \n-        return  0 === $processExecutor->execute('p4 -p ' . $url . ' info -s', $output);\n+        return  0 === $processExecutor->execute('p4 -p ' . ProcessExecutor::escape($url) . ' info -s', $output);\n     }\n \n     public function initialize($repoConfig)\n@@ -105,7 +105,7 @@ public function generateUniquePerforceClientName()\n     public function cleanupClientSpec()\n     {\n         $client = $this->getClient();\n-        $task = 'client -d ' . $client;\n+        $task = 'client -d ' . ProcessExecutor::escape($client);\n         $useP4Client = false;\n         $command = $this->generateP4Command($task, $useP4Client);\n         $this->executeCommand($command);\n@@ -116,16 +116,15 @@ public function cleanupClientSpec()\n \n     protected function executeCommand($command)\n     {\n-        $this->commandResult = \"\";\n-        $exit_code = $this->process->execute($command, $this->commandResult);\n+        $this->commandResult = '';\n \n-        return $exit_code;\n+        return $this->process->execute($command, $this->commandResult);\n     }\n \n     public function getClient()\n     {\n         if (!isset($this->p4Client)) {\n-            $cleanStreamName = str_replace('@', '', str_replace('\/', '_', str_replace('\/\/', '', $this->getStream())));\n+            $cleanStreamName = str_replace(array('\/\/', '\/', '@'), array('', '_', ''), $this->getStream());\n             $this->p4Client = 'composer_perforce_' . $this->uniquePerforceClientName . '_' . $cleanStreamName;\n         }\n \n@@ -189,9 +188,7 @@ public function getStreamWithoutLabel($stream)\n \n     public function getP4ClientSpec()\n     {\n-        $p4clientSpec = $this->path . '\/' . $this->getClient() . '.p4.spec';\n-\n-        return $p4clientSpec;\n+        return $this->path . '\/' . $this->getClient() . '.p4.spec';\n     }\n \n     public function getUser()\n@@ -246,13 +243,13 @@ protected function getP4variable($name)\n             }\n \n             return null;\n-        } else {\n-            $command = 'echo $' . $name;\n-            $this->executeCommand($command);\n-            $result = trim($this->commandResult);\n-\n-            return $result;\n         }\n+\n+        $command = 'echo $' . $name;\n+        $this->executeCommand($command);\n+        $result = trim($this->commandResult);\n+\n+        return $result;\n     }\n \n     public function queryP4Password()\n@@ -272,20 +269,19 @@ public function queryP4Password()\n     public function generateP4Command($command, $useClient = true)\n     {\n         $p4Command = 'p4 ';\n-        $p4Command = $p4Command . '-u ' . $this->getUser() . ' ';\n+        $p4Command .= '-u ' . $this->getUser() . ' ';\n         if ($useClient) {\n-            $p4Command = $p4Command . '-c ' . $this->getClient() . ' ';\n+            $p4Command .= '-c ' . $this->getClient() . ' ';\n         }\n-        $p4Command = $p4Command . '-p ' . $this->getPort() . ' ';\n-        $p4Command = $p4Command . $command;\n+        $p4Command = $p4Command . '-p ' . $this->getPort() . ' ' . $command;\n \n         return $p4Command;\n     }\n \n     public function isLoggedIn()\n     {\n         $command = $this->generateP4Command('login -s', false);\n-        $exitCode  = $this->executeCommand($command);\n+        $exitCode = $this->executeCommand($command);\n         if ($exitCode) {\n             $errorOutput = $this->process->getErrorOutput();\n             $index = strpos($errorOutput, $this->getUser());\n@@ -316,7 +312,7 @@ public function syncCodeBase($sourceReference)\n         chdir($this->path);\n         $p4SyncCommand = $this->generateP4Command('sync -f ');\n         if (null !== $sourceReference) {\n-            $p4SyncCommand = $p4SyncCommand . '@' . $sourceReference;\n+            $p4SyncCommand .= '@' . $sourceReference;\n         }\n         $this->executeCommand($p4SyncCommand);\n         chdir($prevDir);\n@@ -387,7 +383,7 @@ public function p4Login()\n             if ($this->windowsFlag) {\n                 $this->windowsLogin($password);\n             } else {\n-                $command = 'echo ' . $password  . ' | ' . $this->generateP4Command(' login -a', false);\n+                $command = 'echo ' . ProcessExecutor::escape($password)  . ' | ' . $this->generateP4Command(' login -a', false);\n                 $exitCode = $this->executeCommand($command);\n                 $result = trim($this->commandResult);\n                 if ($exitCode) {\n@@ -412,7 +408,7 @@ public function getFileContent($file, $identifier)\n     {\n         $path = $this->getFilePath($file, $identifier);\n \n-        $command = $this->generateP4Command(' print ' . $path);\n+        $command = $this->generateP4Command(' print ' . ProcessExecutor::escape($path));\n         $this->executeCommand($command);\n         $result = $this->commandResult;\n \n@@ -430,19 +426,20 @@ public function getFilePath($file, $identifier)\n             $path = $identifier. '\/' . $file;\n \n             return $path;\n-        } else {\n-            $path = substr($identifier, 0, $index) . '\/' . $file . substr($identifier, $index);\n-            $command = $this->generateP4Command(' files ' . $path, false);\n-            $this->executeCommand($command);\n-            $result = $this->commandResult;\n-            $index2 = strpos($result, 'no such file(s).');\n-            if ($index2 === false) {\n-                $index3 = strpos($result, 'change');\n-                if ($index3 !== false) {\n-                    $phrase = trim(substr($result, $index3));\n-                    $fields = explode(' ', $phrase);\n-                    return substr($identifier, 0, $index) . '\/' . $file . '@' . $fields[1];\n-                }\n+        }\n+\n+        $path = substr($identifier, 0, $index) . '\/' . $file . substr($identifier, $index);\n+        $command = $this->generateP4Command(' files ' . ProcessExecutor::escape($path), false);\n+        $this->executeCommand($command);\n+        $result = $this->commandResult;\n+        $index2 = strpos($result, 'no such file(s).');\n+        if ($index2 === false) {\n+            $index3 = strpos($result, 'change');\n+            if ($index3 !== false) {\n+                $phrase = trim(substr($result, $index3));\n+                $fields = explode(' ', $phrase);\n+\n+                return substr($identifier, 0, $index) . '\/' . $file . '@' . $fields[1];\n             }\n         }\n \n@@ -455,7 +452,7 @@ public function getBranches()\n         if (!$this->isStream()) {\n             $possibleBranches[$this->p4Branch] = $this->getStream();\n         } else {\n-            $command = $this->generateP4Command('streams \/\/' . $this->p4Depot . '\/...');\n+            $command = $this->generateP4Command('streams '.ProcessExecutor::escape('\/\/' . $this->p4Depot . '\/...'));\n             $this->executeCommand($command);\n             $result = $this->commandResult;\n             $resArray = explode(PHP_EOL, $result);\n@@ -467,7 +464,7 @@ public function getBranches()\n                 }\n             }\n         }\n-        $command = $this->generateP4Command('changes '. $this->getStream() . '\/...', false);\n+        $command = $this->generateP4Command('changes '. ProcessExecutor::escape($this->getStream() . '\/...'), false);\n         $this->executeCommand($command);\n         $result = $this->commandResult;\n         $resArray = explode(PHP_EOL, $result);\n@@ -488,8 +485,7 @@ public function getTags()\n         $resArray = explode(PHP_EOL, $result);\n         $tags = array();\n         foreach ($resArray as $line) {\n-            $index = strpos($line, 'Label');\n-            if (!($index === false)) {\n+            if (strpos($line, 'Label') !== false) {\n                 $fields = explode(' ', $line);\n                 $tags[$fields[1]] = $this->getStream() . '@' . $fields[1];\n             }\n@@ -505,8 +501,7 @@ public function checkStream()\n         $result = $this->commandResult;\n         $resArray = explode(PHP_EOL, $result);\n         foreach ($resArray as $line) {\n-            $index = strpos($line, 'Depot');\n-            if (!($index === false)) {\n+            if (strpos($line, 'Depot') !== false) {\n                 $fields = explode(' ', $line);\n                 if (strcmp($this->p4Depot, $fields[1]) === 0) {\n                     $this->p4DepotType = $fields[3];\n@@ -520,7 +515,7 @@ public function checkStream()\n     }\n \n     \/**\n-     * @param $reference\n+     * @param string $reference\n      * @return mixed|null\n      *\/\n     protected function getChangeList($reference)\n@@ -530,21 +525,20 @@ protected function getChangeList($reference)\n             return null;\n         }\n         $label = substr($reference, $index);\n-        $command = $this->generateP4Command(' changes -m1 ' . $label);\n+        $command = $this->generateP4Command(' changes -m1 ' . ProcessExecutor::escape($label));\n         $this->executeCommand($command);\n         $changes = $this->commandResult;\n         if (strpos($changes, 'Change') !== 0) {\n             return null;\n         }\n         $fields = explode(' ', $changes);\n-        $changeList = $fields[1];\n \n-        return $changeList;\n+        return $fields[1];\n     }\n \n     \/**\n-     * @param $fromReference\n-     * @param $toReference\n+     * @param string $fromReference\n+     * @param string $toReference\n      * @return mixed|null\n      *\/\n     public function getCommitLogs($fromReference, $toReference)\n@@ -559,11 +553,10 @@ public function getCommitLogs($fromReference, $toReference)\n         }\n         $index = strpos($fromReference, '@');\n         $main = substr($fromReference, 0, $index) . '\/...';\n-        $command = $this->generateP4Command('filelog ' . $main . '@' . $fromChangeList. ',' . $toChangeList);\n+        $command = $this->generateP4Command('filelog ' . ProcessExecutor::escape($main . '@' . $fromChangeList. ',' . $toChangeList));\n         $this->executeCommand($command);\n-        $result = $this->commandResult;\n \n-        return $result;\n+        return $this->commandResult;\n     }\n \n     public function getFilesystem()"
        },
        {
            "sha": "60bf9efa92d0c09cd97c6575bdf3713078dc6273",
            "filename": "src\/Composer\/Util\/Platform.php",
            "status": "modified",
            "additions": 7,
            "deletions": 4,
            "changes": 11,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Platform.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Platform.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/Platform.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -22,26 +22,28 @@ class Platform\n     \/**\n      * Parses tildes and environment variables in paths.\n      *\n-     * @param string $path\n+     * @param  string $path\n      * @return string\n      *\/\n     public static function expandPath($path)\n     {\n         if (preg_match('#^~[\\\\\/]#', $path)) {\n             return self::getUserDirectory() . substr($path, 1);\n         }\n-        return preg_replace_callback('#^(\\$|(?P<percent>%))(?P<var>\\w++)(?(percent)%)(?P<path>.*)#', function($matches) {\n+\n+        return preg_replace_callback('#^(\\$|(?P<percent>%))(?P<var>\\w++)(?(percent)%)(?P<path>.*)#', function ($matches) {\n             \/\/ Treat HOME as an alias for USERPROFILE on Windows for legacy reasons\n             if (Platform::isWindows() && $matches['var'] == 'HOME') {\n                 return (getenv('HOME') ?: getenv('USERPROFILE')) . $matches['path'];\n             }\n+\n             return getenv($matches['var']) . $matches['path'];\n         }, $path);\n     }\n \n     \/**\n-     * @return string The formal user home as detected from environment parameters\n      * @throws \\RuntimeException If the user home could not reliably be determined\n+     * @return string            The formal user home as detected from environment parameters\n      *\/\n     public static function getUserDirectory()\n     {\n@@ -55,6 +57,7 @@ public static function getUserDirectory()\n \n         if (function_exists('posix_getuid') && function_exists('posix_getpwuid')) {\n             $info = posix_getpwuid(posix_getuid());\n+\n             return $info['dir'];\n         }\n \n@@ -71,7 +74,7 @@ public static function isWindows()\n \n     \/**\n      * @param  string $str\n-     * @return int return a guaranteed binary length of the string, regardless of silly mbstring configs\n+     * @return int    return a guaranteed binary length of the string, regardless of silly mbstring configs\n      *\/\n     public static function strlen($str)\n     {"
        },
        {
            "sha": "2a07427782353fb436207c77db25e9e9630791bc",
            "filename": "src\/Composer\/Util\/ProcessExecutor.php",
            "status": "modified",
            "additions": 53,
            "deletions": 3,
            "changes": 56,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/ProcessExecutor.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/ProcessExecutor.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/ProcessExecutor.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,9 +12,9 @@\n \n namespace Composer\\Util;\n \n+use Composer\\IO\\IOInterface;\n use Symfony\\Component\\Process\\Process;\n use Symfony\\Component\\Process\\ProcessUtils;\n-use Composer\\IO\\IOInterface;\n \n \/**\n  * @author Robert Sch\u00f6nthal <seroscho@googlemail.com>\n@@ -60,7 +60,7 @@ public function execute($command, &$output = null, $cwd = null)\n             $cwd = realpath(getcwd());\n         }\n \n-        $this->captureOutput = count(func_get_args()) > 1;\n+        $this->captureOutput = func_num_args() > 1;\n         $this->errorOutput = null;\n         $process = new Process($command, $cwd, null, null, static::getTimeout());\n \n@@ -131,6 +131,56 @@ public static function setTimeout($timeout)\n      *\/\n     public static function escape($argument)\n     {\n-        return ProcessUtils::escapeArgument($argument);\n+        return self::escapeArgument($argument);\n+    }\n+\n+    \/**\n+     * Copy of ProcessUtils::escapeArgument() that is deprecated in Symfony 3.3 and removed in Symfony 4.\n+     *\n+     * @param string $argument\n+     *\n+     * @return string\n+     *\/\n+    private static function escapeArgument($argument)\n+    {\n+        \/\/Fix for PHP bug #43784 escapeshellarg removes % from given string\n+        \/\/Fix for PHP bug #49446 escapeshellarg doesn't work on Windows\n+        \/\/@see https:\/\/bugs.php.net\/bug.php?id=43784\n+        \/\/@see https:\/\/bugs.php.net\/bug.php?id=49446\n+        if ('\\\\' === DIRECTORY_SEPARATOR) {\n+            if ('' === $argument) {\n+                return escapeshellarg($argument);\n+            }\n+\n+            $escapedArgument = '';\n+            $quote = false;\n+            foreach (preg_split('\/(\")\/', $argument, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE) as $part) {\n+                if ('\"' === $part) {\n+                    $escapedArgument .= '\\\\\"';\n+                } elseif (self::isSurroundedBy($part, '%')) {\n+                    \/\/ Avoid environment variable expansion\n+                    $escapedArgument .= '^%\"'.substr($part, 1, -1).'\"^%';\n+                } else {\n+                    \/\/ escape trailing backslash\n+                    if ('\\\\' === substr($part, -1)) {\n+                        $part .= '\\\\';\n+                    }\n+                    $quote = true;\n+                    $escapedArgument .= $part;\n+                }\n+            }\n+            if ($quote) {\n+                $escapedArgument = '\"'.$escapedArgument.'\"';\n+            }\n+\n+            return $escapedArgument;\n+        }\n+\n+        return \"'\".str_replace(\"'\", \"'\\\\''\", $argument).\"'\";\n+    }\n+\n+    private static function isSurroundedBy($arg, $char)\n+    {\n+        return 2 < strlen($arg) && $char === $arg[0] && $char === $arg[strlen($arg) - 1];\n     }\n }"
        },
        {
            "sha": "ea18a9e3008d7f11507d2ca1f206a5151e97fb95",
            "filename": "src\/Composer\/Util\/RemoteFilesystem.php",
            "status": "modified",
            "additions": 177,
            "deletions": 101,
            "changes": 278,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/RemoteFilesystem.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/RemoteFilesystem.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/RemoteFilesystem.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -114,13 +114,18 @@ public function getOptions()\n     \/**\n      * Merges new options\n      *\n-     * @return array $options\n+     * @param array $options\n      *\/\n     public function setOptions(array $options)\n     {\n         $this->options = array_replace_recursive($this->options, $options);\n     }\n \n+    \/**\n+     * Check is disable TLS.\n+     *\n+     * @return bool\n+     *\/\n     public function isTlsDisabled()\n     {\n         return $this->disableTls === true;\n@@ -175,6 +180,24 @@ public function findStatusCode(array $headers)\n         return $value;\n     }\n \n+    \/**\n+     * @param  array       $headers array of returned headers like from getLastHeaders()\n+     * @return string|null\n+     *\/\n+    public function findStatusMessage(array $headers)\n+    {\n+        $value = null;\n+        foreach ($headers as $header) {\n+            if (preg_match('{^HTTP\/\\S+ \\d+}i', $header)) {\n+                \/\/ In case of redirects, http_response_headers contains the headers of all responses\n+                \/\/ so we can not return directly and need to keep iterating\n+                $value = $header;\n+            }\n+        }\n+\n+        return $value;\n+    }\n+\n     \/**\n      * Get file content or copy action.\n      *\n@@ -195,6 +218,23 @@ protected function get($originUrl, $fileUrl, $additionalOptions = array(), $file\n             $originUrl = 'github.com';\n         }\n \n+        \/\/ Gitlab can be installed in a non-root context (i.e. gitlab.com\/foo). When downloading archives the originUrl\n+        \/\/ is the host without the path, so we look for the registered gitlab-domains matching the host here\n+        if (\n+            $this->config\n+            && is_array($this->config->get('gitlab-domains'))\n+            && false === strpos($originUrl, '\/')\n+            && !in_array($originUrl, $this->config->get('gitlab-domains'))\n+        ) {\n+            foreach ($this->config->get('gitlab-domains') as $gitlabDomain) {\n+                if (0 === strpos($gitlabDomain, $originUrl)) {\n+                    $originUrl = $gitlabDomain;\n+                    break;\n+                }\n+            }\n+            unset($gitlabDomain);\n+        }\n+\n         $this->scheme = parse_url($fileUrl, PHP_URL_SCHEME);\n         $this->bytesMax = 0;\n         $this->originUrl = $originUrl;\n@@ -207,8 +247,8 @@ protected function get($originUrl, $fileUrl, $additionalOptions = array(), $file\n         $this->redirects = 1; \/\/ The first request counts.\n \n         \/\/ capture username\/password from URL if there is one\n-        if (preg_match('{^https?:\/\/(.+):(.+)@([^\/]+)}i', $fileUrl, $match)) {\n-            $this->io->setAuthentication($originUrl, urldecode($match[1]), urldecode($match[2]));\n+        if (preg_match('{^https?:\/\/([^:\/]+):([^@\/]+)@([^\/]+)}i', $fileUrl, $match)) {\n+            $this->io->setAuthentication($originUrl, rawurldecode($match[1]), rawurldecode($match[2]));\n         }\n \n         $tempAdditionalOptions = $additionalOptions;\n@@ -228,7 +268,6 @@ protected function get($originUrl, $fileUrl, $additionalOptions = array(), $file\n \n         $options = $this->getOptionsForUrl($originUrl, $tempAdditionalOptions);\n         unset($tempAdditionalOptions);\n-        $userlandFollow = isset($options['http']['follow_location']) && !$options['http']['follow_location'];\n \n         $origFileUrl = $fileUrl;\n \n@@ -245,21 +284,13 @@ protected function get($originUrl, $fileUrl, $additionalOptions = array(), $file\n             unset($options['gitlab-token']);\n         }\n \n-        if (isset($options['bitbucket-token'])) {\n-            \/\/ skip using the token for BitBucket downloads as these are not working with auth\n-            if (!$this->isPublicBitBucketDownload($origFileUrl)) {\n-                $fileUrl .= (false === strpos($fileUrl,'?') ? '?' : '&') . 'access_token=' . $options['bitbucket-token'];\n-            }\n-            unset($options['bitbucket-token']);\n-        }\n-\n         if (isset($options['http'])) {\n             $options['http']['ignore_errors'] = true;\n         }\n \n-        if ($this->degradedMode && substr($fileUrl, 0, 21) === 'http:\/\/packagist.org\/') {\n+        if ($this->degradedMode && substr($fileUrl, 0, 26) === 'http:\/\/repo.packagist.org\/') {\n             \/\/ access packagist using the resolved IPv4 instead of the hostname to force IPv4 protocol\n-            $fileUrl = 'http:\/\/' . gethostbyname('packagist.org') . substr($fileUrl, 20);\n+            $fileUrl = 'http:\/\/' . gethostbyname('repo.packagist.org') . substr($fileUrl, 20);\n             $degradedPackagist = true;\n         }\n \n@@ -271,12 +302,12 @@ protected function get($originUrl, $fileUrl, $additionalOptions = array(), $file\n         unset($origFileUrl, $actualContextOptions);\n \n         \/\/ Check for secure HTTP, but allow insecure Packagist calls to $hashed providers as file integrity is verified with sha256\n-        if ((substr($fileUrl, 0, 23) !== 'http:\/\/packagist.org\/p\/' || (false === strpos($fileUrl, '$') && false === strpos($fileUrl, '%24'))) && empty($degradedPackagist) && $this->config) {\n+        if ((!preg_match('{^http:\/\/(repo\\.)?packagist\\.org\/p\/}', $fileUrl) || (false === strpos($fileUrl, '$') && false === strpos($fileUrl, '%24'))) && empty($degradedPackagist) && $this->config) {\n             $this->config->prohibitUrlByConfig($fileUrl, $this->io);\n         }\n \n         if ($this->progress && !$isRedirect) {\n-            $this->io->writeError(\" Downloading: <comment>Connecting...<\/comment>\", false);\n+            $this->io->writeError(\"Downloading (<comment>connecting...<\/comment>)\", false);\n         }\n \n         $errorMessage = '';\n@@ -289,12 +320,32 @@ protected function get($originUrl, $fileUrl, $additionalOptions = array(), $file\n             $errorMessage .= preg_replace('{^file_get_contents\\(.*?\\): }', '', $msg);\n         });\n         try {\n-            $result = file_get_contents($fileUrl, false, $ctx);\n+            $result = $this->getRemoteContents($originUrl, $fileUrl, $ctx, $http_response_header);\n+\n+            if (!empty($http_response_header[0])) {\n+                $statusCode = $this->findStatusCode($http_response_header);\n+                if (in_array($statusCode, array(401, 403)) && $this->retryAuthFailure) {\n+                    $warning = null;\n+                    if ($this->findHeaderValue($http_response_header, 'content-type') === 'application\/json') {\n+                        $data = json_decode($result, true);\n+                        if (!empty($data['warning'])) {\n+                            $warning = $data['warning'];\n+                        }\n+                    }\n+                    $this->promptAuthAndRetry($statusCode, $this->findStatusMessage($http_response_header), $warning, $http_response_header);\n+                }\n+            }\n \n             $contentLength = !empty($http_response_header[0]) ? $this->findHeaderValue($http_response_header, 'content-length') : null;\n             if ($contentLength && Platform::strlen($result) < $contentLength) {\n                 \/\/ alas, this is not possible via the stream callback because STREAM_NOTIFY_COMPLETED is documented, but not implemented anywhere in PHP\n-                throw new TransportException('Content-Length mismatch');\n+                $e = new TransportException('Content-Length mismatch, received '.Platform::strlen($result).' bytes out of the expected '.$contentLength);\n+                $e->setHeaders($http_response_header);\n+                $e->setStatusCode($this->findStatusCode($http_response_header));\n+                $e->setResponse($result);\n+                $this->io->writeError('Content-Length mismatch, received '.Platform::strlen($result).' out of '.$contentLength.' bytes: (' . base64_encode($result).')', true, IOInterface::DEBUG);\n+\n+                throw $e;\n             }\n \n             if (PHP_VERSION_ID < 50600 && !empty($options['ssl']['peer_fingerprint'])) {\n@@ -318,7 +369,7 @@ protected function get($originUrl, $fileUrl, $additionalOptions = array(), $file\n             }\n             $result = false;\n         }\n-        if ($errorMessage && !ini_get('allow_url_fopen')) {\n+        if ($errorMessage && !filter_var(ini_get('allow_url_fopen'), FILTER_VALIDATE_BOOLEAN)) {\n             $errorMessage = 'allow_url_fopen must be enabled in php.ini ('.$errorMessage.')';\n         }\n         restore_error_handler();\n@@ -339,26 +390,40 @@ protected function get($originUrl, $fileUrl, $additionalOptions = array(), $file\n \n         $statusCode = null;\n         $contentType = null;\n+        $locationHeader = null;\n         if (!empty($http_response_header[0])) {\n             $statusCode = $this->findStatusCode($http_response_header);\n             $contentType = $this->findHeaderValue($http_response_header, 'content-type');\n+            $locationHeader = $this->findHeaderValue($http_response_header, 'location');\n         }\n \n         \/\/ check for bitbucket login page asking to authenticate\n         if ($originUrl === 'bitbucket.org'\n             && !$this->isPublicBitBucketDownload($fileUrl)\n             && substr($fileUrl, -4) === '.zip'\n-            && preg_match('{^text\/html\\b}i', $contentType)\n+            && (!$locationHeader || substr($locationHeader, -4) !== '.zip')\n+            && $contentType && preg_match('{^text\/html\\b}i', $contentType)\n+        ) {\n+            $result = false;\n+            if ($this->retryAuthFailure) {\n+                $this->promptAuthAndRetry(401);\n+            }\n+        }\n+\n+        \/\/ check for gitlab 404 when downloading archives\n+        if ($statusCode === 404\n+            && $this->config && in_array($originUrl, $this->config->get('gitlab-domains'), true)\n+            && false !== strpos($fileUrl, 'archive.zip')\n         ) {\n             $result = false;\n             if ($this->retryAuthFailure) {\n                 $this->promptAuthAndRetry(401);\n             }\n         }\n \n-        \/\/ handle 3xx redirects for php<5.6, 304 Not Modified is excluded\n+        \/\/ handle 3xx redirects, 304 Not Modified is excluded\n         $hasFollowedRedirect = false;\n-        if ($userlandFollow && $statusCode >= 300 && $statusCode <= 399 && $statusCode !== 304 && $this->redirects < $this->maxRedirects) {\n+        if ($statusCode >= 300 && $statusCode <= 399 && $statusCode !== 304 && $this->redirects < $this->maxRedirects) {\n             $hasFollowedRedirect = true;\n             $result = $this->handleRedirect($http_response_header, $additionalOptions, $result);\n         }\n@@ -367,7 +432,7 @@ protected function get($originUrl, $fileUrl, $additionalOptions = array(), $file\n         if ($statusCode && $statusCode >= 400 && $statusCode <= 599) {\n             if (!$this->retry) {\n                 if ($this->progress && !$this->retry && !$isRedirect) {\n-                    $this->io->overwriteError(\" Downloading: <error>Failed<\/error>\", false);\n+                    $this->io->overwriteError(\"Downloading (<error>failed<\/error>)\", false);\n                 }\n \n                 $e = new TransportException('The \"'.$this->fileUrl.'\" file could not be downloaded ('.$http_response_header[0].')', $statusCode);\n@@ -380,12 +445,13 @@ protected function get($originUrl, $fileUrl, $additionalOptions = array(), $file\n         }\n \n         if ($this->progress && !$this->retry && !$isRedirect) {\n-            $this->io->overwriteError(\" Downloading: \".($result === false ? '<error>Failed<\/error>' : '<comment>100%<\/comment>'), false);\n+            $this->io->overwriteError(\"Downloading (\".($result === false ? '<error>failed<\/error>' : '<comment>100%<\/comment>').\")\", false);\n         }\n \n         \/\/ decode gzip\n         if ($result && extension_loaded('zlib') && substr($fileUrl, 0, 4) === 'http' && !$hasFollowedRedirect) {\n-            $decode = 'gzip' === strtolower($this->findHeaderValue($http_response_header, 'content-encoding'));\n+            $contentEncoding = $this->findHeaderValue($http_response_header, 'content-encoding');\n+            $decode = $contentEncoding && 'gzip' === strtolower($contentEncoding);\n \n             if ($decode) {\n                 try {\n@@ -512,6 +578,33 @@ protected function get($originUrl, $fileUrl, $additionalOptions = array(), $file\n         return $result;\n     }\n \n+    \/**\n+     * Get contents of remote URL.\n+     *\n+     * @param string   $originUrl The origin URL\n+     * @param string   $fileUrl   The file URL\n+     * @param resource $context   The stream context\n+     *\n+     * @return string|false The response contents or false on failure\n+     *\/\n+    protected function getRemoteContents($originUrl, $fileUrl, $context, array &$responseHeaders = null)\n+    {\n+        try {\n+            $e = null;\n+            $result = file_get_contents($fileUrl, false, $context);\n+        } catch (\\Throwable $e) {\n+        } catch (\\Exception $e) {\n+        }\n+\n+        $responseHeaders = isset($http_response_header) ? $http_response_header : array();\n+\n+        if (null !== $e) {\n+            throw $e;\n+        }\n+\n+        return $result;\n+    }\n+\n     \/**\n      * Get notification action.\n      *\n@@ -532,29 +625,6 @@ protected function callbackGet($notificationCode, $severity, $message, $messageC\n                     \/\/ but you do not send an appropriate certificate\n                     throw new TransportException(\"The '\" . $this->fileUrl . \"' URL could not be accessed: \" . $message, $messageCode);\n                 }\n-                \/\/ intentional fallthrough to the next case as the notificationCode\n-                \/\/ isn't always consistent and we should inspect the messageCode for 401s\n-\n-            case STREAM_NOTIFY_AUTH_REQUIRED:\n-                if (401 === $messageCode) {\n-                    \/\/ Bail if the caller is going to handle authentication failures itself.\n-                    if (!$this->retryAuthFailure) {\n-                        break;\n-                    }\n-\n-                    $this->promptAuthAndRetry($messageCode);\n-                }\n-                break;\n-\n-            case STREAM_NOTIFY_AUTH_RESULT:\n-                if (403 === $messageCode) {\n-                    \/\/ Bail if the caller is going to handle authentication failures itself.\n-                    if (!$this->retryAuthFailure) {\n-                        break;\n-                    }\n-\n-                    $this->promptAuthAndRetry($messageCode, $message);\n-                }\n                 break;\n \n             case STREAM_NOTIFY_FILE_SIZE_IS:\n@@ -567,7 +637,7 @@ protected function callbackGet($notificationCode, $severity, $message, $messageC\n \n                     if ((0 === $progression % 5) && 100 !== $progression && $progression !== $this->lastProgress) {\n                         $this->lastProgress = $progression;\n-                        $this->io->overwriteError(\" Downloading: <comment>$progression%<\/comment>\", false);\n+                        $this->io->overwriteError(\"Downloading (<comment>$progression%<\/comment>)\", false);\n                     }\n                 }\n                 break;\n@@ -577,11 +647,35 @@ protected function callbackGet($notificationCode, $severity, $message, $messageC\n         }\n     }\n \n-    protected function promptAuthAndRetry($httpStatus, $reason = null)\n+    protected function promptAuthAndRetry($httpStatus, $reason = null, $warning = null, $headers = array())\n     {\n         if ($this->config && in_array($this->originUrl, $this->config->get('github-domains'), true)) {\n-            $message = \"\\n\".'Could not fetch '.$this->fileUrl.', please create a GitHub OAuth token '.($httpStatus === 404 ? 'to access private repos' : 'to go over the API rate limit');\n             $gitHubUtil = new GitHub($this->io, $this->config, null);\n+            $message = \"\\n\";\n+\n+            $rateLimited = $gitHubUtil->isRateLimited($headers);\n+            if ($rateLimited) {\n+                $rateLimit = $gitHubUtil->getRateLimit($headers);\n+                if ($this->io->hasAuthentication($this->originUrl)) {\n+                    $message = 'Review your configured GitHub OAuth token or enter a new one to go over the API rate limit.';\n+                } else {\n+                    $message = 'Create a GitHub OAuth token to go over the API rate limit.';\n+                }\n+\n+                $message = sprintf(\n+                    'GitHub API limit (%d calls\/hr) is exhausted, could not fetch '.$this->fileUrl.'. '.$message.' You can also wait until %s for the rate limit to reset.',\n+                    $rateLimit['limit'],\n+                    $rateLimit['reset']\n+                ).\"\\n\";\n+            } else {\n+                $message .= 'Could not fetch '.$this->fileUrl.', please ';\n+                if ($this->io->hasAuthentication($this->originUrl)) {\n+                    $message .= 'review your configured GitHub OAuth token or enter a new one to access private repos';\n+                } else {\n+                    $message .= 'create a GitHub OAuth token to access private repos';\n+                }\n+            }\n+\n             if (!$gitHubUtil->authorizeOAuth($this->originUrl)\n                 && (!$this->io->isInteractive() || !$gitHubUtil->authorizeOAuthInteractively($this->originUrl, $message))\n             ) {\n@@ -590,6 +684,11 @@ protected function promptAuthAndRetry($httpStatus, $reason = null)\n         } elseif ($this->config && in_array($this->originUrl, $this->config->get('gitlab-domains'), true)) {\n             $message = \"\\n\".'Could not fetch '.$this->fileUrl.', enter your ' . $this->originUrl . ' credentials ' .($httpStatus === 401 ? 'to access private repos' : 'to go over the API rate limit');\n             $gitLabUtil = new GitLab($this->io, $this->config, null);\n+\n+            if ($this->io->hasAuthentication($this->originUrl) && ($auth = $this->io->getAuthentication($this->originUrl)) && $auth['password'] === 'private-token') {\n+                throw new TransportException(\"Invalid credentials for '\" . $this->fileUrl . \"', aborting.\", $httpStatus);\n+            }\n+\n             if (!$gitLabUtil->authorizeOAuth($this->originUrl)\n                 && (!$this->io->isInteractive() || !$gitLabUtil->authorizeOAuthInteractively($this->scheme, $this->originUrl, $message))\n             ) {\n@@ -601,9 +700,9 @@ protected function promptAuthAndRetry($httpStatus, $reason = null)\n                 $auth = $this->io->getAuthentication($this->originUrl);\n                 if ($auth['username'] !== 'x-token-auth') {\n                     $bitbucketUtil = new Bitbucket($this->io, $this->config);\n-                    $token = $bitbucketUtil->requestToken($this->originUrl, $auth['username'], $auth['password']);\n-                    if (! empty($token)) {\n-                        $this->io->setAuthentication($this->originUrl, 'x-token-auth', $token['access_token']);\n+                    $accessToken = $bitbucketUtil->requestToken($this->originUrl, $auth['username'], $auth['password']);\n+                    if (!empty($accessToken)) {\n+                        $this->io->setAuthentication($this->originUrl, 'x-token-auth', $accessToken);\n                         $askForOAuthToken = false;\n                     }\n                 } else {\n@@ -612,7 +711,7 @@ protected function promptAuthAndRetry($httpStatus, $reason = null)\n             }\n \n             if ($askForOAuthToken) {\n-                $message = \"\\n\".'Could not fetch ' . $this->fileUrl . ', please create a bitbucket OAuth token to ' . ($httpStatus === 401 ? 'to access private repos' : 'to go over the API rate limit');\n+                $message = \"\\n\".'Could not fetch ' . $this->fileUrl . ', please create a bitbucket OAuth token to ' . (($httpStatus === 401 || $httpStatus === 403) ? 'access private repos' : 'go over the API rate limit');\n                 $bitBucketUtil = new Bitbucket($this->io, $this->config);\n                 if (! $bitBucketUtil->authorizeOAuth($this->originUrl)\n                     && (! $this->io->isInteractive() || !$bitBucketUtil->authorizeOAuthInteractively($this->originUrl, $message))\n@@ -643,6 +742,9 @@ protected function promptAuthAndRetry($httpStatus, $reason = null)\n             }\n \n             $this->io->overwriteError('');\n+            if ($warning) {\n+                $this->io->writeError('    <warning>'.$warning.'<\/warning>');\n+            }\n             $this->io->writeError('    Authentication required (<info>'.parse_url($this->fileUrl, PHP_URL_HOST).'<\/info>):');\n             $username = $this->io->ask('      Username: ');\n             $password = $this->io->askAndHideAnswer('      Password: ');\n@@ -662,11 +764,7 @@ protected function getOptionsForUrl($originUrl, $additionalOptions)\n         if ($this->disableTls === false && PHP_VERSION_ID < 50600 && !stream_is_local($this->fileUrl)) {\n             $host = parse_url($this->fileUrl, PHP_URL_HOST);\n \n-            if (PHP_VERSION_ID >= 50304) {\n-                \/\/ Must manually follow when setting CN_match because this causes all\n-                \/\/ redirects to be validated against the same CN_match value.\n-                $userlandFollow = true;\n-            } else {\n+            if (PHP_VERSION_ID < 50304) {\n                 \/\/ PHP < 5.3.4 does not support follow_location, for those people\n                 \/\/ do some really nasty hard coded transformations. These will\n                 \/\/ still breakdown if the site redirects to a domain we don't\n@@ -695,6 +793,9 @@ protected function getOptionsForUrl($originUrl, $additionalOptions)\n \n                 $tlsOptions['ssl']['CN_match'] = $certMap['cn'];\n                 $tlsOptions['ssl']['peer_fingerprint'] = $certMap['fp'];\n+            } elseif (!CaBundle::isOpensslParseSafe() && $host === 'repo.packagist.org') {\n+                \/\/ handle subjectAltName for packagist.org's repo domain on very old PHPs\n+                $tlsOptions['ssl']['CN_match'] = 'packagist.org';\n             }\n         }\n \n@@ -712,31 +813,30 @@ protected function getOptionsForUrl($originUrl, $additionalOptions)\n             $headers[] = 'Connection: close';\n         }\n \n-        if (isset($userlandFollow)) {\n-            $options['http']['follow_location'] = 0;\n-        }\n-\n         if ($this->io->hasAuthentication($originUrl)) {\n             $auth = $this->io->getAuthentication($originUrl);\n             if ('github.com' === $originUrl && 'x-oauth-basic' === $auth['password']) {\n                 $options['github-token'] = $auth['username'];\n             } elseif ($this->config && in_array($originUrl, $this->config->get('gitlab-domains'), true)) {\n                 if ($auth['password'] === 'oauth2') {\n                     $headers[] = 'Authorization: Bearer '.$auth['username'];\n-                }\n-                else if ($auth['password'] === 'private-token') {\n+                } elseif ($auth['password'] === 'private-token') {\n                     $headers[] = 'PRIVATE-TOKEN: '.$auth['username'];\n                 }\n             } elseif ('bitbucket.org' === $originUrl\n                 && $this->fileUrl !== Bitbucket::OAUTH2_ACCESS_TOKEN_URL && 'x-token-auth' === $auth['username']\n             ) {\n-                $options['bitbucket-token'] = $auth['password'];\n+                if (!$this->isPublicBitBucketDownload($this->fileUrl)) {\n+                    $headers[] = 'Authorization: Bearer ' . $auth['password'];\n+                }\n             } else {\n                 $authStr = base64_encode($auth['username'] . ':' . $auth['password']);\n                 $headers[] = 'Authorization: Basic '.$authStr;\n             }\n         }\n \n+        $options['http']['follow_location'] = 0;\n+\n         if (isset($options['http']['header']) && !is_array($options['http']['header'])) {\n             $options['http']['header'] = explode(\"\\r\\n\", trim($options['http']['header'], \"\\r\\n\"));\n         }\n@@ -777,7 +877,7 @@ private function handleRedirect(array $http_response_header, array $additionalOp\n \n             $additionalOptions['redirects'] = $this->redirects;\n \n-            return $this->get($this->originUrl, $targetUrl, $additionalOptions, $this->fileName, $this->progress);\n+            return $this->get(parse_url($targetUrl, PHP_URL_HOST), $targetUrl, $additionalOptions, $this->fileName, $this->progress);\n         }\n \n         if (!$this->retry) {\n@@ -871,17 +971,7 @@ private function getTlsDefaults(array $options)\n         if (!isset($defaults['ssl']['cafile']) && !isset($defaults['ssl']['capath'])) {\n             $result = CaBundle::getSystemCaRootBundlePath($caBundleLogger);\n \n-            if (preg_match('{^phar:\/\/}', $result)) {\n-                $hash = hash_file('sha256', $result);\n-                $targetPath = rtrim(sys_get_temp_dir(), '\\\\\/') . '\/composer-cacert-' . $hash . '.pem';\n-\n-                if (!file_exists($targetPath) || $hash !== hash_file('sha256', $targetPath)) {\n-                    $this->streamCopy($result, $targetPath);\n-                    chmod($targetPath, 0666);\n-                }\n-\n-                $defaults['ssl']['cafile'] = $targetPath;\n-            } elseif (is_dir($result)) {\n+            if (is_dir($result)) {\n                 $defaults['ssl']['capath'] = $result;\n             } else {\n                 $defaults['ssl']['cafile'] = $result;\n@@ -906,24 +996,6 @@ private function getTlsDefaults(array $options)\n         return $defaults;\n     }\n \n-    \/**\n-     * Uses stream_copy_to_stream instead of copy to work around https:\/\/bugs.php.net\/bug.php?id=64634\n-     *\n-     * @param string $source\n-     * @param string $target\n-     *\/\n-    private function streamCopy($source, $target)\n-    {\n-        $source = fopen($source, 'r');\n-        $target = fopen($target, 'w+');\n-\n-        stream_copy_to_stream($source, $target);\n-        fclose($source);\n-        fclose($target);\n-\n-        unset($source, $target);\n-    }\n-\n     \/**\n      * Fetch certificate common name and fingerprint for validation of SAN.\n      *\n@@ -1003,15 +1075,19 @@ private function getUrlAuthority($url)\n      *\/\n     private function isPublicBitBucketDownload($urlToBitBucketFile)\n     {\n+        $domain = parse_url($urlToBitBucketFile, PHP_URL_HOST);\n+        if (strpos($domain, 'bitbucket.org') === false) {\n+            \/\/ Bitbucket downloads are hosted on amazonaws.\n+            \/\/ We do not need to authenticate there at all\n+            return true;\n+        }\n+\n         $path = parse_url($urlToBitBucketFile, PHP_URL_PATH);\n \n         \/\/ Path for a public download follows this pattern \/{user}\/{repo}\/downloads\/{whatever}\n         \/\/ {@link https:\/\/blog.bitbucket.org\/2009\/04\/12\/new-feature-downloads\/}\n         $pathParts = explode('\/', $path);\n-        if (count($pathParts) >= 4 && $pathParts[3] == 'downloads') {\n-            return true;\n-        }\n \n-        return false;\n+        return count($pathParts) >= 4 && $pathParts[3] == 'downloads';\n     }\n }"
        },
        {
            "sha": "dcb362b529e00096bae48dce77e228c1a7683ad8",
            "filename": "src\/Composer\/Util\/Silencer.php",
            "status": "modified",
            "additions": 2,
            "deletions": 1,
            "changes": 3,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Silencer.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Silencer.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/Silencer.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,4 +1,5 @@\n <?php\n+\n \/*\n  * This file is part of Composer.\n  *\n@@ -35,7 +36,7 @@ public static function suppress($mask = null)\n             $mask = E_WARNING | E_NOTICE | E_USER_WARNING | E_USER_NOTICE | E_DEPRECATED | E_USER_DEPRECATED | E_STRICT;\n         }\n         $old = error_reporting();\n-        array_push(self::$stack, $old);\n+        self::$stack[] = $old;\n         error_reporting($old & ~$mask);\n \n         return $old;"
        },
        {
            "sha": "8dfd6624a22297581cb930f9eeda7a9fc6f9e375",
            "filename": "src\/Composer\/Util\/StreamContextFactory.php",
            "status": "modified",
            "additions": 10,
            "deletions": 10,
            "changes": 20,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/StreamContextFactory.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/StreamContextFactory.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/StreamContextFactory.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -40,7 +40,7 @@ public static function getContext($url, array $defaultOptions = array(), array $\n         ));\n \n         \/\/ Handle HTTP_PROXY\/http_proxy on CLI only for security reasons\n-        if (PHP_SAPI === 'cli' && (!empty($_SERVER['HTTP_PROXY']) || !empty($_SERVER['http_proxy']))) {\n+        if ((PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') && (!empty($_SERVER['HTTP_PROXY']) || !empty($_SERVER['http_proxy']))) {\n             $proxy = parse_url(!empty($_SERVER['http_proxy']) ? $_SERVER['http_proxy'] : $_SERVER['HTTP_PROXY']);\n         }\n \n@@ -55,8 +55,8 @@ public static function getContext($url, array $defaultOptions = array(), array $\n         }\n \n         \/\/ Remove proxy if URL matches no_proxy directive\n-        if (!empty($_SERVER['no_proxy']) && parse_url($url, PHP_URL_HOST)) {\n-            $pattern = new NoProxyPattern($_SERVER['no_proxy']);\n+        if (!empty($_SERVER['NO_PROXY']) || !empty($_SERVER['no_proxy']) && parse_url($url, PHP_URL_HOST)) {\n+            $pattern = new NoProxyPattern(!empty($_SERVER['no_proxy']) ? $_SERVER['no_proxy'] : $_SERVER['NO_PROXY']);\n             if ($pattern->test($url)) {\n                 unset($proxy);\n             }\n@@ -109,9 +109,9 @@ public static function getContext($url, array $defaultOptions = array(), array $\n \n             \/\/ handle proxy auth if present\n             if (isset($proxy['user'])) {\n-                $auth = urldecode($proxy['user']);\n+                $auth = rawurldecode($proxy['user']);\n                 if (isset($proxy['pass'])) {\n-                    $auth .= ':' . urldecode($proxy['pass']);\n+                    $auth .= ':' . rawurldecode($proxy['pass']);\n                 }\n                 $auth = base64_encode($auth);\n \n@@ -139,12 +139,12 @@ public static function getContext($url, array $defaultOptions = array(), array $\n             $phpVersion = 'PHP ' . PHP_MAJOR_VERSION . '.' . PHP_MINOR_VERSION . '.' . PHP_RELEASE_VERSION;\n         }\n \n-        if (!isset($options['http']['header']) || false === strpos(strtolower(implode('', $options['http']['header'])), 'user-agent')) {\n+        if (!isset($options['http']['header']) || false === stripos(implode('', $options['http']['header']), 'user-agent')) {\n             $options['http']['header'][] = sprintf(\n                 'User-Agent: Composer\/%s (%s; %s; %s%s)',\n                 Composer::VERSION === '@package_version@' ? 'source' : Composer::VERSION,\n-                php_uname('s'),\n-                php_uname('r'),\n+                function_exists('php_uname') ? php_uname('s') : 'Unknown',\n+                function_exists('php_uname') ? php_uname('r') : 'Unknown',\n                 $phpVersion,\n                 getenv('CI') ? '; CI' : ''\n             );\n@@ -160,7 +160,7 @@ public static function getContext($url, array $defaultOptions = array(), array $\n      * This method fixes the array by moving the content-type header to the end\n      *\n      * @link https:\/\/bugs.php.net\/bug.php?id=61548\n-     * @param $header\n+     * @param string|array $header\n      * @return array\n      *\/\n     private static function fixHttpHeaderField($header)\n@@ -169,7 +169,7 @@ private static function fixHttpHeaderField($header)\n             $header = explode(\"\\r\\n\", $header);\n         }\n         uasort($header, function ($el) {\n-            return preg_match('{^content-type}i', $el) ? 1 : -1;\n+            return stripos($el, 'content-type') === 0 ? 1 : -1;\n         });\n \n         return $header;"
        },
        {
            "sha": "58114ac93403170f8a1c65e2794ed1d9025bf9b4",
            "filename": "src\/Composer\/Util\/Svn.php",
            "status": "modified",
            "additions": 56,
            "deletions": 7,
            "changes": 63,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Svn.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Svn.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/Svn.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -63,6 +63,11 @@ class Svn\n      *\/\n     protected $config;\n \n+    \/**\n+     * @var string|null\n+     *\/\n+    private static $version;\n+\n     \/**\n      * @param string                   $url\n      * @param \\Composer\\IO\\IOInterface $io\n@@ -72,9 +77,9 @@ class Svn\n     public function __construct($url, IOInterface $io, Config $config, ProcessExecutor $process = null)\n     {\n         $this->url = $url;\n-        $this->io  = $io;\n+        $this->io = $io;\n         $this->config = $config;\n-        $this->process = $process ?: new ProcessExecutor;\n+        $this->process = $process ?: new ProcessExecutor($io);\n     }\n \n     public static function cleanEnv()\n@@ -85,7 +90,7 @@ public static function cleanEnv()\n     }\n \n     \/**\n-     * Execute an SVN command and try to fix up the process with credentials\n+     * Execute an SVN remote command and try to fix up the process with credentials\n      * if necessary.\n      *\n      * @param string $command SVN command to run\n@@ -102,7 +107,32 @@ public function execute($command, $url, $cwd = null, $path = null, $verbose = fa\n         \/\/ Ensure we are allowed to use this URL by config\n         $this->config->prohibitUrlByConfig($url, $this->io);\n \n-        $svnCommand = $this->getCommand($command, $url, $path);\n+        return $this->executeWithAuthRetry($command, $cwd, $url, $path, $verbose);\n+    }\n+\n+    \/**\n+     * Execute an SVN local command and try to fix up the process with credentials\n+     * if necessary.\n+     *\n+     * @param string $command SVN command to run\n+     * @param string $path    Path argument passed thru to the command\n+     * @param string $cwd     Working directory\n+     * @param bool   $verbose Output all output to the user\n+     *\n+     * @throws \\RuntimeException\n+     * @return string\n+     *\/\n+    public function executeLocal($command, $path, $cwd = null, $verbose = false)\n+    {\n+        \/\/ A local command has no remote url\n+        return $this->executeWithAuthRetry($command, $cwd, '', $path, $verbose);\n+    }\n+\n+    private function executeWithAuthRetry($svnCommand, $cwd, $url, $path, $verbose)\n+    {\n+        \/\/ Regenerate the command at each try, to use the newly user-provided credentials\n+        $command = $this->getCommand($svnCommand, $url, $path);\n+\n         $output = null;\n         $io = $this->io;\n         $handler = function ($type, $buffer) use (&$output, $io, $verbose) {\n@@ -117,7 +147,7 @@ public function execute($command, $url, $cwd = null, $path = null, $verbose = fa\n                 $io->writeError($buffer, false);\n             }\n         };\n-        $status = $this->process->execute($svnCommand, $handler, $cwd);\n+        $status = $this->process->execute($command, $handler, $cwd);\n         if (0 === $status) {\n             return $output;\n         }\n@@ -140,7 +170,7 @@ public function execute($command, $url, $cwd = null, $path = null, $verbose = fa\n         \/\/ try to authenticate if maximum quantity of tries not reached\n         if ($this->qtyAuthTries++ < self::MAX_QTY_AUTH_TRIES) {\n             \/\/ restart the process\n-            return $this->execute($command, $url, $cwd, $path, $verbose);\n+            return $this->executeWithAuthRetry($svnCommand, $cwd, $url, $path, $verbose);\n         }\n \n         throw new \\RuntimeException(\n@@ -193,7 +223,8 @@ protected function doAuthDance()\n      *\/\n     protected function getCommand($cmd, $url, $path = null)\n     {\n-        $cmd = sprintf('%s %s%s %s',\n+        $cmd = sprintf(\n+            '%s %s%s %s',\n             $cmd,\n             '--non-interactive ',\n             $this->getCredentialString(),\n@@ -329,4 +360,22 @@ private function createAuthFromUrl()\n \n         return $this->hasAuth = true;\n     }\n+\n+    \/**\n+     * Returns the version of the svn binary contained in PATH\n+     *\n+     * @return string|null\n+     *\/\n+    public function binaryVersion()\n+    {\n+        if (!self::$version) {\n+            if (0 === $this->process->execute('svn --version', $output)) {\n+                if (preg_match('{(\\d+(?:\\.\\d+)+)}', $output, $match)) {\n+                    self::$version = $match[1];\n+                }\n+            }\n+        }\n+\n+        return self::$version;\n+    }\n }"
        },
        {
            "sha": "34336d06c9100f5c8115d875336823913e1da4e6",
            "filename": "src\/Composer\/Util\/TlsHelper.php",
            "status": "modified",
            "additions": 6,
            "deletions": 7,
            "changes": 13,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/TlsHelper.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/TlsHelper.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/TlsHelper.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,7 +12,6 @@\n \n namespace Composer\\Util;\n \n-use Symfony\\Component\\Process\\PhpProcess;\n use Composer\\CaBundle\\CaBundle;\n \n \/**\n@@ -137,12 +136,12 @@ public static function getCertificateNames($certificate)\n     public static function getCertificateFingerprint($certificate)\n     {\n         $pubkeydetails = openssl_pkey_get_details(openssl_get_publickey($certificate));\n-        $pubkeypem     = $pubkeydetails['key'];\n+        $pubkeypem = $pubkeydetails['key'];\n         \/\/Convert PEM to DER before SHA1'ing\n-        $start         = '-----BEGIN PUBLIC KEY-----';\n-        $end           = '-----END PUBLIC KEY-----';\n-        $pemtrim       = substr($pubkeypem, (strpos($pubkeypem, $start) + strlen($start)), (strlen($pubkeypem) - strpos($pubkeypem, $end)) * (-1));\n-        $der           = base64_decode($pemtrim);\n+        $start = '-----BEGIN PUBLIC KEY-----';\n+        $end = '-----END PUBLIC KEY-----';\n+        $pemtrim = substr($pubkeypem, strpos($pubkeypem, $start) + strlen($start), (strlen($pubkeypem) - strpos($pubkeypem, $end)) * (-1));\n+        $der = base64_decode($pemtrim);\n \n         return sha1($der);\n     }\n@@ -165,7 +164,7 @@ public static function isOpensslParseSafe()\n      *\n      * @param string $certName CN\/SAN\n      *\n-     * @return callable|null\n+     * @return callable|void\n      *\/\n     private static function certNameMatcher($certName)\n     {"
        },
        {
            "sha": "4a5d5f90c77049fa6e5800f4e4501eb3055d50e4",
            "filename": "src\/Composer\/Util\/Url.php",
            "status": "added",
            "additions": 55,
            "deletions": 0,
            "changes": 55,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Url.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/Util\/Url.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/Util\/Url.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -0,0 +1,55 @@\n+<?php\n+\n+\/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ *\/\n+\n+namespace Composer\\Util;\n+\n+use Composer\\Config;\n+\n+\/**\n+ * @author Jordi Boggiano <j.boggiano@seld.be>\n+ *\/\n+class Url\n+{\n+    public static function updateDistReference(Config $config, $url, $ref)\n+    {\n+        $host = parse_url($url, PHP_URL_HOST);\n+\n+        if ($host === 'api.github.com' || $host === 'github.com' || $host === 'www.github.com') {\n+            if (preg_match('{^https?:\/\/(?:www\\.)?github\\.com\/([^\/]+)\/([^\/]+)\/(zip|tar)ball\/(.+)$}i', $url, $match)) {\n+                \/\/ update legacy github archives to API calls with the proper reference\n+                $url = 'https:\/\/api.github.com\/repos\/' . $match[1] . '\/'. $match[2] . '\/' . $match[3] . 'ball\/' . $ref;\n+            } elseif (preg_match('{^https?:\/\/(?:www\\.)?github\\.com\/([^\/]+)\/([^\/]+)\/archive\/.+\\.(zip|tar)(?:\\.gz)?$}i', $url, $match)) {\n+                \/\/ update current github web archives to API calls with the proper reference\n+                $url = 'https:\/\/api.github.com\/repos\/' . $match[1] . '\/'. $match[2] . '\/' . $match[3] . 'ball\/' . $ref;\n+            } elseif (preg_match('{^https?:\/\/api\\.github\\.com\/repos\/([^\/]+)\/([^\/]+)\/(zip|tar)ball(?:\/.+)?$}i', $url, $match)) {\n+                \/\/ update api archives to the proper reference\n+                $url = 'https:\/\/api.github.com\/repos\/' . $match[1] . '\/'. $match[2] . '\/' . $match[3] . 'ball\/' . $ref;\n+            }\n+        } elseif ($host === 'bitbucket.org' || $host === 'www.bitbucket.org') {\n+            if (preg_match('{^https?:\/\/(?:www\\.)?bitbucket\\.org\/([^\/]+)\/([^\/]+)\/get\/(.+)\\.(zip|tar\\.gz|tar\\.bz2)$}i', $url, $match)) {\n+                \/\/ update Bitbucket archives to the proper reference\n+                $url = 'https:\/\/bitbucket.org\/' . $match[1] . '\/'. $match[2] . '\/get\/' . $ref . '.' . $match[4];\n+            }\n+        } elseif ($host === 'gitlab.com' || $host === 'www.gitlab.com') {\n+            if (preg_match('{^https?:\/\/(?:www\\.)?gitlab\\.com\/api\/v[34]\/projects\/([^\/]+)\/repository\/archive\\.(zip|tar\\.gz|tar\\.bz2|tar)\\?sha=.+$}i', $url, $match)) {\n+                \/\/ update Gitlab archives to the proper reference\n+                $url = 'https:\/\/gitlab.com\/api\/v4\/projects\/' . $match[1] . '\/repository\/archive.' . $match[2] . '?sha=' . $ref;\n+            }\n+        } elseif (in_array($host, $config->get('github-domains'), true)) {\n+            $url = preg_replace('{(\/repos\/[^\/]+\/[^\/]+\/(zip|tar)ball)(?:\/.+)?$}i', '$1\/'.$ref, $url);\n+        } elseif (in_array($host, $config->get('gitlab-domains'), true)) {\n+            $url = preg_replace('{(\/api\/v[34]\/projects\/[^\/]+\/repository\/archive\\.(?:zip|tar\\.gz|tar\\.bz2|tar)\\?sha=).+$}i', '${1}'.$ref, $url);\n+        }\n+\n+        return $url;\n+    }\n+}"
        },
        {
            "sha": "eb94e93f4bf5141755a90f6441a3488f820fc2c5",
            "filename": "src\/Composer\/XdebugHandler.php",
            "status": "modified",
            "additions": 5,
            "deletions": 267,
            "changes": 272,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/XdebugHandler.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/src\/Composer\/XdebugHandler.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/src\/Composer\/XdebugHandler.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,282 +12,20 @@\n \n namespace Composer;\n \n-use Composer\\Util\\IniHelper;\n use Symfony\\Component\\Console\\Output\\OutputInterface;\n \n+trigger_error('The ' . __NAMESPACE__ . '\\XdebugHandler class is deprecated, use Composer\\XdebugHandler\\XdebugHandler instead,', E_USER_DEPRECATED);\n+\n \/**\n- * @author John Stevenson <john-stevenson@blueyonder.co.uk>\n+ * @deprecated use Composer\\XdebugHandler\\XdebugHandler instead\n  *\/\n-class XdebugHandler\n+class XdebugHandler extends XdebugHandler\\XdebugHandler\n {\n     const ENV_ALLOW = 'COMPOSER_ALLOW_XDEBUG';\n     const ENV_VERSION = 'COMPOSER_XDEBUG_VERSION';\n-    const RESTART_ID = 'internal';\n-\n-    private $output;\n-    private $loaded;\n-    private $envScanDir;\n-    private $version;\n-    private $tmpIni;\n \n-    \/**\n-     * Constructor\n-     *\/\n     public function __construct(OutputInterface $output)\n     {\n-        $this->output = $output;\n-        $this->loaded = extension_loaded('xdebug');\n-        $this->envScanDir = getenv('PHP_INI_SCAN_DIR');\n-\n-        if ($this->loaded) {\n-            $ext = new \\ReflectionExtension('xdebug');\n-            $this->version = strval($ext->getVersion());\n-        }\n-    }\n-\n-    \/**\n-     * Checks if xdebug is loaded and composer needs to be restarted\n-     *\n-     * If so, then a tmp ini is created with the xdebug ini entry commented out.\n-     * If additional inis have been loaded, these are combined into the tmp ini\n-     * and PHP_INI_SCAN_DIR is set to an empty value. Current ini locations are\n-     * are stored in COMPOSER_ORIGINAL_INIS, for use in the restarted process.\n-     *\n-     * This behaviour can be disabled by setting the COMPOSER_ALLOW_XDEBUG\n-     * environment variable to 1. This variable is used internally so that the\n-     * restarted process is created only once and PHP_INI_SCAN_DIR can be\n-     * restored to its original value.\n-     *\/\n-    public function check()\n-    {\n-        $args = explode('|', strval(getenv(self::ENV_ALLOW)), 2);\n-\n-        if ($this->needsRestart($args[0])) {\n-            if ($this->prepareRestart()) {\n-                $command = $this->getCommand();\n-                $this->restart($command);\n-            }\n-            return;\n-        }\n-\n-        \/\/ Restore environment variables if we are restarting\n-        if (self::RESTART_ID === $args[0]) {\n-            putenv(self::ENV_ALLOW);\n-\n-            if (false !== $this->envScanDir) {\n-                \/\/ $args[1] contains the original value\n-                if (isset($args[1])) {\n-                    putenv('PHP_INI_SCAN_DIR='.$args[1]);\n-                } else {\n-                    putenv('PHP_INI_SCAN_DIR');\n-                }\n-            }\n-\n-            \/\/ Clear version if the restart failed to disable xdebug\n-            if ($this->loaded) {\n-                putenv(self::ENV_VERSION);\n-            }\n-        }\n-    }\n-\n-    \/**\n-     * Executes the restarted command then deletes the tmp ini\n-     *\n-     * @param string $command\n-     *\/\n-    protected function restart($command)\n-    {\n-        passthru($command, $exitCode);\n-\n-        if (!empty($this->tmpIni)) {\n-            @unlink($this->tmpIni);\n-        }\n-\n-        exit($exitCode);\n-    }\n-\n-    \/**\n-     * Returns true if a restart is needed\n-     *\n-     * @param string $allow Environment value\n-     *\n-     * @return bool\n-     *\/\n-    private function needsRestart($allow)\n-    {\n-        if (PHP_SAPI !== 'cli' || !defined('PHP_BINARY')) {\n-            return false;\n-        }\n-\n-        return empty($allow) && $this->loaded;\n-    }\n-\n-    \/**\n-     * Returns true if everything was written for the restart\n-     *\n-     * If any of the following fails (however unlikely) we must return false to\n-     * stop potential recursion:\n-     *   - tmp ini file creation\n-     *   - environment variable creation\n-     *\n-     * @return bool\n-     *\/\n-    private function prepareRestart()\n-    {\n-        $this->tmpIni = '';\n-        $iniPaths = IniHelper::getAll();\n-        $additional = count($iniPaths) > 1;\n-\n-        if (empty($iniPaths[0])) {\n-            \/\/ There is no loaded ini\n-            array_shift($iniPaths);\n-        }\n-\n-        if ($this->writeTmpIni($iniPaths)) {\n-            return $this->setEnvironment($additional, $iniPaths);\n-        }\n-\n-        return false;\n-    }\n-\n-    \/**\n-     * Returns true if the tmp ini file was written\n-     *\n-     * The filename is passed as the -c option when the process restarts.\n-     *\n-     * @param array $iniFiles The php.ini locations\n-     *\n-     * @return bool\n-     *\/\n-    private function writeTmpIni(array $iniFiles)\n-    {\n-        if (!$this->tmpIni = tempnam(sys_get_temp_dir(), '')) {\n-            return false;\n-        }\n-\n-        $content = '';\n-        $regex = '\/^\\s*(zend_extension\\s*=.*xdebug.*)$\/mi';\n-\n-        foreach ($iniFiles as $file) {\n-            $data = preg_replace($regex, ';$1', file_get_contents($file));\n-            $content .= $data.PHP_EOL;\n-        }\n-\n-        $content .= PHP_EOL.'memory_limit='.ini_get('memory_limit').PHP_EOL;\n-\n-        return @file_put_contents($this->tmpIni, $content);\n-    }\n-\n-    \/**\n-     * Returns the restart command line\n-     *\n-     * @return string\n-     *\/\n-    private function getCommand()\n-    {\n-        $phpArgs = array(PHP_BINARY, '-c', $this->tmpIni);\n-        $params = array_merge($phpArgs, $this->getScriptArgs($_SERVER['argv']));\n-\n-        return implode(' ', array_map(array($this, 'escape'), $params));\n-    }\n-\n-    \/**\n-     * Returns true if the restart environment variables were set\n-     *\n-     * @param bool $additional Whether there were additional inis\n-     * @param array $iniPaths Locations used by the current prcoess\n-     *\n-     * @return bool\n-     *\/\n-    private function setEnvironment($additional, array $iniPaths)\n-    {\n-        \/\/ Set scan dir to an empty value if additional ini files were used\n-        if ($additional && !putenv('PHP_INI_SCAN_DIR=')) {\n-            return false;\n-        }\n-\n-        \/\/ Make original inis available to restarted process\n-        if (!putenv(IniHelper::ENV_ORIGINAL.'='.implode(PATH_SEPARATOR, $iniPaths))) {\n-            return false;\n-        }\n-\n-        \/\/ Make xdebug version available to restarted process\n-        if (!putenv(self::ENV_VERSION.'='.$this->version)) {\n-            return false;\n-        }\n-\n-        \/\/ Flag restarted process and save env scan dir state\n-        $args = array(self::RESTART_ID);\n-\n-        if (false !== $this->envScanDir) {\n-            \/\/ Save current PHP_INI_SCAN_DIR\n-            $args[] = $this->envScanDir;\n-        }\n-\n-        return putenv(self::ENV_ALLOW.'='.implode('|', $args));\n-    }\n-\n-    \/**\n-     * Returns the restart script arguments, adding --ansi if required\n-     *\n-     * If we are a terminal with color support we must ensure that the --ansi\n-     * option is set, because the restarted output is piped.\n-     *\n-     * @param array $args The argv array\n-     *\n-     * @return array\n-     *\/\n-    private function getScriptArgs(array $args)\n-    {\n-        if (in_array('--no-ansi', $args) || in_array('--ansi', $args)) {\n-            return $args;\n-        }\n-\n-        if ($this->output->isDecorated()) {\n-            $offset = count($args) > 1 ? 2: 1;\n-            array_splice($args, $offset, 0, '--ansi');\n-        }\n-\n-        return $args;\n-    }\n-\n-    \/**\n-     * Escapes a string to be used as a shell argument.\n-     *\n-     * From https:\/\/github.com\/johnstevenson\/winbox-args\n-     * MIT Licensed (c) John Stevenson <john-stevenson@blueyonder.co.uk>\n-     *\n-     * @param string $arg The argument to be escaped\n-     * @param bool $meta Additionally escape cmd.exe meta characters\n-     *\n-     * @return string The escaped argument\n-     *\/\n-    private function escape($arg, $meta = true)\n-    {\n-        if (!defined('PHP_WINDOWS_VERSION_BUILD')) {\n-            return escapeshellarg($arg);\n-        }\n-\n-        $quote = strpbrk($arg, \" \\t\") !== false || $arg === '';\n-        $arg = preg_replace('\/(\\\\\\\\*)\"\/', '$1$1\\\\\"', $arg, -1, $dquotes);\n-\n-        if ($meta) {\n-            $meta = $dquotes || preg_match('\/%[^%]+%\/', $arg);\n-\n-            if (!$meta && !$quote) {\n-                $quote = strpbrk($arg, '^&|<>()') !== false;\n-            }\n-        }\n-\n-        if ($quote) {\n-            $arg = preg_replace('\/(\\\\\\\\*)$\/', '$1$1', $arg);\n-            $arg = '\"'.$arg.'\"';\n-        }\n-\n-        if ($meta) {\n-            $arg = preg_replace('\/([\"^&|<>()%])\/', '^$1', $arg);\n-        }\n-\n-        return $arg;\n+        parent::__construct('composer', '--ansi');\n     }\n }"
        },
        {
            "sha": "7a3ef3ee03a8a473a083db41545ef021331a46d2",
            "filename": "tests\/Composer\/Test\/AllFunctionalTest.php",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/AllFunctionalTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/AllFunctionalTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/AllFunctionalTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,7 +12,7 @@\n \n namespace Composer\\Test;\n \n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Composer\\Util\\Filesystem;\n use Symfony\\Component\\Finder\\Finder;\n use Symfony\\Component\\Process\\Process;\n@@ -93,7 +93,7 @@ public function testBuildPhar()\n             $this->fail($proc->getOutput());\n         }\n \n-        $this->assertTrue(file_exists(self::$pharPath));\n+        $this->assertFileExists(self::$pharPath);\n     }\n \n     \/**\n@@ -182,7 +182,7 @@ private function parseTestFile(\\SplFileInfo $file)\n                     break;\n \n                 case 'EXPECT-EXIT-CODE':\n-                    $sectionData = (integer) $sectionData;\n+                    $sectionData = (int) $sectionData;\n                     break;\n \n                 case 'EXPECT':"
        },
        {
            "sha": "5f491440b87c01f22d039cf90ee20a04a9af6523",
            "filename": "tests\/Composer\/Test\/ApplicationTest.php",
            "status": "modified",
            "additions": 9,
            "deletions": 9,
            "changes": 18,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/ApplicationTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/ApplicationTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/ApplicationTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,7 +13,7 @@\n namespace Composer\\Test;\n \n use Composer\\Console\\Application;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Symfony\\Component\\Console\\Output\\OutputInterface;\n \n class ApplicationTest extends TestCase\n@@ -22,8 +22,8 @@ public function testDevWarning()\n     {\n         $application = new Application;\n \n-        $inputMock = $this->getMock('Symfony\\Component\\Console\\Input\\InputInterface');\n-        $outputMock = $this->getMock('Symfony\\Component\\Console\\Output\\OutputInterface');\n+        $inputMock = $this->getMockBuilder('Symfony\\Component\\Console\\Input\\InputInterface')->getMock();\n+        $outputMock = $this->getMockBuilder('Symfony\\Component\\Console\\Output\\OutputInterface')->getMock();\n \n         $index = 0;\n         $inputMock->expects($this->at($index++))\n@@ -36,9 +36,9 @@ public function testDevWarning()\n             ->with($this->equalTo(array('--working-dir', '-d')))\n             ->will($this->returnValue(false));\n \n-        $inputMock->expects($this->at($index++))\n+        $inputMock->expects($this->any())\n             ->method('getFirstArgument')\n-            ->will($this->returnValue('list'));\n+            ->will($this->returnValue('show'));\n \n         $index = 0;\n         $outputMock->expects($this->at($index++))\n@@ -75,8 +75,8 @@ public function ensureNoDevWarning($command)\n \n         $application->add(new \\Composer\\Command\\SelfUpdateCommand);\n \n-        $inputMock = $this->getMock('Symfony\\Component\\Console\\Input\\InputInterface');\n-        $outputMock = $this->getMock('Symfony\\Component\\Console\\Output\\OutputInterface');\n+        $inputMock = $this->getMockBuilder('Symfony\\Component\\Console\\Input\\InputInterface')->getMock();\n+        $outputMock = $this->getMockBuilder('Symfony\\Component\\Console\\Output\\OutputInterface')->getMock();\n \n         $index = 0;\n         $inputMock->expects($this->at($index++))\n@@ -89,9 +89,9 @@ public function ensureNoDevWarning($command)\n             ->with($this->equalTo(array('--working-dir', '-d')))\n             ->will($this->returnValue(false));\n \n-        $inputMock->expects($this->at($index++))\n+        $inputMock->expects($this->any())\n             ->method('getFirstArgument')\n-            ->will($this->returnValue('list'));\n+            ->will($this->returnValue('show'));\n \n         $outputMock->expects($this->never())\n             ->method(\"writeln\");"
        },
        {
            "sha": "4d672084e5b21d1cf5d45a37c9e4d05d1f8213e3",
            "filename": "tests\/Composer\/Test\/Autoload\/AutoloadGeneratorTest.php",
            "status": "modified",
            "additions": 119,
            "deletions": 28,
            "changes": 147,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Autoload\/AutoloadGeneratorTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Autoload\/AutoloadGeneratorTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Autoload\/AutoloadGeneratorTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -17,12 +17,13 @@\n use Composer\\Util\\Filesystem;\n use Composer\\Package\\AliasPackage;\n use Composer\\Package\\Package;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Composer\\Script\\ScriptEvents;\n use Composer\\Repository\\InstalledRepositoryInterface;\n use Composer\\Installer\\InstallationManager;\n use Composer\\Config;\n use Composer\\EventDispatcher\\EventDispatcher;\n+use Composer\\Util\\Platform;\n use PHPUnit_Framework_MockObject_MockObject as MockObject;\n \n class AutoloadGeneratorTest extends TestCase\n@@ -92,7 +93,7 @@ protected function setUp()\n         $this->vendorDir = $this->workingDir.DIRECTORY_SEPARATOR.'composer-test-autoload';\n         $this->ensureDirectoryExistsAndClear($this->vendorDir);\n \n-        $this->config = $this->getMock('Composer\\Config');\n+        $this->config = $this->getMockBuilder('Composer\\Config')->getMock();\n \n         $this->configValueMap = array(\n             'vendor-dir' => function () use ($that) {\n@@ -127,7 +128,7 @@ protected function setUp()\n \n                 return $that->vendorDir.'\/'.$package->getName() . ($targetDir ? '\/'.$targetDir : '');\n             }));\n-        $this->repository = $this->getMock('Composer\\Repository\\InstalledRepositoryInterface');\n+        $this->repository = $this->getMockBuilder('Composer\\Repository\\InstalledRepositoryInterface')->getMock();\n \n         $this->eventDispatcher = $this->getMockBuilder('Composer\\EventDispatcher\\EventDispatcher')\n             ->disableOriginalConstructor()\n@@ -359,6 +360,10 @@ public function testMainPackageAutoloadingWithTargetDir()\n     public function testVendorsAutoloading()\n     {\n         $package = new Package('a', '1.0', '1.0');\n+        $package->setRequires(array(\n+            new Link('a', 'a\/a'),\n+            new Link('a', 'b\/b'),\n+        ));\n \n         $packages = array();\n         $packages[] = $a = new Package('a\/a', '1.0', '1.0');\n@@ -378,7 +383,40 @@ public function testVendorsAutoloading()\n \n         $this->generator->dump($this->config, $this->repository, $package, $this->im, 'composer', false, '_5');\n         $this->assertAutoloadFiles('vendors', $this->vendorDir.'\/composer');\n-        $this->assertTrue(file_exists($this->vendorDir.'\/composer\/autoload_classmap.php'), \"ClassMap file needs to be generated, even if empty.\");\n+        $this->assertFileExists($this->vendorDir.'\/composer\/autoload_classmap.php', \"ClassMap file needs to be generated, even if empty.\");\n+    }\n+\n+    public function testNonDevAutoloadExclusionWithRecursion()\n+    {\n+        $package = new Package('a', '1.0', '1.0');\n+        $package->setRequires(array(\n+            new Link('a', 'a\/a'),\n+        ));\n+\n+        $packages = array();\n+        $packages[] = $a = new Package('a\/a', '1.0', '1.0');\n+        $packages[] = $b = new Package('b\/b', '1.0', '1.0');\n+        $a->setAutoload(array('psr-0' => array('A' => 'src\/', 'A\\\\B' => 'lib\/')));\n+        $a->setRequires(array(\n+            new Link('a\/a', 'b\/b'),\n+        ));\n+        $b->setAutoload(array('psr-0' => array('B\\\\Sub\\\\Name' => 'src\/')));\n+        $b->setRequires(array(\n+            new Link('b\/b', 'a\/a'),\n+        ));\n+\n+        $this->repository->expects($this->once())\n+            ->method('getCanonicalPackages')\n+            ->will($this->returnValue($packages));\n+\n+        $this->fs->ensureDirectoryExists($this->vendorDir.'\/composer');\n+        $this->fs->ensureDirectoryExists($this->vendorDir.'\/a\/a\/src');\n+        $this->fs->ensureDirectoryExists($this->vendorDir.'\/a\/a\/lib');\n+        $this->fs->ensureDirectoryExists($this->vendorDir.'\/b\/b\/src');\n+\n+        $this->generator->dump($this->config, $this->repository, $package, $this->im, 'composer', false, '_5');\n+        $this->assertAutoloadFiles('vendors', $this->vendorDir.'\/composer');\n+        $this->assertFileExists($this->vendorDir.'\/composer\/autoload_classmap.php', \"ClassMap file needs to be generated, even if empty.\");\n     }\n \n     public function testPSRToClassMapIgnoresNonExistingDir()\n@@ -395,7 +433,7 @@ public function testPSRToClassMapIgnoresNonExistingDir()\n             ->will($this->returnValue(array()));\n \n         $this->generator->dump($this->config, $this->repository, $package, $this->im, 'composer', true, '_8');\n-        $this->assertTrue(file_exists($this->vendorDir.'\/composer\/autoload_classmap.php'), \"ClassMap file needs to be generated.\");\n+        $this->assertFileExists($this->vendorDir.'\/composer\/autoload_classmap.php', \"ClassMap file needs to be generated.\");\n         $this->assertEquals(\n             array(),\n             include $this->vendorDir.'\/composer\/autoload_classmap.php'\n@@ -405,6 +443,10 @@ public function testPSRToClassMapIgnoresNonExistingDir()\n     public function testVendorsClassMapAutoloading()\n     {\n         $package = new Package('a', '1.0', '1.0');\n+        $package->setRequires(array(\n+            new Link('a', 'a\/a'),\n+            new Link('a', 'b\/b'),\n+        ));\n \n         $packages = array();\n         $packages[] = $a = new Package('a\/a', '1.0', '1.0');\n@@ -425,7 +467,7 @@ public function testVendorsClassMapAutoloading()\n         file_put_contents($this->vendorDir.'\/b\/b\/lib\/c.php', '<?php class ClassMapBaz {}');\n \n         $this->generator->dump($this->config, $this->repository, $package, $this->im, 'composer', false, '_6');\n-        $this->assertTrue(file_exists($this->vendorDir.'\/composer\/autoload_classmap.php'), \"ClassMap file needs to be generated.\");\n+        $this->assertFileExists($this->vendorDir.'\/composer\/autoload_classmap.php', \"ClassMap file needs to be generated.\");\n         $this->assertEquals(\n             array(\n                 'ClassMapBar' => $this->vendorDir.'\/b\/b\/src\/b.php',\n@@ -440,6 +482,10 @@ public function testVendorsClassMapAutoloading()\n     public function testVendorsClassMapAutoloadingWithTargetDir()\n     {\n         $package = new Package('a', '1.0', '1.0');\n+        $package->setRequires(array(\n+            new Link('a', 'a\/a'),\n+            new Link('a', 'b\/b'),\n+        ));\n \n         $packages = array();\n         $packages[] = $a = new Package('a\/a', '1.0', '1.0');\n@@ -461,7 +507,7 @@ public function testVendorsClassMapAutoloadingWithTargetDir()\n         file_put_contents($this->vendorDir.'\/b\/b\/src\/c.php', '<?php class ClassMapBaz {}');\n \n         $this->generator->dump($this->config, $this->repository, $package, $this->im, 'composer', false, '_6');\n-        $this->assertTrue(file_exists($this->vendorDir.'\/composer\/autoload_classmap.php'), \"ClassMap file needs to be generated.\");\n+        $this->assertFileExists($this->vendorDir.'\/composer\/autoload_classmap.php', \"ClassMap file needs to be generated.\");\n         $this->assertEquals(\n             array(\n                 'ClassMapBar' => $this->vendorDir.'\/a\/a\/target\/lib\/b.php',\n@@ -475,6 +521,11 @@ public function testVendorsClassMapAutoloadingWithTargetDir()\n     public function testClassMapAutoloadingEmptyDirAndExactFile()\n     {\n         $package = new Package('a', '1.0', '1.0');\n+        $package->setRequires(array(\n+            new Link('a', 'a\/a'),\n+            new Link('a', 'b\/b'),\n+            new Link('a', 'c\/c'),\n+        ));\n \n         $packages = array();\n         $packages[] = $a = new Package('a\/a', '1.0', '1.0');\n@@ -497,7 +548,7 @@ public function testClassMapAutoloadingEmptyDirAndExactFile()\n         file_put_contents($this->vendorDir.'\/c\/c\/foo\/test.php', '<?php class ClassMapBaz {}');\n \n         $this->generator->dump($this->config, $this->repository, $package, $this->im, 'composer', false, '_7');\n-        $this->assertTrue(file_exists($this->vendorDir.'\/composer\/autoload_classmap.php'), \"ClassMap file needs to be generated.\");\n+        $this->assertFileExists($this->vendorDir.'\/composer\/autoload_classmap.php', \"ClassMap file needs to be generated.\");\n         $this->assertEquals(\n             array(\n                 'ClassMapBar' => $this->vendorDir.'\/b\/b\/test.php',\n@@ -514,6 +565,11 @@ public function testClassMapAutoloadingEmptyDirAndExactFile()\n     public function testClassMapAutoloadingAuthoritativeAndApcu()\n     {\n         $package = new Package('a', '1.0', '1.0');\n+        $package->setRequires(array(\n+            new Link('a', 'a\/a'),\n+            new Link('a', 'b\/b'),\n+            new Link('a', 'c\/c'),\n+        ));\n \n         $packages = array();\n         $packages[] = $a = new Package('a\/a', '1.0', '1.0');\n@@ -539,7 +595,7 @@ public function testClassMapAutoloadingAuthoritativeAndApcu()\n         $this->generator->setApcu(true);\n         $this->generator->dump($this->config, $this->repository, $package, $this->im, 'composer', false, '_7');\n \n-        $this->assertTrue(file_exists($this->vendorDir.'\/composer\/autoload_classmap.php'), \"ClassMap file needs to be generated.\");\n+        $this->assertFileExists($this->vendorDir.'\/composer\/autoload_classmap.php', \"ClassMap file needs to be generated.\");\n         $this->assertEquals(\n             array(\n                 'ClassMapBar' => $this->vendorDir.'\/b\/b\/ClassMapBar.php',\n@@ -558,6 +614,11 @@ public function testFilesAutoloadGeneration()\n     {\n         $package = new Package('a', '1.0', '1.0');\n         $package->setAutoload(array('files' => array('root.php')));\n+        $package->setRequires(array(\n+            new Link('a', 'a\/a'),\n+            new Link('a', 'b\/b'),\n+            new Link('a', 'c\/c'),\n+        ));\n \n         $packages = array();\n         $packages[] = $a = new Package('a\/a', '1.0', '1.0');\n@@ -603,6 +664,14 @@ public function testFilesAutoloadGenerationRemoveExtraEntitiesFromAutoloadFiles(\n \n         $notAutoloadPackage = new Package('a', '1.0', '1.0');\n \n+        $requires = array(\n+            new Link('a', 'a\/a'),\n+            new Link('a', 'b\/b'),\n+            new Link('a', 'c\/c'),\n+        );\n+        $autoloadPackage->setRequires($requires);\n+        $notAutoloadPackage->setRequires($requires);\n+\n         $autoloadPackages = array();\n         $autoloadPackages[] = $a = new Package('a\/a', '1.0', '1.0');\n         $autoloadPackages[] = $b = new Package('b\/b', '1.0', '1.0');\n@@ -666,9 +735,12 @@ public function testFilesAutoloadOrderByDependencies()\n     {\n         $package = new Package('a', '1.0', '1.0');\n         $package->setAutoload(array('files' => array('root2.php')));\n-        $package->setRequires(array(new Link('a', 'z\/foo')));\n-        $package->setRequires(array(new Link('a', 'd\/d')));\n-        $package->setRequires(array(new Link('a', 'e\/e')));\n+        $package->setRequires(array(\n+            new Link('a', 'z\/foo'),\n+            new Link('a', 'b\/bar'),\n+            new Link('a', 'd\/d'),\n+            new Link('a', 'e\/e'),\n+        ));\n \n         $packages = array();\n         $packages[] = $z = new Package('z\/foo', '1.0', '1.0');\n@@ -735,7 +807,10 @@ public function testOverrideVendorsAutoloading()\n             'psr-0' => array('A\\\\B' => $this->workingDir.'\/lib'),\n             'classmap' => array($this->workingDir.'\/src'),\n         ));\n-        $mainPackage->setRequires(array(new Link('z', 'a\/a')));\n+        $mainPackage->setRequires(array(\n+            new Link('z', 'a\/a'),\n+            new Link('z', 'b\/b'),\n+        ));\n \n         $packages = array();\n         $packages[] = $a = new Package('a\/a', '1.0', '1.0');\n@@ -814,9 +889,9 @@ public function testOverrideVendorsAutoloading()\n EOF;\n \n         $this->generator->dump($this->config, $this->repository, $mainPackage, $this->im, 'composer', true, '_9');\n-        $this->assertEquals($expectedNamespace, file_get_contents($this->vendorDir.'\/composer\/autoload_namespaces.php'));\n-        $this->assertEquals($expectedPsr4, file_get_contents($this->vendorDir.'\/composer\/autoload_psr4.php'));\n-        $this->assertEquals($expectedClassmap, file_get_contents($this->vendorDir.'\/composer\/autoload_classmap.php'));\n+        $this->assertStringEqualsFile($this->vendorDir.'\/composer\/autoload_namespaces.php', $expectedNamespace);\n+        $this->assertStringEqualsFile($this->vendorDir.'\/composer\/autoload_psr4.php', $expectedPsr4);\n+        $this->assertStringEqualsFile($this->vendorDir.'\/composer\/autoload_classmap.php', $expectedClassmap);\n     }\n \n     public function testIncludePathFileGeneration()\n@@ -930,7 +1005,7 @@ public function testIncludePathFileWithoutPathsIsSkipped()\n \n         $this->generator->dump($this->config, $this->repository, $package, $this->im, \"composer\", false, '_12');\n \n-        $this->assertFalse(file_exists($this->vendorDir.\"\/composer\/include_paths.php\"));\n+        $this->assertFileNotExists($this->vendorDir.\"\/composer\/include_paths.php\");\n     }\n \n     public function testPreAndPostEventsAreDispatchedDuringAutoloadDump()\n@@ -992,6 +1067,9 @@ public function testVendorDirExcludedFromWorkingDir()\n             'classmap' => array('classmap'),\n             'files' => array('test.php'),\n         ));\n+        $package->setRequires(array(\n+            new Link('a', 'b\/b'),\n+        ));\n \n         $vendorPackage = new Package('b\/b', '1.0', '1.0');\n         $vendorPackage->setAutoload(array(\n@@ -1080,9 +1158,9 @@ public function testVendorDirExcludedFromWorkingDir()\n \n EOF;\n \n-        $this->assertEquals($expectedNamespace, file_get_contents($vendorDir.'\/composer\/autoload_namespaces.php'));\n-        $this->assertEquals($expectedPsr4, file_get_contents($vendorDir.'\/composer\/autoload_psr4.php'));\n-        $this->assertEquals($expectedClassmap, file_get_contents($vendorDir.'\/composer\/autoload_classmap.php'));\n+        $this->assertStringEqualsFile($vendorDir.'\/composer\/autoload_namespaces.php', $expectedNamespace);\n+        $this->assertStringEqualsFile($vendorDir.'\/composer\/autoload_psr4.php', $expectedPsr4);\n+        $this->assertStringEqualsFile($vendorDir.'\/composer\/autoload_classmap.php', $expectedClassmap);\n         $this->assertContains(\"\\$vendorDir . '\/b\/b\/bootstrap.php',\\n\", file_get_contents($vendorDir.'\/composer\/autoload_files.php'));\n         $this->assertContains(\"\\$baseDir . '\/test.php',\\n\", file_get_contents($vendorDir.'\/composer\/autoload_files.php'));\n     }\n@@ -1158,9 +1236,9 @@ public function testUpLevelRelativePaths()\n \n EOF;\n \n-        $this->assertEquals($expectedNamespace, file_get_contents($this->vendorDir.'\/composer\/autoload_namespaces.php'));\n-        $this->assertEquals($expectedPsr4, file_get_contents($this->vendorDir.'\/composer\/autoload_psr4.php'));\n-        $this->assertEquals($expectedClassmap, file_get_contents($this->vendorDir.'\/composer\/autoload_classmap.php'));\n+        $this->assertStringEqualsFile($this->vendorDir.'\/composer\/autoload_namespaces.php', $expectedNamespace);\n+        $this->assertStringEqualsFile($this->vendorDir.'\/composer\/autoload_psr4.php', $expectedPsr4);\n+        $this->assertStringEqualsFile($this->vendorDir.'\/composer\/autoload_classmap.php', $expectedClassmap);\n         $this->assertContains(\"\\$baseDir . '\/..\/test.php',\\n\", file_get_contents($this->vendorDir.'\/composer\/autoload_files.php'));\n     }\n \n@@ -1226,9 +1304,9 @@ public function testEmptyPaths()\n \n EOF;\n \n-        $this->assertEquals($expectedNamespace, file_get_contents($this->vendorDir.'\/composer\/autoload_namespaces.php'));\n-        $this->assertEquals($expectedPsr4, file_get_contents($this->vendorDir.'\/composer\/autoload_psr4.php'));\n-        $this->assertEquals($expectedClassmap, file_get_contents($this->vendorDir.'\/composer\/autoload_classmap.php'));\n+        $this->assertStringEqualsFile($this->vendorDir.'\/composer\/autoload_namespaces.php', $expectedNamespace);\n+        $this->assertStringEqualsFile($this->vendorDir.'\/composer\/autoload_psr4.php', $expectedPsr4);\n+        $this->assertStringEqualsFile($this->vendorDir.'\/composer\/autoload_classmap.php', $expectedClassmap);\n     }\n \n     public function testVendorSubstringPath()\n@@ -1274,8 +1352,8 @@ public function testVendorSubstringPath()\n EOF;\n \n         $this->generator->dump($this->config, $this->repository, $package, $this->im, 'composer', false, 'VendorSubstring');\n-        $this->assertEquals($expectedNamespace, file_get_contents($this->vendorDir.'\/composer\/autoload_namespaces.php'));\n-        $this->assertEquals($expectedPsr4, file_get_contents($this->vendorDir.'\/composer\/autoload_psr4.php'));\n+        $this->assertStringEqualsFile($this->vendorDir.'\/composer\/autoload_namespaces.php', $expectedNamespace);\n+        $this->assertStringEqualsFile($this->vendorDir.'\/composer\/autoload_psr4.php', $expectedPsr4);\n     }\n \n     public function testExcludeFromClassmap()\n@@ -1292,6 +1370,7 @@ public function testExcludeFromClassmap()\n             ),\n             'classmap' => array('composersrc\/'),\n             'exclude-from-classmap' => array(\n+                '\/composersrc\/foo\/bar\/',\n                 '\/composersrc\/excludedTests\/',\n                 '\/composersrc\/ClassToExclude.php',\n                 '\/composersrc\/*\/excluded\/excsubpath',\n@@ -1326,6 +1405,18 @@ public function testExcludeFromClassmap()\n         file_put_contents($this->workingDir.'\/composersrc\/long\/excluded\/excsubpath\/foo.php', '<?php class ClassExcludeMapFoo2 {}');\n         file_put_contents($this->workingDir.'\/composersrc\/long\/excluded\/excsubpath\/bar.php', '<?php class ClassExcludeMapBar {}');\n \n+        \/\/ symlink directory in project directory in classmap\n+        $this->fs->ensureDirectoryExists($this->workingDir.'\/forks\/bar\/src\/exclude');\n+        $this->fs->ensureDirectoryExists($this->workingDir.'\/composersrc\/foo');\n+\n+        file_put_contents($this->workingDir.'\/forks\/bar\/src\/exclude\/FooExclClass.php', '<?php class FooExclClass {};');\n+        $target = $this->workingDir.'\/forks\/bar\/';\n+        $link = $this->workingDir.'\/composersrc\/foo\/bar';\n+        $command = Platform::isWindows()\n+            ? 'mklink \/j \"' . str_replace('\/', '\\\\', $link) . '\" \"' . str_replace('\/', '\\\\', $target) . '\"'\n+            : 'ln -s \"' . $target . '\" \"' . $link . '\"';\n+        exec($command);\n+\n         $this->generator->dump($this->config, $this->repository, $package, $this->im, 'composer', true, '_1');\n \n         \/\/ Assert that autoload_classmap.php was correctly generated."
        },
        {
            "sha": "14d10e16d31319f96c72e14adbbd8f93f87c6050",
            "filename": "tests\/Composer\/Test\/Autoload\/ClassLoaderTest.php",
            "status": "modified",
            "additions": 3,
            "deletions": 2,
            "changes": 5,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Autoload\/ClassLoaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Autoload\/ClassLoaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Autoload\/ClassLoaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,18 +13,19 @@\n namespace Composer\\Test\\Autoload;\n \n use Composer\\Autoload\\ClassLoader;\n+use PHPUnit\\Framework\\TestCase;\n \n \/**\n  * Tests the Composer\\Autoload\\ClassLoader class.\n  *\/\n-class ClassLoaderTest extends \\PHPUnit_Framework_TestCase\n+class ClassLoaderTest extends TestCase\n {\n     \/**\n      * Tests regular PSR-0 and PSR-4 class loading.\n      *\n      * @dataProvider getLoadClassTests\n      *\n-     * @param string $class            The fully-qualified class name to test, without preceding namespace separator.\n+     * @param string $class The fully-qualified class name to test, without preceding namespace separator.\n      *\/\n     public function testLoadClass($class)\n     {"
        },
        {
            "sha": "ae7b597b7d6f328d5560d48a9cf8e1a9687cb7b7",
            "filename": "tests\/Composer\/Test\/Autoload\/ClassMapGeneratorTest.php",
            "status": "modified",
            "additions": 3,
            "deletions": 11,
            "changes": 14,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Autoload\/ClassMapGeneratorTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Autoload\/ClassMapGeneratorTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Autoload\/ClassMapGeneratorTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -19,7 +19,7 @@\n namespace Composer\\Test\\Autoload;\n \n use Composer\\Autoload\\ClassMapGenerator;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Symfony\\Component\\Finder\\Finder;\n use Composer\\Util\\Filesystem;\n \n@@ -62,14 +62,6 @@ public function getTestCreateMapTests()\n             'ShortOpenTagDocblock' => realpath(__DIR__) . '\/Fixtures\/classmap\/ShortOpenTagDocblock.php',\n         );\n \n-        \/**\n-         * @wontfix If short_open_tag is not enabled, we end up parsing the docblock because\n-         *  php_strip_whitespace won't recognize the file. Funky edge-case (does not apply to HHVM).\n-         *\/\n-        if (!defined('HHVM_VERSION') && !ini_get('short_open_tag')) {\n-            $classmap['description'] = realpath(__DIR__) . '\/Fixtures\/classmap\/ShortOpenTagDocblock.php';\n-        }\n-\n         $data = array(\n             array(__DIR__ . '\/Fixtures\/Namespaced', array(\n                 'Namespaced\\\\Bar' => realpath(__DIR__) . '\/Fixtures\/Namespaced\/Bar.inc',\n@@ -175,7 +167,7 @@ public function testAmbiguousReference()\n \n         ClassMapGenerator::createMap($finder, null, $io);\n \n-        $this->assertTrue(in_array($msg, $messages, true), $msg . ' not found in expected messages (' . var_export($messages, true) . ')');\n+        $this->assertContains($msg, $messages, $msg . ' not found in expected messages (' . var_export($messages, true) . ')');\n \n         $fs = new Filesystem();\n         $fs->removeDirectory($tempDir);\n@@ -242,7 +234,7 @@ public function testDump()\n         ClassMapGenerator::dump(array($tempDir), $resultFile);\n \n         $fileInDirectory = str_replace('\\\\', '\\\\\\\\', $fileInDirectory);\n-        $this->assertEquals(\"<?php return array (\\n  'TestClass' => '$fileInDirectory',\\n);\", file_get_contents($resultFile));\n+        $this->assertStringEqualsFile($resultFile, \"<?php return array (\\n  'TestClass' => '$fileInDirectory',\\n);\");\n \n         $fs = new Filesystem();\n         $fs->removeDirectory($tempDir);"
        },
        {
            "sha": "6459cac0563829c471af2e792b563369d7a0fb31",
            "filename": "tests\/Composer\/Test\/Autoload\/Fixtures\/autoload_real_functions_with_include_paths.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Autoload\/Fixtures\/autoload_real_functions_with_include_paths.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Autoload\/Fixtures\/autoload_real_functions_with_include_paths.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Autoload\/Fixtures\/autoload_real_functions_with_include_paths.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -24,7 +24,7 @@ public static function getLoader()\n         spl_autoload_unregister(array('ComposerAutoloaderInitFilesAutoload', 'loadClassLoader'));\n \n         $includePaths = require __DIR__ . '\/include_paths.php';\n-        array_push($includePaths, get_include_path());\n+        $includePaths[] = get_include_path();\n         set_include_path(implode(PATH_SEPARATOR, $includePaths));\n \n         $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());"
        },
        {
            "sha": "0142ca45e9bd512a6d7c23ca2f187dd39522f26d",
            "filename": "tests\/Composer\/Test\/Autoload\/Fixtures\/classmap\/ShortOpenTagDocblock.php",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Autoload\/Fixtures\/classmap\/ShortOpenTagDocblock.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Autoload\/Fixtures\/classmap\/ShortOpenTagDocblock.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Autoload\/Fixtures\/classmap\/ShortOpenTagDocblock.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -2,4 +2,5 @@\n \/**\n  * Some class description here.\n  *\/\n+\/\/ other class name in comment\n class ShortOpenTagDocblock {}"
        },
        {
            "sha": "50c767752a5c6d08599a7965c2bcc757032c109f",
            "filename": "tests\/Composer\/Test\/CacheTest.php",
            "status": "modified",
            "additions": 24,
            "deletions": 12,
            "changes": 36,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/CacheTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/CacheTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/CacheTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,19 +12,18 @@\n \n namespace Composer\\Test;\n \n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Composer\\Util\\Filesystem;\n \n class CacheTest extends TestCase\n {\n-    private $files, $root, $finder, $cache;\n+    private $files;\n+    private $root;\n+    private $finder;\n+    private $cache;\n \n     public function setUp()\n     {\n-        if (getenv('TRAVIS')) {\n-            $this->markTestSkipped('Test causes intermittent failures on Travis');\n-        }\n-\n         $this->root = $this->getUniqueTmpDirectory();\n         $this->files = array();\n         $zeros = str_repeat('0', 1000);\n@@ -36,12 +35,11 @@ public function setUp()\n \n         $this->finder = $this->getMockBuilder('Symfony\\Component\\Finder\\Finder')->disableOriginalConstructor()->getMock();\n \n-        $io = $this->getMock('Composer\\IO\\IOInterface');\n-        $this->cache = $this->getMock(\n-            'Composer\\Cache',\n-            array('getFinder'),\n-            array($io, $this->root)\n-        );\n+        $io = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n+        $this->cache = $this->getMockBuilder('Composer\\Cache')\n+            ->setMethods(array('getFinder'))\n+            ->setConstructorArgs(array($io, $this->root))\n+            ->getMock();\n         $this->cache\n             ->expects($this->any())\n             ->method('getFinder')\n@@ -104,4 +102,18 @@ public function testRemoveFilesWhenCacheIsTooLarge()\n         }\n         $this->assertFileExists(\"{$this->root}\/cached.file3.zip\");\n     }\n+\n+    public function testClearCache()\n+    {\n+        $this->finder\n+            ->method('removeDirectory')\n+            ->with($this->root)\n+            ->willReturn(true);\n+\n+        $this->assertTrue($this->cache->clear());\n+\n+        for ($i = 0; $i < 3; $i++) {\n+            $this->assertFileNotExists(\"{$this->root}\/cached.file{$i}.zip\");\n+        }\n+    }\n }"
        },
        {
            "sha": "06d8a004be861f7ff5edbad9e987147fca0318e0",
            "filename": "tests\/Composer\/Test\/Command\/InitCommandTest.php",
            "status": "modified",
            "additions": 25,
            "deletions": 14,
            "changes": 39,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Command\/InitCommandTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Command\/InitCommandTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Command\/InitCommandTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,11 +13,10 @@\n namespace Composer\\Test\\Command;\n \n use Composer\\Command\\InitCommand;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n \n class InitCommandTest extends TestCase\n {\n-\n     public function testParseValidAuthorString()\n     {\n         $command = new InitCommand;\n@@ -34,38 +33,50 @@ public function testParseValidUtf8AuthorString()\n         $this->assertEquals('matti@example.com', $author['email']);\n     }\n \n+    public function testParseValidUtf8AuthorStringWithNonSpacingMarks()\n+    {\n+        \/\/ \\xCC\\x88 is UTF-8 for U+0308 diaeresis (umlaut) combining mark\n+        $utf8_expected = \"Matti Meika\\xCC\\x88la\\xCC\\x88inen\";\n+        $command = new InitCommand;\n+        $author = $command->parseAuthorString($utf8_expected.\" <matti@example.com>\");\n+        $this->assertEquals($utf8_expected, $author['name']);\n+        $this->assertEquals('matti@example.com', $author['email']);\n+    }\n+\n     public function testParseNumericAuthorString()\n     {\n         $command = new InitCommand;\n         $author = $command->parseAuthorString('h4x0r <h4x@example.com>');\n         $this->assertEquals('h4x0r', $author['name']);\n         $this->assertEquals('h4x@example.com', $author['email']);\n     }\n-    \n+\n     \/**\n      * Test scenario for issue #5631\n      * @link https:\/\/github.com\/composer\/composer\/issues\/5631 Issue #5631\n      *\/\n     public function testParseValidAlias1AuthorString()\n     {\n-        $command  = new InitCommand;\n-        $author   = $command->parseAuthorString(\n-                'Johnathon \"Johnny\" Smith <john@example.com>');\n-        $this->assertEquals('Johnathon \"Johnny\" Smith', $author['name'] );\n-        $this->assertEquals('john@example.com',         $author['email']);\n+        $command = new InitCommand;\n+        $author = $command->parseAuthorString(\n+                'Johnathon \"Johnny\" Smith <john@example.com>'\n+        );\n+        $this->assertEquals('Johnathon \"Johnny\" Smith', $author['name']);\n+        $this->assertEquals('john@example.com', $author['email']);\n     }\n-    \n+\n     \/**\n      * Test scenario for issue #5631\n      * @link https:\/\/github.com\/composer\/composer\/issues\/5631 Issue #5631\n      *\/\n     public function testParseValidAlias2AuthorString()\n     {\n-        $command  = new InitCommand;\n-        $author   = $command->parseAuthorString(\n-                'Johnathon (Johnny) Smith <john@example.com>');\n-        $this->assertEquals('Johnathon (Johnny) Smith', $author['name'] );\n-        $this->assertEquals('john@example.com',         $author['email']);\n+        $command = new InitCommand;\n+        $author = $command->parseAuthorString(\n+                'Johnathon (Johnny) Smith <john@example.com>'\n+        );\n+        $this->assertEquals('Johnathon (Johnny) Smith', $author['name']);\n+        $this->assertEquals('john@example.com', $author['email']);\n     }\n \n     public function testParseEmptyAuthorString()"
        },
        {
            "sha": "97acc6d26bdc12f77ce7d44a2308262ad25080e8",
            "filename": "tests\/Composer\/Test\/Command\/RunScriptCommandTest.php",
            "status": "modified",
            "additions": 5,
            "deletions": 6,
            "changes": 11,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Command\/RunScriptCommandTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Command\/RunScriptCommandTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Command\/RunScriptCommandTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -15,11 +15,10 @@\n use Composer\\Composer;\n use Composer\\Config;\n use Composer\\Script\\Event as ScriptEvent;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n \n class RunScriptCommandTest extends TestCase\n {\n-\n     \/**\n      * @dataProvider getDevOptions\n      * @param bool $dev\n@@ -29,7 +28,7 @@ public function testDetectAndPassDevModeToEventAndToDispatching($dev, $noDev)\n     {\n         $scriptName = 'testScript';\n \n-        $input = $this->getMock('Symfony\\Component\\Console\\Input\\InputInterface');\n+        $input = $this->getMockBuilder('Symfony\\Component\\Console\\Input\\InputInterface')->getMock();\n         $input\n             ->method('getOption')\n             ->will($this->returnValueMap(array(\n@@ -49,7 +48,7 @@ public function testDetectAndPassDevModeToEventAndToDispatching($dev, $noDev)\n             ->with('command')\n             ->willReturn(false);\n \n-        $output = $this->getMock('Symfony\\Component\\Console\\Output\\OutputInterface');\n+        $output = $this->getMockBuilder('Symfony\\Component\\Console\\Output\\OutputInterface')->getMock();\n \n         $expectedDevMode = $dev || !$noDev;\n \n@@ -79,7 +78,7 @@ public function testDetectAndPassDevModeToEventAndToDispatching($dev, $noDev)\n                 'getSynopsis',\n                 'initialize',\n                 'isInteractive',\n-                'getComposer'\n+                'getComposer',\n             ))\n             ->getMock();\n         $command->expects($this->any())->method('getComposer')->willReturn($composer);\n@@ -101,7 +100,7 @@ public function getDevOptions()\n     private function createComposerInstance()\n     {\n         $composer = new Composer;\n-        $config   = new Config;\n+        $config = new Config;\n         $composer->setConfig($config);\n \n         return $composer;"
        },
        {
            "sha": "c2c425e76bd2845619b2d585bf803a5593b41958",
            "filename": "tests\/Composer\/Test\/ComposerTest.php",
            "status": "modified",
            "additions": 5,
            "deletions": 5,
            "changes": 10,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/ComposerTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/ComposerTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/ComposerTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,14 +13,14 @@\n namespace Composer\\Test;\n \n use Composer\\Composer;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n \n class ComposerTest extends TestCase\n {\n     public function testSetGetPackage()\n     {\n         $composer = new Composer();\n-        $package = $this->getMock('Composer\\Package\\RootPackageInterface');\n+        $package = $this->getMockBuilder('Composer\\Package\\RootPackageInterface')->getMock();\n         $composer->setPackage($package);\n \n         $this->assertSame($package, $composer->getPackage());\n@@ -47,8 +47,8 @@ public function testSetGetRepositoryManager()\n     public function testSetGetDownloadManager()\n     {\n         $composer = new Composer();\n-        $io = $this->getMock('Composer\\IO\\IOInterface');\n-        $manager = $this->getMock('Composer\\Downloader\\DownloadManager', array(), array($io));\n+        $io = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n+        $manager = $this->getMockBuilder('Composer\\Downloader\\DownloadManager')->setConstructorArgs(array($io))->getMock();\n         $composer->setDownloadManager($manager);\n \n         $this->assertSame($manager, $composer->getDownloadManager());\n@@ -57,7 +57,7 @@ public function testSetGetDownloadManager()\n     public function testSetGetInstallationManager()\n     {\n         $composer = new Composer();\n-        $manager = $this->getMock('Composer\\Installer\\InstallationManager');\n+        $manager = $this->getMockBuilder('Composer\\Installer\\InstallationManager')->getMock();\n         $composer->setInstallationManager($manager);\n \n         $this->assertSame($manager, $composer->getInstallationManager());"
        },
        {
            "sha": "8c5d641de71a66c6b3dbbc5743af88e81ac87972",
            "filename": "tests\/Composer\/Test\/Config\/JsonConfigSourceTest.php",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Config\/JsonConfigSourceTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Config\/JsonConfigSourceTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Config\/JsonConfigSourceTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -10,11 +10,11 @@\n  * file that was distributed with this source code.\n  *\/\n \n-namespace Composer\\Test\\Json;\n+namespace Composer\\Test\\Config;\n \n use Composer\\Config\\JsonConfigSource;\n use Composer\\Json\\JsonFile;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Composer\\Util\\Filesystem;\n \n class JsonConfigSourceTest extends TestCase"
        },
        {
            "sha": "57c368988e28ce1c91ab9e26b350981f739a60d8",
            "filename": "tests\/Composer\/Test\/ConfigTest.php",
            "status": "modified",
            "additions": 20,
            "deletions": 7,
            "changes": 27,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/ConfigTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/ConfigTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/ConfigTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,8 +13,9 @@\n namespace Composer\\Test;\n \n use Composer\\Config;\n+use Composer\\Test\\TestCase;\n \n-class ConfigTest extends \\PHPUnit_Framework_TestCase\n+class ConfigTest extends TestCase\n {\n     \/**\n      * @dataProvider dataAddPackagistRepository\n@@ -35,7 +36,7 @@ public function dataAddPackagistRepository()\n         $data = array();\n         $data['local config inherits system defaults'] = array(\n             array(\n-                'packagist.org' => array('type' => 'composer', 'url' => 'https?:\/\/packagist.org', 'allow_ssl_downgrade' => true),\n+                'packagist.org' => array('type' => 'composer', 'url' => 'https?:\/\/repo.packagist.org', 'allow_ssl_downgrade' => true),\n             ),\n             array(),\n         );\n@@ -58,7 +59,7 @@ public function dataAddPackagistRepository()\n             array(\n                 1 => array('type' => 'vcs', 'url' => 'git:\/\/github.com\/composer\/composer.git'),\n                 0 => array('type' => 'pear', 'url' => 'http:\/\/pear.composer.org'),\n-                'packagist.org' => array('type' => 'composer', 'url' => 'https?:\/\/packagist.org', 'allow_ssl_downgrade' => true),\n+                'packagist.org' => array('type' => 'composer', 'url' => 'https?:\/\/repo.packagist.org', 'allow_ssl_downgrade' => true),\n             ),\n             array(\n                 array('type' => 'vcs', 'url' => 'git:\/\/github.com\/composer\/composer.git'),\n@@ -69,7 +70,7 @@ public function dataAddPackagistRepository()\n         $data['system config adds above core defaults'] = array(\n             array(\n                 'example.com' => array('type' => 'composer', 'url' => 'http:\/\/example.com'),\n-                'packagist.org' => array('type' => 'composer', 'url' => 'https?:\/\/packagist.org', 'allow_ssl_downgrade' => true),\n+                'packagist.org' => array('type' => 'composer', 'url' => 'https?:\/\/repo.packagist.org', 'allow_ssl_downgrade' => true),\n             ),\n             array(),\n             array(\n@@ -106,7 +107,7 @@ public function dataAddPackagistRepository()\n \n         $data['incorrect local config does not cause ErrorException'] = array(\n             array(\n-                'packagist.org' => array('type' => 'composer', 'url' => 'https?:\/\/packagist.org', 'allow_ssl_downgrade' => true),\n+                'packagist.org' => array('type' => 'composer', 'url' => 'https?:\/\/repo.packagist.org', 'allow_ssl_downgrade' => true),\n                 'type' => 'vcs',\n                 'url' => 'http:\/\/example.com',\n             ),\n@@ -261,7 +262,9 @@ public function allowedUrlProvider()\n             'ssh:\/\/[user@]host.xz[:port]\/path\/to\/repo.git\/',\n         );\n \n-        return array_combine($urls, array_map(function ($e) { return array($e); }, $urls));\n+        return array_combine($urls, array_map(function ($e) {\n+            return array($e);\n+        }, $urls));\n     }\n \n     \/**\n@@ -280,7 +283,9 @@ public function prohibitedUrlProvider()\n             'git:\/\/5.6.7.8\/git.git',\n         );\n \n-        return array_combine($urls, array_map(function ($e) { return array($e); }, $urls));\n+        return array_combine($urls, array_map(function ($e) {\n+            return array($e);\n+        }, $urls));\n     }\n \n     \/**\n@@ -306,4 +311,12 @@ public function testProcessTimeout()\n         $this->assertEquals(0, $config->get('process-timeout'));\n         putenv('COMPOSER_PROCESS_TIMEOUT');\n     }\n+\n+    public function testHtaccessProtect()\n+    {\n+        putenv('COMPOSER_HTACCESS_PROTECT=0');\n+        $config = new Config(true);\n+        $this->assertEquals(0, $config->get('htaccess-protect'));\n+        putenv('COMPOSER_HTACCESS_PROTECT');\n+    }\n }"
        },
        {
            "sha": "7587743f7ac6a7de350bbdd9e498fe35832f3600",
            "filename": "tests\/Composer\/Test\/Console\/HtmlOutputFormatterTest.php",
            "status": "modified",
            "additions": 3,
            "deletions": 2,
            "changes": 5,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Console\/HtmlOutputFormatterTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Console\/HtmlOutputFormatterTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Console\/HtmlOutputFormatterTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -10,12 +10,13 @@\n  * file that was distributed with this source code.\n  *\/\n \n-namespace Composer;\n+namespace Composer\\Test\\Console;\n \n use Composer\\Console\\HtmlOutputFormatter;\n+use PHPUnit\\Framework\\TestCase;\n use Symfony\\Component\\Console\\Formatter\\OutputFormatterStyle;\n \n-class HtmlOutputFormatterTest extends \\PHPUnit_Framework_TestCase\n+class HtmlOutputFormatterTest extends TestCase\n {\n     public function testFormatting()\n     {"
        },
        {
            "sha": "04298e5a1438ccb4dab7504009ec77fcba79806c",
            "filename": "tests\/Composer\/Test\/DefaultConfigTest.php",
            "status": "modified",
            "additions": 2,
            "deletions": 1,
            "changes": 3,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DefaultConfigTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DefaultConfigTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/DefaultConfigTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,8 +13,9 @@\n namespace Composer\\Test;\n \n use Composer\\Config;\n+use Composer\\Test\\TestCase;\n \n-class DefaultConfigTest extends \\PHPUnit_Framework_TestCase\n+class DefaultConfigTest extends TestCase\n {\n     \/**\n      * @group TLS"
        },
        {
            "sha": "2611d772f08cbfb28c1ba496adccd469c36d15ac",
            "filename": "tests\/Composer\/Test\/DependencyResolver\/DefaultPolicyTest.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/DefaultPolicyTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/DefaultPolicyTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/DependencyResolver\/DefaultPolicyTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -19,7 +19,7 @@\n use Composer\\Package\\Link;\n use Composer\\Package\\AliasPackage;\n use Composer\\Semver\\Constraint\\Constraint;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n \n class DefaultPolicyTest extends TestCase\n {"
        },
        {
            "sha": "aa38fa31dd98bc48aa20a42245b7d1734f01b2b5",
            "filename": "tests\/Composer\/Test\/DependencyResolver\/PoolTest.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/PoolTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/PoolTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/DependencyResolver\/PoolTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -15,7 +15,7 @@\n use Composer\\DependencyResolver\\Pool;\n use Composer\\Repository\\ArrayRepository;\n use Composer\\Package\\BasePackage;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n \n class PoolTest extends TestCase\n {"
        },
        {
            "sha": "dfa411ed9a3cc4875a4467d29bed38262cce6a68",
            "filename": "tests\/Composer\/Test\/DependencyResolver\/RequestTest.php",
            "status": "modified",
            "additions": 5,
            "deletions": 3,
            "changes": 8,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/RequestTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/RequestTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/DependencyResolver\/RequestTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -14,7 +14,7 @@\n \n use Composer\\DependencyResolver\\Request;\n use Composer\\Repository\\ArrayRepository;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n \n class RequestTest extends TestCase\n {\n@@ -40,7 +40,8 @@ public function testRequestInstallAndRemove()\n                 array('cmd' => 'install', 'packageName' => 'bar', 'constraint' => null, 'fixed' => true),\n                 array('cmd' => 'remove', 'packageName' => 'foobar', 'constraint' => null, 'fixed' => false),\n             ),\n-            $request->getJobs());\n+            $request->getJobs()\n+        );\n     }\n \n     public function testRequestInstallSamePackageFromDifferentRepositories()\n@@ -73,6 +74,7 @@ public function testUpdateAll()\n \n         $this->assertEquals(\n             array(array('cmd' => 'update-all')),\n-            $request->getJobs());\n+            $request->getJobs()\n+        );\n     }\n }"
        },
        {
            "sha": "7789881df29f57f81bc5c4790713f17fb95c319b",
            "filename": "tests\/Composer\/Test\/DependencyResolver\/RuleSetIteratorTest.php",
            "status": "modified",
            "additions": 7,
            "deletions": 4,
            "changes": 11,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/RuleSetIteratorTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/RuleSetIteratorTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/DependencyResolver\/RuleSetIteratorTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,26 +12,29 @@\n \n namespace Composer\\Test\\DependencyResolver;\n \n+use Composer\\DependencyResolver\\GenericRule;\n use Composer\\DependencyResolver\\Rule;\n use Composer\\DependencyResolver\\RuleSet;\n use Composer\\DependencyResolver\\RuleSetIterator;\n use Composer\\DependencyResolver\\Pool;\n+use PHPUnit\\Framework\\TestCase;\n \n-class RuleSetIteratorTest extends \\PHPUnit_Framework_TestCase\n+class RuleSetIteratorTest extends TestCase\n {\n     protected $rules;\n+    protected $pool;\n \n     protected function setUp()\n     {\n         $this->pool = new Pool;\n \n         $this->rules = array(\n             RuleSet::TYPE_JOB => array(\n-                new Rule(array(), Rule::RULE_JOB_INSTALL, null),\n-                new Rule(array(), Rule::RULE_JOB_INSTALL, null),\n+                new GenericRule(array(), Rule::RULE_JOB_INSTALL, null),\n+                new GenericRule(array(), Rule::RULE_JOB_INSTALL, null),\n             ),\n             RuleSet::TYPE_LEARNED => array(\n-                new Rule(array(), Rule::RULE_INTERNAL_ALLOW_UPDATE, null),\n+                new GenericRule(array(), Rule::RULE_INTERNAL_ALLOW_UPDATE, null),\n             ),\n             RuleSet::TYPE_PACKAGE => array(),\n         );"
        },
        {
            "sha": "bd6efbc1b1f784c7b4c7ea25ec5053ee695b8ff6",
            "filename": "tests\/Composer\/Test\/DependencyResolver\/RuleSetTest.php",
            "status": "modified",
            "additions": 20,
            "deletions": 19,
            "changes": 39,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/RuleSetTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/RuleSetTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/DependencyResolver\/RuleSetTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,11 +12,12 @@\n \n namespace Composer\\Test\\DependencyResolver;\n \n+use Composer\\DependencyResolver\\GenericRule;\n use Composer\\DependencyResolver\\Rule;\n use Composer\\DependencyResolver\\RuleSet;\n use Composer\\DependencyResolver\\Pool;\n use Composer\\Repository\\ArrayRepository;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n \n class RuleSetTest extends TestCase\n {\n@@ -32,11 +33,11 @@ public function testAdd()\n         $rules = array(\n             RuleSet::TYPE_PACKAGE => array(),\n             RuleSet::TYPE_JOB => array(\n-                new Rule(array(1), Rule::RULE_JOB_INSTALL, null),\n-                new Rule(array(2), Rule::RULE_JOB_INSTALL, null),\n+                new GenericRule(array(1), Rule::RULE_JOB_INSTALL, null),\n+                new GenericRule(array(2), Rule::RULE_JOB_INSTALL, null),\n             ),\n             RuleSet::TYPE_LEARNED => array(\n-                new Rule(array(), Rule::RULE_INTERNAL_ALLOW_UPDATE, null),\n+                new GenericRule(array(), Rule::RULE_INTERNAL_ALLOW_UPDATE, null),\n             ),\n         );\n \n@@ -53,10 +54,10 @@ public function testAddIgnoresDuplicates()\n     {\n         $rules = array(\n             RuleSet::TYPE_JOB => array(\n-                new Rule(array(), Rule::RULE_JOB_INSTALL, null),\n-                new Rule(array(), Rule::RULE_JOB_INSTALL, null),\n-                new Rule(array(), Rule::RULE_JOB_INSTALL, null),\n-            )\n+                new GenericRule(array(), Rule::RULE_JOB_INSTALL, null),\n+                new GenericRule(array(), Rule::RULE_JOB_INSTALL, null),\n+                new GenericRule(array(), Rule::RULE_JOB_INSTALL, null),\n+            ),\n         );\n \n         $ruleSet = new RuleSet;\n@@ -75,15 +76,15 @@ public function testAddWhenTypeIsNotRecognized()\n     {\n         $ruleSet = new RuleSet;\n \n-        $ruleSet->add(new Rule(array(), Rule::RULE_JOB_INSTALL, null), 7);\n+        $ruleSet->add(new GenericRule(array(), Rule::RULE_JOB_INSTALL, null), 7);\n     }\n \n     public function testCount()\n     {\n         $ruleSet = new RuleSet;\n \n-        $ruleSet->add(new Rule(array(1), Rule::RULE_JOB_INSTALL, null), RuleSet::TYPE_JOB);\n-        $ruleSet->add(new Rule(array(2), Rule::RULE_JOB_INSTALL, null), RuleSet::TYPE_JOB);\n+        $ruleSet->add(new GenericRule(array(1), Rule::RULE_JOB_INSTALL, null), RuleSet::TYPE_JOB);\n+        $ruleSet->add(new GenericRule(array(2), Rule::RULE_JOB_INSTALL, null), RuleSet::TYPE_JOB);\n \n         $this->assertEquals(2, $ruleSet->count());\n     }\n@@ -92,7 +93,7 @@ public function testRuleById()\n     {\n         $ruleSet = new RuleSet;\n \n-        $rule = new Rule(array(), Rule::RULE_JOB_INSTALL, null);\n+        $rule = new GenericRule(array(), Rule::RULE_JOB_INSTALL, null);\n         $ruleSet->add($rule, RuleSet::TYPE_JOB);\n \n         $this->assertSame($rule, $ruleSet->ruleById[0]);\n@@ -102,8 +103,8 @@ public function testGetIterator()\n     {\n         $ruleSet = new RuleSet;\n \n-        $rule1 = new Rule(array(1), Rule::RULE_JOB_INSTALL, null);\n-        $rule2 = new Rule(array(2), Rule::RULE_JOB_INSTALL, null);\n+        $rule1 = new GenericRule(array(1), Rule::RULE_JOB_INSTALL, null);\n+        $rule2 = new GenericRule(array(2), Rule::RULE_JOB_INSTALL, null);\n         $ruleSet->add($rule1, RuleSet::TYPE_JOB);\n         $ruleSet->add($rule2, RuleSet::TYPE_LEARNED);\n \n@@ -117,8 +118,8 @@ public function testGetIterator()\n     public function testGetIteratorFor()\n     {\n         $ruleSet = new RuleSet;\n-        $rule1 = new Rule(array(1), Rule::RULE_JOB_INSTALL, null);\n-        $rule2 = new Rule(array(2), Rule::RULE_JOB_INSTALL, null);\n+        $rule1 = new GenericRule(array(1), Rule::RULE_JOB_INSTALL, null);\n+        $rule2 = new GenericRule(array(2), Rule::RULE_JOB_INSTALL, null);\n \n         $ruleSet->add($rule1, RuleSet::TYPE_JOB);\n         $ruleSet->add($rule2, RuleSet::TYPE_LEARNED);\n@@ -131,8 +132,8 @@ public function testGetIteratorFor()\n     public function testGetIteratorWithout()\n     {\n         $ruleSet = new RuleSet;\n-        $rule1 = new Rule(array(1), Rule::RULE_JOB_INSTALL, null);\n-        $rule2 = new Rule(array(2), Rule::RULE_JOB_INSTALL, null);\n+        $rule1 = new GenericRule(array(1), Rule::RULE_JOB_INSTALL, null);\n+        $rule2 = new GenericRule(array(2), Rule::RULE_JOB_INSTALL, null);\n \n         $ruleSet->add($rule1, RuleSet::TYPE_JOB);\n         $ruleSet->add($rule2, RuleSet::TYPE_LEARNED);\n@@ -150,7 +151,7 @@ public function testPrettyString()\n \n         $ruleSet = new RuleSet;\n         $literal = $p->getId();\n-        $rule = new Rule(array($literal), Rule::RULE_JOB_INSTALL, null);\n+        $rule = new GenericRule(array($literal), Rule::RULE_JOB_INSTALL, null);\n \n         $ruleSet->add($rule, RuleSet::TYPE_JOB);\n "
        },
        {
            "sha": "19f5fddea7088a80094759750d989c2b44a5a6e6",
            "filename": "tests\/Composer\/Test\/DependencyResolver\/RuleTest.php",
            "status": "modified",
            "additions": 15,
            "deletions": 14,
            "changes": 29,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/RuleTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/RuleTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/DependencyResolver\/RuleTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,11 +12,12 @@\n \n namespace Composer\\Test\\DependencyResolver;\n \n+use Composer\\DependencyResolver\\GenericRule;\n use Composer\\DependencyResolver\\Rule;\n use Composer\\DependencyResolver\\RuleSet;\n use Composer\\DependencyResolver\\Pool;\n use Composer\\Repository\\ArrayRepository;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n \n class RuleTest extends TestCase\n {\n@@ -29,47 +30,47 @@ public function setUp()\n \n     public function testGetHash()\n     {\n-        $rule = new Rule(array(123), Rule::RULE_JOB_INSTALL, null);\n+        $rule = new GenericRule(array(123), Rule::RULE_JOB_INSTALL, null);\n \n         $hash = unpack('ihash', md5('123', true));\n         $this->assertEquals($hash['hash'], $rule->getHash());\n     }\n \n     public function testEqualsForRulesWithDifferentHashes()\n     {\n-        $rule = new Rule(array(1, 2), Rule::RULE_JOB_INSTALL, null);\n-        $rule2 = new Rule(array(1, 3), Rule::RULE_JOB_INSTALL, null);\n+        $rule = new GenericRule(array(1, 2), Rule::RULE_JOB_INSTALL, null);\n+        $rule2 = new GenericRule(array(1, 3), Rule::RULE_JOB_INSTALL, null);\n \n         $this->assertFalse($rule->equals($rule2));\n     }\n \n     public function testEqualsForRulesWithDifferLiteralsQuantity()\n     {\n-        $rule = new Rule(array(1, 12), Rule::RULE_JOB_INSTALL, null);\n-        $rule2 = new Rule(array(1), Rule::RULE_JOB_INSTALL, null);\n+        $rule = new GenericRule(array(1, 12), Rule::RULE_JOB_INSTALL, null);\n+        $rule2 = new GenericRule(array(1), Rule::RULE_JOB_INSTALL, null);\n \n         $this->assertFalse($rule->equals($rule2));\n     }\n \n     public function testEqualsForRulesWithSameLiterals()\n     {\n-        $rule = new Rule(array(1, 12), Rule::RULE_JOB_INSTALL, null);\n-        $rule2 = new Rule(array(1, 12), Rule::RULE_JOB_INSTALL, null);\n+        $rule = new GenericRule(array(1, 12), Rule::RULE_JOB_INSTALL, null);\n+        $rule2 = new GenericRule(array(1, 12), Rule::RULE_JOB_INSTALL, null);\n \n         $this->assertTrue($rule->equals($rule2));\n     }\n \n     public function testSetAndGetType()\n     {\n-        $rule = new Rule(array(), Rule::RULE_JOB_INSTALL, null);\n+        $rule = new GenericRule(array(), Rule::RULE_JOB_INSTALL, null);\n         $rule->setType(RuleSet::TYPE_JOB);\n \n         $this->assertEquals(RuleSet::TYPE_JOB, $rule->getType());\n     }\n \n     public function testEnable()\n     {\n-        $rule = new Rule(array(), Rule::RULE_JOB_INSTALL, null);\n+        $rule = new GenericRule(array(), Rule::RULE_JOB_INSTALL, null);\n         $rule->disable();\n         $rule->enable();\n \n@@ -79,7 +80,7 @@ public function testEnable()\n \n     public function testDisable()\n     {\n-        $rule = new Rule(array(), Rule::RULE_JOB_INSTALL, null);\n+        $rule = new GenericRule(array(), Rule::RULE_JOB_INSTALL, null);\n         $rule->enable();\n         $rule->disable();\n \n@@ -89,8 +90,8 @@ public function testDisable()\n \n     public function testIsAssertions()\n     {\n-        $rule = new Rule(array(1, 12), Rule::RULE_JOB_INSTALL, null);\n-        $rule2 = new Rule(array(1), Rule::RULE_JOB_INSTALL, null);\n+        $rule = new GenericRule(array(1, 12), Rule::RULE_JOB_INSTALL, null);\n+        $rule2 = new GenericRule(array(1), Rule::RULE_JOB_INSTALL, null);\n \n         $this->assertFalse($rule->isAssertion());\n         $this->assertTrue($rule2->isAssertion());\n@@ -103,7 +104,7 @@ public function testPrettyString()\n         $repo->addPackage($p2 = $this->getPackage('baz', '1.1'));\n         $this->pool->addRepository($repo);\n \n-        $rule = new Rule(array($p1->getId(), -$p2->getId()), Rule::RULE_JOB_INSTALL, null);\n+        $rule = new GenericRule(array($p1->getId(), -$p2->getId()), Rule::RULE_JOB_INSTALL, null);\n \n         $this->assertEquals('Install command rule (don\\'t install baz 1.1|install foo 2.1)', $rule->getPrettyString($this->pool));\n     }"
        },
        {
            "sha": "24147e6ad34a58ec3e6f5cee777f1a89c82632cb",
            "filename": "tests\/Composer\/Test\/DependencyResolver\/SolverTest.php",
            "status": "modified",
            "additions": 12,
            "deletions": 10,
            "changes": 22,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/SolverTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/DependencyResolver\/SolverTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/DependencyResolver\/SolverTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -20,7 +20,7 @@\n use Composer\\DependencyResolver\\Solver;\n use Composer\\DependencyResolver\\SolverProblemsException;\n use Composer\\Package\\Link;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Composer\\Semver\\Constraint\\MultiConstraint;\n \n class SolverTest extends TestCase\n@@ -30,14 +30,15 @@ class SolverTest extends TestCase\n     protected $repoInstalled;\n     protected $request;\n     protected $policy;\n+    protected $solver;\n \n     public function setUp()\n     {\n         $this->pool = new Pool;\n         $this->repo = new ArrayRepository;\n         $this->repoInstalled = new ArrayRepository;\n \n-        $this->request = new Request($this->pool);\n+        $this->request = new Request();\n         $this->policy = new DefaultPolicy;\n         $this->solver = new Solver($this->policy, $this->pool, $this->repoInstalled, new NullIO());\n     }\n@@ -76,7 +77,7 @@ public function testInstallNonExistingPackageFails()\n             $this->fail('Unsolvable conflict did not result in exception.');\n         } catch (SolverProblemsException $e) {\n             $problems = $e->getProblems();\n-            $this->assertEquals(1, count($problems));\n+            $this->assertCount(1, $problems);\n             $this->assertEquals(2, $e->getCode());\n             $this->assertEquals(\"\\n    - The requested package b could not be found in any version, there may be a typo in the package name.\", $problems[0]->getPrettyString());\n         }\n@@ -671,7 +672,7 @@ public function testConflictResultEmpty()\n             $this->fail('Unsolvable conflict did not result in exception.');\n         } catch (SolverProblemsException $e) {\n             $problems = $e->getProblems();\n-            $this->assertEquals(1, count($problems));\n+            $this->assertCount(1, $problems);\n \n             $msg = \"\\n\";\n             $msg .= \"  Problem 1\\n\";\n@@ -700,7 +701,7 @@ public function testUnsatisfiableRequires()\n             $this->fail('Unsolvable conflict did not result in exception.');\n         } catch (SolverProblemsException $e) {\n             $problems = $e->getProblems();\n-            $this->assertEquals(1, count($problems));\n+            $this->assertCount(1, $problems);\n             \/\/ TODO assert problem properties\n \n             $msg = \"\\n\";\n@@ -710,7 +711,8 @@ public function testUnsatisfiableRequires()\n             $msg .= \"Potential causes:\\n\";\n             $msg .= \" - A typo in the package name\\n\";\n             $msg .= \" - The package is not available in a stable-enough version according to your minimum-stability setting\\n\";\n-            $msg .= \"   see <https:\/\/getcomposer.org\/doc\/04-schema.md#minimum-stability> for more details.\\n\\n\";\n+            $msg .= \"   see <https:\/\/getcomposer.org\/doc\/04-schema.md#minimum-stability> for more details.\\n\";\n+            $msg .= \" - It's a private package and you forgot to add a custom repository to find it\\n\\n\";\n             $msg .= \"Read <https:\/\/getcomposer.org\/doc\/articles\/troubleshooting.md> for further common problems.\";\n             $this->assertEquals($msg, $e->getMessage());\n         }\n@@ -746,7 +748,7 @@ public function testRequireMismatchException()\n             $this->fail('Unsolvable conflict did not result in exception.');\n         } catch (SolverProblemsException $e) {\n             $problems = $e->getProblems();\n-            $this->assertEquals(1, count($problems));\n+            $this->assertCount(1, $problems);\n \n             $msg = \"\\n\";\n             $msg .= \"  Problem 1\\n\";\n@@ -850,14 +852,14 @@ protected function checkSolverResult(array $expected)\n         foreach ($transaction as $operation) {\n             if ('update' === $operation->getJobType()) {\n                 $result[] = array(\n-                    'job'  => 'update',\n+                    'job' => 'update',\n                     'from' => $operation->getInitialPackage(),\n-                    'to'   => $operation->getTargetPackage(),\n+                    'to' => $operation->getTargetPackage(),\n                 );\n             } else {\n                 $job = ('uninstall' === $operation->getJobType() ? 'remove' : 'install');\n                 $result[] = array(\n-                    'job'     => $job,\n+                    'job' => $job,\n                     'package' => $operation->getPackage(),\n                 );\n             }"
        },
        {
            "sha": "68852d8e04d1ffbd73b6523bf8d8b1a46ddbef46",
            "filename": "tests\/Composer\/Test\/Downloader\/ArchiveDownloaderTest.php",
            "status": "modified",
            "additions": 24,
            "deletions": 14,
            "changes": 38,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/ArchiveDownloaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/ArchiveDownloaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Downloader\/ArchiveDownloaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -12,17 +12,19 @@\n \n namespace Composer\\Test\\Downloader;\n \n-class ArchiveDownloaderTest extends \\PHPUnit_Framework_TestCase\n+use PHPUnit\\Framework\\TestCase;\n+\n+class ArchiveDownloaderTest extends TestCase\n {\n     public function testGetFileName()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getDistUrl')\n             ->will($this->returnValue('http:\/\/example.com\/script.js'))\n         ;\n \n-        $downloader = $this->getMockForAbstractClass('Composer\\Downloader\\ArchiveDownloader', array($this->getMock('Composer\\IO\\IOInterface'), $this->getMock('Composer\\Config')));\n+        $downloader = $this->getArchiveDownloaderMock();\n         $method = new \\ReflectionMethod($downloader, 'getFileName');\n         $method->setAccessible(true);\n \n@@ -37,12 +39,12 @@ public function testProcessUrl()\n             $this->markTestSkipped('Requires openssl');\n         }\n \n-        $downloader = $this->getMockForAbstractClass('Composer\\Downloader\\ArchiveDownloader', array($this->getMock('Composer\\IO\\IOInterface'), $this->getMock('Composer\\Config')));\n+        $downloader = $this->getArchiveDownloaderMock();\n         $method = new \\ReflectionMethod($downloader, 'processUrl');\n         $method->setAccessible(true);\n \n         $expected = 'https:\/\/github.com\/composer\/composer\/zipball\/master';\n-        $url = $method->invoke($downloader, $this->getMock('Composer\\Package\\PackageInterface'), $expected);\n+        $url = $method->invoke($downloader, $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock(), $expected);\n \n         $this->assertEquals($expected, $url);\n     }\n@@ -53,12 +55,12 @@ public function testProcessUrl2()\n             $this->markTestSkipped('Requires openssl');\n         }\n \n-        $downloader = $this->getMockForAbstractClass('Composer\\Downloader\\ArchiveDownloader', array($this->getMock('Composer\\IO\\IOInterface'), $this->getMock('Composer\\Config')));\n+        $downloader = $this->getArchiveDownloaderMock();\n         $method = new \\ReflectionMethod($downloader, 'processUrl');\n         $method->setAccessible(true);\n \n         $expected = 'https:\/\/github.com\/composer\/composer\/archive\/master.tar.gz';\n-        $url = $method->invoke($downloader, $this->getMock('Composer\\Package\\PackageInterface'), $expected);\n+        $url = $method->invoke($downloader, $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock(), $expected);\n \n         $this->assertEquals($expected, $url);\n     }\n@@ -69,12 +71,12 @@ public function testProcessUrl3()\n             $this->markTestSkipped('Requires openssl');\n         }\n \n-        $downloader = $this->getMockForAbstractClass('Composer\\Downloader\\ArchiveDownloader', array($this->getMock('Composer\\IO\\IOInterface'), $this->getMock('Composer\\Config')));\n+        $downloader = $this->getArchiveDownloaderMock();\n         $method = new \\ReflectionMethod($downloader, 'processUrl');\n         $method->setAccessible(true);\n \n         $expected = 'https:\/\/api.github.com\/repos\/composer\/composer\/zipball\/master';\n-        $url = $method->invoke($downloader, $this->getMock('Composer\\Package\\PackageInterface'), $expected);\n+        $url = $method->invoke($downloader, $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock(), $expected);\n \n         $this->assertEquals($expected, $url);\n     }\n@@ -88,14 +90,14 @@ public function testProcessUrlRewriteDist($url)\n             $this->markTestSkipped('Requires openssl');\n         }\n \n-        $downloader = $this->getMockForAbstractClass('Composer\\Downloader\\ArchiveDownloader', array($this->getMock('Composer\\IO\\IOInterface'), $this->getMock('Composer\\Config')));\n+        $downloader = $this->getArchiveDownloaderMock();\n         $method = new \\ReflectionMethod($downloader, 'processUrl');\n         $method->setAccessible(true);\n \n         $type = strpos($url, 'tar') ? 'tar' : 'zip';\n         $expected = 'https:\/\/api.github.com\/repos\/composer\/composer\/'.$type.'ball\/ref';\n \n-        $package = $this->getMock('Composer\\Package\\PackageInterface');\n+        $package = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $package->expects($this->any())\n             ->method('getDistReference')\n             ->will($this->returnValue('ref'));\n@@ -125,14 +127,14 @@ public function testProcessUrlRewriteBitbucketDist($url, $extension)\n             $this->markTestSkipped('Requires openssl');\n         }\n \n-        $downloader = $this->getMockForAbstractClass('Composer\\Downloader\\ArchiveDownloader', array($this->getMock('Composer\\IO\\IOInterface'), $this->getMock('Composer\\Config')));\n+        $downloader = $this->getArchiveDownloaderMock();\n         $method = new \\ReflectionMethod($downloader, 'processUrl');\n         $method->setAccessible(true);\n \n-        $url = $url . '.' . $extension;\n+        $url .= '.' . $extension;\n         $expected = 'https:\/\/bitbucket.org\/davereid\/drush-virtualhost\/get\/ref.' . $extension;\n \n-        $package = $this->getMock('Composer\\Package\\PackageInterface');\n+        $package = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $package->expects($this->any())\n             ->method('getDistReference')\n             ->will($this->returnValue('ref'));\n@@ -149,4 +151,12 @@ public function provideBitbucketUrls()\n             array('https:\/\/bitbucket.org\/davereid\/drush-virtualhost\/get\/v1.0', 'tar.bz2'),\n         );\n     }\n+\n+    private function getArchiveDownloaderMock()\n+    {\n+        return $this->getMockForAbstractClass(\n+            'Composer\\Downloader\\ArchiveDownloader',\n+            array($this->getMockBuilder('Composer\\IO\\IOInterface')->getMock(), $this->getMockBuilder('Composer\\Config')->getMock())\n+        );\n+    }\n }"
        },
        {
            "sha": "222e541d78aa5f1c092c0548b4f82c225e95f5ea",
            "filename": "tests\/Composer\/Test\/Downloader\/DownloadManagerTest.php",
            "status": "modified",
            "additions": 5,
            "deletions": 4,
            "changes": 9,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/DownloadManagerTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/DownloadManagerTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Downloader\/DownloadManagerTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,22 +13,23 @@\n namespace Composer\\Test\\Downloader;\n \n use Composer\\Downloader\\DownloadManager;\n+use PHPUnit\\Framework\\TestCase;\n \n-class DownloadManagerTest extends \\PHPUnit_Framework_TestCase\n+class DownloadManagerTest extends TestCase\n {\n     protected $filesystem;\n     protected $io;\n \n     public function setUp()\n     {\n-        $this->filesystem = $this->getMock('Composer\\Util\\Filesystem');\n-        $this->io = $this->getMock('Composer\\IO\\IOInterface');\n+        $this->filesystem = $this->getMockBuilder('Composer\\Util\\Filesystem')->getMock();\n+        $this->io = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n     }\n \n     public function testSetGetDownloader()\n     {\n         $downloader = $this->createDownloaderMock();\n-        $manager    = new DownloadManager($this->io, false, $this->filesystem);\n+        $manager = new DownloadManager($this->io, false, $this->filesystem);\n \n         $manager->setDownloader('test', $downloader);\n         $this->assertSame($downloader, $manager->getDownloader('test'));"
        },
        {
            "sha": "476b9a8f709ebacd04409431bb249f34479382bc",
            "filename": "tests\/Composer\/Test\/Downloader\/FileDownloaderTest.php",
            "status": "modified",
            "additions": 51,
            "deletions": 11,
            "changes": 62,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/FileDownloaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/FileDownloaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Downloader\/FileDownloaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,15 +13,15 @@\n namespace Composer\\Test\\Downloader;\n \n use Composer\\Downloader\\FileDownloader;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Composer\\Util\\Filesystem;\n \n class FileDownloaderTest extends TestCase\n {\n     protected function getDownloader($io = null, $config = null, $eventDispatcher = null, $cache = null, $rfs = null, $filesystem = null)\n     {\n-        $io = $io ?: $this->getMock('Composer\\IO\\IOInterface');\n-        $config = $config ?: $this->getMock('Composer\\Config');\n+        $io = $io ?: $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n+        $config = $config ?: $this->getMockBuilder('Composer\\Config')->getMock();\n         $rfs = $rfs ?: $this->getMockBuilder('Composer\\Util\\RemoteFilesystem')->disableOriginalConstructor()->getMock();\n \n         return new FileDownloader($io, $config, $eventDispatcher, $cache, $rfs, $filesystem);\n@@ -32,7 +32,7 @@ protected function getDownloader($io = null, $config = null, $eventDispatcher =\n      *\/\n     public function testDownloadForPackageWithoutDistReference()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->once())\n             ->method('getDistUrl')\n             ->will($this->returnValue(null))\n@@ -44,7 +44,7 @@ public function testDownloadForPackageWithoutDistReference()\n \n     public function testDownloadToExistingFile()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->once())\n             ->method('getDistUrl')\n             ->will($this->returnValue('url'))\n@@ -74,7 +74,7 @@ public function testDownloadToExistingFile()\n \n     public function testGetFileName()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->once())\n             ->method('getDistUrl')\n             ->will($this->returnValue('http:\/\/example.com\/script.js'))\n@@ -89,7 +89,7 @@ public function testGetFileName()\n \n     public function testDownloadButFileIsUnsaved()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getDistUrl')\n             ->will($this->returnValue($distUrl = 'http:\/\/example.com\/script.js'))\n@@ -104,7 +104,7 @@ public function testDownloadButFileIsUnsaved()\n         ;\n \n         $path = $this->getUniqueTmpDirectory();\n-        $ioMock = $this->getMock('Composer\\IO\\IOInterface');\n+        $ioMock = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n         $ioMock->expects($this->any())\n             ->method('write')\n             ->will($this->returnCallback(function ($messages, $newline = true) use ($path) {\n@@ -137,7 +137,7 @@ public function testCacheGarbageCollectionIsCalled()\n     {\n         $expectedTtl = '99999999';\n \n-        $configMock = $this->getMock('Composer\\Config');\n+        $configMock = $this->getMockBuilder('Composer\\Config')->getMock();\n         $configMock\n             ->expects($this->at(0))\n             ->method('get')\n@@ -166,7 +166,7 @@ public function testCacheGarbageCollectionIsCalled()\n \n     public function testDownloadFileWithInvalidChecksum()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getDistUrl')\n             ->will($this->returnValue($distUrl = 'http:\/\/example.com\/script.js'))\n@@ -183,7 +183,7 @@ public function testDownloadFileWithInvalidChecksum()\n             ->method('getDistUrls')\n             ->will($this->returnValue(array($distUrl)))\n         ;\n-        $filesystem = $this->getMock('Composer\\Util\\Filesystem');\n+        $filesystem = $this->getMockBuilder('Composer\\Util\\Filesystem')->getMock();\n \n         $path = $this->getUniqueTmpDirectory();\n         $downloader = $this->getDownloader(null, null, null, null, null, $filesystem);\n@@ -205,4 +205,44 @@ public function testDownloadFileWithInvalidChecksum()\n             $this->assertContains('checksum verification', $e->getMessage());\n         }\n     }\n+\n+    public function testDowngradeShowsAppropriateMessage()\n+    {\n+        $oldPackage = $this->getMock('Composer\\Package\\PackageInterface');\n+        $oldPackage->expects($this->once())\n+            ->method('getPrettyVersion')\n+            ->will($this->returnValue('1.2.0'));\n+        $oldPackage->expects($this->once())\n+            ->method('getVersion')\n+            ->will($this->returnValue('1.2.0.0'));\n+\n+        $newPackage = $this->getMock('Composer\\Package\\PackageInterface');\n+        $newPackage->expects($this->once())\n+            ->method('getPrettyVersion')\n+            ->will($this->returnValue('1.0.0'));\n+        $newPackage->expects($this->once())\n+            ->method('getVersion')\n+            ->will($this->returnValue('1.0.0.0'));\n+        $newPackage->expects($this->any())\n+            ->method('getDistUrl')\n+            ->will($this->returnValue($distUrl = 'http:\/\/example.com\/script.js'));\n+        $newPackage->expects($this->once())\n+            ->method('getDistUrls')\n+            ->will($this->returnValue(array($distUrl)));\n+\n+        $ioMock = $this->getMock('Composer\\IO\\IOInterface');\n+        $ioMock->expects($this->at(0))\n+            ->method('writeError')\n+            ->with($this->stringContains('Downgrading'));\n+\n+        $path = $this->getUniqueTmpDirectory();\n+        touch($path.'\/script.js');\n+        $filesystem = $this->getMock('Composer\\Util\\Filesystem');\n+        $filesystem->expects($this->once())\n+            ->method('removeDirectory')\n+            ->will($this->returnValue(true));\n+\n+        $downloader = $this->getDownloader($ioMock, null, null, null, null, $filesystem);\n+        $downloader->update($oldPackage, $newPackage, $path);\n+    }\n }"
        },
        {
            "sha": "623f7dec2329a97463f1afe62ef3819ca0b2748b",
            "filename": "tests\/Composer\/Test\/Downloader\/FossilDownloaderTest.php",
            "status": "modified",
            "additions": 19,
            "deletions": 16,
            "changes": 35,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/FossilDownloaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/FossilDownloaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Downloader\/FossilDownloaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,7 +13,7 @@\n namespace Composer\\Test\\Downloader;\n \n use Composer\\Downloader\\FossilDownloader;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Composer\\Util\\Filesystem;\n use Composer\\Util\\Platform;\n \n@@ -37,10 +37,10 @@ protected function tearDown()\n \n     protected function getDownloaderMock($io = null, $config = null, $executor = null, $filesystem = null)\n     {\n-        $io = $io ?: $this->getMock('Composer\\IO\\IOInterface');\n-        $config = $config ?: $this->getMock('Composer\\Config');\n-        $executor = $executor ?: $this->getMock('Composer\\Util\\ProcessExecutor');\n-        $filesystem = $filesystem ?: $this->getMock('Composer\\Util\\Filesystem');\n+        $io = $io ?: $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n+        $config = $config ?: $this->getMockBuilder('Composer\\Config')->getMock();\n+        $executor = $executor ?: $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n+        $filesystem = $filesystem ?: $this->getMockBuilder('Composer\\Util\\Filesystem')->getMock();\n \n         return new FossilDownloader($io, $config, $executor, $filesystem);\n     }\n@@ -50,7 +50,7 @@ protected function getDownloaderMock($io = null, $config = null, $executor = nul\n      *\/\n     public function testDownloadForPackageWithoutSourceReference()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->once())\n             ->method('getSourceReference')\n             ->will($this->returnValue(null));\n@@ -61,22 +61,22 @@ public function testDownloadForPackageWithoutSourceReference()\n \n     public function testDownload()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('trunk'));\n         $packageMock->expects($this->once())\n             ->method('getSourceUrls')\n             ->will($this->returnValue(array('http:\/\/fossil.kd2.org\/kd2fw\/')));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n \n         $expectedFossilCommand = $this->getCmd('fossil clone \\'http:\/\/fossil.kd2.org\/kd2fw\/\\' \\'repo.fossil\\'');\n         $processExecutor->expects($this->at(0))\n             ->method('execute')\n             ->with($this->equalTo($expectedFossilCommand))\n             ->will($this->returnValue(0));\n \n-        $expectedFossilCommand = $this->getCmd('fossil open \\'repo.fossil\\'');\n+        $expectedFossilCommand = $this->getCmd('fossil open \\'repo.fossil\\' --nested');\n         $processExecutor->expects($this->at(1))\n             ->method('execute')\n             ->with($this->equalTo($expectedFossilCommand))\n@@ -97,8 +97,8 @@ public function testDownload()\n      *\/\n     public function testUpdateforPackageWithoutSourceReference()\n     {\n-        $initialPackageMock = $this->getMock('Composer\\Package\\PackageInterface');\n-        $sourcePackageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $initialPackageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n+        $sourcePackageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $sourcePackageMock->expects($this->once())\n             ->method('getSourceReference')\n             ->will($this->returnValue(null));\n@@ -116,14 +116,17 @@ public function testUpdate()\n             touch($file);\n         }\n \n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('trunk'));\n         $packageMock->expects($this->any())\n             ->method('getSourceUrls')\n             ->will($this->returnValue(array('http:\/\/fossil.kd2.org\/kd2fw\/')));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $packageMock->expects($this->any())\n+            ->method('getVersion')\n+            ->will($this->returnValue('1.0.0.0'));\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n \n         $expectedFossilCommand = $this->getCmd(\"fossil changes\");\n         $processExecutor->expects($this->at(0))\n@@ -144,12 +147,12 @@ public function testRemove()\n     {\n         $expectedResetCommand = $this->getCmd('cd \\'composerPath\\' && fossil status');\n \n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $processExecutor->expects($this->any())\n             ->method('execute')\n             ->with($this->equalTo($expectedResetCommand));\n-        $filesystem = $this->getMock('Composer\\Util\\Filesystem');\n+        $filesystem = $this->getMockBuilder('Composer\\Util\\Filesystem')->getMock();\n         $filesystem->expects($this->any())\n             ->method('removeDirectory')\n             ->with($this->equalTo('composerPath'))"
        },
        {
            "sha": "c3cd31a4aa1e7c922539cb6979c9d20aab35e5ed",
            "filename": "tests\/Composer\/Test\/Downloader\/GitDownloaderTest.php",
            "status": "modified",
            "additions": 142,
            "deletions": 44,
            "changes": 186,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/GitDownloaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/GitDownloaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Downloader\/GitDownloaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -14,7 +14,7 @@\n \n use Composer\\Downloader\\GitDownloader;\n use Composer\\Config;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Composer\\Util\\Filesystem;\n use Composer\\Util\\Platform;\n \n@@ -45,22 +45,24 @@ protected function tearDown()\n         $refl->setValue(null, null);\n     }\n \n-    protected function setupConfig($config = null) {\n+    protected function setupConfig($config = null)\n+    {\n         if (!$config) {\n             $config = new Config();\n         }\n         if (!$config->has('home')) {\n             $tmpDir = realpath(sys_get_temp_dir()).DIRECTORY_SEPARATOR.'cmptest-'.md5(uniqid('', true));\n             $config->merge(array('config' => array('home' => $tmpDir)));\n         }\n+\n         return $config;\n     }\n \n     protected function getDownloaderMock($io = null, $config = null, $executor = null, $filesystem = null)\n     {\n-        $io = $io ?: $this->getMock('Composer\\IO\\IOInterface');\n-        $executor = $executor ?: $this->getMock('Composer\\Util\\ProcessExecutor');\n-        $filesystem = $filesystem ?: $this->getMock('Composer\\Util\\Filesystem');\n+        $io = $io ?: $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n+        $executor = $executor ?: $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n+        $filesystem = $filesystem ?: $this->getMockBuilder('Composer\\Util\\Filesystem')->getMock();\n         $config = $this->setupConfig($config);\n \n         return new GitDownloader($io, $config, $executor, $filesystem);\n@@ -71,7 +73,7 @@ protected function getDownloaderMock($io = null, $config = null, $executor = nul\n      *\/\n     public function testDownloadForPackageWithoutSourceReference()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->once())\n             ->method('getSourceReference')\n             ->will($this->returnValue(null));\n@@ -82,7 +84,7 @@ public function testDownloadForPackageWithoutSourceReference()\n \n     public function testDownload()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('1234567890123456789012345678901234567890'));\n@@ -95,13 +97,14 @@ public function testDownload()\n         $packageMock->expects($this->any())\n             ->method('getPrettyVersion')\n             ->will($this->returnValue('dev-master'));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n \n         $processExecutor->expects($this->at(0))\n             ->method('execute')\n             ->with($this->equalTo($this->winCompat('git --version')))\n-            ->will($this->returnCallback(function($command, &$output = null) {\n+            ->will($this->returnCallback(function ($command, &$output = null) {\n                 $output = 'git version 1.0.0';\n+\n                 return 0;\n             }));\n \n@@ -132,7 +135,7 @@ public function testDownload()\n \n     public function testDownloadWithCache()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('1234567890123456789012345678901234567890'));\n@@ -145,13 +148,14 @@ public function testDownloadWithCache()\n         $packageMock->expects($this->any())\n             ->method('getPrettyVersion')\n             ->will($this->returnValue('dev-master'));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n \n         $processExecutor->expects($this->at(0))\n             ->method('execute')\n             ->with($this->equalTo($this->winCompat('git --version')))\n-            ->will($this->returnCallback(function($command, &$output = null) {\n+            ->will($this->returnCallback(function ($command, &$output = null) {\n                 $output = 'git version 2.3.1';\n+\n                 return 0;\n             }));\n \n@@ -169,7 +173,7 @@ public function testDownloadWithCache()\n                 return 0;\n             }));\n \n-        $expectedGitCommand = $this->winCompat(sprintf(\"git clone --no-checkout 'https:\/\/example.com\/composer\/composer' 'composerPath' --dissociate --reference '%s' && cd 'composerPath' && git remote add composer 'https:\/\/example.com\/composer\/composer' && git fetch composer\", $cachePath));\n+        $expectedGitCommand = $this->winCompat(sprintf(\"git clone --no-checkout '%1\\$s' 'composerPath' --dissociate --reference '%1\\$s' && cd 'composerPath' && git remote set-url origin 'https:\/\/example.com\/composer\/composer' && git remote add composer 'https:\/\/example.com\/composer\/composer'\", $cachePath));\n         $processExecutor->expects($this->at(2))\n             ->method('execute')\n             ->with($this->equalTo($expectedGitCommand))\n@@ -197,7 +201,7 @@ public function testDownloadWithCache()\n \n     public function testDownloadUsesVariousProtocolsAndSetsPushUrlForGithub()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('ref'));\n@@ -210,13 +214,14 @@ public function testDownloadUsesVariousProtocolsAndSetsPushUrlForGithub()\n         $packageMock->expects($this->any())\n             ->method('getPrettyVersion')\n             ->will($this->returnValue('1.0.0'));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n \n         $processExecutor->expects($this->at(0))\n             ->method('execute')\n             ->with($this->equalTo($this->winCompat('git --version')))\n-            ->will($this->returnCallback(function($command, &$output = null) {\n+            ->will($this->returnCallback(function ($command, &$output = null) {\n                 $output = 'git version 1.0.0';\n+\n                 return 0;\n             }));\n \n@@ -280,7 +285,7 @@ public function pushUrlProvider()\n      *\/\n     public function testDownloadAndSetPushUrlUseCustomVariousProtocolsForGithub($protocols, $url, $pushUrl)\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('ref'));\n@@ -293,13 +298,14 @@ public function testDownloadAndSetPushUrlUseCustomVariousProtocolsForGithub($pro\n         $packageMock->expects($this->any())\n             ->method('getPrettyVersion')\n             ->will($this->returnValue('1.0.0'));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n \n         $processExecutor->expects($this->at(0))\n             ->method('execute')\n             ->with($this->equalTo($this->winCompat('git --version')))\n-            ->will($this->returnCallback(function($command, &$output = null) {\n+            ->will($this->returnCallback(function ($command, &$output = null) {\n                 $output = 'git version 1.0.0';\n+\n                 return 0;\n             }));\n \n@@ -332,19 +338,20 @@ public function testDownloadAndSetPushUrlUseCustomVariousProtocolsForGithub($pro\n     public function testDownloadThrowsRuntimeExceptionIfGitCommandFails()\n     {\n         $expectedGitCommand = $this->winCompat(\"git clone --no-checkout 'https:\/\/example.com\/composer\/composer' 'composerPath' && cd 'composerPath' && git remote add composer 'https:\/\/example.com\/composer\/composer' && git fetch composer\");\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('ref'));\n         $packageMock->expects($this->any())\n             ->method('getSourceUrls')\n             ->will($this->returnValue(array('https:\/\/example.com\/composer\/composer')));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $processExecutor->expects($this->at(0))\n             ->method('execute')\n             ->with($this->equalTo($this->winCompat('git --version')))\n-            ->will($this->returnCallback(function($command, &$output = null) {\n+            ->will($this->returnCallback(function ($command, &$output = null) {\n                 $output = 'git version 1.0.0';\n+\n                 return 0;\n             }));\n         $processExecutor->expects($this->at(1))\n@@ -361,8 +368,8 @@ public function testDownloadThrowsRuntimeExceptionIfGitCommandFails()\n      *\/\n     public function testUpdateforPackageWithoutSourceReference()\n     {\n-        $initialPackageMock = $this->getMock('Composer\\Package\\PackageInterface');\n-        $sourcePackageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $initialPackageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n+        $sourcePackageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $sourcePackageMock->expects($this->once())\n             ->method('getSourceReference')\n             ->will($this->returnValue(null));\n@@ -373,19 +380,19 @@ public function testUpdateforPackageWithoutSourceReference()\n \n     public function testUpdate()\n     {\n-        $expectedGitUpdateCommand = $this->winCompat(\"git remote set-url composer 'https:\/\/github.com\/composer\/composer' && git rev-parse --quiet --verify 'ref'^{commit} || (git fetch composer && git fetch --tags composer)\");\n+        $expectedGitUpdateCommand = $this->winCompat(\"git remote set-url composer 'https:\/\/github.com\/composer\/composer' && git rev-parse --quiet --verify 'ref^{commit}' || (git fetch composer && git fetch --tags composer)\");\n \n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('ref'));\n         $packageMock->expects($this->any())\n             ->method('getSourceUrls')\n             ->will($this->returnValue(array('https:\/\/github.com\/composer\/composer')));\n         $packageMock->expects($this->any())\n-            ->method('getPrettyVersion')\n-            ->will($this->returnValue('1.0.0'));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+            ->method('getVersion')\n+            ->will($this->returnValue('1.0.0.0'));\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $processExecutor->expects($this->at(0))\n             ->method('execute')\n             ->with($this->equalTo($this->winCompat(\"git show-ref --head -d\")))\n@@ -422,9 +429,9 @@ public function testUpdate()\n \n     public function testUpdateWithNewRepoUrl()\n     {\n-        $expectedGitUpdateCommand = $this->winCompat(\"git remote set-url composer 'https:\/\/github.com\/composer\/composer' && git rev-parse --quiet --verify 'ref'^{commit} || (git fetch composer && git fetch --tags composer)\");\n+        $expectedGitUpdateCommand = $this->winCompat(\"git remote set-url composer 'https:\/\/github.com\/composer\/composer' && git rev-parse --quiet --verify 'ref^{commit}' || (git fetch composer && git fetch --tags composer)\");\n \n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('ref'));\n@@ -435,9 +442,9 @@ public function testUpdateWithNewRepoUrl()\n             ->method('getSourceUrl')\n             ->will($this->returnValue('https:\/\/github.com\/composer\/composer'));\n         $packageMock->expects($this->any())\n-            ->method('getPrettyVersion')\n-            ->will($this->returnValue('1.0.0'));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+            ->method('getVersion')\n+            ->will($this->returnValue('1.0.0.0'));\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $processExecutor->expects($this->at(0))\n             ->method('execute')\n             ->with($this->equalTo($this->winCompat(\"git show-ref --head -d\")))\n@@ -455,6 +462,7 @@ public function testUpdateWithNewRepoUrl()\n composer https:\/\/github.com\/old\/url (fetch)\n composer https:\/\/github.com\/old\/url (push)\n ';\n+\n                 return 0;\n             }));\n         $processExecutor->expects($this->at(3))\n@@ -493,16 +501,19 @@ public function testUpdateWithNewRepoUrl()\n      *\/\n     public function testUpdateThrowsRuntimeExceptionIfGitCommandFails()\n     {\n-        $expectedGitUpdateCommand = $this->winCompat(\"git remote set-url composer 'https:\/\/github.com\/composer\/composer' && git rev-parse --quiet --verify 'ref'^{commit} || (git fetch composer && git fetch --tags composer)\");\n+        $expectedGitUpdateCommand = $this->winCompat(\"git remote set-url composer 'https:\/\/github.com\/composer\/composer' && git rev-parse --quiet --verify 'ref^{commit}' || (git fetch composer && git fetch --tags composer)\");\n \n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('ref'));\n         $packageMock->expects($this->any())\n             ->method('getSourceUrls')\n             ->will($this->returnValue(array('https:\/\/github.com\/composer\/composer')));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $packageMock->expects($this->any())\n+            ->method('getVersion')\n+            ->will($this->returnValue('1.0.0.0'));\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $processExecutor->expects($this->at(0))\n             ->method('execute')\n             ->with($this->equalTo($this->winCompat(\"git show-ref --head -d\")))\n@@ -531,17 +542,20 @@ public function testUpdateThrowsRuntimeExceptionIfGitCommandFails()\n \n     public function testUpdateDoesntThrowsRuntimeExceptionIfGitCommandFailsAtFirstButIsAbleToRecover()\n     {\n-        $expectedFirstGitUpdateCommand = $this->winCompat(\"git remote set-url composer '' && git rev-parse --quiet --verify 'ref'^{commit} || (git fetch composer && git fetch --tags composer)\");\n-        $expectedSecondGitUpdateCommand = $this->winCompat(\"git remote set-url composer 'https:\/\/github.com\/composer\/composer' && git rev-parse --quiet --verify 'ref'^{commit} || (git fetch composer && git fetch --tags composer)\");\n+        $expectedFirstGitUpdateCommand = $this->winCompat(\"git remote set-url composer '' && git rev-parse --quiet --verify 'ref^{commit}' || (git fetch composer && git fetch --tags composer)\");\n+        $expectedSecondGitUpdateCommand = $this->winCompat(\"git remote set-url composer 'https:\/\/github.com\/composer\/composer' && git rev-parse --quiet --verify 'ref^{commit}' || (git fetch composer && git fetch --tags composer)\");\n \n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('ref'));\n+        $packageMock->expects($this->any())\n+            ->method('getVersion')\n+            ->will($this->returnValue('1.0.0.0'));\n         $packageMock->expects($this->any())\n             ->method('getSourceUrls')\n             ->will($this->returnValue(array('\/foo\/bar', 'https:\/\/github.com\/composer\/composer')));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $processExecutor->expects($this->at(0))\n             ->method('execute')\n             ->with($this->equalTo($this->winCompat(\"git show-ref --head -d\")))\n@@ -588,17 +602,101 @@ public function testUpdateDoesntThrowsRuntimeExceptionIfGitCommandFailsAtFirstBu\n         $downloader->update($packageMock, $packageMock, $this->workingDir);\n     }\n \n+    public function testDowngradeShowsAppropriateMessage()\n+    {\n+        $oldPackage = $this->getMock('Composer\\Package\\PackageInterface');\n+        $oldPackage->expects($this->any())\n+            ->method('getVersion')\n+            ->will($this->returnValue('1.2.0.0'));\n+        $oldPackage->expects($this->any())\n+            ->method('getFullPrettyVersion')\n+            ->will($this->returnValue('1.2.0'));\n+        $oldPackage->expects($this->any())\n+            ->method('getSourceReference')\n+            ->will($this->returnValue('ref'));\n+        $oldPackage->expects($this->any())\n+            ->method('getSourceUrls')\n+            ->will($this->returnValue(array('\/foo\/bar', 'https:\/\/github.com\/composer\/composer')));\n+\n+        $newPackage = $this->getMock('Composer\\Package\\PackageInterface');\n+        $newPackage->expects($this->any())\n+            ->method('getSourceReference')\n+            ->will($this->returnValue('ref'));\n+        $newPackage->expects($this->any())\n+            ->method('getSourceUrls')\n+            ->will($this->returnValue(array('https:\/\/github.com\/composer\/composer')));\n+        $newPackage->expects($this->any())\n+            ->method('getVersion')\n+            ->will($this->returnValue('1.0.0.0'));\n+        $newPackage->expects($this->any())\n+            ->method('getFullPrettyVersion')\n+            ->will($this->returnValue('1.0.0'));\n+\n+        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $processExecutor->expects($this->any())\n+            ->method('execute')\n+            ->will($this->returnValue(0));\n+\n+        $ioMock = $this->getMock('Composer\\IO\\IOInterface');\n+        $ioMock->expects($this->at(0))\n+            ->method('writeError')\n+            ->with($this->stringContains('Downgrading'));\n+\n+        $this->fs->ensureDirectoryExists($this->workingDir.'\/.git');\n+        $downloader = $this->getDownloaderMock($ioMock, null, $processExecutor);\n+        $downloader->update($oldPackage, $newPackage, $this->workingDir);\n+    }\n+\n+    public function testNotUsingDowngradingWithReferences()\n+    {\n+        $oldPackage = $this->getMock('Composer\\Package\\PackageInterface');\n+        $oldPackage->expects($this->any())\n+            ->method('getVersion')\n+            ->will($this->returnValue('dev-ref'));\n+        $oldPackage->expects($this->any())\n+            ->method('getSourceReference')\n+            ->will($this->returnValue('ref'));\n+        $oldPackage->expects($this->any())\n+            ->method('getSourceUrls')\n+            ->will($this->returnValue(array('\/foo\/bar', 'https:\/\/github.com\/composer\/composer')));\n+\n+        $newPackage = $this->getMock('Composer\\Package\\PackageInterface');\n+        $newPackage->expects($this->any())\n+            ->method('getSourceReference')\n+            ->will($this->returnValue('ref'));\n+        $newPackage->expects($this->any())\n+            ->method('getSourceUrls')\n+            ->will($this->returnValue(array('https:\/\/github.com\/composer\/composer')));\n+        $newPackage->expects($this->any())\n+            ->method('getVersion')\n+            ->will($this->returnValue('dev-ref2'));\n+\n+        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $processExecutor->expects($this->any())\n+            ->method('execute')\n+            ->will($this->returnValue(0));\n+\n+        $ioMock = $this->getMock('Composer\\IO\\IOInterface');\n+        $ioMock->expects($this->at(0))\n+            ->method('writeError')\n+            ->with($this->stringContains('updating'));\n+\n+        $this->fs->ensureDirectoryExists($this->workingDir.'\/.git');\n+        $downloader = $this->getDownloaderMock($ioMock, null, $processExecutor);\n+        $downloader->update($oldPackage, $newPackage, $this->workingDir);\n+    }\n+\n     public function testRemove()\n     {\n         $expectedGitResetCommand = $this->winCompat(\"cd 'composerPath' && git status --porcelain --untracked-files=no\");\n \n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $processExecutor->expects($this->any())\n             ->method('execute')\n             ->with($this->equalTo($expectedGitResetCommand))\n             ->will($this->returnValue(0));\n-        $filesystem = $this->getMock('Composer\\Util\\Filesystem');\n+        $filesystem = $this->getMockBuilder('Composer\\Util\\Filesystem')->getMock();\n         $filesystem->expects($this->any())\n             ->method('removeDirectory')\n             ->with($this->equalTo('composerPath'))"
        },
        {
            "sha": "c71d463cba6d3acc5426d9cce0c30bf3ee413a7b",
            "filename": "tests\/Composer\/Test\/Downloader\/HgDownloaderTest.php",
            "status": "modified",
            "additions": 18,
            "deletions": 15,
            "changes": 33,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/HgDownloaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/HgDownloaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Downloader\/HgDownloaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,7 +13,7 @@\n namespace Composer\\Test\\Downloader;\n \n use Composer\\Downloader\\HgDownloader;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Composer\\Util\\Filesystem;\n use Composer\\Util\\Platform;\n \n@@ -37,10 +37,10 @@ protected function tearDown()\n \n     protected function getDownloaderMock($io = null, $config = null, $executor = null, $filesystem = null)\n     {\n-        $io = $io ?: $this->getMock('Composer\\IO\\IOInterface');\n-        $config = $config ?: $this->getMock('Composer\\Config');\n-        $executor = $executor ?: $this->getMock('Composer\\Util\\ProcessExecutor');\n-        $filesystem = $filesystem ?: $this->getMock('Composer\\Util\\Filesystem');\n+        $io = $io ?: $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n+        $config = $config ?: $this->getMockBuilder('Composer\\Config')->getMock();\n+        $executor = $executor ?: $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n+        $filesystem = $filesystem ?: $this->getMockBuilder('Composer\\Util\\Filesystem')->getMock();\n \n         return new HgDownloader($io, $config, $executor, $filesystem);\n     }\n@@ -50,7 +50,7 @@ protected function getDownloaderMock($io = null, $config = null, $executor = nul\n      *\/\n     public function testDownloadForPackageWithoutSourceReference()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->once())\n             ->method('getSourceReference')\n             ->will($this->returnValue(null));\n@@ -61,14 +61,14 @@ public function testDownloadForPackageWithoutSourceReference()\n \n     public function testDownload()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('ref'));\n         $packageMock->expects($this->once())\n             ->method('getSourceUrls')\n             ->will($this->returnValue(array('https:\/\/mercurial.dev\/l3l0\/composer')));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n \n         $expectedGitCommand = $this->getCmd('hg clone \\'https:\/\/mercurial.dev\/l3l0\/composer\\' \\'composerPath\\'');\n         $processExecutor->expects($this->at(0))\n@@ -91,8 +91,8 @@ public function testDownload()\n      *\/\n     public function testUpdateforPackageWithoutSourceReference()\n     {\n-        $initialPackageMock = $this->getMock('Composer\\Package\\PackageInterface');\n-        $sourcePackageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $initialPackageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n+        $sourcePackageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $sourcePackageMock->expects($this->once())\n             ->method('getSourceReference')\n             ->will($this->returnValue(null));\n@@ -105,14 +105,17 @@ public function testUpdate()\n     {\n         $fs = new Filesystem;\n         $fs->ensureDirectoryExists($this->workingDir.'\/.hg');\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getSourceReference')\n             ->will($this->returnValue('ref'));\n+        $packageMock->expects($this->any())\n+            ->method('getVersion')\n+            ->will($this->returnValue('1.0.0.0'));\n         $packageMock->expects($this->any())\n             ->method('getSourceUrls')\n             ->will($this->returnValue(array('https:\/\/github.com\/l3l0\/composer')));\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n \n         $expectedHgCommand = $this->getCmd(\"hg st\");\n         $processExecutor->expects($this->at(0))\n@@ -133,12 +136,12 @@ public function testRemove()\n     {\n         $expectedResetCommand = $this->getCmd('cd \\'composerPath\\' && hg st');\n \n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n-        $processExecutor = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $processExecutor->expects($this->any())\n             ->method('execute')\n             ->with($this->equalTo($expectedResetCommand));\n-        $filesystem = $this->getMock('Composer\\Util\\Filesystem');\n+        $filesystem = $this->getMockBuilder('Composer\\Util\\Filesystem')->getMock();\n         $filesystem->expects($this->any())\n             ->method('removeDirectory')\n             ->with($this->equalTo('composerPath'))"
        },
        {
            "sha": "23334f30375c4fac1f7bfa2ed90b4e7fdf0abab0",
            "filename": "tests\/Composer\/Test\/Downloader\/PearPackageExtractorTest.php",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/PearPackageExtractorTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/PearPackageExtractorTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Downloader\/PearPackageExtractorTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,7 +13,7 @@\n namespace Composer\\Test\\Downloader;\n \n use Composer\\Downloader\\PearPackageExtractor;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n \n class PearPackageExtractorTest extends TestCase\n {"
        },
        {
            "sha": "ebb1f0456bbb4a4691e1c2bae0038ac19318061f",
            "filename": "tests\/Composer\/Test\/Downloader\/PerforceDownloaderTest.php",
            "status": "modified",
            "additions": 18,
            "deletions": 18,
            "changes": 36,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/PerforceDownloaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/PerforceDownloaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Downloader\/PerforceDownloaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -16,7 +16,7 @@\n use Composer\\Config;\n use Composer\\Repository\\VcsRepository;\n use Composer\\IO\\IOInterface;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Composer\\Util\\Filesystem;\n \n \/**\n@@ -36,23 +36,23 @@ class PerforceDownloaderTest extends TestCase\n \n     protected function setUp()\n     {\n-        $this->testPath        = $this->getUniqueTmpDirectory();\n-        $this->repoConfig      = $this->getRepoConfig();\n-        $this->config          = $this->getConfig();\n-        $this->io              = $this->getMockIoInterface();\n+        $this->testPath = $this->getUniqueTmpDirectory();\n+        $this->repoConfig = $this->getRepoConfig();\n+        $this->config = $this->getConfig();\n+        $this->io = $this->getMockIoInterface();\n         $this->processExecutor = $this->getMockProcessExecutor();\n-        $this->repository      = $this->getMockRepository($this->repoConfig, $this->io, $this->config);\n-        $this->package         = $this->getMockPackageInterface($this->repository);\n-        $this->downloader      = new PerforceDownloader($this->io, $this->config, $this->processExecutor);\n+        $this->repository = $this->getMockRepository($this->repoConfig, $this->io, $this->config);\n+        $this->package = $this->getMockPackageInterface($this->repository);\n+        $this->downloader = new PerforceDownloader($this->io, $this->config, $this->processExecutor);\n     }\n \n     protected function tearDown()\n     {\n         $this->downloader = null;\n-        $this->package    = null;\n+        $this->package = null;\n         $this->repository = null;\n-        $this->io         = null;\n-        $this->config     = null;\n+        $this->io = null;\n+        $this->config = null;\n         $this->repoConfig = null;\n         if (is_dir($this->testPath)) {\n             $fs = new Filesystem;\n@@ -62,7 +62,7 @@ protected function tearDown()\n \n     protected function getMockProcessExecutor()\n     {\n-        return $this->getMock('Composer\\Util\\ProcessExecutor');\n+        return $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n     }\n \n     protected function getConfig()\n@@ -76,12 +76,12 @@ protected function getConfig()\n \n     protected function getMockIoInterface()\n     {\n-        return $this->getMock('Composer\\IO\\IOInterface');\n+        return $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n     }\n \n     protected function getMockPackageInterface(VcsRepository $repository)\n     {\n-        $package = $this->getMock('Composer\\Package\\PackageInterface');\n+        $package = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $package->expects($this->any())->method('getRepository')->will($this->returnValue($repository));\n \n         return $package;\n@@ -94,10 +94,10 @@ protected function getRepoConfig()\n \n     protected function getMockRepository(array $repoConfig, IOInterface $io, Config $config)\n     {\n-        $class = 'Composer\\Repository\\VcsRepository';\n-        $methods = array('getRepoConfig');\n-        $args = array($repoConfig, $io, $config);\n-        $repository = $this->getMock($class, $methods, $args);\n+        $repository = $this->getMockBuilder('Composer\\Repository\\VcsRepository')\n+            ->setMethods(array('getRepoConfig'))\n+            ->setConstructorArgs(array($repoConfig, $io, $config))\n+            ->getMock();\n         $repository->expects($this->any())->method('getRepoConfig')->will($this->returnValue($repoConfig));\n \n         return $repository;"
        },
        {
            "sha": "6df782ddb069cfde7ad15cea4566fde909fe4fa1",
            "filename": "tests\/Composer\/Test\/Downloader\/XzDownloaderTest.php",
            "status": "modified",
            "additions": 4,
            "deletions": 4,
            "changes": 8,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/XzDownloaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/XzDownloaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Downloader\/XzDownloaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,7 +13,7 @@\n namespace Composer\\Test\\Downloader;\n \n use Composer\\Downloader\\XzDownloader;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Composer\\Util\\Filesystem;\n use Composer\\Util\\Platform;\n use Composer\\Util\\RemoteFilesystem;\n@@ -46,7 +46,7 @@ public function tearDown()\n \n     public function testErrorMessages()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n         $packageMock->expects($this->any())\n             ->method('getDistUrl')\n             ->will($this->returnValue($distUrl = 'file:\/\/'.__FILE__))\n@@ -60,8 +60,8 @@ public function testErrorMessages()\n             ->will($this->returnValue(array()))\n         ;\n \n-        $io = $this->getMock('Composer\\IO\\IOInterface');\n-        $config = $this->getMock('Composer\\Config');\n+        $io = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n+        $config = $this->getMockBuilder('Composer\\Config')->getMock();\n         $config->expects($this->any())\n             ->method('get')\n             ->with('vendor-dir')"
        },
        {
            "sha": "466fd35c7c5b28528e05e8abbd6991bc60606fbe",
            "filename": "tests\/Composer\/Test\/Downloader\/ZipDownloaderTest.php",
            "status": "modified",
            "additions": 298,
            "deletions": 26,
            "changes": 324,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/ZipDownloaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Downloader\/ZipDownloaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Downloader\/ZipDownloaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -13,7 +13,8 @@\n namespace Composer\\Test\\Downloader;\n \n use Composer\\Downloader\\ZipDownloader;\n-use Composer\\TestCase;\n+use Composer\\Package\\PackageInterface;\n+use Composer\\Test\\TestCase;\n use Composer\\Util\\Filesystem;\n \n class ZipDownloaderTest extends TestCase\n@@ -22,63 +23,334 @@ class ZipDownloaderTest extends TestCase\n      * @var string\n      *\/\n     private $testDir;\n+    private $prophet;\n+    private $io;\n+    private $config;\n \n     public function setUp()\n     {\n-        if (!class_exists('ZipArchive')) {\n-            $this->markTestSkipped('zip extension missing');\n-        }\n-\n         $this->testDir = $this->getUniqueTmpDirectory();\n+        $this->io = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n+        $this->config = $this->getMockBuilder('Composer\\Config')->getMock();\n     }\n \n     public function tearDown()\n     {\n         $fs = new Filesystem;\n         $fs->removeDirectory($this->testDir);\n+        $this->setPrivateProperty('hasSystemUnzip', null);\n+        $this->setPrivateProperty('hasZipArchive', null);\n+    }\n+\n+    public function setPrivateProperty($name, $value, $obj = null)\n+    {\n+        $reflectionClass = new \\ReflectionClass('Composer\\Downloader\\ZipDownloader');\n+        $reflectedProperty = $reflectionClass->getProperty($name);\n+        $reflectedProperty->setAccessible(true);\n+        if ($obj === null) {\n+            $reflectedProperty->setValue($value);\n+        } else {\n+            $reflectedProperty->setValue($obj, $value);\n+        }\n     }\n \n+    \/**\n+     * @group only\n+     *\/\n     public function testErrorMessages()\n     {\n-        $packageMock = $this->getMock('Composer\\Package\\PackageInterface');\n-        $packageMock->expects($this->any())\n-            ->method('getDistUrl')\n-            ->will($this->returnValue($distUrl = 'file:\/\/'.__FILE__))\n-        ;\n-        $packageMock->expects($this->any())\n-            ->method('getDistUrls')\n-            ->will($this->returnValue(array($distUrl)))\n-        ;\n-        $packageMock->expects($this->atLeastOnce())\n-            ->method('getTransportOptions')\n-            ->will($this->returnValue(array()))\n-        ;\n+        if (!class_exists('ZipArchive')) {\n+            $this->markTestSkipped('zip extension missing');\n+        }\n \n-        $io = $this->getMock('Composer\\IO\\IOInterface');\n-        $config = $this->getMock('Composer\\Config');\n-        $config->expects($this->at(0))\n+        $this->config->expects($this->at(0))\n             ->method('get')\n             ->with('disable-tls')\n             ->will($this->returnValue(false));\n-        $config->expects($this->at(1))\n+        $this->config->expects($this->at(1))\n             ->method('get')\n             ->with('cafile')\n             ->will($this->returnValue(null));\n-        $config->expects($this->at(2))\n+        $this->config->expects($this->at(2))\n             ->method('get')\n             ->with('capath')\n             ->will($this->returnValue(null));\n-        $config->expects($this->at(3))\n+        $this->config->expects($this->at(3))\n             ->method('get')\n             ->with('vendor-dir')\n             ->will($this->returnValue($this->testDir));\n-        $downloader = new ZipDownloader($io, $config);\n+\n+        $packageMock = $this->getMockBuilder('Composer\\Package\\PackageInterface')->getMock();\n+        $packageMock->expects($this->any())\n+            ->method('getDistUrl')\n+            ->will($this->returnValue($distUrl = 'file:\/\/'.__FILE__))\n+        ;\n+        $packageMock->expects($this->any())\n+            ->method('getDistUrls')\n+            ->will($this->returnValue(array($distUrl)))\n+        ;\n+        $packageMock->expects($this->atLeastOnce())\n+            ->method('getTransportOptions')\n+            ->will($this->returnValue(array()))\n+        ;\n+\n+        $downloader = new ZipDownloader($this->io, $this->config);\n+\n+        $this->setPrivateProperty('hasSystemUnzip', false);\n \n         try {\n             $downloader->download($packageMock, sys_get_temp_dir().'\/composer-zip-test');\n             $this->fail('Download of invalid zip files should throw an exception');\n-        } catch (\\UnexpectedValueException $e) {\n+        } catch (\\Exception $e) {\n             $this->assertContains('is not a zip archive', $e->getMessage());\n         }\n     }\n+\n+    \/**\n+     * @expectedException \\RuntimeException\n+     * @expectedExceptionMessage There was an error extracting the ZIP file\n+     *\/\n+    public function testZipArchiveOnlyFailed()\n+    {\n+        if (!class_exists('ZipArchive')) {\n+            $this->markTestSkipped('zip extension missing');\n+        }\n+\n+        $this->setPrivateProperty('hasSystemUnzip', false);\n+        $this->setPrivateProperty('hasZipArchive', true);\n+        $downloader = new MockedZipDownloader($this->io, $this->config);\n+\n+        $zipArchive = $this->getMockBuilder('ZipArchive')->getMock();\n+        $zipArchive->expects($this->at(0))\n+            ->method('open')\n+            ->will($this->returnValue(true));\n+        $zipArchive->expects($this->at(1))\n+            ->method('extractTo')\n+            ->will($this->returnValue(false));\n+\n+        $this->setPrivateProperty('zipArchiveObject', $zipArchive, $downloader);\n+        $downloader->extract('testfile.zip', 'vendor\/dir');\n+    }\n+\n+    \/**\n+     * @expectedException \\RuntimeException\n+     * @expectedExceptionMessage The archive may contain identical file names with different capitalization (which fails on case insensitive filesystems): Not a directory\n+     *\/\n+    public function testZipArchiveExtractOnlyFailed()\n+    {\n+        if (!class_exists('ZipArchive')) {\n+            $this->markTestSkipped('zip extension missing');\n+        }\n+\n+        $this->setPrivateProperty('hasSystemUnzip', false);\n+        $this->setPrivateProperty('hasZipArchive', true);\n+        $downloader = new MockedZipDownloader($this->io, $this->config);\n+\n+        $zipArchive = $this->getMockBuilder('ZipArchive')->getMock();\n+        $zipArchive->expects($this->at(0))\n+            ->method('open')\n+            ->will($this->returnValue(true));\n+        $zipArchive->expects($this->at(1))\n+            ->method('extractTo')\n+            ->will($this->throwException(new \\ErrorException('Not a directory')));\n+\n+        $this->setPrivateProperty('zipArchiveObject', $zipArchive, $downloader);\n+        $downloader->extract('testfile.zip', 'vendor\/dir');\n+    }\n+\n+    \/**\n+     * @group only\n+     *\/\n+    public function testZipArchiveOnlyGood()\n+    {\n+        if (!class_exists('ZipArchive')) {\n+            $this->markTestSkipped('zip extension missing');\n+        }\n+\n+        $this->setPrivateProperty('hasSystemUnzip', false);\n+        $this->setPrivateProperty('hasZipArchive', true);\n+        $downloader = new MockedZipDownloader($this->io, $this->config);\n+\n+        $zipArchive = $this->getMockBuilder('ZipArchive')->getMock();\n+        $zipArchive->expects($this->at(0))\n+            ->method('open')\n+            ->will($this->returnValue(true));\n+        $zipArchive->expects($this->at(1))\n+            ->method('extractTo')\n+            ->will($this->returnValue(true));\n+\n+        $this->setPrivateProperty('zipArchiveObject', $zipArchive, $downloader);\n+        $downloader->extract('testfile.zip', 'vendor\/dir');\n+    }\n+\n+    \/**\n+     * @expectedException \\Exception\n+     * @expectedExceptionMessage Failed to execute unzip\n+     *\/\n+    public function testSystemUnzipOnlyFailed()\n+    {\n+        if (!class_exists('ZipArchive')) {\n+            $this->markTestSkipped('zip extension missing');\n+        }\n+\n+        $this->setPrivateProperty('hasSystemUnzip', true);\n+        $this->setPrivateProperty('hasZipArchive', false);\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n+        $processExecutor->expects($this->at(0))\n+            ->method('execute')\n+            ->will($this->returnValue(1));\n+\n+        $downloader = new MockedZipDownloader($this->io, $this->config, null, null, $processExecutor);\n+        $downloader->extract('testfile.zip', 'vendor\/dir');\n+    }\n+\n+    public function testSystemUnzipOnlyGood()\n+    {\n+        if (!class_exists('ZipArchive')) {\n+            $this->markTestSkipped('zip extension missing');\n+        }\n+\n+        $this->setPrivateProperty('hasSystemUnzip', true);\n+        $this->setPrivateProperty('hasZipArchive', false);\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n+        $processExecutor->expects($this->at(0))\n+            ->method('execute')\n+            ->will($this->returnValue(0));\n+\n+        $downloader = new MockedZipDownloader($this->io, $this->config, null, null, $processExecutor);\n+        $downloader->extract('testfile.zip', 'vendor\/dir');\n+    }\n+\n+    public function testNonWindowsFallbackGood()\n+    {\n+        if (!class_exists('ZipArchive')) {\n+            $this->markTestSkipped('zip extension missing');\n+        }\n+\n+        $this->setPrivateProperty('isWindows', false);\n+        $this->setPrivateProperty('hasSystemUnzip', true);\n+        $this->setPrivateProperty('hasZipArchive', true);\n+\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n+        $processExecutor->expects($this->at(0))\n+            ->method('execute')\n+            ->will($this->returnValue(1));\n+\n+        $zipArchive = $this->getMockBuilder('ZipArchive')->getMock();\n+        $zipArchive->expects($this->at(0))\n+            ->method('open')\n+            ->will($this->returnValue(true));\n+        $zipArchive->expects($this->at(1))\n+            ->method('extractTo')\n+            ->will($this->returnValue(true));\n+\n+        $downloader = new MockedZipDownloader($this->io, $this->config, null, null, $processExecutor);\n+        $this->setPrivateProperty('zipArchiveObject', $zipArchive, $downloader);\n+        $downloader->extract('testfile.zip', 'vendor\/dir');\n+    }\n+\n+    \/**\n+     * @expectedException \\Exception\n+     * @expectedExceptionMessage There was an error extracting the ZIP file\n+     *\/\n+    public function testNonWindowsFallbackFailed()\n+    {\n+        if (!class_exists('ZipArchive')) {\n+            $this->markTestSkipped('zip extension missing');\n+        }\n+\n+        $this->setPrivateProperty('isWindows', false);\n+        $this->setPrivateProperty('hasSystemUnzip', true);\n+        $this->setPrivateProperty('hasZipArchive', true);\n+\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n+        $processExecutor->expects($this->at(0))\n+          ->method('execute')\n+          ->will($this->returnValue(1));\n+\n+        $zipArchive = $this->getMockBuilder('ZipArchive')->getMock();\n+        $zipArchive->expects($this->at(0))\n+          ->method('open')\n+          ->will($this->returnValue(true));\n+        $zipArchive->expects($this->at(1))\n+          ->method('extractTo')\n+          ->will($this->returnValue(false));\n+\n+        $downloader = new MockedZipDownloader($this->io, $this->config, null, null, $processExecutor);\n+        $this->setPrivateProperty('zipArchiveObject', $zipArchive, $downloader);\n+        $downloader->extract('testfile.zip', 'vendor\/dir');\n+    }\n+\n+    public function testWindowsFallbackGood()\n+    {\n+        if (!class_exists('ZipArchive')) {\n+            $this->markTestSkipped('zip extension missing');\n+        }\n+\n+        $this->setPrivateProperty('isWindows', true);\n+        $this->setPrivateProperty('hasSystemUnzip', true);\n+        $this->setPrivateProperty('hasZipArchive', true);\n+\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n+        $processExecutor->expects($this->atLeastOnce())\n+            ->method('execute')\n+            ->will($this->returnValue(0));\n+\n+        $zipArchive = $this->getMockBuilder('ZipArchive')->getMock();\n+        $zipArchive->expects($this->at(0))\n+            ->method('open')\n+            ->will($this->returnValue(true));\n+        $zipArchive->expects($this->at(1))\n+            ->method('extractTo')\n+            ->will($this->returnValue(false));\n+\n+        $downloader = new MockedZipDownloader($this->io, $this->config, null, null, $processExecutor);\n+        $this->setPrivateProperty('zipArchiveObject', $zipArchive, $downloader);\n+        $downloader->extract('testfile.zip', 'vendor\/dir');\n+    }\n+\n+    \/**\n+     * @expectedException \\Exception\n+     * @expectedExceptionMessage Failed to execute unzip\n+     *\/\n+    public function testWindowsFallbackFailed()\n+    {\n+        if (!class_exists('ZipArchive')) {\n+            $this->markTestSkipped('zip extension missing');\n+        }\n+\n+        $this->setPrivateProperty('isWindows', true);\n+        $this->setPrivateProperty('hasSystemUnzip', true);\n+        $this->setPrivateProperty('hasZipArchive', true);\n+\n+        $processExecutor = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n+        $processExecutor->expects($this->atLeastOnce())\n+          ->method('execute')\n+          ->will($this->returnValue(1));\n+\n+        $zipArchive = $this->getMockBuilder('ZipArchive')->getMock();\n+        $zipArchive->expects($this->at(0))\n+          ->method('open')\n+          ->will($this->returnValue(true));\n+        $zipArchive->expects($this->at(1))\n+          ->method('extractTo')\n+          ->will($this->returnValue(false));\n+\n+        $downloader = new MockedZipDownloader($this->io, $this->config, null, null, $processExecutor);\n+        $this->setPrivateProperty('zipArchiveObject', $zipArchive, $downloader);\n+        $downloader->extract('testfile.zip', 'vendor\/dir');\n+    }\n+}\n+\n+class MockedZipDownloader extends ZipDownloader\n+{\n+    public function download(PackageInterface $package, $path, $output = true)\n+    {\n+        return;\n+    }\n+\n+    public function extract($file, $path)\n+    {\n+        parent::extract($file, $path);\n+    }\n }"
        },
        {
            "sha": "5e68ebcc9329e6e436919c55027413950a9816ab",
            "filename": "tests\/Composer\/Test\/EventDispatcher\/EventDispatcherTest.php",
            "status": "modified",
            "additions": 62,
            "deletions": 22,
            "changes": 84,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/EventDispatcher\/EventDispatcherTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/EventDispatcher\/EventDispatcherTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/EventDispatcher\/EventDispatcherTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -14,10 +14,11 @@\n \n use Composer\\EventDispatcher\\Event;\n use Composer\\EventDispatcher\\EventDispatcher;\n+use Composer\\EventDispatcher\\ScriptExecutionException;\n use Composer\\Installer\\InstallerEvents;\n use Composer\\Config;\n use Composer\\Composer;\n-use Composer\\TestCase;\n+use Composer\\Test\\TestCase;\n use Composer\\IO\\BufferIO;\n use Composer\\Script\\ScriptEvents;\n use Composer\\Script\\CommandEvent;\n@@ -31,7 +32,7 @@ class EventDispatcherTest extends TestCase\n      *\/\n     public function testListenerExceptionsAreCaught()\n     {\n-        $io = $this->getMock('Composer\\IO\\IOInterface');\n+        $io = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n         $dispatcher = $this->getDispatcherStubForListenersTest(array(\n             'Composer\\Test\\EventDispatcher\\EventDispatcherTest::call',\n         ), $io);\n@@ -56,7 +57,7 @@ public function testListenerExceptionsAreCaught()\n      *\/\n     public function testDispatcherCanConvertScriptEventToCommandEventForListener()\n     {\n-        $io = $this->getMock('Composer\\IO\\IOInterface');\n+        $io = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n         $dispatcher = $this->getDispatcherStubForListenersTest(array(\n             'Composer\\Test\\EventDispatcher\\EventDispatcherTest::expectsCommandEvent',\n         ), $io);\n@@ -66,7 +67,7 @@ public function testDispatcherCanConvertScriptEventToCommandEventForListener()\n \n     public function testDispatcherDoesNotAttemptConversionForListenerWithoutTypehint()\n     {\n-        $io = $this->getMock('Composer\\IO\\IOInterface');\n+        $io = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n         $dispatcher = $this->getDispatcherStubForListenersTest(array(\n             'Composer\\Test\\EventDispatcher\\EventDispatcherTest::expectsVariableEvent',\n         ), $io);\n@@ -80,11 +81,11 @@ public function testDispatcherDoesNotAttemptConversionForListenerWithoutTypehint\n      *\/\n     public function testDispatcherCanExecuteSingleCommandLineScript($command)\n     {\n-        $process = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $process = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $dispatcher = $this->getMockBuilder('Composer\\EventDispatcher\\EventDispatcher')\n             ->setConstructorArgs(array(\n                 $this->createComposerInstance(),\n-                $this->getMock('Composer\\IO\\IOInterface'),\n+                $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock(),\n                 $process,\n             ))\n             ->setMethods(array('getListeners'))\n@@ -118,17 +119,17 @@ public function testDispatcherPassDevModeToAutoloadGeneratorForScriptEvents($dev\n \n         $composer->setAutoloadGenerator($generator);\n \n-        $package = $this->getMock('Composer\\Package\\RootPackageInterface');\n+        $package = $this->getMockBuilder('Composer\\Package\\RootPackageInterface')->getMock();\n         $package->method('getScripts')->will($this->returnValue(array('scriptName' => array('scriptName'))));\n         $composer->setPackage($package);\n \n         $composer->setRepositoryManager($this->getRepositoryManagerMockForDevModePassingTest());\n-        $composer->setInstallationManager($this->getMock('Composer\\Installer\\InstallationManager'));\n+        $composer->setInstallationManager($this->getMockBuilder('Composer\\Installer\\InstallationManager')->getMock());\n \n         $dispatcher = new EventDispatcher(\n             $composer,\n-            $this->getMock('Composer\\IO\\IOInterface'),\n-            $this->getMock('Composer\\Util\\ProcessExecutor')\n+            $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock(),\n+            $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock()\n         );\n \n         $event = $this->getMockBuilder('Composer\\Script\\Event')\n@@ -169,7 +170,7 @@ private function getGeneratorMockForDevModePassingTest()\n             ->will($this->returnValue(array()));\n         $generator\n             ->method('createLoader')\n-            ->will($this->returnValue($this->getMock('Composer\\Autoload\\ClassLoader')));\n+            ->will($this->returnValue($this->getMockBuilder('Composer\\Autoload\\ClassLoader')->getMock()));\n \n         return $generator;\n     }\n@@ -181,7 +182,7 @@ private function getRepositoryManagerMockForDevModePassingTest()\n             ->setMethods(array('getLocalRepository'))\n             ->getMock();\n \n-        $repo = $this->getMock('Composer\\Repository\\InstalledRepositoryInterface');\n+        $repo = $this->getMockBuilder('Composer\\Repository\\InstalledRepositoryInterface')->getMock();\n         $repo\n             ->method('getCanonicalPackages')\n             ->will($this->returnValue(array()));\n@@ -195,7 +196,7 @@ private function getRepositoryManagerMockForDevModePassingTest()\n \n     public function testDispatcherCanExecuteCliAndPhpInSameEventScriptStack()\n     {\n-        $process = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $process = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $dispatcher = $this->getMockBuilder('Composer\\EventDispatcher\\EventDispatcher')\n             ->setConstructorArgs(array(\n                 $this->createComposerInstance(),\n@@ -231,7 +232,7 @@ public function testDispatcherCanExecuteCliAndPhpInSameEventScriptStack()\n \n     public function testDispatcherCanExecuteComposerScriptGroups()\n     {\n-        $process = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $process = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $dispatcher = $this->getMockBuilder('Composer\\EventDispatcher\\EventDispatcher')\n             ->setConstructorArgs(array(\n                 $composer = $this->createComposerInstance(),\n@@ -274,16 +275,55 @@ public function testDispatcherCanExecuteComposerScriptGroups()\n         $this->assertEquals($expected, $io->getOutput());\n     }\n \n+    public function testRecursionInScriptsNames()\n+    {\n+        $process = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n+        $dispatcher = $this->getMockBuilder('Composer\\EventDispatcher\\EventDispatcher')\n+            ->setConstructorArgs(array(\n+                $composer = $this->createComposerInstance(),\n+                $io = new BufferIO('', OutputInterface::VERBOSITY_VERBOSE),\n+                $process\n+            ))\n+            ->setMethods(array(\n+                'getListeners'\n+            ))\n+            ->getMock();\n+\n+        $process->expects($this->exactly(1))\n+            ->method('execute')\n+            ->will($this->returnValue(0));\n+\n+        $dispatcher->expects($this->atLeastOnce())\n+            ->method('getListeners')\n+            ->will($this->returnCallback(function (Event $event) {\n+                if($event->getName() === 'hello') {\n+                    return array('echo Hello');\n+                }\n+\n+                if($event->getName() === 'helloWorld') {\n+                    return array('@hello World');\n+                }\n+\n+                return array();\n+            }));\n+\n+        $dispatcher->dispatch('helloWorld', new CommandEvent('helloWorld', $composer, $io));\n+        $expected = \"> helloWorld: @hello World\".PHP_EOL.\n+            \"> hello: echo Hello \" .escapeshellarg('World').PHP_EOL;\n+\n+        $this->assertEquals($expected, $io->getOutput());\n+    }\n+\n     \/**\n      * @expectedException RuntimeException\n      *\/\n     public function testDispatcherDetectInfiniteRecursion()\n     {\n-        $process = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $process = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $dispatcher = $this->getMockBuilder('Composer\\EventDispatcher\\EventDispatcher')\n         ->setConstructorArgs(array(\n             $composer = $this->createComposerInstance(),\n-            $io = $this->getMock('Composer\\IO\\IOInterface'),\n+            $io = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock(),\n             $process,\n         ))\n         ->setMethods(array(\n@@ -339,7 +379,7 @@ public function testDispatcherOutputsCommand()\n         $dispatcher = $this->getMockBuilder('Composer\\EventDispatcher\\EventDispatcher')\n             ->setConstructorArgs(array(\n                 $this->createComposerInstance(),\n-                $io = $this->getMock('Composer\\IO\\IOInterface'),\n+                $io = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock(),\n                 new ProcessExecutor($io),\n             ))\n             ->setMethods(array('getListeners'))\n@@ -366,7 +406,7 @@ public function testDispatcherOutputsErrorOnFailedCommand()\n         $dispatcher = $this->getMockBuilder('Composer\\EventDispatcher\\EventDispatcher')\n             ->setConstructorArgs(array(\n                 $this->createComposerInstance(),\n-                $io = $this->getMock('Composer\\IO\\IOInterface'),\n+                $io = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock(),\n                 new ProcessExecutor,\n             ))\n             ->setMethods(array('getListeners'))\n@@ -396,11 +436,11 @@ public function testDispatcherOutputsErrorOnFailedCommand()\n \n     public function testDispatcherInstallerEvents()\n     {\n-        $process = $this->getMock('Composer\\Util\\ProcessExecutor');\n+        $process = $this->getMockBuilder('Composer\\Util\\ProcessExecutor')->getMock();\n         $dispatcher = $this->getMockBuilder('Composer\\EventDispatcher\\EventDispatcher')\n             ->setConstructorArgs(array(\n                     $this->createComposerInstance(),\n-                    $this->getMock('Composer\\IO\\IOInterface'),\n+                    $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock(),\n                     $process,\n                 ))\n             ->setMethods(array('getListeners'))\n@@ -410,7 +450,7 @@ public function testDispatcherInstallerEvents()\n             ->method('getListeners')\n             ->will($this->returnValue(array()));\n \n-        $policy = $this->getMock('Composer\\DependencyResolver\\PolicyInterface');\n+        $policy = $this->getMockBuilder('Composer\\DependencyResolver\\PolicyInterface')->getMock();\n         $pool = $this->getMockBuilder('Composer\\DependencyResolver\\Pool')->disableOriginalConstructor()->getMock();\n         $installedRepo = $this->getMockBuilder('Composer\\Repository\\CompositeRepository')->disableOriginalConstructor()->getMock();\n         $request = $this->getMockBuilder('Composer\\DependencyResolver\\Request')->disableOriginalConstructor()->getMock();\n@@ -444,7 +484,7 @@ private function createComposerInstance()\n         $composer = new Composer;\n         $config = new Config;\n         $composer->setConfig($config);\n-        $package = $this->getMock('Composer\\Package\\RootPackageInterface');\n+        $package = $this->getMockBuilder('Composer\\Package\\RootPackageInterface')->getMock();\n         $composer->setPackage($package);\n \n         return $composer;"
        },
        {
            "sha": "6704e5b151c5622cadd390c12b2afe74c0067d23",
            "filename": "tests\/Composer\/Test\/FactoryTest.php",
            "status": "added",
            "additions": 40,
            "deletions": 0,
            "changes": 40,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/FactoryTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/FactoryTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/FactoryTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -0,0 +1,40 @@\n+<?php\n+\n+\/*\n+ * This file is part of Composer.\n+ *\n+ * (c) Nils Adermann <naderman@naderman.de>\n+ *     Jordi Boggiano <j.boggiano@seld.be>\n+ *\n+ * For the full copyright and license information, please view the LICENSE\n+ * file that was distributed with this source code.\n+ *\/\n+\n+namespace Composer\\Test;\n+\n+use Composer\\Factory;\n+\n+class FactoryTest extends TestCase\n+{\n+    \/**\n+     * @group TLS\n+     *\/\n+    public function testDefaultValuesAreAsExpected()\n+    {\n+        $ioMock = $this->getMockBuilder('Composer\\IO\\IOInterface')->getMock();\n+\n+        $ioMock->expects($this->once())\n+            ->method(\"writeError\")\n+            ->with($this->equalTo('<warning>You are running Composer with SSL\/TLS protection disabled.<\/warning>'));\n+\n+        $config = $this\n+            ->getMockBuilder('Composer\\Config')\n+            ->getMock();\n+\n+        $config->method('get')\n+            ->with($this->equalTo('disable-tls'))\n+            ->will($this->returnValue(true));\n+\n+        Factory::createRemoteFilesystem($ioMock, $config);\n+    }\n+}"
        },
        {
            "sha": "1c4813446a3b74ca587c8d69ad0387de8646c02b",
            "filename": "tests\/Composer\/Test\/Fixtures\/functional\/create-project-command.test",
            "status": "modified",
            "additions": 2,
            "deletions": 9,
            "changes": 11,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/functional\/create-project-command.test",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/functional\/create-project-command.test",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Fixtures\/functional\/create-project-command.test?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,11 +1,4 @@\n --RUN--\n create-project seld\/jsonlint %testDir% 1.0.0 --prefer-source -n\n---EXPECT-ERROR--\n-Installing seld\/jsonlint (1.0.0)\n-  - Installing seld\/jsonlint (1.0.0) Cloning 3b4bc2a96f\n-Created project in %testDir%\n-Loading composer repositories with package information\n-Updating dependencies (including require-dev)\n-Nothing to install or update\n-Writing lock file\n-Generating autoload files\n+--EXPECT-ERROR-REGEX--\n+{Installing seld\/jsonlint \\(1.0.0\\): Cloning [a-f0-9]{10}( from cache)?}"
        },
        {
            "sha": "db4ef23c06ee167e7d2bf61591bec07eedd7c1da",
            "filename": "tests\/Composer\/Test\/Fixtures\/installer\/broken-deps-do-not-replace.test",
            "status": "modified",
            "additions": 1,
            "deletions": 0,
            "changes": 1,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/installer\/broken-deps-do-not-replace.test",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/installer\/broken-deps-do-not-replace.test",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Fixtures\/installer\/broken-deps-do-not-replace.test?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -34,6 +34,7 @@ Potential causes:\n  - A typo in the package name\n  - The package is not available in a stable-enough version according to your minimum-stability setting\n    see <https:\/\/getcomposer.org\/doc\/04-schema.md#minimum-stability> for more details.\n+ - It's a private package and you forgot to add a custom repository to find it\n \n Read <https:\/\/getcomposer.org\/doc\/articles\/troubleshooting.md> for further common problems.\n "
        },
        {
            "sha": "009eb576d962660897f1e1e63f01656880092910",
            "filename": "tests\/Composer\/Test\/Fixtures\/installer\/plugins-are-installed-first.test",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/installer\/plugins-are-installed-first.test",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/installer\/plugins-are-installed-first.test",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Fixtures\/installer\/plugins-are-installed-first.test?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "patch": "@@ -1,5 +1,5 @@\n --TEST--\n-Composer installers are installed first if they have no meaningful requirements\n+Composer installers and their requirements are installed first\n --COMPOSER--\n {\n     \"repositories\": [\n@@ -26,6 +26,6 @@ install\n --EXPECT--\n Installing inst (1.0.0)\n Installing inst-with-req (1.0.0)\n-Installing pkg (1.0.0)\n Installing pkg2 (1.0.0)\n Installing inst-with-req2 (1.0.0)\n+Installing pkg (1.0.0)"
        },
        {
            "sha": "947d96b2812980c9b41b25ed59de7ff94cf7583c",
            "filename": "tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-should-not-be-installed-when-installing-from-lock.test",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-should-not-be-installed-when-installing-from-lock.test",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-should-not-be-installed-when-installing-from-lock.test",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-should-not-be-installed-when-installing-from-lock.test?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "previous_filename": "tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-wrong-version-install.test"
        },
        {
            "sha": "0d1ea7701b3910476faafa239baa76e3ddee70ce",
            "filename": "tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-should-not-be-installed.test",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-should-not-be-installed.test",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-should-not-be-installed.test",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-should-not-be-installed.test?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "2721772aed71b13fcc035571fbccfa39e4dde0f3",
            "filename": "tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-wrong-version-install-from-lock.test",
            "status": "removed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/ed461a86341990d9e6a84dec377c9704dbe274f7\/tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-wrong-version-install-from-lock.test",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/ed461a86341990d9e6a84dec377c9704dbe274f7\/tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-wrong-version-install-from-lock.test",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Fixtures\/installer\/replaced-packages-wrong-version-install-from-lock.test?ref=ed461a86341990d9e6a84dec377c9704dbe274f7"
        },
        {
            "sha": "e0359a1512b0e4f3d259db80b82fd197b75aaf54",
            "filename": "tests\/Composer\/Test\/Fixtures\/installer\/solver-problems.test",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/installer\/solver-problems.test",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/installer\/solver-problems.test",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Fixtures\/installer\/solver-problems.test?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "f4fbfce9bac6e583ba40e45692b8ba067c592073",
            "filename": "tests\/Composer\/Test\/Fixtures\/installer\/update-with-all-dependencies.test",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/installer\/update-with-all-dependencies.test",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Fixtures\/installer\/update-with-all-dependencies.test",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Fixtures\/installer\/update-with-all-dependencies.test?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "ef50963009ebe082c5fb15bee70a2543bd2f4f84",
            "filename": "tests\/Composer\/Test\/IO\/ConsoleIOTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/IO\/ConsoleIOTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/IO\/ConsoleIOTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/IO\/ConsoleIOTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "d37fb2a4f90138ce80a3e5dba8997cd3103d0ebb",
            "filename": "tests\/Composer\/Test\/IO\/NullIOTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/IO\/NullIOTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/IO\/NullIOTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/IO\/NullIOTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "86e860bc2451bbe86a57c982106a64d87e746304",
            "filename": "tests\/Composer\/Test\/Installer\/InstallationManagerTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Installer\/InstallationManagerTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Installer\/InstallationManagerTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Installer\/InstallationManagerTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "8c99ba565d07d2327e06444831b8c01497ed2bf5",
            "filename": "tests\/Composer\/Test\/Installer\/InstallerEventTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Installer\/InstallerEventTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Installer\/InstallerEventTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Installer\/InstallerEventTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "772bb05c897f1013dcadea86aa9b153af76c7026",
            "filename": "tests\/Composer\/Test\/Installer\/LibraryInstallerTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Installer\/LibraryInstallerTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Installer\/LibraryInstallerTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Installer\/LibraryInstallerTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "1a6b7a264926a405d03a856525548496b28931ca",
            "filename": "tests\/Composer\/Test\/Installer\/MetapackageInstallerTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Installer\/MetapackageInstallerTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Installer\/MetapackageInstallerTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Installer\/MetapackageInstallerTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "6aef0fa7dcfd9fa2903c923ae4b6170148a9883e",
            "filename": "tests\/Composer\/Test\/Installer\/SuggestedPackagesReporterTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Installer\/SuggestedPackagesReporterTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Installer\/SuggestedPackagesReporterTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Installer\/SuggestedPackagesReporterTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "c3b957afb936b9bd24e4fa4b6772498e124f1816",
            "filename": "tests\/Composer\/Test\/InstallerTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/InstallerTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/InstallerTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/InstallerTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "42774331c851f61985ad78afa8a87074c96d950f",
            "filename": "tests\/Composer\/Test\/Json\/ComposerSchemaTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Json\/ComposerSchemaTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Json\/ComposerSchemaTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Json\/ComposerSchemaTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "66e35a7e7ce6191b1bd69a0b9c3caa8a1ff98bcc",
            "filename": "tests\/Composer\/Test\/Json\/Fixtures\/composer.json",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Json\/Fixtures\/composer.json",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Json\/Fixtures\/composer.json",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Json\/Fixtures\/composer.json?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "c34a321f03d3899d97bc0463049ed4202dd905f5",
            "filename": "tests\/Composer\/Test\/Json\/JsonFileTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Json\/JsonFileTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Json\/JsonFileTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Json\/JsonFileTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "417f267e310bfffe0466fec34ffeb14c7edc4e52",
            "filename": "tests\/Composer\/Test\/Json\/JsonFormatterTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Json\/JsonFormatterTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Json\/JsonFormatterTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Json\/JsonFormatterTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "05de454ca32b2523b09132f4726222139b6152dd",
            "filename": "tests\/Composer\/Test\/Json\/JsonManipulatorTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Json\/JsonManipulatorTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Json\/JsonManipulatorTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Json\/JsonManipulatorTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "99c0ad2ee3762cefc562fdedb7a5e70b890cde5a",
            "filename": "tests\/Composer\/Test\/Json\/JsonValidationExceptionTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Json\/JsonValidationExceptionTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Json\/JsonValidationExceptionTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Json\/JsonValidationExceptionTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "47683afcd78f13765d8ecfc544ea2db9484675c9",
            "filename": "tests\/Composer\/Test\/Mock\/FactoryMock.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Mock\/FactoryMock.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Mock\/FactoryMock.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Mock\/FactoryMock.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "de1de514b2ebcb503c4245e3ced01b386462a218",
            "filename": "tests\/Composer\/Test\/Mock\/InstallationManagerMock.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Mock\/InstallationManagerMock.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Mock\/InstallationManagerMock.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Mock\/InstallationManagerMock.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "9c11dc307a597ce971540cefee2fec0ee6cbb9e3",
            "filename": "tests\/Composer\/Test\/Mock\/InstalledFilesystemRepositoryMock.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Mock\/InstalledFilesystemRepositoryMock.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Mock\/InstalledFilesystemRepositoryMock.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Mock\/InstalledFilesystemRepositoryMock.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "5d4f52e54a2ddf1398bff197620a9a0c8134bddc",
            "filename": "tests\/Composer\/Test\/Mock\/RemoteFilesystemMock.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Mock\/RemoteFilesystemMock.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Mock\/RemoteFilesystemMock.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Mock\/RemoteFilesystemMock.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "3b3766b878fb33e856c0a21194eb078e772d11d1",
            "filename": "tests\/Composer\/Test\/Mock\/XdebugHandlerMock.php",
            "status": "removed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/ed461a86341990d9e6a84dec377c9704dbe274f7\/tests\/Composer\/Test\/Mock\/XdebugHandlerMock.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/ed461a86341990d9e6a84dec377c9704dbe274f7\/tests\/Composer\/Test\/Mock\/XdebugHandlerMock.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Mock\/XdebugHandlerMock.php?ref=ed461a86341990d9e6a84dec377c9704dbe274f7"
        },
        {
            "sha": "f6afe10f133d4bb98250b995de7c01dbb1d2229b",
            "filename": "tests\/Composer\/Test\/Package\/Archiver\/ArchivableFilesFinderTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/ArchivableFilesFinderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/ArchivableFilesFinderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Archiver\/ArchivableFilesFinderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "f9fe308fa435585b589b5b103da851537f4efdc1",
            "filename": "tests\/Composer\/Test\/Package\/Archiver\/ArchiveManagerTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/ArchiveManagerTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/ArchiveManagerTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Archiver\/ArchiveManagerTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "8926d760b46f40f0833f72f58721dea9cb388a8c",
            "filename": "tests\/Composer\/Test\/Package\/Archiver\/ArchiverTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/ArchiverTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/ArchiverTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Archiver\/ArchiverTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "d951ea19147648c5be2f42da0d77d849b6edfcef",
            "filename": "tests\/Composer\/Test\/Package\/Archiver\/GitExcludeFilterTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/GitExcludeFilterTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/GitExcludeFilterTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Archiver\/GitExcludeFilterTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "cb050873f271bbaff6db6729edd26c6a882de996",
            "filename": "tests\/Composer\/Test\/Package\/Archiver\/HgExcludeFilterTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/HgExcludeFilterTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/HgExcludeFilterTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Archiver\/HgExcludeFilterTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "668e101e30196f22d5b528827ee9b1a0a58dbb65",
            "filename": "tests\/Composer\/Test\/Package\/Archiver\/PharArchiverTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/PharArchiverTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/PharArchiverTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Archiver\/PharArchiverTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "c76843c39aa28effca2265b9be7170669824c8ce",
            "filename": "tests\/Composer\/Test\/Package\/Archiver\/ZipArchiverTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/ZipArchiverTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Archiver\/ZipArchiverTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Archiver\/ZipArchiverTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "32a8cd84497def003c400d910bd4df9b10b1c06c",
            "filename": "tests\/Composer\/Test\/Package\/BasePackageTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/BasePackageTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/BasePackageTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/BasePackageTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "fe1a783e8b73a3c485bfc758b39ea0cba31730a6",
            "filename": "tests\/Composer\/Test\/Package\/CompletePackageTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/CompletePackageTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/CompletePackageTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/CompletePackageTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "bd1c29c138d31414b3ff37bb3ffd60d0ab4ed68e",
            "filename": "tests\/Composer\/Test\/Package\/Dumper\/ArrayDumperTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Dumper\/ArrayDumperTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Dumper\/ArrayDumperTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Dumper\/ArrayDumperTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "e3b9dc491967553427f4c22d7d4eb88951deeda1",
            "filename": "tests\/Composer\/Test\/Package\/Loader\/ArrayLoaderTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Loader\/ArrayLoaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Loader\/ArrayLoaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Loader\/ArrayLoaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "d0084e267d79d793575eb1933b546e175bf6903e",
            "filename": "tests\/Composer\/Test\/Package\/Loader\/RootPackageLoaderTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Loader\/RootPackageLoaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Loader\/RootPackageLoaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Loader\/RootPackageLoaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "ebe6871fee9b7f372fc46da106602a3473943625",
            "filename": "tests\/Composer\/Test\/Package\/Loader\/ValidatingArrayLoaderTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Loader\/ValidatingArrayLoaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Loader\/ValidatingArrayLoaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Loader\/ValidatingArrayLoaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "c20c214663fe12c11bf814bb66fedc44548515c9",
            "filename": "tests\/Composer\/Test\/Package\/LockerTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/LockerTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/LockerTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/LockerTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "a5fe9172d2ae0e91a61e0aa4bfcc8b97b1a355d2",
            "filename": "tests\/Composer\/Test\/Package\/RootAliasPackageTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/RootAliasPackageTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/RootAliasPackageTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/RootAliasPackageTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "fe229d6792e3d85b1a6fb74d19609681195d5374",
            "filename": "tests\/Composer\/Test\/Package\/Version\/VersionGuesserTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Version\/VersionGuesserTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Version\/VersionGuesserTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Version\/VersionGuesserTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "80dceb82236002335be3a8077c495b08c981e187",
            "filename": "tests\/Composer\/Test\/Package\/Version\/VersionParserTest.php",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Version\/VersionParserTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Version\/VersionParserTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Version\/VersionParserTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "d3e831e5cb646d3b9299e6c25a054bdd7208fb2e",
            "filename": "tests\/Composer\/Test\/Package\/Version\/VersionSelectorTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Version\/VersionSelectorTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Package\/Version\/VersionSelectorTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Package\/Version\/VersionSelectorTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "aa1f9ddbbf431379bae17d22fdb3f300b56f9e67",
            "filename": "tests\/Composer\/Test\/Plugin\/PluginInstallerTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Plugin\/PluginInstallerTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Plugin\/PluginInstallerTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Plugin\/PluginInstallerTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "1f0dad72bd7c79decce2b898dfecdaeff38459fd",
            "filename": "tests\/Composer\/Test\/Question\/StrictConfirmationQuestionTest.php",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Question\/StrictConfirmationQuestionTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Question\/StrictConfirmationQuestionTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Question\/StrictConfirmationQuestionTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "1c7972c9665b2c1cd137e9c376b531af50f41ffa",
            "filename": "tests\/Composer\/Test\/Repository\/ArrayRepositoryTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/ArrayRepositoryTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/ArrayRepositoryTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/ArrayRepositoryTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "506a033c41f115f1b4ac163cad0cbea92c854514",
            "filename": "tests\/Composer\/Test\/Repository\/ArtifactRepositoryTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/ArtifactRepositoryTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/ArtifactRepositoryTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/ArtifactRepositoryTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "3e29e802322c0bfacae0f607dcd2d07b61a1213c",
            "filename": "tests\/Composer\/Test\/Repository\/ComposerRepositoryTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/ComposerRepositoryTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/ComposerRepositoryTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/ComposerRepositoryTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "97858713310bd2a82225e090d5d0f5802862c0c1",
            "filename": "tests\/Composer\/Test\/Repository\/CompositeRepositoryTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/CompositeRepositoryTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/CompositeRepositoryTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/CompositeRepositoryTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "be8b0d0a96c8c755bacc9929c6a08fa983a7ae3f",
            "filename": "tests\/Composer\/Test\/Repository\/FilesystemRepositoryTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/FilesystemRepositoryTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/FilesystemRepositoryTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/FilesystemRepositoryTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "ff342b0e69759e21709255e5d13d1012b72444f4",
            "filename": "tests\/Composer\/Test\/Repository\/Fixtures\/artifacts\/not-a-zip-with-zip-extension.zip",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Fixtures\/artifacts\/not-a-zip-with-zip-extension.zip",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Fixtures\/artifacts\/not-a-zip-with-zip-extension.zip",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/Fixtures\/artifacts\/not-a-zip-with-zip-extension.zip?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "a9594257c3ff4c07b1145396267ee57537f3cf3e",
            "filename": "tests\/Composer\/Test\/Repository\/PathRepositoryTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/PathRepositoryTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/PathRepositoryTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/PathRepositoryTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "e766065a7f62dbbe26c499e412ff4bdc5a74a5ad",
            "filename": "tests\/Composer\/Test\/Repository\/Pear\/ChannelReaderTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Pear\/ChannelReaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Pear\/ChannelReaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/Pear\/ChannelReaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "4aa7bbba237e860575598c174fa3fe5be1846c28",
            "filename": "tests\/Composer\/Test\/Repository\/Pear\/ChannelRest10ReaderTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Pear\/ChannelRest10ReaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Pear\/ChannelRest10ReaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/Pear\/ChannelRest10ReaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "04e48426e7297d02c7c1abf848d56aaa3604432a",
            "filename": "tests\/Composer\/Test\/Repository\/Pear\/ChannelRest11ReaderTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Pear\/ChannelRest11ReaderTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Pear\/ChannelRest11ReaderTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/Pear\/ChannelRest11ReaderTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "0ca9259d984a61fb5cce86a46445138c3556888b",
            "filename": "tests\/Composer\/Test\/Repository\/Pear\/PackageDependencyParserTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Pear\/PackageDependencyParserTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Pear\/PackageDependencyParserTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/Pear\/PackageDependencyParserTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "b1a3c0b5e57691f8daa1daca74c9944c1c8e6a83",
            "filename": "tests\/Composer\/Test\/Repository\/PearRepositoryTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/PearRepositoryTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/PearRepositoryTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/PearRepositoryTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "e546244159aec16d6e138a5a58001f281161eb67",
            "filename": "tests\/Composer\/Test\/Repository\/RepositoryFactoryTest.php",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/RepositoryFactoryTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/RepositoryFactoryTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/RepositoryFactoryTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "3774dd2681ea636b92013ec5902c4db70e43e324",
            "filename": "tests\/Composer\/Test\/Repository\/RepositoryManagerTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/RepositoryManagerTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/RepositoryManagerTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/RepositoryManagerTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "cbb4342e965d8549224db9bb2fc21c70d47f43d1",
            "filename": "tests\/Composer\/Test\/Repository\/Vcs\/FossilDriverTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/FossilDriverTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/FossilDriverTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/Vcs\/FossilDriverTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "8d711e8f03dbd9bb7afe1e818e56cbd8a7de5aea",
            "filename": "tests\/Composer\/Test\/Repository\/Vcs\/GitBitbucketDriverTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/GitBitbucketDriverTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/GitBitbucketDriverTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/Vcs\/GitBitbucketDriverTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "ba9c6d4f79b5026aa9f0778cafdcb6c813624f7e",
            "filename": "tests\/Composer\/Test\/Repository\/Vcs\/GitHubDriverTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/GitHubDriverTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/GitHubDriverTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/Vcs\/GitHubDriverTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "a5eb799f2743921c27288f384d5a41fbb9215a56",
            "filename": "tests\/Composer\/Test\/Repository\/Vcs\/GitLabDriverTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/GitLabDriverTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/GitLabDriverTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/Vcs\/GitLabDriverTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "11143b4769c705cdaffab26e40e0c63bcf56dfe3",
            "filename": "tests\/Composer\/Test\/Repository\/Vcs\/HgDriverTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/HgDriverTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/HgDriverTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/Vcs\/HgDriverTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "a5e5d4b4c3be026a026326d13aff3078e15915a2",
            "filename": "tests\/Composer\/Test\/Repository\/Vcs\/PerforceDriverTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/PerforceDriverTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/PerforceDriverTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/Vcs\/PerforceDriverTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "029d2016070159e1fc804a6a3e5f8d25c7aa11e8",
            "filename": "tests\/Composer\/Test\/Repository\/Vcs\/SvnDriverTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/SvnDriverTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/Vcs\/SvnDriverTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/Vcs\/SvnDriverTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "0cab2f8bba4b601816fc03050be5f1f8a0f567ff",
            "filename": "tests\/Composer\/Test\/Repository\/VcsRepositoryTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/VcsRepositoryTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Repository\/VcsRepositoryTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Repository\/VcsRepositoryTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "656a477e69325ef2045e4d487ca74e6cb72bab6d",
            "filename": "tests\/Composer\/Test\/TestCase.php",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/TestCase.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/TestCase.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/TestCase.php?ref=d8aef3af866b28786ce9b8647e52c42496436669",
            "previous_filename": "tests\/Composer\/TestCase.php"
        },
        {
            "sha": "4323a15f57578117123e8cbad9f8fde9968aaf58",
            "filename": "tests\/Composer\/Test\/Util\/BitbucketTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Util\/BitbucketTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Util\/BitbucketTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Util\/BitbucketTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "8b6ac5132d8b2a3f0bf49a359cdb37010e53602b",
            "filename": "tests\/Composer\/Test\/Util\/ConfigValidatorTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Util\/ConfigValidatorTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Util\/ConfigValidatorTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Util\/ConfigValidatorTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "52de96af4d25711bcf15e2fdfdb49b620d5adf5b",
            "filename": "tests\/Composer\/Test\/Util\/ErrorHandlerTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Util\/ErrorHandlerTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Util\/ErrorHandlerTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Util\/ErrorHandlerTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "9f684dbfba64bb0115ccce1301589f2e63fd923b",
            "filename": "tests\/Composer\/Test\/Util\/FilesystemTest.php",
            "status": "modified",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Util\/FilesystemTest.php",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Util\/FilesystemTest.php",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Util\/FilesystemTest.php?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        },
        {
            "sha": "8cf3bd5011e2212fd3242187bae19f5f27eca3c2",
            "filename": "tests\/Composer\/Test\/Util\/Fixtures\/composer_scripts-descriptions.json",
            "status": "added",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https:\/\/github.com\/composer\/composer\/blob\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Util\/Fixtures\/composer_scripts-descriptions.json",
            "raw_url": "https:\/\/github.com\/composer\/composer\/raw\/d8aef3af866b28786ce9b8647e52c42496436669\/tests\/Composer\/Test\/Util\/Fixtures\/composer_scripts-descriptions.json",
            "contents_url": "https:\/\/api.github.com\/repos\/composer\/composer\/contents\/tests\/Composer\/Test\/Util\/Fixtures\/composer_scripts-descriptions.json?ref=d8aef3af866b28786ce9b8647e52c42496436669"
        }
    ]
}